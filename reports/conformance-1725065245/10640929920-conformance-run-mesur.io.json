{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c3857f59-864e-418b-ad23-78d405055b82",
        "name": "Clear Cache",
        "item": [
          {
            "id": "15e91f48-c378-4f83-9c45-6a5b98d1051b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d19e945-8764-4d60-80b2-54a20001bf06",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e452b79-79f3-4409-86de-10ba835d3bdf"
                }
              }
            ]
          },
          {
            "id": "c308a1bf-6fb0-48ec-9d1c-7aec567f14b1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a01274b-0e73-41c7-8213-0594fe9b5b53",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "21d19091-e28b-4c5a-92eb-4e462a3907c2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "704070ea-b362-434e-8dd7-7a43f03d764e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f0ba1fff-12c5-49e0-8cf3-0aa6e5fe926b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f801b74-70d9-495c-ae27-05ccba13045d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3abf506-70a8-46d7-b81a-25da088ab71a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d181e829-140c-4bdb-b20d-25212cf91a9f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02af8d8d-0751-47a6-8497-c51cd5ebb7c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2f05549-8c80-40d9-9c20-20d8df0a2f90"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "affab1de-17ce-403a-a8d9-67461409b7c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "caad4f3f-00fd-4774-8fdf-96e71ca471b8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc268524-e019-4842-b951-d5ae0eb89112",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8cf379be-cb8d-412c-b975-5265d7234a47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4b0bf77-2e91-4da9-8ff0-c4fa7e81fde7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "992eb5ff-cd5b-46a8-abcc-1bf90ec29bb1"
            }
          }
        ]
      },
      {
        "id": "8325d928-dab6-41cb-bb95-3d69b913c271",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "17d0e4eb-0e62-4fca-8746-8f3b5fd6d0ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30d31580-ef86-4471-b1f2-68e0c1fa85e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7135b0c4-37e7-4f58-93ec-177b2f34da4e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d99bec-dc9a-4b7b-9cda-e98c6089ae52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed1eea56-2dec-460b-94af-aeaf8a268054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d597f6-628b-43be-9fe0-b03c16dea895",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931e8204-287a-443a-ab8a-88faa9d518c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a37c1243-7947-4dea-adac-43bd7da08ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c7e96a-fa4d-4fc4-b0ff-1485e87afdf4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947960ac-d8e6-4e2f-ab98-e552e57369dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a839861-040c-4d07-8012-3a476bb74ae3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7cd45d91-556a-4ef1-9a83-ec037e86300b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e117923-a643-42d0-8834-5c94f5136e52",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aace1c-13cc-4c2d-bd69-ec3bd45d063e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ccd5b0f-a0ae-4633-94c4-b55f9bede847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b200f97-69e5-4f47-b1eb-6aca707a0281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1b8630-83cb-490d-a6fd-0b40c7293cdc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0dbbb7ff-9168-49b5-946f-0918dc7e8a32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dfeb99ed-6337-4a77-a32b-121fde33a2bb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceb3dba1-22e6-47e8-9782-2fc79013bde8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bb87cee2-eb56-41e2-88f9-7b90106587b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed196fc6-f76a-4418-9683-2a9d3fb4b75b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "73eaa77e-d8fe-4c82-97a9-db2a3df817da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd4dcd95-0cbe-4e66-bdd5-edb3bef243f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50d9b424-f5aa-44a5-bcb6-6a1908534a33"
            }
          }
        ]
      },
      {
        "id": "f275187f-4c1a-4905-a7f2-f7f5caffe3db",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3873371f-1ee2-43e7-bfac-059582cc825f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f95b7d4-a76b-4d1d-872a-c40dd279f483",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ebb3b04d-a688-4308-875a-f243830b44ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f0cc13-aec3-49fa-87f5-3fa1776c4e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef810c5-77d9-4e46-b0d6-70317a62bbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c913cf-8344-4067-adad-f56f6e7f685d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ca39bf8-3f2a-4c76-9ab9-5dfca9024a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8ddc87-3c42-4d77-a260-b86e196e5b12",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e8c7d7-5170-4aad-a165-bb6e6dc96788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dde65a8-f4e6-4e26-af3c-68c8770c3606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6395fb-48d3-40bb-8561-58677436b66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "560d60f1-97b7-4815-a689-6cca7a90a278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065e6ba4-9964-4be3-b707-133eae4eaab1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7827409-904b-4ae7-80df-df802505faf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48617fb9-be76-4138-a486-f7f8c7dc4f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d1c790-70ee-4e77-ba90-788ef46540b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b36a3e5-dfe7-4d5e-b669-8614b85138fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a6e45f-c771-4110-8bfc-93ff1731d6d1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a834afaa-8448-472a-bc1b-84ca49666c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9a2517-a431-40fd-aa99-482e043628ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f2e6e9-64ce-49b0-ad98-4a6ee1eb0fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a657865-c3d8-4fb1-96f3-429accefe95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1728e467-ce79-4ddd-a5bb-4adc3c87f372",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0accbd70-97ef-4f00-ade5-982cc0fdb23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e267f66c-ce3c-48e3-977f-5c2d28f356f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e24387-9caf-4cd6-a510-fc43a9cf3710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a68336f2-8242-4b8a-ab7c-42140faecd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a99fc8b-38d2-4116-8772-e97356d07a24",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183d1128-39d8-449a-9dc5-45e2275b9a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ea83ec-7ff8-41c6-80f1-e48487414d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e15aca9-cc38-49b0-b323-4e2e0de15166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e118663-a248-484d-a47a-6471192fff84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26522470-63f7-44ce-9676-52d08f302c41",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d032b075-22f7-442c-a8ab-1b630db3fcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff5d7ab-7e7a-4c3e-a5ee-2017003413ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0a5643-3694-4257-a879-c049ccf16d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9ca79b5-1418-405d-ad72-827782d0f49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e991e456-c052-4762-848f-ac34e9251dfe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13754cc-7993-4487-b374-d91ce807561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a58ea76-ca90-4d42-8669-12f6239afca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4167eaef-4ab7-46b9-bff2-6814eaa9d30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ece96caf-c291-4987-93ac-b0d0963b3cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886d8464-e66a-49a5-b68e-9ed02d263b00",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe413186-c427-431e-ab5d-2a883348c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b272c86-a623-47ca-84d3-2756088dd6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e2c989-ccbd-4886-b31b-1b29057eb830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80be301b-52eb-4fb9-a097-778df94dfaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1bf9a-9525-4b08-99c0-1b2d25ef08b1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87bffe5-ddbf-48f4-831c-22a4ffacda97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692f8cb1-e130-4c89-84fe-26640500d41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f4b31a-2895-4d9f-ace0-5133dc257487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a49de794-0f61-4aee-9809-9ce0e2e2f4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58530d36-51dd-44ea-aa1f-ff09562807f3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d912487-8608-4d48-bd1f-05d9212886f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec6a9cc-c50e-40f1-8b8d-7d13d3406663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ffe834-542d-4223-bf1e-5963e333cf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87394a04-3485-4041-8540-a635db14b792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e78aa4c-6792-404f-b51a-6cec4be0ffb7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7ae749-3f05-4785-b300-a45273708317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2e4f14-0e88-458c-adf8-a80adbfca879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c187661e-207c-4209-a7e1-f172353a3e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e09b3e34-9596-4591-899f-bd22b41ead21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b5a1cb-42e7-4d3a-8d62-b487e9142aaf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12edd6c9-634b-402f-8c10-6bfa746c75e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982149fd-c8cb-4eec-a3d9-239fded76e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98a1f15-448e-4c32-a62b-729fab753ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f605efe3-b9d2-431d-97df-c0313ee42541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b843db6-2f2f-48f0-abd0-1aa67f9da20e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6447a098-5ba1-4c1f-b56a-e35e1f75268f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd62b6c-d61a-4c93-b7e9-1fa4323dc6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1764cc-83d3-4076-aa86-346e30131fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "097939be-83cd-4e1f-b7e7-664991ce41bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea3c5c0-d1a2-4481-aa3b-13fe9958ec03",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020357d9-e0fb-4e50-aa61-0ce2197eee67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715adad8-a078-41b7-bfcc-3fb26b8d3ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a37547-ff74-4288-ae35-903db202b854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "385232d8-316b-4f9e-be8b-35a57733a04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b773a78a-33a9-44b8-8a5f-7fe2d315b972",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4394f594-67f3-4013-9083-80f3cce27480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd846da9-38e1-47e9-828a-9c9edc10202e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cec048-65b2-41e5-8b60-07c64ef0b57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7408631b-2712-4267-acb2-e2b87837eaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf0e816-eedd-409c-ac15-d715e9d0bc3d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ae1572-1a31-4410-88d3-05d3232a4452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c5ea50-aea6-4c03-a26d-dcb1563b9b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac3dc77-3bba-4c3e-9acc-f45103b06b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d01dfdb8-7420-45dd-bcb8-b83f622d7629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0a76ec-4329-4281-80d3-527c4b48af83",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e952e3-1110-4506-bb57-6e7db5f419d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c51434b-982e-4707-8309-94d2635650f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca200440-24b2-4345-8d89-86f96b251cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f83e11b-7ad9-4dcd-b9e6-70ea1747fb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91a230c-876d-4ffb-8a51-c8b5f52176b7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f6e528-e574-48ce-85a0-356785663a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc68ded-8b9a-480d-b521-3acc4f18e61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a46c37c-c735-4a90-8022-2959f00b87c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6f71fa-1578-45a3-88bd-e469bd8327d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d16484-b439-47f0-98db-05dec0878f8f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8c7332-455f-485f-8fb5-6f572bc0207c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54378ab-520f-4257-ac26-6d50f9a81adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f07b9d-4816-4fa4-b00e-283340a95d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1044a0b8-41cc-4951-a004-56ca3cad443d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5171d866-dd90-406f-b838-abc2151a2792",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191c5051-1764-4789-88db-827f762b4374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca15b9a5-7ebd-4cc1-a386-6096a7e26718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3d74be-23e4-45ee-8d58-aad747deebb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7005085b-cfc9-4cca-8d2e-8bdef8757d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d501d605-6dc1-479f-9c8d-9c450d3eccc4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ba5937-bbed-4849-93e1-3da814db4fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c4c729-4a9d-42c2-8b71-5626b287fa0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcf6470-cde3-45ba-a36c-dbd423350721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1235375-8e3b-4f77-a3b5-c32b9c48ef27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a823434f-3b50-496c-bda6-1e86293bb1f1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83157e5-8059-4968-b94f-7384ac345823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e329f2-398b-49e7-b52a-24a1dcfae4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3998a57b-5f6b-4210-93e1-2251e057864c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7be84bc0-090c-4746-9a8b-2d0829d1af5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b88c66-dbdd-460d-a121-92bcf77b8e6e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c241f054-6c84-4a4b-be0d-eaea3bd413a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c9b092-bc83-4e9b-bfc7-1a1abe8d37e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b24d5c3-54b1-4173-922c-8bb4e187ca7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9433782-c149-4ec5-b5c9-42c4af834da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814af037-bc1c-497f-8837-d30c738e72fd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b4e46b-8cc6-4bcf-a5fa-9aac7bb8cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32bfcc8-7490-439f-90b9-1995ef08d9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ad5f2c-2e5c-41e2-8cbb-d170d7467185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04dd74b5-723c-4aa7-ab55-4f29cac62ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf16e01-0789-476c-b14a-fa44cbb91908",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8d79ac-c5a4-47d9-a42f-db361a1bfb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea276ea2-b686-480f-aadc-ca956106c20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764e614e-f2e1-4bef-8d48-ead246c63989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b4e49e-b424-40ce-a957-485bd5170dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4be188-f815-4a52-a664-9b49093d71f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57ec4e2-305b-47dc-b11e-fb40b3dbbf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1ebe04-40e0-4a39-a7bb-c2118d959440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bebccba-53dd-4be2-9584-72a1ef767a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba633a3-57e7-4ad9-8a3a-05c0e476afe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd8e6aa-4a24-4733-9435-fa1846d4e085",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ff471d-36a5-479c-b24b-d6af11e4a5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d278a7-0741-4e38-95d5-cb923cdad58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73141a21-c288-49ca-8f4f-04411ebe52f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97fc4143-9a6b-4182-bd22-4c4b50cd3bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ac3eb1-89a3-4453-b04a-3327d09a7fdb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c96ce08-c074-45a2-b59d-556f790c7d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a18d37d-9542-4345-bdc7-ff3b8034b55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba26dadb-f23c-4a78-8b1d-156d73d41290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2bec79-9b07-41bf-a2e8-e42372c4404c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab6eaba-49ad-4b00-b6b0-41e119ab447d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31fa20f-e105-49e3-9c08-6e9e568b0d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd24a044-5b69-430c-a4be-a25832ec07e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e5142b-b8d3-4a75-9b81-f750c6038873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "90921032-f351-4cd9-a329-f6b0a057c366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57bd653-6fa4-4f07-884f-e31084ff3441",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717dd7c0-aafe-4210-8c95-d8e8c7162ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00cd36f-9a00-4a6a-a9a2-0dcd019fc8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef0db63-a6fa-445b-9830-64e756d9e9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b336372-65a9-4213-94e7-6295733143a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3ed06c-5496-4d1e-b7e6-ab1b5f0b5465",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aab80b-db22-4b61-ab45-ddddd55ffbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c539381-41a8-4796-a99c-6be400e9b7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a242738-ef72-4a95-af0e-51a119ae68d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09727a94-61b4-4d0c-a76d-f0f523d4318d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4835de9-4dab-4333-b76d-8b661f3df09e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036dce36-9565-4dc0-846c-97ddd7521b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601f80e9-4357-4529-b2f6-755baf364e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2682a6b8-8f5e-4ac4-81fe-31c76e094bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdc371d-beec-457c-a867-fb016c9b0a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19776415-ef50-460b-9bd6-d6c8be55e2cf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a796db-ea22-4b98-b1e2-770d920c0597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41afec1c-6879-4403-88d0-9cd28b3baf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b4102a-720e-4407-99c4-3bf46e86e2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58dc0081-c2f3-455d-9797-fd526a335b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc48426-954f-4df8-bc27-21914b537bbe",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b9b0f1-6bb5-4a23-9737-f0342664f12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b155c536-4b26-48c3-beda-bca2c97b4903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c959fa9-3f91-4b62-a689-e7f0b9305861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c81324c9-abbe-4098-b912-1e4032478408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd14eee-86de-4af1-9ea3-f81518294a32",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a801087-b2ff-449b-b15d-c3189eba11af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ab08e51-463a-4ee5-b328-84fe3d97d156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fd68df-7dd7-4b1e-a5bd-dc108ece9743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a87a7628-d174-4ea0-b391-0c0c449c3259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3918cb-99db-4eb2-b974-561c6087676c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422da29c-28ff-497e-bcee-75ff2602b9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575f44ed-f8b6-4691-a836-865ecfc14346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d8ae6f-663d-44a7-a0c4-ba8ad8c6df44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47c94eb5-531b-44ee-85c1-4c939b627ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9877376e-affa-4d29-af42-8a3036e522dc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d9ee8a-763f-425f-802b-6ab18e48f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14bee4c-918f-4e82-ad61-03e32989ac55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019e6aa1-cfe1-4440-9723-868c60faa80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6ec6f5-60b8-41fd-bad9-b604dd06d9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0174d0bc-4e3e-4b0f-9cc6-a4037d53acce",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29eef9b-9cb5-4c7d-aa26-7faeaeeb9daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f7bd4f-bd8c-4d68-89f7-ad6a07648ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9e0540-cc9c-49f9-8567-4f2c88a2269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87422e45-327e-4db7-8280-4a8e5e2677bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9860a8-784b-481b-a658-34764293fe67",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb5a15b-7bc0-47f0-8527-ca29e366da50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2635e85-7377-4037-bab4-1f7955ae4882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d800e684-d024-427a-8515-d664c42d4532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d11cb3-9b01-4a7b-b05b-639f0b00f5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e6b207-2349-4fae-a47e-1096bf71b9bf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435a3dc3-bd4e-4c9e-887b-e99efe868d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ee4d8f-6ac1-4231-85e5-e9ab49df887e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398d4ac8-14ff-42fa-b0e7-ba60f9c5ae23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "772b4652-e461-472e-a898-8c159d60c210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa00637-9548-44be-aaba-427d842b36c8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fbd6cc-bf4a-4913-9836-a12a809eed47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c74ff5-c1d8-478a-828d-a9aa84c2e756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247c6b27-da12-4fa5-b547-955c0ede71d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f283865c-71de-4163-abf6-32b679468ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5470338c-7bce-4fb3-a833-2d78486295be",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcbb7ad-b86e-4378-ae2e-ea091bc34f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1feca935-d6a6-4b19-a609-9ce0c021c0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d46341-529e-461c-b2df-1c2ec9a2f533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "484c60bf-1fcf-408b-beb4-ad8e9db2fd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5546f7-2f88-4e1f-a518-7211d51e0aa9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3556eb-a5e8-4a67-aeca-d7685582bf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7864cf4-0086-480e-aa79-c6cdf17fa751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bf5cc4-9876-44bd-ab93-e226f682f879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3808771-b170-4414-a9e8-ac91248fe179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f50ec0-feed-475b-85b7-41ec70964de7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af990521-5f2f-458e-bae9-d325f79eb366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db96865-9bcc-44e5-9815-6396c59cae47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f155d8a-4d66-4a9e-acb2-457a64d75f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7933166-f318-43c9-b276-28e235a037c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261c414b-397e-4fa5-99ce-e18e4b275d90",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64748cd7-b4fd-40a6-954c-8c1d432d0445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef169705-5252-48c4-9c82-b566a9bc7aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a9f11c-78a1-415a-a98f-620c9738ff75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa121235-8585-4eb1-84d8-404dff0da3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62422340-5ebd-4b1a-9091-6709ebae759a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0937c3-54bc-49af-8a82-2bce2774492d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a766e39-6091-4af0-a45b-0a6a3fc17052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db944fc-1cba-44ce-8d5f-733aefe0b2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5330ca76-329d-414d-a0b9-da083c436793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5d2ecc-153b-4761-8336-5e7346f7e1dc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9223ff-4ad8-434d-9ebc-d6c7fc0d251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eaf2cb-95db-4b7c-a9bc-454726fda911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a1f85c-5809-4ca9-b4fa-9f6f8310a28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e75b2e4-735e-4ff6-9df6-ab7b3bc109da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926024d2-67ab-47d3-a8da-8fd2fd3999ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411b0ba6-65fb-498d-884e-5dc1ad4f3d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b1009a-eea0-4333-aeeb-4b8905d61497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd316aae-11d5-4c1e-98e3-6b923fd06b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2e6080-902a-4da0-8992-d7330bd0b55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0ec3a6-bd36-4b61-bfb0-b316565af327",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cc304b-8386-4365-a48f-f09c98d7755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db953d6-7f1b-41b4-865a-c22832ab319d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e969071-5383-4140-890d-fe50d535eafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b508288-7c2a-434a-8be0-69fffff1c5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18de0b19-5d37-4875-a0c1-6d66c4ddbc71",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127f6618-9a7f-406d-86d8-dd1d31f17723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9dcde14-81eb-4f51-9abb-d9300f164a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2753de-d295-4203-935f-4fb2cec02097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "12174c46-8114-4cca-adfb-6cdf94803897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ca36ef-3e52-43fc-88f7-c16294058391",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4b0756-3db6-4e74-9e0a-815de27a44c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a02774-0e14-4d20-899e-eda28fd26075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2af9dfc-0979-451a-adb3-df1e34b040ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba65954c-7e40-4fe1-9668-ea27ab071240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a371f-951a-475e-8bd0-162ccecb551a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd25e69-4966-4509-b273-d510b9b420d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e93a702-1c4c-4738-81f1-4b3f246bcaca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ae9f10-f316-4dde-9172-e7643a9f8e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5a8d4c-9593-4214-9360-60d53eb948e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65f30e3-9dc3-4c9c-9405-fb73cc80a894",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184f9d50-cba7-4405-a4c4-3c8388fe0157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013377c9-6070-44d0-b5fe-e6d4bcb9b56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b414a9-63aa-437b-a86f-17b6eef0c4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6802420e-fb57-400b-8da2-b881cfce9dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bad0a34-10b1-4a8e-92dd-ffbabd8cf12a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91861e42-7b40-408a-8fc3-9469d93c63d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103dad21-38a9-47d1-a9ef-d2ee1c607452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f744326f-e9ac-4d88-bb12-131dcdc319f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d70d438-9bf4-4b38-8bd6-6ea5e46d451b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e3012a-1ad8-4d92-a945-9990593692c7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d5a527-b3f9-4df8-aaef-4d737c2e0235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8369e8b3-658e-4367-88c3-397f2d06cace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e3ab2c-17a9-42d4-9c40-b8213e25dc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2bd9a3-6cd1-40fd-a3e8-71d2b7c3fd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e13d62-be02-4ae2-904d-bb477092347f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ccf7de-a7cc-4ef9-88e4-311008c3414c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521ae623-2722-40ed-a38f-9aad717757bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7683c74f-cf4b-44dd-92d7-af9f9e93dbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91950329-ad14-4bbd-b28b-3ad204c3a6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd85a16-d7a5-496b-a603-ff7589e28fee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c2729e-659d-4c8e-8770-1e4c3cec494e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb9217a-0812-4c25-9899-668fb8b314c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6a0a7c-54d2-47fc-9f6e-55afdcf896fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd140a92-4c6e-4fe0-92c6-76171bb0477e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d640884-2763-42c3-8dbf-21f4a71f42b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4603dc5-52af-48f2-b05a-fcad681af710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d238268-fb13-4c09-a372-b9c035b8f01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8e2bff-880d-44d3-9e64-ea9d6512fa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1cf7d6-433a-4027-8993-a3950c8b74ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f29e9c-ce62-464c-a2fc-71cf95a91170",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da5d9d8-d4d0-4c33-83ed-440f0dc181d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670e8d76-3605-48d7-af26-d297d864e771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d6a1b8-ccad-4fb7-b098-d7f83df92c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9514d34-c24c-4fa5-a0ef-ca87e59c1759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea50eed-844c-420e-ac4b-f444606ade98",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8996e7bf-6116-46b7-99ba-19d4c12e0bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b43d12-2dd4-407b-aed7-3d1aa07fd343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36955440-1baf-461a-a412-e19b9f81dfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b69ca5-dee8-43c9-aa9b-3e82288ac5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e31988-8acb-4edd-be28-ffa7521c1c8b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6abf387-8412-4ce9-9879-2e155c5a8f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a276b2-6fac-41e0-bdb3-3802454b6a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7815cb4f-9a71-4126-9e4b-f81630db424d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ca3a8a-4a39-41c7-a37d-200bfc140a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf9a8a7-0191-405b-8e10-7df047d1d863",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bc15f6-68d7-4b41-bc9b-f64eac14c3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4d91f8-8b39-45c0-b8b1-fac68ff7c0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf6a381-bfce-4aab-bee7-55c8fba9b0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f7cb13-45cd-4052-b9e9-b3bdff630bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a2e17e-1c26-4141-8802-8abdc4a27415",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ec2483-05e9-41d2-97fd-8527d987dedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2468f011-143e-49e3-aa76-bd24a8834ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602113be-e1e7-4ce6-bff8-1ad6a78e5637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83f778be-c65a-4465-864a-d1d6f3e3fc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63f1733-4b40-4a33-9ff9-1bd3550b572a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3721f7-ebdf-459f-900f-e1c61231651f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238eed9d-4baa-4bb5-9035-cc23b91e193c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b392c0bb-1bb9-492c-a96d-d809e1d39448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26e42e26-6d31-42fd-a0eb-a9f89b26e421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79aee90b-dba4-46aa-9cf0-5b04fcd44f04",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73879ce0-f7d1-4350-b5ff-0f48c18edea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765fd64d-b28e-4575-86e5-3fc7dd9e0a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab8d6f1-a9c8-4cc3-9277-70cf3bac28a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a680f1-6aa8-4585-9cc3-0732a5a770a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ef3c02-5fc0-4961-b1d8-eb897a1595cb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2728468a-e243-4bc4-b738-8bfe484bfa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cf71f7-8c84-46dd-be46-84f1c464709d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b39161-d152-4703-9762-a062179969a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c1f0dc-1a0b-4a02-b561-135af088dad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9dccfa-b477-456c-8e13-00616c374cb4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358186a8-6c71-441f-8eff-ded9f92ee788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04500dc-bf45-48c6-a59a-1bcbd3bd1ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912d7035-1884-4288-a36b-63cc4f180435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2ce97b-b071-4eec-80ad-159c138aeaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84516747-ec60-4105-b288-5810deed0a3d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041e8190-f242-4fcc-949a-21780ec768d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69d5871-ac93-4758-b0ad-5cc37a14dcbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121b3025-7550-43ed-8c53-cdedd8198b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bcb06e-d474-4275-8390-e3adfa79b296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb48d4e-357d-4c1f-9b3a-c3e81b8498ff",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f163c18-2cbd-417e-a499-5ce8b1a417f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c1b675-67d3-4008-9dd7-1abc899d4449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ef7ca2-140c-4ddc-ac72-70b2d06fc955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bc5a6d-a0f6-42c5-a328-50f708afa893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443a66b7-1c59-4472-94cf-b1871da62060",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc88baa3-2804-472f-9063-bc3313760cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad7fcf6-72c0-428a-a2e3-0253b23df636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0643f358-52c5-4eaa-a0e6-4b4a30a45cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04abb58-4e4b-4677-af3e-3b42e2ca55d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a5f3e3-265d-4b8c-b04b-f78a0b3d2758",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aae7f8-83d2-4aa7-924d-ab9624587c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c28de98-975f-4873-8f46-578025d93619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a739b264-4610-4546-9245-af4cdae78aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06357ad2-95f5-4c74-ad4b-f7e5b35cedb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f86734-5a9b-4b5c-9b39-68c8620518ba",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85999def-e8cc-4e89-8282-b536906c74f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27007cf1-f113-4128-b217-aea977c2bb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a6b3d9-d503-43bf-983f-fd2191ad632a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52a86fa2-1971-4f11-a2c9-fa2073e1ada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfdeacb-a55d-4e70-b816-2281b4e9bc34",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2d2e17-a8eb-48a4-a58a-96315116bbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56392ad-70c2-40a4-a1af-f682835c1ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7345799-8dea-44f8-9e39-e6d9d8007527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea17f547-54f6-465b-8595-b66bcbf3a5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d234fe-942f-4889-8dd7-0164dc144b44",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12575b19-c400-4095-819c-6045c8046468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56487d2-073e-4928-970f-4bc98591e01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882a1835-7875-4c99-8fb9-b1d9cb5d257f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9bfeed-fa68-4671-a2d2-72396f3dc037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9339360-eec0-403c-a815-6e2ce18d9ca1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a745776f-7513-4318-84d3-958617c5a20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f87ab6b-3c04-4f64-8ef5-4593fc8844d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4796f1a-8492-4916-aa6b-7e7d076af7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17575a71-ddf5-4ac8-8386-8f9dd9d9bf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c8e806-5779-4295-bb95-e21a8a273402",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a14c7e-4a19-46c5-be02-47ffdeeb6e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919de863-070a-4658-9eea-923191693a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245f0787-600a-4ebc-97b9-18d530b670c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60a8d4e-a7a2-4d14-9f33-0f2e44065ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b576e4-0705-4f61-986f-79067c3addf3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e856aeca-3ce5-47a7-abcf-65091e8f93c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33109062-a826-4c51-9c98-91e892cae21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ced8e61-8508-4ce4-97bc-d7d646b2b80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ee606d-edf0-4cc4-b32b-246ce1bbbf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ac50a5-33cd-407c-bc9c-d2af9b20d65b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120c8336-56ec-475b-9059-931701477b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e3de7d-3b41-4a9c-a6b6-3270a670fbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f425531b-d181-4e23-8b97-5cd7f64ba774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82c5977c-20c7-47bb-8614-c81d3022fb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be34b33c-6f2b-45cb-8d75-965c328740a4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec074144-8e7a-4417-a747-806e03f92173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32c6f30-059e-4fdc-b768-8bf04423f53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd0673b-3c90-44d1-b721-95bef1de7638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3238c07f-d040-4c90-a192-62fa6635bddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f662eacc-f873-4e55-8d3f-d8374c35e2e0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e958c032-04c8-4db9-a859-3af34d1f5811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12204d5d-88df-4abd-9ebc-89026b0ff560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330bc2fd-f0a6-4404-aa63-e9d596e63429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91deaea9-bc76-4c1a-ada2-1c558b62e168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780f6f17-6890-4be9-924f-bf36583b98d9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40471a4-e05f-4c5d-9df4-f5051c799e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503958e9-db8b-4c18-b18b-130767ccdc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6a3012-1a1c-4d1f-92a7-fbd6cb85fbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59345d53-dab9-4e2e-8673-cd2c0871d564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4a9c8d-2660-40d1-8162-6dab04d1c524",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd12b99-d5e5-4fe4-851e-60e7e10b7a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd1b288-99b9-4b4e-b767-433a7d695602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b65ebe-9378-44a6-a2e1-02b5fa311ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d599d4-1c05-46b9-a3ba-5f0114036374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e5f117-6d90-4fc0-8c7c-2a5a740468e2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d232bd56-cb54-465a-8f75-de11fc91285d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7496a0d9-fce9-4637-a387-76c9df4a03a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd278da-09ff-49ce-84b2-7bd717f868ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4de1275-a02d-48b9-bd5a-f5d6c7a9d108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73afdfd9-35e0-4f6d-8d16-6bd199cd76a5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835d0c31-642b-43b4-9da3-11139ff57cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c545153-3a52-4d15-ba43-c9dbc28e12f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee5bcb5-6b95-41a5-b272-bf9bea55d675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12bf6183-e98e-4e19-af7d-6b97be106e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfe8057-98b6-4a94-b0a1-c21bc32afbbc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fbea4a-fcb5-4d1b-b9ec-6835d6bc6360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "505845fc-bf8a-4b8c-8e2b-fe28b46e70e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51bfe11-cc97-4e99-b220-59e6dcd5e266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b80a4e4-13a5-4e51-911f-5b8cb87e8430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75bd247-7d99-4623-8910-8b03488e5d60",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bc7184-2d37-4d5b-845b-bba6857eac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e095e83c-9a31-43a6-bd90-3813f32185f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37e7651-0bb3-48a9-8d28-94f7117f824c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a73fe6e-37ed-48bf-8916-2df280aba5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4801aa27-1c70-4669-98cc-4ec61dded107",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632d9a97-7c53-4413-ae37-ab24b3d9eb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00ac5b0-18f7-4dbc-83a4-7665fda1c81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f568e91-ebee-418e-876a-b546c1c9d9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd2f481-bdde-4dfa-a4ff-bcb7b6c0e62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3683f08b-97f1-4731-a01d-995ac1881e10",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9056d57d-31a9-4d67-8695-8aef0a446e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51412123-43e4-41a5-b995-3e5b679d7ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962c2386-8745-4c41-b2c1-7e553760836c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "45edf7c1-acb1-46f4-a509-91b9d86555b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494a28b4-0864-4f1d-b555-41b1d80cb6a7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bb7fc7-eb79-4b04-a3ad-7bc5c4a88282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f507d81-226b-40ee-9e86-42d001df6ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3446db15-1f31-46e2-bbb1-0e7454d26403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f93eb23-11bf-447e-8870-15a45012d91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfb87ce-322b-4eb9-8ab3-370c0186fbde",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c908cd-6895-4e18-8079-fef142f00b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a335a2-54a4-4a60-979a-926181c34551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c177dd-0cd1-4840-89d8-f9745e350605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f44bcad5-fccd-4fde-a28a-7bc28fed0e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e645694-c1b0-4621-84f9-eb72cb90ef27",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645b2b98-d536-4a15-9e6f-01cdbd134f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a2f55654-36e7-4b1f-8097-31a72b929a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257ec90a-4ff5-44bb-94f9-2a66c0069b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e24b53bd-8d5f-43e1-a241-8ff72d7b2e7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1d96c4d-dab4-418f-a221-24f135f20674",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21e063cd-389f-4013-841b-11fae61e68b7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab03947-d10b-4af1-89fb-248a5eff99e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad7e2a30-34fc-497b-9acf-4fde22b7b709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df35de8-df0a-43dd-83f1-ba5a0dced301",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7abf36eb-1ea7-45f6-9672-b94de3bbff36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c283542f-3003-4598-84e6-646964234f34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8106829f-cb3d-45a2-84da-d31e57412638"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9596fa10-3be8-4335-8333-ab7e376c025e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5ff9757-6116-4903-ab68-5718bfec0f0f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0f64781-2c22-48ba-bf51-2e76d643b3e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9adb495c-6725-42d9-8488-34aec438baa6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d21087d-7eff-4c37-b738-e05e912e9482",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb1c2628-3973-4207-914d-0d55f7b4cc8d"
                }
              }
            ]
          },
          {
            "id": "bf695cc5-5e74-437c-b560-7cbee9d4d422",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a26c1a75-3e40-4fe7-a6cf-5f27ac529c0d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "501c4a9e-e460-488d-8752-fc13cf54e8da",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6775f8-f8f4-48f4-a612-5aa60086dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "749fa704-cdc9-4409-91ed-72bc59d81d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342ee020-1093-43bb-bab4-6d3949ecd412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73354e0a-d14f-4071-ac9f-7aeb18e482a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8db34dcd-169c-4be4-a96f-dbaa907de09c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a53472c6-f311-41b7-a66e-b49cb7afe355",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf4113be-83b6-49fc-b531-3d75396db56e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61ecbb30-dd0e-4b1e-ae3f-25d58aef8477",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d49ab3c1-c719-49b3-a8fe-a0d65a29153a"
                    }
                  }
                ]
              },
              {
                "id": "0da83f58-722f-4037-832d-ed2f30ca81fb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5176c44c-decd-4060-8816-751d097198e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4934b5e1-d6f7-4db3-bb10-614f463e4503"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6de1e310-7a5e-4644-95de-486de26779ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "648c3410-9d81-4d28-8fe6-93840ca25295"
                    }
                  }
                ]
              },
              {
                "id": "d13c0321-193a-458f-97fc-d1f6de5ec991",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b09cfa6-80c5-4eb2-b335-d79f3ec2f2f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4baf865-228b-4c61-978a-e317961bbb11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85411a9e-1b2f-4a8a-a221-f8c69e2a2fc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7275f2fc-5594-450e-8b97-3157a6bd3952"
                    }
                  }
                ]
              },
              {
                "id": "9d4b9609-5e3e-407c-8a5f-15fc5ee6e2dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d0415f-d6e7-4c0d-a015-4d57ba89e001",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0d31094-7655-4c07-aef5-a389cc92aacd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b6cf1c2-0416-4c2f-982e-efc2112c0c88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ab27dc61-40dd-4f2a-a0d9-e02687b520f0"
                    }
                  }
                ]
              },
              {
                "id": "c47a1929-612a-41fe-aecf-6bdb9f284d8e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60347595-db07-423e-96fd-6feae2fc5b5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c3f8b15-1d4d-47bc-89d9-81c5e05163c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed1c9639-7d4f-483e-9a09-b9832078bbd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6dcb128e-afb3-4c70-8b49-5ac82ddc96ac"
                    }
                  }
                ]
              },
              {
                "id": "18daef69-2614-457c-a1fb-761978dde22e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95bcb29b-bd5e-4619-951b-4825b7470b9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9056f89-d364-4673-8e75-597965e0d273"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3596417a-c6eb-4f15-89e2-e7728960d05a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7eed77ad-7fcb-4864-92da-71c8c02755cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0112453e-b2a5-4c69-841f-2d29df3ee987",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb2bb21c-b917-4f30-bf90-372c4971c8ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c524c7a-d6d6-4a9e-9be9-fa3d1618e3fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e3da415-55de-42e5-a3a7-03d296b8c80d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1a5a820-f27a-44a1-842c-3bc83246cb36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "15772dbc-cc11-4f2f-ab98-c655c250160c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aea6bb08-f87d-4364-b732-426c5b74522a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c042817-2802-477d-aae3-d07d028db7be"
            }
          }
        ]
      },
      {
        "id": "73a0e07f-c823-4dda-b850-8dd5452f8df8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "350d7ceb-e6cd-42ca-9a12-d5cd68d72624",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7be03dc0-9701-403c-a70d-15739d8fd194",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1165eea8-5ab6-41d1-8998-4a400de47a07",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f5e038-e677-4319-b7f7-cfb3df34f445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a450354f-462f-41d6-b2b1-1900a59e1b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d720c1-61c0-43d0-84b6-222cce466733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6d7b14-bfc1-4d86-b9d5-204d785f4cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e45ea9-f7d8-4291-a846-725db5f7de24",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb63331a-79c8-48d5-bd6c-95fc252a5eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ea2565-9062-40c6-90e3-2b6a62ac9c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc386340-10b7-4862-b626-ec0e8a29760b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4f1518-cd2a-4401-bcf1-ff950b0d2d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4865a213-b8ef-44b2-9c4d-3734626d7387",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657b451d-f4d2-4795-ba2d-aa73d380843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fb28f4-0a67-46fd-b544-84490e3f0402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff327f5-4277-4793-976e-bb6b79913a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9445c31f-7345-4214-9944-c02dc3d7b72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb9c685-8aa9-4d02-87c1-f0414bc1cffd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e25850-d801-4366-91ee-927f127cb134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f583a28c-d627-4009-954c-bdb329387c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7121aea8-6b75-48cf-87dc-c6134ca6634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03568f6-c411-49a0-a965-966a01fb1416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06f250a-a206-4e63-9da0-6efd1263d76c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f8038d-0840-42b8-8fde-f88c6b93f1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02528b99-488f-4cbe-aee0-0d13c05e03c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bac642-c557-42f7-8857-4e1dab7d754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17612040-bf36-42bd-bb54-2e6294485a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6422d2-b9cc-4701-9591-03acc14dc833",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62052ab5-7b81-4cf4-972b-6a99fa36fd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35de688-f91f-420a-b98c-a660c9becad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba36fbc-17e8-41a2-b893-76d62b6c57bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe376804-a6a1-4b22-b4f2-f8d2d83cec14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed60211-500e-49a7-88ff-c1665d57858e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c83c159-f0e9-4b66-9681-181405b0fc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e2c278-1a33-4647-8861-9b266e1f92f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c341c140-30ac-49c0-bb3b-3b0fa9de0d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "789afc12-f17c-49e1-b269-a02a58282fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e7bbfd-8267-41ea-b858-cbddb675709f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c832b68-4d52-45c4-bbec-1d5b045452a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe49ff67-5664-4d33-95a7-a7bb396a96cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e2d51a-4de6-489d-ba80-f6a6a0de90d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "235553dd-0aff-4b1f-b7f3-1118a9eaac3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a567dae1-006c-4c6e-8a7d-cddff08db3f1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b51ab4-1a90-4fc8-9079-ff2454a1d509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8642588c-1853-4084-87a3-b984925b288e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636b56f6-07b3-49bf-9d54-61913458509c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e96256e-8cce-4947-bd68-aaecb77920bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcda6d5c-81ea-4e4e-8f5e-528fe6678a6b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c1a89e-0289-45a3-ab86-bbeaf2a9810e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2257da-ea18-4ff4-ba5b-014bf9617b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d57def-c544-4a41-b143-173d2bd3c26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59a521f4-c2eb-43c8-9d63-1cef3b783b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2678f3e-d242-4bbb-a52a-c4604689d3af",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d755bb-9964-4d2c-826e-5a6889222557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26bbbd1d-67a3-4348-a7a7-4f6b6fb1ee9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30322a25-6553-48ab-bd25-81dc18e18160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "26520442-0430-4414-bc6d-07bb8f1a52ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c1f599-5953-49f4-ac52-2ddef9532449",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0c86a2-d26a-479a-85df-52d7a8a070e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f71d95f-f38f-4ad8-b2f0-a188575817c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762151f5-c8d6-4a9c-aeba-9b2512adc164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48b4f40a-49ed-4345-bb6f-7177e245b426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae18562-e6de-4a70-b54e-3e195fe6906e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979cb959-5e7f-401e-97e7-2b88cf54e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af75b46f-2006-4560-86fb-493b8f194c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d8c82e-7973-42da-b2a2-0ac63db55958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f5307f-ad01-48f1-84ac-bcb70c998133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4819e281-ed07-4a57-a3a1-d0bd85facd3b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954b06ad-c58c-4e3f-854b-341885827ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56add242-5beb-4633-9ae8-69c0e0fa22df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96186c15-5d5f-488f-8628-d0c76cd7f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d90bd0-d651-4dec-ac58-40290faa9340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521af1cb-9601-47a9-90ef-4996143d120a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a367f44b-7f8d-4f16-ae35-cadec6265766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf5f4c2-d4b8-4520-a049-5dddaeb0fe4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd44946e-2e00-441f-9033-22a3a928c4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb98df84-a3eb-4e5d-83b2-b70d0852fb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90262673-f12f-4ebc-978b-f1830a4b5667",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496c48e0-ce83-481a-b8ce-63f1cc157358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc258131-d36d-48db-af84-c3b1cbe87ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581b1282-ed79-4564-b542-ebe05eacf28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "678870be-c80a-41a2-905a-776bf791cee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c1ed13-5b21-42d1-8e81-7a087f6b8fc2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd1ad03-ce91-4b2a-affa-62d4c766b408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1f344c-0df5-4f93-8f3f-42c7d713c0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfa4d52-0f28-4395-938f-8ee15fbf89e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "710febca-823a-4622-994a-75f4bc755c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d76dc5c-00cd-4bff-8bf6-4c859dd5b2b6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157a648d-b5c1-4c7d-b5d6-7eeb780073b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8a2289-abf2-4752-8414-83ef332131f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49a2be7-7db5-482d-b502-89999409830b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1abd5f-9396-40d4-9fb6-1488518fbe3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572fa5ef-9d80-4cef-8a96-358c203656d9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52f1333-a0dd-4343-886a-094c4829bde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ef9425-9d8a-41e8-a1fd-747c28d4cc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5e3929-cb40-4588-91c1-bea71f40741a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db579c0-308f-484c-b928-0e5f748ec901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c134ac5-1d97-4ce3-a2d7-950f07485b32",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b641f6b-8e91-43ec-ae03-efa4b15b580b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e24cc6b-940e-4b21-a90c-6755b923fcaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ae92db-7d99-4f24-912c-e72599302c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccad6fc-af35-4656-a307-073a41df9d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaa4dd1-bcbe-4467-ab2c-9c9e610e1a1f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a683b4f6-4a68-4ca6-83c6-c0d8b22cf19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2f28a8-217b-4140-b4ff-c4a50adf0de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba6c293-2776-4b71-af6a-dd4ddcf924c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3e65a3-a890-495d-8512-288f4e6a6949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a32b86-329b-4f5f-b259-f00bbff21495",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a79548b-c7d5-4b76-ab9d-9838e9c09a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb20368-d707-4b35-aac6-86b3330c1456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3896d40-2d09-4b79-9394-9934256471b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02627bd2-cb50-449d-ad6f-0cec3986435a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a045c199-77cb-4c0e-bb63-f6ff1856c313",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd432c2-0b8e-4304-a320-7fd49f6d3500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39094ff9-3bb6-42a1-bc60-8a1c627e4dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db547ec-3f10-4fab-92bb-5dca80efd297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "683759e0-c69d-4f65-be09-607df133c05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2389509-24c1-4432-90ec-b853594aad37",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac411e5-8794-43a5-a728-538eab7bf32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30271d0b-83b1-4472-8838-eed7892fbbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafceadb-6d1a-4c5b-89a3-cbc8b6e8a947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdb460d-33a2-433a-96fd-ed2b74b66054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39ea3ae-45e4-4be6-ac1c-297844906fea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76d4338-e951-47ac-b2db-b9772ee35e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b579e95-fd9b-4a1a-a3f6-b964584fea3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd91d3ec-2189-446e-9593-c18b7aa32e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39209ae-9d08-41ea-91f1-1bfb3b5277c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a00451-354e-43fd-aa6e-db4dc83c9973",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b4a5ed-32b0-490e-b548-838060cb53bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d27473b-deee-4c8f-ac31-3135c8e57675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4588036-0551-45dd-98ec-1232c959b5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac64d33c-db43-4ecf-8275-b6be95702f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1418a147-7286-4ff6-abdd-2f8bd69a94cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a896d923-82af-4723-a46b-7bed9235c263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dac026-c6ed-4396-ac69-6013c79c1389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac63f214-cae8-4cff-a13c-e4da931d2756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5aa6ab-25f7-4dc4-a010-317dec5e4c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c5086b-eee6-4a85-b500-355b78495e2a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435788ff-1926-4ee6-9f38-80547f388427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57329bce-0975-45c2-934c-495d7416abbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d964a0fb-b6d7-4c9d-87f0-58f5121352b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "842f669d-71f5-47ba-b92a-5a259f0ecbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e91f17-dbb9-48a3-b919-e1b1536cac6b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1665bf5-63d4-41bd-94fc-7b1710c9fbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c087527-abf8-4843-8dde-8795f0167517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7b29e4-821a-4049-b09d-8e4798c11786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e31293c8-735c-4b0c-b91e-a7755babe790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854a21ed-29ac-4b8a-875f-cb31af36ac21",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b57dccf-68c0-4d6a-9f18-fb6858c21ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387e7905-7615-4ce7-bb1f-496a654b7988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b975cfa-6e57-4209-88d9-507a6127ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db59369-eb76-4bd8-9ffe-366669eec274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ed3864-ee80-4e7e-873c-f2d679e080d3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b945c1-6b50-4aba-9a59-2c3111b5dc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a566d35-adde-4490-b86f-dda9b7afef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb1d0cc-c8d2-442e-9dd6-0a2374c4c5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc51c1d-24dc-45a0-aee4-839cdd70fea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa852f97-5364-471c-8163-1837512b9001",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b793842-91a5-46b1-85c2-b8f5f6d4df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4912f8e-20f2-4097-9d85-2e01a53081fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6b9f60-f6eb-4727-9976-e2cf0412c8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae51026d-1ee5-43dc-986d-b69fe3ae271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1736c45c-0c6f-4669-bac9-4e2c04754a99",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256b28a8-9656-472a-9446-3cbdc7d09d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e5334f-90b6-4408-8bc8-906c56a39582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ec1f49-c4c6-4e82-8df5-9253b7856a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be62893-60de-4a0c-99b8-f3af501275c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00afc41e-8a58-4f09-8092-483093ce1a32",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e0d838-d6e8-4f03-97f1-550418d7caa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8b4bc3-59cb-4526-bd7a-5643916e864d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d3e548-45db-4e01-a049-8bf77b7c2110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c19ef0-90fd-43d2-9066-43af5a7426a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370a2e24-6141-4235-8f64-99da843b9dab",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1727f8b-683e-4893-ba06-6997ae3f78ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a309a426-fcdb-48e0-bbd9-96f31362ed35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e668c37-3a5e-44e2-867b-f0557ba55f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "318058e6-d940-4623-8ee4-baaf9edcb756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9d8316-7828-41b0-a977-3165ba58a405",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa93cbda-c19b-48d1-9760-99f0da3574ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bda05b4-2697-4b58-8167-bdeecc948754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ab3a43-70eb-4c82-9d6f-6601d74579ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d55f31f-e4b1-49f3-8b87-f62d6fdaa5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6370778-7563-4057-b76b-34a31856bcda",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ec1221-668d-4d7f-9d40-417b99e64ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bdba4f-e711-4b17-be9c-5f81bb2d2e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63e3f61-c5ec-45fb-8ff5-3b033b4eccd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17fe936c-5c5d-42a2-a7c3-0a758e53ebbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23e4f054-5c03-4a81-9850-333caf186c9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27cb8164-4161-434a-bdb2-2c6b5578bff3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6881814-5ef5-4a74-b478-8a0fa9206e1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c4cffe-10a3-45a2-add7-f32253f3bb04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f1444c-f9f2-4000-a8ae-408425a04e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "538443fd-57bd-417d-859e-778997637d1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "279b2f79-c892-43d5-9a09-3fd1e040ca88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e67f995-ad6d-434a-bc82-33aab606a2d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "319d494f-15c9-4168-acce-5deed0a17835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66cd5480-519f-4274-873b-c72024388f76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f598b8e0-377a-405d-bddc-60176fee3f1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d8d2b3b-b73a-4d9c-8737-2a255e513902"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca747cb2-dc02-4d72-ae16-d910396f1373",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e399a1a1-82d6-45f2-aa56-8290a5370d13"
            }
          }
        ]
      },
      {
        "id": "58a5e0a7-a6ca-4ae7-8215-76b31e0a1c03",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7a85e64b-356e-41ef-aea1-77a195f19cb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec6fee60-2510-4027-bf77-088af4f11fa8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "37ae427b-a633-4d77-83d9-b00a75eb53dd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef038c80-10eb-4fb9-9a3c-632e180eb614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccef5f4-0626-41c4-9611-c08ff7e48773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d269906b-1f49-440e-ab6a-95401197b9eb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc81175-76c6-4c0e-8ac0-ec9c63771fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5610e6-02ad-49cd-8c10-2ce5b0b3015f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75747abb-2735-4350-8458-b2e8507a1e4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796833d0-a705-41a1-aef7-4fe4b8088cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8145f583-7a80-49de-802c-c9d1998fd014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a00ad6-f56b-4374-917e-d8a87300ffa4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a81c62-372a-41d4-840f-692bb766ad93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bbf586-fe91-470e-879b-e8e00e56f427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65d990a-6c59-4e1c-b4ba-43aa6a2ad5db",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78493338-0747-458c-8a83-ddeac50cf1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22256e76-498b-436e-85a4-f6b7e962d71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d70947-23c1-460c-a492-2d55c42db2d4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa847e0d-ce81-44b4-be46-dc6dea9f3646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8817f4b-eb53-4f85-a1a7-9299ff0b9360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d62af13-e89a-4d35-8541-958fb3e72b91",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15391b33-3b2b-4c43-9867-7eabe5f532e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8290c005-42b4-4e04-a220-0edd26fd83a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ceaeb9-4f49-4613-99c6-ed763a14f2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f719c27-8cb0-418e-b98f-75a9dd467ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52d6a5a-c483-4f1b-93db-afbff532685d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d2bc18-b737-4f42-92ff-1f7decabc475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c95d83a-1083-48bd-b02f-23d02e627147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e631ad08-ec44-44bf-84eb-1c933a53c993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6771f097-5b5b-409d-8819-3536471e7d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820c77cc-1a11-4b99-ae63-a092641703c8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f25deee-c727-4a42-98d3-7aafb5fedc44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291dfdd0-4d2e-4ee5-9d37-be1a3f570e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e91daa-2bb9-4646-8994-8b63bcd3aa99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc7d409-6f3e-405b-a9d9-dffb41634379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409bfcf4-ac45-4c6d-be3f-a8a288a758a2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecba8bf7-c0d3-414d-a8bd-0ed8a03d7d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a85ba1f-e3c0-4666-81c7-ac34c5480d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de264d96-431f-4a19-b8d0-44bedb6dbdfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7357aea-8fce-4c8a-8fa3-01b02b889a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cedae2c-32a0-453e-82c4-a5a625eae2ce",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68d81c5-10c9-4d47-bdd0-ccb9f1b4df07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86f656a-aca0-4860-9437-cf7aff8f48df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827b6369-d17a-41d9-873e-ab00736f8511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f13be7f-31af-45fc-a8fa-0e27a4f01d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325b3375-0f8e-4c5a-8bac-173466e5559b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb8ae2e-f941-418e-bb04-2934447be101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c47829-b12d-4374-8a13-d550475582ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6258d4bd-4014-41b1-8a8c-23639afbb129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea69e36-67d5-472a-a9f4-0fc7fe432129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385ff557-9011-43ad-a4eb-78aa24c24b9f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f4354a-4284-4c14-b5d4-72ac6317270e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa90ba7-515e-431f-aa5c-d9a9e1e9279b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54544a26-806e-4c65-8514-e76137485331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ba7d2e-780f-4b57-b8d0-7f874108fada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac946033-4f95-43aa-aa0a-e6aee7cdcd02",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa790bb9-f1c8-4f8d-9bfc-0764be41c271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95d5305-61d5-4fdc-b47c-c2fee808bb31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e460dbb-d026-493c-aa78-6b696ce99c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9b2927-f174-4926-aa0d-fb634f5a39e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d83e2a-ff2f-4396-b533-7708ce584d32",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6040739-42c8-473f-92bb-3d9fd1dc7955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3653202-8df1-480f-b70f-845136ea8036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d106c6c1-33c8-43b0-be85-e63131057d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c42bc2-6f83-42f3-a0a8-4f5e448faefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7f9c91-f09c-4704-937f-149d39511fda",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f1029-7e59-4fba-9031-48816560df50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c38c41ca-3c83-41e9-9370-bbc62c393000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7342a23e-db81-436e-a2ce-97e5ac01fee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c167c4bf-9192-4ac3-8d64-acbb17f1d850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5decc3-adbd-44e6-b6ca-382a8adbf17e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b231ac1-8c04-4dbd-9848-d71137fe57e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b128a4-e187-4149-b1d7-5d4dc54657e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff217ec7-14ac-46db-bfd4-6c6c736ef454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd52d61-5aaa-4049-95fa-aa9abf3e4351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04308352-d73c-4078-b88b-da311a3dc266",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac0ffc-6258-4121-9bcc-02196fd963a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78647b90-8e70-433e-a950-deccaf407af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5cb037-938a-463d-9017-6d76e7ce2288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfbed87-e0c3-4181-b48b-d9d36db2344e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29db7909-6b6c-46a1-b2ad-62cfad0ecdd4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e444199-3006-401c-bce2-614de0325d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b2d078-0fd7-4845-a15b-bb4338b3794b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd69b38-db70-499e-9119-a1b78afb781c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fe41f6-555c-4f62-a20f-4fdcbcac8b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db895ea-171b-4990-b2b4-08aaf2bdb68e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af6de4b-ba71-45ea-ab01-d181ccca9282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e94291-f9d9-4a84-8a85-1d64ba7698b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f019f55-4ceb-438d-ae91-eb3b96f74dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131659a0-dc42-4e50-9ac1-0bdb212c78cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc579f6-e2df-4318-97e4-7f4d0f50c45b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625b76b5-b9a3-4118-9621-425102a745f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55127447-bb27-487e-b1cf-8e4db954097c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c134e287-1d77-4a94-865c-2a78e969f743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0e696e-e0ae-4f9b-a2f0-11be68c1a637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f2f0b0-6918-45fd-a7de-228017318e38",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad348d0-6f4a-401c-bc4f-827dfee2d64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d025802-2345-4f96-adae-cee678cb7c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50173b8f-839e-47ff-991d-ba0f49206b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c45b2e-518b-4768-ad6e-7a5156eb742f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2fb1f4-a3ea-4144-bcbe-50d5801be35d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fd7fd7-20e0-494f-842c-08edd37b0af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bcef68-ee4a-433a-89f7-a48847f058e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228372ff-0b22-41e9-a93b-be9f86530b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd88b5e9-02f5-4f5a-ad6d-e4566405327c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7520182-dd4c-419d-8e75-cf8dd4afeea2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceffa47-8582-4a94-90cf-601124344fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25cd82ec-60e0-4204-b1b0-bd5292fe22d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e72066-01cf-4683-ba11-072f0c445ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd84e0c-ff6c-469e-9b24-e797f0c286a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842a957e-af00-4726-9423-907cf4950684",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c7e236-d5cf-4379-87b8-2d9a8142a29e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95921a7-a9e6-47aa-bc44-ad161c08fccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa5935e-a88b-4699-9ab5-c76aafc2e647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f89bc11-a29d-47fb-a9aa-0d9970f77e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197ab7cb-92a2-4e51-a387-e22a6dafb456",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6564887a-d4d6-4178-bccc-94bce2db12fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "672c883c-07db-42c8-bfe9-147f1c0ed9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7522bb-f861-4ec9-b0f8-1a6e869133b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a43ccd2-6a05-482f-b54d-976dc15d0a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e0e223-2ede-4c83-9e09-811960bcf3aa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd63222-c825-4592-bf48-c8655b9a07d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043ef0a3-f3cd-45b6-9173-05c1a5e8456a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3ef5b9-0947-4379-99d7-2162e7720c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b56b125-513c-4102-badf-c503ee9b9a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7606bab6-a3c9-410f-845a-c5b001f080ff",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0e1b11-6867-4ef9-85a1-673d174ed2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bbd2cb-c454-468b-bc73-6e87484dc2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5214dd5-bd65-4d44-8453-7abf6c061e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592ea830-497c-457c-b261-08ba9176fb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dc9ebf-88a6-44b4-a5f6-a6b9b8dd47e5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497973e4-9274-4fa3-ad16-a2e64a68ed86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ff7c5f-c40b-414e-b47c-27f71e393936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1248114e-7651-4897-9e2f-b670c454e288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8627665c-1242-4bb5-b1bc-ea0f04089622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18285811-45d4-42c0-8b9c-7d7a78610063",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2524e682-5879-47c7-8f0c-be6abd9caa7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c27d187-c790-432c-aba2-8737ff3245a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3a2818-a398-48e8-95c8-ff38ce937f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e38a11-dcda-4c8d-8932-c52429f64fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328a7736-c719-4156-b09a-c06f528e2742",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefbb34c-0704-4433-b93c-612204360b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8431b411-126d-4117-8b22-e7f789421b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e01b957-9d6d-4e0f-bfd0-60218d44bae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eec51a0-cc92-4c3a-9d2f-adf254d7f099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2e32b9-e10a-413b-9e0e-e66d8b2a06d9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e01e250-fabb-4980-af22-acafe24e762f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e580c72-bf3c-4374-8400-539efd9d006b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048901de-9b80-4d49-aceb-5cd56b378ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3639153b-055f-4884-b518-b185e4801c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3af1c1-af19-4555-ac85-cff3b1245f55",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fddb398-5493-41d7-913c-90c09aea8923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde0f911-7aa2-4fcd-b617-85aef3d0a5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f133a16-6464-4b4a-ad72-b46b51153004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f16b4ad-77c1-4db1-85ee-5ebd47d8603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30e760c-1d4b-4ac6-823e-3632990ccbb7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1023ef1-d457-457d-b480-6c34474c401f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a72448d-6169-4798-b4b7-610982c086fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0b4f38-e104-4576-82f7-e2d4360f4cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2428384c-ceaa-415e-a690-baf4be6e1a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70aa7ce-40ed-4bda-9d92-5fa9bc8b792e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070e4775-de0c-4b74-880d-c23f531b6fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c37ec73-4f6f-4fa5-91a6-bc980971cd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9599feac-6bfa-4702-aff5-d2d767772ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd73535-cb2e-4d7f-9ae2-c89d46ed9942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39ca74e-2f8a-4770-8130-10862737749b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d1bd2e-685b-42bd-aef1-5c683b7f26da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982be2a0-7c93-4d34-99c5-a504d9cdd535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e826eebe-76ee-47a5-897f-e3bf53b15672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3b7229-cf9f-46fe-8d70-7cf34e155c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa8a2b4-180c-4ddf-b3c4-c6ebdd66ef7a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d2de3a-028a-45a6-a92f-0c5388ecf06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa763fc6-c0f8-4a6e-a14a-4ac0d5c3a8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2efb7e-66e9-4b0f-aa60-4135dab7e6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13077cdc-fdd8-4953-897b-4e7690a28772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef91a4c3-ee74-4b03-8d93-28a4a2669ba3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b414c85-49c2-4514-9f6d-556d9ea16a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3858cd-9bcf-45c3-8348-0c485d7530f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca822655-f446-48bc-9407-0fb9fe0f0950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43492a9-5b3e-40c9-9c3f-9320685d7bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe31b034-693c-46e2-8e11-97753da25bbd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d137735a-b03e-47bf-b468-b5e2cc86cb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5447f3-d326-4b6b-87d3-a87cbc17562d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e221f6ab-e897-442d-a8be-eb0a3fa736bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74272f9d-dc81-493e-a6b9-1058c8979fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38174623-4e2f-4975-9388-e85a06d780a6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19795c2-3c0c-432b-9d0a-0483cec322b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cde27db-6093-4614-b50f-a208acac6e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67894982-85fa-4b5e-82f6-b054641a0c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a93f83-6b30-4c0e-8669-f62a8b45d627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d794b16-a438-4758-a3e5-4615fc8a0fa7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaa4b0a-bb87-4a52-87c3-e6dd3afc4b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4755a9b0-0487-4daa-a217-27d0768899e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0413b3bc-82bd-4804-a2b9-142592b08d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12918450-65d8-458b-b11a-719711e2fc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cc3403-0608-4f09-8ce7-40d39ff13f87",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83798a1-dc37-4c0a-80ce-7b82526ff0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef8ee8e-8081-4702-8899-692f7ef44302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef134ebf-c4c3-4c0a-bda5-4bc8b2545eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62f6c03-490b-4f5a-85c7-72d164e5fcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521adb42-5a93-4d00-9932-06ce5d53f5dc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f8c1b8-7d24-4ba4-958c-3bb217abd503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5d31e1-04e9-4b85-9ba4-67959bed80b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ba5aba-de18-4252-91dc-c3b7d2dfd922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9045772-7952-430e-91fb-65410a3da666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a071b36b-8cae-40a5-ae36-c76e9ec91a1f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca62c97-f27d-4cb8-a144-5deb8a7b0a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfa9be9-44b8-49b3-a0ea-e6374310c036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba25206-7406-4159-af71-b4d581e153ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c096255e-a936-4e55-9578-302db4ce0660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b892f897-45c7-4e73-9f9d-3929c7541b67",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dc4e72-cc23-40fb-80f4-b5a92c5a564b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b369ec0-e63c-4810-a0bc-f670eb045674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aff233-159b-434f-bb67-1125db1e32b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602b1d9f-3862-4dca-b34c-340eac8edc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e92608-67db-403d-bb7c-2b5a787a73f0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51602023-10f1-45ea-a038-20bb80c5062e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31d964e-1743-43b1-ac43-dac2d139efe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8764afc-9750-415d-9505-f98129ec17e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15c796b-2f74-4f3d-aa5c-126207cd471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ea7893-4911-4a57-928b-a0d1e0a8e21d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804c061b-c268-43fa-a635-f514f85143e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903ddbd3-84ee-42c2-8ccf-1a64dded8f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c5b2b9-732d-4099-8104-0f70f3aa9bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55cb45e-7933-4e54-9ac6-35839dcaca8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154ab69b-2265-4589-a0d5-1ddc5a466b88",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b2d9b1-cc14-46a9-8f64-c2db40ac7cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e041b336-9175-4eb3-a6e2-93f1266341ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e2b08f-94db-40f9-a791-fb234ad85248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f380a111-f8fd-4922-97f9-a55fc619900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62996225-ddcf-42bb-be46-6236e86a6230",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b277fb-fb1f-4ede-91d0-2add7e29115d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a776075f-b035-41d0-ad5a-23a57cc380b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3265aad9-a574-4597-8854-abd2f33c0cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7088000-2cbf-4161-b9e7-5f797728578c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff5f930-8f64-4943-9c7e-4918fd086c7c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5859b0f4-e0d1-4ea3-aa2f-43388605b53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79a55c3-e042-4dd2-8fa5-9424f805051c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59d3990-ddf5-4f97-88ee-af0052f170fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecd2760-a524-4889-ae67-3f93a82debf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c84992-0739-435c-97c7-69e3ebc11a3e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d840269-8f67-47e8-8133-1bef74d6bbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54390896-f1a7-4c6c-a1f2-cbfa428c8a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32eedb44-f1c1-441b-b307-28fb0df614ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4646866-abc6-4d28-922f-3d3948a0b0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f398046-cda5-4346-baf2-d467a4b4b259",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad8dcd8-9029-470c-8709-c216aee5ebc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e5a17d-baa6-4b95-b088-f06424e10b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea92f3d1-c9fb-4fa1-a3f5-d8e8ee011c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd7297e-3942-48ad-86d0-726059b3253a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc9e885-a43f-483b-a62b-805866a66e78",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162945e3-88ae-4e65-9b86-8d6eb8c7aa6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e3220a-a9f4-4893-92fb-db151313624a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc1488e-59cc-440e-9f6c-83638c928bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfb6ade-afaa-45f4-9bf1-3c1a939b0160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682d501e-ae3c-41e0-bd18-747a07d7b627",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9508f845-35a5-47a0-b34c-5af472674f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258987fe-34ea-4f8c-aef4-b44cb85a8813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c0b2d1-7d44-4ed9-b4a9-05be5604f4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69482fd7-fd15-4499-8977-fccc4fad7a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df3fd58-ef69-4935-8320-4d4a9d4a8581",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601adbda-f921-4ad9-894c-73f95a6ca856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f44d83-a607-4f39-9ab7-92d88847b69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e41074-c757-48b9-bceb-c7013ad3a127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16e9378-3b52-460f-9f7c-3e30386765d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4943a289-713f-4768-8f8c-f4058e015190",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7628d7d1-8682-4c63-b4b0-d884c3bbdbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ffc48a-5b9c-4e3d-8e87-385b9c99ac2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0345a26-eb34-49c1-855a-67c59fbf2ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65a0c4f-83c8-43b4-bbad-9d91e7719a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cb1099-c0cd-40e6-8f60-4999f28edbb4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9292f2b4-c586-4a79-a819-31168dfcccc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc901ae-7d6a-4b10-9143-155d895cbc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a996d59-2f2f-4323-be45-3d010e24c599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87760005-559a-4a29-9022-ed1acc843f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58324f58-cb64-49a5-9787-f6b478f04039",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f69a97d-3ff9-4991-97fa-1735ce390345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ef6fc8-10a4-46ac-abe3-f4738821e118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2f0068-b64c-4f8a-8a6d-2fe7f0633c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0e7298-5066-419a-8aac-5efeeef9509b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d32e932-8370-4fb5-b826-8473ea775d3a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483cbbb6-4ff8-483e-97a2-83354e17be50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31af8e0-5f26-4fdf-b62a-37e4a018375a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20afef22-d0a7-4f97-b4e6-c7a7ae50347d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a19a687-f6b9-49e8-8af2-28b78383e447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748bedae-a874-48ca-b3cc-217d6de7ff1c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49371757-7120-4419-8fd7-c379b21019a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db970c27-a8fc-44dd-8e87-e481c4e74db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e6605a-eda2-4dba-bdc7-adb8b297052f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fd2705-8fc3-4af4-b64a-9b9488702e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76105d8-978b-4edb-a6a9-532a1937e18e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d5b38f-8132-4b3e-b439-dd66574a6af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfae1d8-4ddd-45e4-824b-69d9255c4b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bc026c-5c88-47bf-8ee8-862683b102d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cae184c-8537-486f-bc3b-ae62083d5bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439d97dc-fe69-43df-abaf-fa21cb5895ee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8845afc-2d8c-4ab1-b1b1-60d020529b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10e8e71-6e4c-41c8-944e-efff96da6d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ee1f74-3b2b-4f5e-a7e9-dbe8cb7c0221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b566b549-296c-406e-8a50-35b9eebc98b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff660f0-461d-4a4f-a2c7-3c6d5b884e2d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51d1a5f-2ee8-4edd-9a09-86005a2d6d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471c1538-2d14-400e-8986-25f7266e2c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0593d4-6e04-4c78-bd7b-d68d871bb1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37e4b7a-e7a9-47b7-92f7-04786d7917cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c147964-6a27-4ab0-8619-78d994ef8f45",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a255d1b-e763-43d5-9319-78f96f1004d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a84e8a-4fc2-48c3-9591-f9c6c6906500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3268a71-f6bf-479f-ad8a-251c3a1a8e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466e6a84-be26-4875-970c-0a551434c9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0abc38-b0ab-4148-a602-7e73afcf3aeb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e243822-d3fa-4850-9653-9f04d938efe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64168355-3597-4360-9326-68b68b4ce094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6494d02-0c30-48e3-8fae-e16dbfd397c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f7afb8-ce41-4ff3-ae92-c35ac5712801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d823dc3-8b55-45c6-bfb4-5e1c447252b1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393dbc0a-c511-4dc3-ba33-477046227c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f743eda0-9269-4918-82e2-3d4d29e266bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c6b0ef-c234-4f45-aa76-e675a28eb616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8017d3-9ad6-4655-8d40-d952a4bc9b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06457057-fa05-458d-9756-2d347e2331cf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3841bd4-474c-49d7-99c0-5d82120df90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af97f209-cfce-4b97-842d-cb136c08e986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4b1d8b-53a4-4bc7-9de6-db288520883f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c171a57f-127f-4391-a0ec-99b5510beb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1833d3-8237-44e4-8a9c-5baa72ee0b60",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24c6ec0-8e34-4fb1-8436-3633730aaa3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc970ab-d405-44e7-99e6-4acee0f543d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3231bc0-32d8-4987-8055-502efaf309d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f830c1-2bd1-4ace-a9e8-ba938ac17d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b02e715-cb6d-4033-84c1-e2d357732a11",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976fecf5-353e-4cd6-bb7f-372dd2e10b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6848f42c-10e0-452f-9e19-580196087d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9c179a-5ddc-4753-ac2f-ae18e7f1b0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11192298-be86-44be-af6c-6003e803337f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d3faf7-c6e3-48c8-8871-6cc103ce4d0e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746d9ada-7388-4b0f-8269-ff1c413cb82f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019cd748-ebdf-44d2-bcb7-93d95398ebe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ba9b7f-8a45-4153-b29f-2cf1dabbdabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d575043-d37f-4dfe-8cbd-eb4dae1d3f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff33f2c-b9d3-4019-9b89-74eff62db408",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63f7479-4357-468a-aa24-f2b0ed487420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fed3db-d706-48aa-9ec2-d9c015abb165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7de12ac-86ac-4fcb-ac35-7c5177d773ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed435f73-40ac-4460-a2ce-a8c38e71d898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8407a575-2d17-4645-baa3-381cf2ffc858",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0a6ac3-fa2a-44f5-b0ab-14831320326c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c2d71d-acbc-4024-9305-e6f8e6913935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd65d11-91e1-4e5e-925c-584d38ac1bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf60e0e7-f924-4b41-b446-2d63327b61d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf907ac-a169-4cc3-aeaf-cb807d62b08a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c95656d-4672-4bfe-8b02-79e143449c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93acfd6d-2414-4776-a170-cadc372115b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9534c791-c9af-4e6b-8ea4-ac8f2b404fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbd784d-8aab-4679-a265-f20bbc09cbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc963df-fe12-406d-b35f-0911ac8f81b9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c073830b-3c98-4407-a89d-4c6ba12da9a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a97d49bf-daca-4a83-9baa-42951e18661f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4ab0ae-fb32-4223-a93a-8028dfc87d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68286c6-8049-4809-9246-a1df4c452cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a42362-9e66-4480-986a-3eb4c0012894",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ade982-6111-4954-8c8c-74d00fc62ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5707648b-b289-4032-95c6-b1e392af9af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287e76eb-6d1e-4cfe-8b89-1b23920aedb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74b2a3b-6426-41da-8cbb-f7557b4ba727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8552b7-e83d-491b-a9a3-1be569e4a253",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb8ff72-a757-4b34-a308-5cb37a4f90cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a312c4-bcb2-414e-b868-cb93392df915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a77663b-9ad6-4fd0-a7a5-663eb20d9768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860567d2-ffdb-4b1c-af6e-67bfd0895b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eaa8b5-fa29-4119-a641-e1b3ea0167ee",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9db520b-e0d3-4f9e-a46a-910899616c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750de856-9ec8-45bb-90ca-358f93eefbc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e52f3b6-0bdb-4be6-9cb2-ac79ac3c47b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3994a7c1-0ca0-48dd-b324-e9c209ad286b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2702a7d-6b81-4f82-aad5-b98720cf9e4e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af731446-34e8-400c-a11d-6e2005d7af1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a12646f8-63ae-427d-9106-010d1d38ae03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f4552a-dbd7-4915-99c2-b94e8fc51480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991cf56d-7148-455a-a08d-1f8463c0b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682702f0-d0c8-4e9c-9f27-72692e4ab4eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77415fd1-f0fd-4578-a5e0-022093c40572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5317756-82b2-4ea7-ba6d-342138fac08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18e989d-13cc-424e-b795-d0f0200c40ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adf2678-b872-411b-9e01-e99e7fb21f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882cda92-c872-443c-ba82-b535df67fa05",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005ba999-3520-4009-8d4d-1f0f61bc65d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44670e02-fce5-4f14-8db8-ec3f67c85e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a466cfde-f8d2-4767-b9f0-cf7f1f378618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea77a267-4d18-444c-8836-4c1a743d4d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d21dcec-5ed2-4bb4-b9f6-bc7988b2c652",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd54f3e4-0aff-4fd3-b792-a7d04328fe53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c677552-2c67-4352-90b7-58a9ce2063f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444c9f97-06f1-4d3f-84f6-782acae94774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488b256f-6a08-4798-8e30-5240545aafad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050a6c98-f357-405f-ad6b-a8024a8efb5a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3587db4-d458-4b02-9d0e-34f4d62888ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d430ef9d-b1c3-461f-9021-cd5898713fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7321c5c3-b866-49b8-b2e3-c1a47fb73758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b1fa3b-b6bf-42ef-8381-fae8cb28cfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7837c97-cd88-4eec-a4ab-1b55784667c0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a42c5b6-760b-405c-b24d-7f4815ddac48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3fcf8f7-16b5-42e7-965a-d3b68b63815a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f4839-f221-443b-bfab-c5c053acade9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbcb9ba-0217-4ef6-9e0d-8769118dae2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b2107f-5c6b-4af7-9e16-24e8c29cdd3b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167596a7-d364-4a7e-9531-35981172e4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a49ef2-92b8-4287-8844-33ad7ae426b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8643d100-5aa5-4e35-8f8d-e70d5bb91117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e8eb20-6e68-42af-b7fa-54b4079a1d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c532747-5293-48c0-86c9-def4d3a24cda",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80167e52-4212-4701-9531-298788c8e32a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26f1d50-de37-47f5-9a4f-ac8ece52dcbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3049032d-7c5e-4b23-9529-7cc04a47ca8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce97a71-4fe5-4f43-89ca-c6267c192e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad0930b-a49f-4720-82b4-d132b56f7fe9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d23be83-2525-4aae-813a-87053757f407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59985ab6-0c32-4bf2-afbc-0a00a139633c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11673d13-7e13-405b-a0af-adb301e5cd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2daacf9-c8cf-4e20-b4d6-6b406568047c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702a8146-13c4-4a38-8fa6-ef5c58e566a2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4fc978-f43a-4b99-8dd9-5cb9bfeecc42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e730fbda-383b-4ddd-88c3-c2f5a12d059b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617bc5bf-fab6-4a21-907f-d17c741f8e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcb96f9-d106-44bd-bac9-cede42784f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec74bc6-0e7d-4c85-9883-e88269d2aae3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138f2293-09ee-4364-ad7f-e8d25d571462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14787a2-2502-42e5-b849-e377510be832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd84245-c4e3-432f-bf28-898d00b9c54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ee6fa3-1879-4c0d-88c6-8d877188d246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ea0561-a156-49dc-a4f9-08a7662d7d03",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aefcaa5-3a7f-4a64-8c4a-5b384bf336ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137ee88d-4e72-4aa7-9c22-2ef7cccb86e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4007b41-fd2b-48b4-98b7-26695e6e6260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4143f0-b0a4-48f5-bbbd-47c637255765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1920ac3-84e2-4129-80a9-48bd586d4a36",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b99186-e93f-44c7-8449-a2217afaa9f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f057bdcd-5c62-41b5-ad73-c5215c248dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb913a48-a016-4747-a0dc-bc958f61c88e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0d67b9-501f-4415-b07b-8fe60ed8491f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d0c9d6-cee4-48dd-8e3a-7b37fb663a7b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855a75ff-582b-47a5-ad1b-840e52103407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5740643c-5952-472d-bc15-8c2fdd23d1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bc261f-9a34-4899-ab22-5cf5c04eb9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b017b08e-dda3-4906-b23d-43690bb4f1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb51a91e-fc38-40d5-a43a-a342d098edd2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ca0ea5-cac1-419c-bf2f-d8c661accd19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d147e9-b062-4b94-b72e-a64636a3086f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28f40c2-fd72-48ad-9eae-fdac5c3d7a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcb894e-fd8d-445e-b1a4-28fcae794cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f81cee-87f2-4a60-83ad-82dd5c90a936",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fac11f-7b4e-41c0-bd85-2e58fb3ee2c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df8d6952-a825-4c20-be8a-0498c1892a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5f738a-be19-4600-81a3-7f472241f974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0742c28-b625-4c97-931a-3684c327d9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4399210-1216-42c4-99b4-31366642b7a2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4679934-3f2f-4076-937b-faee98e3863a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99cd6395-4d13-41ef-8be0-5ad292d0d2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243b4e4c-bffa-45e7-9b7a-eb9b46a13a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcda4bc-7276-4096-9ca0-aad92e1ad983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5220b7-a7ed-41e9-a9d0-bcb42c40c2e4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1e8ec3-eb9d-48dc-b3bf-d36e8d1ba965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f830d44-17b2-4d1d-89ae-b704681fc9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e04976-55db-4b3c-9c49-218956da1e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6a8b39-ee61-4de9-8831-0f4797583e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a98bc6e-8754-4349-9e55-15f513136f5d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97605e0-b77c-4411-9c1e-2ba4cff527fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1410ed7-d1b2-4bf4-baa9-85708e025ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d46fc6-c0dc-4927-aad7-8dd34808df58",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e632bb71-4cd3-4024-9469-98588409c6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ab14ce-dca2-4b97-a8ae-0111de725e6c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ddf936-d72f-43da-af5f-0bd9df59de31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920a9836-44ef-472a-9e43-32070869cc57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e6e409-88e4-4f92-9429-154abf35c7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078e28fd-82fc-4033-9cb0-cdaf99229466"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62ef93d4-c629-4a55-9eaa-d01ca50a7ec1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3afd9181-c641-4e2f-bf27-36755d593100"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b0b78c4-290e-41cb-ba55-5ecb8a19a9cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2223253e-e20a-4f58-ab94-a1fb9050dc1c"
                    }
                  }
                ]
              },
              {
                "id": "1465e65e-0340-4233-90e9-9b3139a18900",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28d2651a-83be-4f3f-bdf8-fb8b6d189401",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c53ce71-b56a-4143-bd87-fe731ddb8383",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d0303324-4e09-4167-85d0-48186377053e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5c3c28-c52d-42f8-ac74-09cc496a8ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62c6a5bf-98db-475a-a32e-f8e7213872ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bd75eea-52e4-499f-ac52-f06a96c7d174",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51005661-8c7f-482c-8b9d-4fbe2d593680"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df68eddb-5001-43c3-adcc-8088ef31a9b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b21372af-e572-4670-af1c-f9fd0d810582"
                    }
                  }
                ]
              },
              {
                "id": "058db2d6-ffa6-478c-9ca5-9a783152ea6e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d875a300-3f8d-4f9b-bc0f-3bcb4135c993",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c485c7-d949-44e6-b991-2ea73f20aafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "939ce445-5011-422e-b56c-fb0f36cf02da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91007cb-e2f7-4ccb-82ec-55764c859050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa3c352-c128-495d-892c-a9fb056fff91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd10ba1c-8d70-459e-824e-ddae6f5dc769",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c435f1d7-62e4-4086-961e-819dac828da7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "633dd917-0677-4afb-a2d2-ee03ae6eac57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a8117fec-7d57-4fcc-bef7-77d67bc92bff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddc36fc0-c40e-4122-800b-746bc62d51b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9e17877-1126-4b7b-9f66-8a807491d478"
                    }
                  }
                ]
              },
              {
                "id": "ae052ff7-b9fd-4ca8-9728-d01d6ac414c6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c203b44d-d50f-4e3c-8a30-e1763505e5e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2423a77a-9602-407c-82b4-933ddb4b94b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47d28ad8-0236-40d8-b1a1-a91d0c09d363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56257b05-caf1-46c6-a684-43e0bb93c2f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "015d536d-8bdc-4894-bee0-53fd3dc77899",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "43310639-d6e4-42b4-9250-487a46aa2a15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ade19d7-8afb-4721-add1-7c7bdf60c54b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85f33c61-c20e-442a-a11a-fdd21d29e47a"
            }
          }
        ]
      },
      {
        "id": "add85fbe-8a6c-4131-bf52-67579c6f92d4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "09de938c-2f66-4efb-92a6-ddc4b77a656d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d9e15ab-ee64-4998-9154-6509c88d262a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d61b36ee-5e57-4b81-8321-4e46cf3b15f4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61230eb8-3a0d-451d-b9ef-ad27a1d682b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "78a44a28-a39a-44b8-8199-8c9329f7587a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e4b651-fba7-4f99-8244-5a6f8a60a33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29d4575d-9b98-451d-8588-3e2a84e5c541"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "108c7273-67cd-4815-8fd0-33d55b9714bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a9b02c-8bd8-434b-810e-8b1ed123872c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83b10eb4-080c-4da3-9de4-af941490273b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3964fca-74b8-4dc6-87e6-5a41cab4b5d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e178d3d9-2907-41e8-a622-8bceeb56c536",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "03bbb31a-4496-49ac-91d6-f5557676b120"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7326188-c012-48a5-9bf6-9612018eea7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82e5a9f6-ad68-499d-98b2-43c047ce53a8"
            }
          }
        ]
      },
      {
        "id": "a2f039e5-5d2a-48e1-9cb8-435338dde816",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "37346146-5f03-494e-8a07-639b5c86dea7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45312c46-3bd5-4174-8f20-dbeaab46ad1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30a664ac-2591-4184-848e-951b67632977",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be8600e-76ae-4e43-982d-13c20f08ecae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26f65bac-aadb-4886-8042-9ee677825242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995ec6cd-9144-4d2e-b478-eafc5dff0868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2fb3922-8386-407e-9bd9-c723fe95f298"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35ec823c-641e-45fb-ba2f-12fc7bd3da51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16334968-a582-444e-aaec-412ef2846072"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18c20357-5370-4316-ad98-246c5f3f128b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1b3d7fb-2a41-4a54-80f6-063d4a68f06a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b5829ab-ab15-4aae-b423-18bbf7d1675e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2aa313b-6814-474e-af7e-d76946555ded"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0c91149-b12c-4dda-94d7-d8c7c132565c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8a2edfc-cbf4-4c17-8dc1-1be82b45e7d4"
            }
          }
        ]
      },
      {
        "id": "7b8d975d-dd26-4f1f-a07c-0c0b1ee8f969",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b7f4eefe-9bfb-4c04-8122-a7a1b1c9ad6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6ada218-64df-4ab8-bc94-7375a7f20f02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06d56d14-6ee1-4995-b1da-73b115f9d721",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef424051-f5e7-4341-a7f2-b5cffb8dc307",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e275e348-369e-4aa2-b3fa-c352cdb56bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbedb948-e5ef-4edb-90b8-44bd11ad902f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d529285b-a74d-43eb-8e2a-d58d425df799"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "871790e1-af89-4362-88c6-25e662324a8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecc3192c-e8ec-4157-bf58-4901d95a6921"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e99961a9-c30a-4833-8a17-283e8ac5922b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f842628-7a19-4bc5-bab0-368fea702a9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66aacd23-e8d3-44b7-b086-9c55d619b31e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15dd474a-bf1d-4578-bd7e-9fb66eb04bfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "991a3eb5-4e48-4fdd-b92f-642158698b2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2011c45-d7f9-4daf-ba40-a46b8c88055b"
            }
          }
        ]
      },
      {
        "id": "27cbb1a9-99ac-4027-84d2-a7d9ebf7f26e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0352166e-c784-4a4d-9352-dcf8c8118126",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f003752c-0935-400a-be07-afd92c8889ad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d47f5e3a-f95a-4f43-9286-e860d8f07826",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4c38d30-374f-48c1-9a4d-ef7973673077",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9acea82a-5664-4bca-8658-5e141a481b79",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.91269841269841,
      "responseMin": 6,
      "responseMax": 875,
      "responseSd": 55.32049762789494,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725064927080,
      "completed": 1725064943691
    },
    "executions": [
      {
        "id": "15e91f48-c378-4f83-9c45-6a5b98d1051b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bfb0e35f-f5ac-4b0d-a8e3-b28af741fbde",
          "httpRequestId": "b5bad880-4843-4537-a46a-556b5f8c35f7"
        },
        "item": {
          "id": "15e91f48-c378-4f83-9c45-6a5b98d1051b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "56ef50a2-2e4b-4fa0-a00d-6235ce6c5e4d",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "c308a1bf-6fb0-48ec-9d1c-7aec567f14b1",
        "cursor": {
          "ref": "bd09ad00-c89b-4f59-a12c-72cb7ba0a15b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "698f86c1-615e-4cfc-80d9-536dceb1e339"
        },
        "item": {
          "id": "c308a1bf-6fb0-48ec-9d1c-7aec567f14b1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "210bf64e-183b-4b2b-9ce9-09fa693b6ff4",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "4f801b74-70d9-495c-ae27-05ccba13045d",
        "cursor": {
          "ref": "ece2a968-c94c-48e6-b9bf-56d616b4dd1d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "40fa655f-0f5a-4850-8260-50f92de85a19"
        },
        "item": {
          "id": "4f801b74-70d9-495c-ae27-05ccba13045d",
          "name": "did_json"
        },
        "response": {
          "id": "d0c6bd2e-5514-4ece-a469-0b6030c3903f",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7135b0c4-37e7-4f58-93ec-177b2f34da4e",
        "cursor": {
          "ref": "ec22b0e3-bace-4f27-af43-7e972c3a41de",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa290b1f-d0ad-4520-9001-873ddd47b1ad"
        },
        "item": {
          "id": "7135b0c4-37e7-4f58-93ec-177b2f34da4e",
          "name": "did:invalid"
        },
        "response": {
          "id": "c42d082f-461f-496d-8000-104722366686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7135b0c4-37e7-4f58-93ec-177b2f34da4e",
        "cursor": {
          "ref": "ec22b0e3-bace-4f27-af43-7e972c3a41de",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa290b1f-d0ad-4520-9001-873ddd47b1ad"
        },
        "item": {
          "id": "7135b0c4-37e7-4f58-93ec-177b2f34da4e",
          "name": "did:invalid"
        },
        "response": {
          "id": "c42d082f-461f-496d-8000-104722366686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d597f6-628b-43be-9fe0-b03c16dea895",
        "cursor": {
          "ref": "7f79a03a-e2b5-4c01-8a29-3a17b031ae6e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "45f118fa-e3c3-4378-a5f6-98ee16a3ff2f"
        },
        "item": {
          "id": "c2d597f6-628b-43be-9fe0-b03c16dea895",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a9c52e6d-7d09-4016-9dc1-dd343d30be2e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c7e96a-fa4d-4fc4-b0ff-1485e87afdf4",
        "cursor": {
          "ref": "6b2d5638-e28d-4347-8037-a30167b9551b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "91ea5729-bcb9-4a9e-8294-16c3fc1ecd29"
        },
        "item": {
          "id": "75c7e96a-fa4d-4fc4-b0ff-1485e87afdf4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fd9172c6-4f4c-477f-b1e0-faca5eaec3d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e117923-a643-42d0-8834-5c94f5136e52",
        "cursor": {
          "ref": "24618427-53fe-4484-9763-6ec11270d5c8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bdffa127-76d5-448f-b6fe-a01763d3a8ab"
        },
        "item": {
          "id": "5e117923-a643-42d0-8834-5c94f5136e52",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "13e9681d-273c-4baf-8f33-8b31ca94b399",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeb99ed-6337-4a77-a32b-121fde33a2bb",
        "cursor": {
          "ref": "b41aa8be-be6a-4dfe-ae42-aaae1ff88f13",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "71228447-344b-44a9-ae4f-9181300e44ef"
        },
        "item": {
          "id": "dfeb99ed-6337-4a77-a32b-121fde33a2bb",
          "name": "identifiers"
        },
        "response": {
          "id": "d8360ad3-d4b4-404d-a5b1-d3bcfb274275",
          "status": "OK",
          "code": 200,
          "responseTime": 246,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb3b04d-a688-4308-875a-f243830b44ba",
        "cursor": {
          "ref": "1b14ba32-7bdb-461c-a49f-e798ec75846f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a5eceec5-347e-4e8e-b9c9-fb682ef71dc3"
        },
        "item": {
          "id": "ebb3b04d-a688-4308-875a-f243830b44ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "05943028-9976-41b1-914a-c249e8b050b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8ddc87-3c42-4d77-a260-b86e196e5b12",
        "cursor": {
          "ref": "79da05f1-d5f6-410e-8519-19a7aa7e69b5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "da114107-c781-4143-8605-0440e8364f45"
        },
        "item": {
          "id": "3d8ddc87-3c42-4d77-a260-b86e196e5b12",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "761701eb-1fac-41cb-bfac-fefbfdcd10fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065e6ba4-9964-4be3-b707-133eae4eaab1",
        "cursor": {
          "ref": "02c16db7-ae50-4648-9ac7-22698392d1e8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "63027df4-0757-4c8f-9d5c-a7255bb04ebf"
        },
        "item": {
          "id": "065e6ba4-9964-4be3-b707-133eae4eaab1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0cf123e3-409d-4d6f-997e-b92b3ef9cfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a6e45f-c771-4110-8bfc-93ff1731d6d1",
        "cursor": {
          "ref": "73dca6db-abf8-4f56-bb1c-089323a3ad39",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7fe2e916-bd75-4aa2-9d4d-782589ce5328"
        },
        "item": {
          "id": "e6a6e45f-c771-4110-8bfc-93ff1731d6d1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bf326b37-1936-4ec8-810c-5aa68ac491ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1728e467-ce79-4ddd-a5bb-4adc3c87f372",
        "cursor": {
          "ref": "4fda6ea4-5232-4539-adc9-3b6ea8093bd6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cc6f939e-1f6f-408d-9a87-a4241f74d713"
        },
        "item": {
          "id": "1728e467-ce79-4ddd-a5bb-4adc3c87f372",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3a721bed-c6ff-4389-829d-557dcc0e436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a99fc8b-38d2-4116-8772-e97356d07a24",
        "cursor": {
          "ref": "04c91b21-c73b-494e-857a-e24beaa06797",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c5027721-d832-4be2-a5ea-60d2ad8a7c2d"
        },
        "item": {
          "id": "8a99fc8b-38d2-4116-8772-e97356d07a24",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eeb5a858-6add-4feb-a63a-c1498169a70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26522470-63f7-44ce-9676-52d08f302c41",
        "cursor": {
          "ref": "5a43cc0e-4f99-4b30-93c9-e21f415622cf",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c763aaa7-49fa-4ee7-9717-a51f4bf33b45"
        },
        "item": {
          "id": "26522470-63f7-44ce-9676-52d08f302c41",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b49d5c6c-ceb0-4b62-8176-36ccb87f0fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e991e456-c052-4762-848f-ac34e9251dfe",
        "cursor": {
          "ref": "2c475433-1c7d-41b8-be1d-2bb278babec9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c82ad4c1-eb6a-40a8-a8cc-a67748aa3496"
        },
        "item": {
          "id": "e991e456-c052-4762-848f-ac34e9251dfe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0930d8e7-20b5-46b0-940f-50e4b7ca2861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886d8464-e66a-49a5-b68e-9ed02d263b00",
        "cursor": {
          "ref": "6b01b2c0-12e9-4b06-a111-92819eae29cb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "51a111b3-93e6-471c-8443-e56a5cb52dd1"
        },
        "item": {
          "id": "886d8464-e66a-49a5-b68e-9ed02d263b00",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "12868370-2b94-4b3d-aa36-a16449fc4db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1bf9a-9525-4b08-99c0-1b2d25ef08b1",
        "cursor": {
          "ref": "cdae3363-c4f9-4345-972e-0ca478bd6136",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b58b9394-b32f-4c0c-99dd-7679508cbe4b"
        },
        "item": {
          "id": "baa1bf9a-9525-4b08-99c0-1b2d25ef08b1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "520504b5-6f5a-48b5-9c04-6bb2ad077b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58530d36-51dd-44ea-aa1f-ff09562807f3",
        "cursor": {
          "ref": "7c5b6755-ee4f-483f-a85b-b474b6665931",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2cbee1ab-50a9-4caf-af66-990411cf2ad3"
        },
        "item": {
          "id": "58530d36-51dd-44ea-aa1f-ff09562807f3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0292a0a5-3f7a-4334-baa6-8a1d4fa26c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e78aa4c-6792-404f-b51a-6cec4be0ffb7",
        "cursor": {
          "ref": "faa033e4-1765-496f-95cb-82dce1cf3e0f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b1167baf-11a4-4264-b9e5-ca999b1ae9d4"
        },
        "item": {
          "id": "8e78aa4c-6792-404f-b51a-6cec4be0ffb7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "805b9c2b-fb87-44c3-85fb-ef624569e041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b5a1cb-42e7-4d3a-8d62-b487e9142aaf",
        "cursor": {
          "ref": "9d9e60ae-bc5c-4357-b010-458d5c6cf1fd",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5f669c71-1bc8-4eac-81a2-d536a63bae47"
        },
        "item": {
          "id": "f7b5a1cb-42e7-4d3a-8d62-b487e9142aaf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "002e08eb-86e6-48c4-ab9c-5ee4d095b7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b843db6-2f2f-48f0-abd0-1aa67f9da20e",
        "cursor": {
          "ref": "f8d6f31a-c127-4957-88ac-1bcca775ec45",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f4e8a682-c1bd-4afc-a0a2-a68d4c531d1a"
        },
        "item": {
          "id": "0b843db6-2f2f-48f0-abd0-1aa67f9da20e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a2ad1145-6c15-4034-bcd5-b67b5e5a453e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea3c5c0-d1a2-4481-aa3b-13fe9958ec03",
        "cursor": {
          "ref": "8c283d60-8001-4bea-9808-a53c8e88cfd9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6e5d0f83-f11f-4400-ae89-bbd026075a83"
        },
        "item": {
          "id": "9ea3c5c0-d1a2-4481-aa3b-13fe9958ec03",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5fbccdc5-aa01-439a-9cde-76445580c110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b773a78a-33a9-44b8-8a5f-7fe2d315b972",
        "cursor": {
          "ref": "f65044eb-508c-4bbf-b5de-08a2f20ee24b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d1d190d3-c828-4de4-9262-bba26ade8c2f"
        },
        "item": {
          "id": "b773a78a-33a9-44b8-8a5f-7fe2d315b972",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7819493b-cf2c-4397-ac7c-1ce9fd58e8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf0e816-eedd-409c-ac15-d715e9d0bc3d",
        "cursor": {
          "ref": "ac74bd02-6cd6-4ce5-8329-edde029a6ef4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ee55fad8-f36c-4d86-b272-14cfe17dd7bd"
        },
        "item": {
          "id": "2cf0e816-eedd-409c-ac15-d715e9d0bc3d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "74dee983-916a-4bec-8192-14f718628819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0a76ec-4329-4281-80d3-527c4b48af83",
        "cursor": {
          "ref": "24c81f65-adf2-4129-b43c-6c53885e7a63",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d70e4829-bad0-4e21-9dd3-cb408928c79b"
        },
        "item": {
          "id": "1e0a76ec-4329-4281-80d3-527c4b48af83",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "49ba03f1-8c6c-4ea2-a6a3-b25911dc7815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91a230c-876d-4ffb-8a51-c8b5f52176b7",
        "cursor": {
          "ref": "89423938-134e-4fbb-a46c-8cacb2f4c933",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "98b110b1-2404-473a-9ed7-17b98341cf78"
        },
        "item": {
          "id": "c91a230c-876d-4ffb-8a51-c8b5f52176b7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7ea28684-ca7c-4ab9-a9cb-70ef4aee5112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d16484-b439-47f0-98db-05dec0878f8f",
        "cursor": {
          "ref": "0bf363c6-6849-4a2b-ab89-b7c70aa2b3f6",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ea6cc24c-35be-45c3-99f3-8256f3a1e1ed"
        },
        "item": {
          "id": "80d16484-b439-47f0-98db-05dec0878f8f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d9441e39-32ea-4942-9079-982b57141c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5171d866-dd90-406f-b838-abc2151a2792",
        "cursor": {
          "ref": "bba88ddd-a059-48ff-abe1-015465e90d7f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cbf6c020-8650-4ca5-8ac2-54f7e68b33d9"
        },
        "item": {
          "id": "5171d866-dd90-406f-b838-abc2151a2792",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d88c6afb-88d4-4f9c-b0b4-10268471f228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d501d605-6dc1-479f-9c8d-9c450d3eccc4",
        "cursor": {
          "ref": "6b244328-3128-413b-93c1-376b14eaa225",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b0ed05a6-725f-4535-84c1-6dc25aee4ac0"
        },
        "item": {
          "id": "d501d605-6dc1-479f-9c8d-9c450d3eccc4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "81d1fb7c-4a17-47f3-8c60-c79fdb8a4bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a823434f-3b50-496c-bda6-1e86293bb1f1",
        "cursor": {
          "ref": "b302ad2b-58d7-4e1c-8c27-2faa2869406e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1137f39d-76cf-4303-9486-9c1f586817ba"
        },
        "item": {
          "id": "a823434f-3b50-496c-bda6-1e86293bb1f1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "aab76a8f-87cf-4ee7-b255-8926ed6b3452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b88c66-dbdd-460d-a121-92bcf77b8e6e",
        "cursor": {
          "ref": "5ae1c366-ce50-40ef-b9fb-4b565a2e4393",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1bd894f3-df1a-40f8-86d3-4056cf40e277"
        },
        "item": {
          "id": "92b88c66-dbdd-460d-a121-92bcf77b8e6e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f502f63a-b41d-4cbd-95f1-09cfafc3fa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814af037-bc1c-497f-8837-d30c738e72fd",
        "cursor": {
          "ref": "05dc6042-3797-46b3-89e2-edf701a809d7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9bb0b2af-35be-4771-b32f-c853abf8953d"
        },
        "item": {
          "id": "814af037-bc1c-497f-8837-d30c738e72fd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "24d5a1d3-3895-4d4e-ade1-106f2e1f1a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf16e01-0789-476c-b14a-fa44cbb91908",
        "cursor": {
          "ref": "a06b5c19-78e2-4bd7-b4f4-52c365c81251",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d5f06495-ea0a-4fcf-babc-45d70b29f5ba"
        },
        "item": {
          "id": "2cf16e01-0789-476c-b14a-fa44cbb91908",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a46a84bc-7c36-47f6-99bc-c147d7964b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4be188-f815-4a52-a664-9b49093d71f7",
        "cursor": {
          "ref": "22da9202-b714-4ab5-82bd-551303866880",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "95968deb-2e0d-4fe6-a44d-2d86e28732e7"
        },
        "item": {
          "id": "6a4be188-f815-4a52-a664-9b49093d71f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3f4cafff-2d71-42a5-ad58-cf9c130d8182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd8e6aa-4a24-4733-9435-fa1846d4e085",
        "cursor": {
          "ref": "77197c27-3e58-4723-b7b7-399661463626",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "958813ba-4938-4e6b-a7d1-a309fff8f6ff"
        },
        "item": {
          "id": "1fd8e6aa-4a24-4733-9435-fa1846d4e085",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "090bbcd2-24cf-439c-918b-129c5e7d5cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ac3eb1-89a3-4453-b04a-3327d09a7fdb",
        "cursor": {
          "ref": "ea5be2e3-8b32-4c22-a30b-e2a0dd1ae9ff",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cc72b472-5bf6-4887-9e28-edd9e81df52b"
        },
        "item": {
          "id": "98ac3eb1-89a3-4453-b04a-3327d09a7fdb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "752a7f24-d991-46e7-a4d4-3f712910a769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab6eaba-49ad-4b00-b6b0-41e119ab447d",
        "cursor": {
          "ref": "0d372be4-65bf-4762-800a-f182a22f03c1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b90808ee-a834-4a87-b3d4-be48b4e1e6e9"
        },
        "item": {
          "id": "2ab6eaba-49ad-4b00-b6b0-41e119ab447d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "79673885-f06a-4720-b99f-a854bf946dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57bd653-6fa4-4f07-884f-e31084ff3441",
        "cursor": {
          "ref": "98960a16-1e34-483e-9f9d-971d8bf2a9ba",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a70ad66b-5cb5-4d22-86de-9f40c7817e6e"
        },
        "item": {
          "id": "a57bd653-6fa4-4f07-884f-e31084ff3441",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "57339d76-fceb-4926-b3dd-bdf7b2311163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3ed06c-5496-4d1e-b7e6-ab1b5f0b5465",
        "cursor": {
          "ref": "c2f0d2f0-eaf3-4c20-b391-bfa2f9856d1c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cfab9459-14d1-4816-a80d-7550063b7468"
        },
        "item": {
          "id": "0c3ed06c-5496-4d1e-b7e6-ab1b5f0b5465",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2c6380b4-8f45-4c6f-aedf-5ef13e999831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4835de9-4dab-4333-b76d-8b661f3df09e",
        "cursor": {
          "ref": "dc76b060-b021-4994-a5a2-2abd165adeca",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9a785b84-4eea-48e9-9b85-3dba83783cb2"
        },
        "item": {
          "id": "c4835de9-4dab-4333-b76d-8b661f3df09e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f8e63e73-9b74-4a9e-8e01-070221cf8df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19776415-ef50-460b-9bd6-d6c8be55e2cf",
        "cursor": {
          "ref": "a1e290ff-22b6-43a7-a8c6-e86851a52f53",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9a226c80-b31a-4085-9cc2-3d3faf19d143"
        },
        "item": {
          "id": "19776415-ef50-460b-9bd6-d6c8be55e2cf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c6570892-a771-43a5-a2c0-f1e37b653445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc48426-954f-4df8-bc27-21914b537bbe",
        "cursor": {
          "ref": "d546f106-4f1e-4c75-a903-c6458e209a3a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d19bb1fd-5ebc-4489-abe7-f391b4252d95"
        },
        "item": {
          "id": "8cc48426-954f-4df8-bc27-21914b537bbe",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0c7f0a9a-0c13-4edb-885c-528f77c1bfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd14eee-86de-4af1-9ea3-f81518294a32",
        "cursor": {
          "ref": "9ed2f3b0-54a9-4ac3-9945-16d431e87006",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1520de13-718b-4a4f-aaec-ac8ff4c049be"
        },
        "item": {
          "id": "fdd14eee-86de-4af1-9ea3-f81518294a32",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ae5eb9a9-2e50-477c-babd-4d6fffeea1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3918cb-99db-4eb2-b974-561c6087676c",
        "cursor": {
          "ref": "6cb97b7b-417b-4440-8ee6-c738035c1bb5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ff223594-cbae-40c0-8aed-12e99b05d460"
        },
        "item": {
          "id": "ac3918cb-99db-4eb2-b974-561c6087676c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "007be5c4-7724-4087-b192-a045139e2202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9877376e-affa-4d29-af42-8a3036e522dc",
        "cursor": {
          "ref": "76889089-707d-4e9d-b907-41e734d9fba9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "31ace170-fbb4-4e4b-8dd4-672e448acf07"
        },
        "item": {
          "id": "9877376e-affa-4d29-af42-8a3036e522dc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d62f01d8-3882-4ade-a779-b115eeee3b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0174d0bc-4e3e-4b0f-9cc6-a4037d53acce",
        "cursor": {
          "ref": "e5d3051f-d0fb-4f99-b5a7-accd6070b711",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0f240b47-3835-41f9-b834-74063de6840a"
        },
        "item": {
          "id": "0174d0bc-4e3e-4b0f-9cc6-a4037d53acce",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "78cb875c-a24d-4d70-bf86-5aca862f0d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9860a8-784b-481b-a658-34764293fe67",
        "cursor": {
          "ref": "d77d7946-9569-4af1-b414-ec6ca0edebf4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6d2870bf-0f2c-41d2-8562-f990ea48c2ca"
        },
        "item": {
          "id": "ba9860a8-784b-481b-a658-34764293fe67",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a2cfff61-4167-411c-886f-a4b25db8565b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e6b207-2349-4fae-a47e-1096bf71b9bf",
        "cursor": {
          "ref": "b458c832-3ddd-4209-95a3-eb17006786bc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2344d8c4-301d-493e-b6ce-cf9c9f7f04cc"
        },
        "item": {
          "id": "40e6b207-2349-4fae-a47e-1096bf71b9bf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6026a557-aca2-4e56-aaad-3e378b7976ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa00637-9548-44be-aaba-427d842b36c8",
        "cursor": {
          "ref": "030fc502-5350-40b1-bb03-b6f7d3fecfae",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4315688b-9b3a-4062-970b-38201ba13f5a"
        },
        "item": {
          "id": "eaa00637-9548-44be-aaba-427d842b36c8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d6e9f9df-63e4-4cb6-a018-70caf158f289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5470338c-7bce-4fb3-a833-2d78486295be",
        "cursor": {
          "ref": "8f45a0c8-f3a3-4867-9475-377c7b31e44f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0c70e44a-f19b-430f-866a-eadc3e59c665"
        },
        "item": {
          "id": "5470338c-7bce-4fb3-a833-2d78486295be",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cac66f23-8a1d-44c1-8af6-73bec53a0a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5546f7-2f88-4e1f-a518-7211d51e0aa9",
        "cursor": {
          "ref": "ec695976-7a72-495c-8f2e-521770eea42c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2033bc91-28eb-4a31-b4f6-5da701a581e6"
        },
        "item": {
          "id": "8c5546f7-2f88-4e1f-a518-7211d51e0aa9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1e6737f3-e157-43f7-acea-c8cdf057be22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f50ec0-feed-475b-85b7-41ec70964de7",
        "cursor": {
          "ref": "c3b0cde5-aee5-424b-aef2-f58c21a1c082",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2691d113-8723-4207-b482-4a61858d2557"
        },
        "item": {
          "id": "02f50ec0-feed-475b-85b7-41ec70964de7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c6554f39-6126-4d95-befd-40d088edd73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261c414b-397e-4fa5-99ce-e18e4b275d90",
        "cursor": {
          "ref": "42a2c0f6-d41d-42ee-a016-a040044c3ae5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bfa1e589-6de1-488e-ab11-bb5e9bd88cc8"
        },
        "item": {
          "id": "261c414b-397e-4fa5-99ce-e18e4b275d90",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "10bef193-880b-4697-9d19-8f04d5dcd79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62422340-5ebd-4b1a-9091-6709ebae759a",
        "cursor": {
          "ref": "d52c6fa0-b12f-4204-8d14-344cae9cc94d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e397897f-6cf6-4a84-bd87-0e8a85a990c0"
        },
        "item": {
          "id": "62422340-5ebd-4b1a-9091-6709ebae759a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "92036fc7-5aa7-4fb2-82c5-dd0548315fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5d2ecc-153b-4761-8336-5e7346f7e1dc",
        "cursor": {
          "ref": "1fc483bd-35d8-4d64-95b9-4e5be02da8fe",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "60639ecf-04fd-4817-8d6b-e3817f0bcc84"
        },
        "item": {
          "id": "db5d2ecc-153b-4761-8336-5e7346f7e1dc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b041bfcf-3938-4560-b724-8d6b79b4bd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926024d2-67ab-47d3-a8da-8fd2fd3999ca",
        "cursor": {
          "ref": "b27df392-1b92-4fba-bb7b-0ca71611d013",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5aa5b004-7ade-446a-a878-137dbabc59dc"
        },
        "item": {
          "id": "926024d2-67ab-47d3-a8da-8fd2fd3999ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "796c5b6a-637f-4f4c-944f-25ad182aa96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0ec3a6-bd36-4b61-bfb0-b316565af327",
        "cursor": {
          "ref": "d56792ad-e691-4e1e-868c-3b8c3d0f2cff",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "271b170d-dc1a-436a-85d2-fa084f081676"
        },
        "item": {
          "id": "ed0ec3a6-bd36-4b61-bfb0-b316565af327",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fece00df-dc00-4a7b-bd4e-f6c1709b1b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18de0b19-5d37-4875-a0c1-6d66c4ddbc71",
        "cursor": {
          "ref": "cc2f3e92-4f5c-4cb7-85aa-bba22da6a6d0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7235d718-d246-45cc-a9a1-e9fb31922f08"
        },
        "item": {
          "id": "18de0b19-5d37-4875-a0c1-6d66c4ddbc71",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e7727cd3-2b4f-4967-99ab-51fd61344d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ca36ef-3e52-43fc-88f7-c16294058391",
        "cursor": {
          "ref": "981a8fbd-961b-4811-87c7-6fb80ae9b28f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c261ffbf-6eda-419d-9aa9-086b2ead4a11"
        },
        "item": {
          "id": "89ca36ef-3e52-43fc-88f7-c16294058391",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f0833b65-9aef-4701-8541-1302e422816d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a371f-951a-475e-8bd0-162ccecb551a",
        "cursor": {
          "ref": "ace31631-dc12-44f8-8844-9305b2ed580d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f3b1fd64-aa8c-4abd-8213-ce55f4186597"
        },
        "item": {
          "id": "423a371f-951a-475e-8bd0-162ccecb551a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b5b37cfd-91aa-4302-935f-1e678ab8fbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65f30e3-9dc3-4c9c-9405-fb73cc80a894",
        "cursor": {
          "ref": "1a459c95-6de9-4765-9a0f-b7f8fc07c4ae",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fdfa0c6c-de60-45e4-9126-a065c65818a3"
        },
        "item": {
          "id": "e65f30e3-9dc3-4c9c-9405-fb73cc80a894",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ccd8c509-4792-4b93-8104-323d187f8cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bad0a34-10b1-4a8e-92dd-ffbabd8cf12a",
        "cursor": {
          "ref": "b34eb902-ecc8-44bd-ab84-447a4efb18ff",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "963a7717-2490-4d0c-8b4d-137db997abdc"
        },
        "item": {
          "id": "8bad0a34-10b1-4a8e-92dd-ffbabd8cf12a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e5a17546-0a52-4bfb-a80a-fc9286612844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e3012a-1ad8-4d92-a945-9990593692c7",
        "cursor": {
          "ref": "0b7a522b-bea7-4303-a217-85a298464d15",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "970fd129-af75-45d8-8683-4fdddbda6ac0"
        },
        "item": {
          "id": "92e3012a-1ad8-4d92-a945-9990593692c7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "947a2537-88ad-4299-9d08-913bcc251082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e13d62-be02-4ae2-904d-bb477092347f",
        "cursor": {
          "ref": "73577e7f-203a-47b8-a6c9-159a36d55d83",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "502adb47-9849-4ac8-b980-ff40bc33f6de"
        },
        "item": {
          "id": "02e13d62-be02-4ae2-904d-bb477092347f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "93cab208-271c-45ed-b9e8-dfc7c02dde80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd85a16-d7a5-496b-a603-ff7589e28fee",
        "cursor": {
          "ref": "ce56049a-1e0e-4b80-b4ab-802f1f4b9f3b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "59f03e7e-ea17-4b76-b364-657bb99d1db0"
        },
        "item": {
          "id": "9cd85a16-d7a5-496b-a603-ff7589e28fee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a5a4355c-5104-47df-acb0-4c57d97d4873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d640884-2763-42c3-8dbf-21f4a71f42b3",
        "cursor": {
          "ref": "09003597-eecc-4bf5-b87c-48068abfec3a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fbb599aa-60bb-4de4-b064-14c831058e98"
        },
        "item": {
          "id": "5d640884-2763-42c3-8dbf-21f4a71f42b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f953657e-245d-47de-a267-8550e4c437b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f29e9c-ce62-464c-a2fc-71cf95a91170",
        "cursor": {
          "ref": "21209ff4-ddee-46b1-b8aa-a293cd0658ab",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "60b7ac14-94b0-4f37-9a5b-daa72c4d06b8"
        },
        "item": {
          "id": "01f29e9c-ce62-464c-a2fc-71cf95a91170",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c897e863-12b8-4c8c-8ff1-a9db719c21e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea50eed-844c-420e-ac4b-f444606ade98",
        "cursor": {
          "ref": "8048566b-73c1-4859-84c6-548dd4e93e34",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "766826aa-fa9c-46c4-8f51-b52f64e737e9"
        },
        "item": {
          "id": "eea50eed-844c-420e-ac4b-f444606ade98",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6e3e3d26-fe3f-4844-8234-b4ccc038c343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e31988-8acb-4edd-be28-ffa7521c1c8b",
        "cursor": {
          "ref": "3e9ad356-0d86-4bad-a546-cdde66c9b07a",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8cfd0988-4cc9-4ea1-b615-ac70a4108994"
        },
        "item": {
          "id": "29e31988-8acb-4edd-be28-ffa7521c1c8b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fdc8d4a7-d6e1-4ba9-b981-3259f7e6bb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf9a8a7-0191-405b-8e10-7df047d1d863",
        "cursor": {
          "ref": "13bb879f-3bb2-487d-b012-dc1c6c5168a7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d3c2707f-17bb-421f-9753-e961b4eefb0d"
        },
        "item": {
          "id": "aaf9a8a7-0191-405b-8e10-7df047d1d863",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "daed8fab-af3d-4504-9dbc-b2546bc40b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a2e17e-1c26-4141-8802-8abdc4a27415",
        "cursor": {
          "ref": "1f070255-7910-4c81-b24e-1ccdd7375d08",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "91f58775-bd88-447f-ab5c-26cbd0369182"
        },
        "item": {
          "id": "50a2e17e-1c26-4141-8802-8abdc4a27415",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7c7ae987-dca4-4e3e-a015-e53265d86b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63f1733-4b40-4a33-9ff9-1bd3550b572a",
        "cursor": {
          "ref": "903fd625-f82b-42fb-8579-1660262e5193",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f54c4cd1-417e-42bd-bdf4-9877e5bde0b5"
        },
        "item": {
          "id": "c63f1733-4b40-4a33-9ff9-1bd3550b572a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a65c99b6-7357-465c-9dd0-255a7ec27b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79aee90b-dba4-46aa-9cf0-5b04fcd44f04",
        "cursor": {
          "ref": "ad64485d-5dfa-48cf-8dba-b3eb7e11d4e4",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "82a17fa3-aea2-469d-96ad-989daf6d5639"
        },
        "item": {
          "id": "79aee90b-dba4-46aa-9cf0-5b04fcd44f04",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7316118a-8f2b-4ef7-a9a8-ed3204856966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ef3c02-5fc0-4961-b1d8-eb897a1595cb",
        "cursor": {
          "ref": "acafe789-5fa7-4a16-8235-3ce18f33fd2d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c7b19b87-bac5-4849-80ab-634a5971d698"
        },
        "item": {
          "id": "63ef3c02-5fc0-4961-b1d8-eb897a1595cb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f19b2594-c2f6-4c85-846e-e56380c8fdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9dccfa-b477-456c-8e13-00616c374cb4",
        "cursor": {
          "ref": "c77bac93-197a-4d73-84e9-ba25431a24e4",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a92be163-f961-4d9e-b4ad-f76af1144f22"
        },
        "item": {
          "id": "ef9dccfa-b477-456c-8e13-00616c374cb4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "22874ebb-7428-40b5-b356-ead74ed75e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84516747-ec60-4105-b288-5810deed0a3d",
        "cursor": {
          "ref": "c58af0c6-df75-45c6-979f-0c796fb33833",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2ba4aa23-df02-4e82-9c56-7eacbd7aa40f"
        },
        "item": {
          "id": "84516747-ec60-4105-b288-5810deed0a3d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "41ca2e24-ebc3-4834-85fb-a87291685281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb48d4e-357d-4c1f-9b3a-c3e81b8498ff",
        "cursor": {
          "ref": "5edbcb63-bc5d-49f3-bd10-dd28a36bc894",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5f01c045-78e1-41ad-9a90-40daba5cd2c0"
        },
        "item": {
          "id": "0eb48d4e-357d-4c1f-9b3a-c3e81b8498ff",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3259735f-dcb3-43e3-ad06-73ca9405088a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a66b7-1c59-4472-94cf-b1871da62060",
        "cursor": {
          "ref": "7da20beb-0dc4-4f7a-9090-95cc60fac5a0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "23c370d3-c710-4a9f-9995-28ab30a87839"
        },
        "item": {
          "id": "443a66b7-1c59-4472-94cf-b1871da62060",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d02c9837-a25f-48a3-abae-1505bffe3ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a5f3e3-265d-4b8c-b04b-f78a0b3d2758",
        "cursor": {
          "ref": "b3f91e4e-3389-4ae5-af2d-7f5123c67990",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fb02149c-7cf6-49c8-abce-f0b2b84d627a"
        },
        "item": {
          "id": "53a5f3e3-265d-4b8c-b04b-f78a0b3d2758",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "00b031ec-7695-4931-8f7d-aed0b60c48de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f86734-5a9b-4b5c-9b39-68c8620518ba",
        "cursor": {
          "ref": "7f33b16e-fba1-4c83-ac78-7c5f0f2b560c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "83a0e976-a408-48d6-8e29-8dd1200a7c7f"
        },
        "item": {
          "id": "b5f86734-5a9b-4b5c-9b39-68c8620518ba",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d874cd4e-39da-4ac6-b85a-cfc2d705f4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfdeacb-a55d-4e70-b816-2281b4e9bc34",
        "cursor": {
          "ref": "2039d263-92ad-4081-93f8-22785d83dc42",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6d673309-5be0-4405-920f-afcb544d6eb3"
        },
        "item": {
          "id": "7cfdeacb-a55d-4e70-b816-2281b4e9bc34",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "87197f49-7f63-45de-925b-675238860fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d234fe-942f-4889-8dd7-0164dc144b44",
        "cursor": {
          "ref": "96e4279a-9241-42d1-b6a6-4324323a36c0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "95beb10a-7cd4-468e-8c8b-a8e227b4109e"
        },
        "item": {
          "id": "64d234fe-942f-4889-8dd7-0164dc144b44",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "96c04413-e8fe-4df3-897d-7de4d55eb715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9339360-eec0-403c-a815-6e2ce18d9ca1",
        "cursor": {
          "ref": "0b952f91-e761-486b-a860-78df30a0500d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2a04bfca-afb2-4d97-9a85-7884e05cc12a"
        },
        "item": {
          "id": "d9339360-eec0-403c-a815-6e2ce18d9ca1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8e0b2fac-4857-46b7-aad2-e9a7bc51ffea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c8e806-5779-4295-bb95-e21a8a273402",
        "cursor": {
          "ref": "e99efbb0-73e6-4e8a-95c8-9be86916129b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "995f8c2e-c8df-43b5-bc43-c18fc1e1f6ec"
        },
        "item": {
          "id": "23c8e806-5779-4295-bb95-e21a8a273402",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b1167de6-3c24-4d39-bbb0-e247d52a8e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b576e4-0705-4f61-986f-79067c3addf3",
        "cursor": {
          "ref": "c9a4e8b6-4baa-46ce-84a4-8e041385c8fb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6fe27299-3cf0-4e22-ae41-1f8a991632fc"
        },
        "item": {
          "id": "c9b576e4-0705-4f61-986f-79067c3addf3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5f2d446e-dea5-435c-8851-702aabcd84a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ac50a5-33cd-407c-bc9c-d2af9b20d65b",
        "cursor": {
          "ref": "0806b79c-fb5f-4111-9d60-001ce6365aa8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c7033b1f-8d9e-44c8-b102-f42b4e510f1a"
        },
        "item": {
          "id": "62ac50a5-33cd-407c-bc9c-d2af9b20d65b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b4c99dca-c5d2-4ec5-b22b-271cd18c404f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be34b33c-6f2b-45cb-8d75-965c328740a4",
        "cursor": {
          "ref": "dfb2efe1-062a-4654-9163-d12a030b8aa6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "725b192e-ed7a-4fb6-bbd8-b515d6fcb483"
        },
        "item": {
          "id": "be34b33c-6f2b-45cb-8d75-965c328740a4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6faa5f40-5b78-4d64-803c-2c8c10a509be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f662eacc-f873-4e55-8d3f-d8374c35e2e0",
        "cursor": {
          "ref": "1849e276-42b2-4a74-9c77-ee86fa527c18",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cbf110d3-b271-4c5b-bd77-d55ac6794d47"
        },
        "item": {
          "id": "f662eacc-f873-4e55-8d3f-d8374c35e2e0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "261ba756-1f3d-46a2-976d-7abddf4da190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780f6f17-6890-4be9-924f-bf36583b98d9",
        "cursor": {
          "ref": "de80aebf-a804-403a-9bb4-75cc5f3a8af7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7745cd9d-fc1c-4da6-a825-9010bb400a6a"
        },
        "item": {
          "id": "780f6f17-6890-4be9-924f-bf36583b98d9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b3e2a046-8182-4a28-ab4b-6659c5502996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4a9c8d-2660-40d1-8162-6dab04d1c524",
        "cursor": {
          "ref": "68007beb-3512-4676-b1fa-a9450a6fdae0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3b85f09b-3441-4641-b830-84bd89a1362e"
        },
        "item": {
          "id": "ea4a9c8d-2660-40d1-8162-6dab04d1c524",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7318c410-2025-4bb1-9745-4bbfbed195c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e5f117-6d90-4fc0-8c7c-2a5a740468e2",
        "cursor": {
          "ref": "f88f7e74-b683-4f8b-9540-665cf1cc9bcc",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "11ec53a4-fca3-4c5a-9950-8833c4dfab02"
        },
        "item": {
          "id": "53e5f117-6d90-4fc0-8c7c-2a5a740468e2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5a2d6231-e198-453e-bc20-c17517cd6092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73afdfd9-35e0-4f6d-8d16-6bd199cd76a5",
        "cursor": {
          "ref": "a1e77e6a-da64-4119-8aa0-20182bca1810",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "202668ea-ee88-41eb-8434-ea80dfb53cb1"
        },
        "item": {
          "id": "73afdfd9-35e0-4f6d-8d16-6bd199cd76a5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "98b6a7e8-dc0c-4cc9-98eb-864d54301e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfe8057-98b6-4a94-b0a1-c21bc32afbbc",
        "cursor": {
          "ref": "6d60a2bf-cb7f-4b33-b157-837ef1c12c96",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "45c94e14-a766-425f-af0e-8a8a73eaab4f"
        },
        "item": {
          "id": "4bfe8057-98b6-4a94-b0a1-c21bc32afbbc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9d4d8119-eb6d-4e4a-8e06-351792c7b3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75bd247-7d99-4623-8910-8b03488e5d60",
        "cursor": {
          "ref": "21edb47c-f23c-4209-a8cb-be0ca4801c2e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "645ce3e5-e4b6-4520-9fee-0850c81e207e"
        },
        "item": {
          "id": "a75bd247-7d99-4623-8910-8b03488e5d60",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "31fb1183-e004-4021-80ab-1483299d0b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4801aa27-1c70-4669-98cc-4ec61dded107",
        "cursor": {
          "ref": "bfa296b2-2f79-45b2-a43e-f64b6487805e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2d16ee95-6569-40dd-91ce-760c8fa4682b"
        },
        "item": {
          "id": "4801aa27-1c70-4669-98cc-4ec61dded107",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "35dded6a-4e76-4000-ae31-000d62f312f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3683f08b-97f1-4731-a01d-995ac1881e10",
        "cursor": {
          "ref": "fa2906de-8a4d-4242-ae27-11cc2538dc24",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f1bc2b7f-d1cc-462b-8329-f41918ece7b3"
        },
        "item": {
          "id": "3683f08b-97f1-4731-a01d-995ac1881e10",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cb8bc139-f7be-43bf-9cdc-72dbfa4286f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494a28b4-0864-4f1d-b555-41b1d80cb6a7",
        "cursor": {
          "ref": "60abc829-ebea-4cac-9dd6-959a864928f9",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fc2ef9d3-9819-4ed5-9c36-0758393b5d1a"
        },
        "item": {
          "id": "494a28b4-0864-4f1d-b555-41b1d80cb6a7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "870d6baf-f1b4-4581-ad9c-a5881cc8451e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfb87ce-322b-4eb9-8ab3-370c0186fbde",
        "cursor": {
          "ref": "35f7c17d-3e75-4fd6-96e9-96a1abf8e73a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1bf78ccd-c9a5-4eaf-ae56-27fcdb4755c3"
        },
        "item": {
          "id": "9cfb87ce-322b-4eb9-8ab3-370c0186fbde",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "003c1d04-c132-4f7a-9849-edd65e4d9df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e645694-c1b0-4621-84f9-eb72cb90ef27",
        "cursor": {
          "ref": "9b45278c-de31-4cfa-898f-cbf712406d5e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "407bdf4f-578f-435f-8236-435561292d53"
        },
        "item": {
          "id": "3e645694-c1b0-4621-84f9-eb72cb90ef27",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c8c2728c-86d0-41bf-91f0-07b6aa7ceed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e063cd-389f-4013-841b-11fae61e68b7",
        "cursor": {
          "ref": "ef2ed9ac-b98a-4169-9a84-180a09b8ecf2",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cc620126-24cc-4455-b2f8-00528772e6fb"
        },
        "item": {
          "id": "21e063cd-389f-4013-841b-11fae61e68b7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e6c5eaea-3cc5-4762-bebc-7ef49e934351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501c4a9e-e460-488d-8752-fc13cf54e8da",
        "cursor": {
          "ref": "11e3b807-c7b3-401b-899d-78ca999b998b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "43c6d57c-a66f-4cc1-b14c-3a17fd7f8390"
        },
        "item": {
          "id": "501c4a9e-e460-488d-8752-fc13cf54e8da",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6cb19efd-405f-4338-b85e-c73053471da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8db34dcd-169c-4be4-a96f-dbaa907de09c",
        "cursor": {
          "ref": "226bcd74-1c27-460c-aee6-8410e08a57a1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9eab4718-1a59-42ca-a40b-2137c27eaace"
        },
        "item": {
          "id": "8db34dcd-169c-4be4-a96f-dbaa907de09c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bd2b50a8-5557-4511-9cce-7607252489f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0da83f58-722f-4037-832d-ed2f30ca81fb",
        "cursor": {
          "ref": "95f6ca1a-56a1-444a-8c59-cf539d7b4de2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "36e74e4a-d42d-44eb-b5a7-a627933545fc"
        },
        "item": {
          "id": "0da83f58-722f-4037-832d-ed2f30ca81fb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "750abd72-e9ba-4415-b9a5-af6c297b61f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d13c0321-193a-458f-97fc-d1f6de5ec991",
        "cursor": {
          "ref": "af3a34e9-d2bc-43aa-953e-04d27ad4da67",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5c59864a-2940-4669-9a63-f1a58d40a8cd"
        },
        "item": {
          "id": "d13c0321-193a-458f-97fc-d1f6de5ec991",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b68da433-e9da-42c5-a6ef-6e1da8b51187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9d4b9609-5e3e-407c-8a5f-15fc5ee6e2dd",
        "cursor": {
          "ref": "caf3d5a5-c986-4388-8814-7e42cc4e3339",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0cee0dbd-50f2-4a94-94bf-218a272ba024"
        },
        "item": {
          "id": "9d4b9609-5e3e-407c-8a5f-15fc5ee6e2dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7d6f4508-ceca-4ce9-9c8c-fcfd246a7775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c47a1929-612a-41fe-aecf-6bdb9f284d8e",
        "cursor": {
          "ref": "ed4d7b65-4fb6-4641-8a95-21f37daf4c50",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a44cef30-e7f3-41fc-9462-fc16e4c79fc6"
        },
        "item": {
          "id": "c47a1929-612a-41fe-aecf-6bdb9f284d8e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2b902634-de03-4eea-be45-c224bd567d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "18daef69-2614-457c-a1fb-761978dde22e",
        "cursor": {
          "ref": "f68212d2-b78a-45f4-8dda-382d44eec28a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1f9f15c0-7270-4f66-b665-3cdeb3d51f83"
        },
        "item": {
          "id": "18daef69-2614-457c-a1fb-761978dde22e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f9b6fcbb-9140-4573-a766-8da0a160f388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1165eea8-5ab6-41d1-8998-4a400de47a07",
        "cursor": {
          "ref": "a126ea46-481f-4290-a36f-ee93b43443f3",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dadc4225-0e94-40a0-9e35-fbd8d20c5086"
        },
        "item": {
          "id": "1165eea8-5ab6-41d1-8998-4a400de47a07",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c9d106f7-6c4a-4a69-a748-27e2b42f0eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e45ea9-f7d8-4291-a846-725db5f7de24",
        "cursor": {
          "ref": "d06203d6-669b-49b1-9eec-d3a5ab2ba106",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "338c66d4-c464-4761-8bbc-3d57fe3d76a2"
        },
        "item": {
          "id": "49e45ea9-f7d8-4291-a846-725db5f7de24",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e4f96153-c361-4a54-ae33-4b6c4ab6c407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4865a213-b8ef-44b2-9c4d-3734626d7387",
        "cursor": {
          "ref": "65e2f318-b9af-484a-a418-fad2402f3fb2",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2aa217a2-e9a7-4dc7-8ada-ecd340cc2925"
        },
        "item": {
          "id": "4865a213-b8ef-44b2-9c4d-3734626d7387",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e3f7c4eb-07e0-443d-bb6d-aad383707991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb9c685-8aa9-4d02-87c1-f0414bc1cffd",
        "cursor": {
          "ref": "10e4ac15-6798-4f88-9a26-a8c9681b3517",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "197df970-e23f-4e94-a09e-3d500eba47df"
        },
        "item": {
          "id": "0fb9c685-8aa9-4d02-87c1-f0414bc1cffd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cfa2b8a2-0e65-4703-ba22-e34b4133ca45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06f250a-a206-4e63-9da0-6efd1263d76c",
        "cursor": {
          "ref": "2cbe5624-29d4-4068-b42c-e9da48050569",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "61fcb335-1a79-4446-b8ac-d6717191e54f"
        },
        "item": {
          "id": "d06f250a-a206-4e63-9da0-6efd1263d76c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2b4e05a2-a23f-41c1-a581-f38a2827b8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6422d2-b9cc-4701-9591-03acc14dc833",
        "cursor": {
          "ref": "43a26066-ce58-4c04-af3c-99ad5c323dc7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0a6e06f6-8aaf-42b1-801f-edc14067d2f9"
        },
        "item": {
          "id": "4a6422d2-b9cc-4701-9591-03acc14dc833",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "65b02840-4ad4-4f89-8152-de0b57fc29c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed60211-500e-49a7-88ff-c1665d57858e",
        "cursor": {
          "ref": "1632e3bb-def6-4901-a5c1-ab0d3bb85bf9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "04a26f67-98d8-4ed6-8192-a76f9977cfe4"
        },
        "item": {
          "id": "7ed60211-500e-49a7-88ff-c1665d57858e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2ae16b88-08af-4272-b926-29da60aa4621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e7bbfd-8267-41ea-b858-cbddb675709f",
        "cursor": {
          "ref": "297e0360-b283-45d3-b463-12223172f2dc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "db262523-b7f1-4be1-b78a-2f753cdd16b4"
        },
        "item": {
          "id": "16e7bbfd-8267-41ea-b858-cbddb675709f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ce175642-57d2-4e39-8bcc-daf72d2ffa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a567dae1-006c-4c6e-8a7d-cddff08db3f1",
        "cursor": {
          "ref": "b79dd1e7-c078-4a76-9834-15da20a4ebd1",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "43af9957-790e-428c-8271-fac567b694ae"
        },
        "item": {
          "id": "a567dae1-006c-4c6e-8a7d-cddff08db3f1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "06fa7312-24e6-4a98-adfc-43360f3c047f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcda6d5c-81ea-4e4e-8f5e-528fe6678a6b",
        "cursor": {
          "ref": "0b78faa0-b9c9-40cf-980f-afdf7a7b6018",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b0deaa32-9d2b-49a3-9fd2-e390f8ed18fa"
        },
        "item": {
          "id": "dcda6d5c-81ea-4e4e-8f5e-528fe6678a6b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6815911f-c979-4096-b428-34c4afb35782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2678f3e-d242-4bbb-a52a-c4604689d3af",
        "cursor": {
          "ref": "57457faa-e761-464d-bc82-9a2911ffab87",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "88ffdb32-4914-48d7-81b0-c5824ba33095"
        },
        "item": {
          "id": "f2678f3e-d242-4bbb-a52a-c4604689d3af",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f3a3a304-8532-4cd2-bee2-cecdfdf87530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c1f599-5953-49f4-ac52-2ddef9532449",
        "cursor": {
          "ref": "6528bee0-081d-4087-a8e2-257fcae0091a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "10369718-c016-4b91-ad9f-581d42781837"
        },
        "item": {
          "id": "52c1f599-5953-49f4-ac52-2ddef9532449",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "98f77cf2-c683-48cb-94bf-1d53b890532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae18562-e6de-4a70-b54e-3e195fe6906e",
        "cursor": {
          "ref": "ae442685-02ff-4748-b4fa-e0fe3960ac28",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b5e8059c-d294-404e-aad6-067759e66376"
        },
        "item": {
          "id": "0ae18562-e6de-4a70-b54e-3e195fe6906e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fe6730df-a2b1-4c85-813f-a6b30d2ef7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4819e281-ed07-4a57-a3a1-d0bd85facd3b",
        "cursor": {
          "ref": "d5c554a7-1f8d-401e-b931-290720927d25",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e283d2ee-5481-40f6-b0bd-0ea9b5175f75"
        },
        "item": {
          "id": "4819e281-ed07-4a57-a3a1-d0bd85facd3b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6b67c12-3dc1-42b2-b430-6c8920f4253d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521af1cb-9601-47a9-90ef-4996143d120a",
        "cursor": {
          "ref": "0f1f3608-0170-44fc-b854-d5037bdfd6ef",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0ecdcafc-22bd-4a7e-acf9-82cad5f8f71f"
        },
        "item": {
          "id": "521af1cb-9601-47a9-90ef-4996143d120a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bb160a8d-c4b9-4794-83c0-20273f4585d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90262673-f12f-4ebc-978b-f1830a4b5667",
        "cursor": {
          "ref": "d76f427b-878c-45fb-b438-2ff46c65c921",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4f0a0043-4d9f-4541-84c9-07d2bacf5418"
        },
        "item": {
          "id": "90262673-f12f-4ebc-978b-f1830a4b5667",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3c2daf17-1b1c-4f78-ab94-b46b59a74cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c1ed13-5b21-42d1-8e81-7a087f6b8fc2",
        "cursor": {
          "ref": "434d61a7-6cd4-40db-99d9-b74e4e2bc641",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "080f4f11-a2b8-455a-8eb8-dc43f88a4cf9"
        },
        "item": {
          "id": "87c1ed13-5b21-42d1-8e81-7a087f6b8fc2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a5ca6805-1b1b-4dc7-861b-56de7040807a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d76dc5c-00cd-4bff-8bf6-4c859dd5b2b6",
        "cursor": {
          "ref": "d4b4c5a3-505e-4f32-bb32-916e5697e1b5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d4d86002-96ac-41bd-aac8-e46b14c1e82e"
        },
        "item": {
          "id": "1d76dc5c-00cd-4bff-8bf6-4c859dd5b2b6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f31b75f-566b-44bd-b2d4-966ffdbadf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572fa5ef-9d80-4cef-8a96-358c203656d9",
        "cursor": {
          "ref": "7ba18a35-d76e-4dad-83aa-43e6013ac41e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2cb69614-af44-435e-9bfc-fe7db11c4ab6"
        },
        "item": {
          "id": "572fa5ef-9d80-4cef-8a96-358c203656d9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e49b19fb-b1cb-4bae-a738-8a68d3d3b14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c134ac5-1d97-4ce3-a2d7-950f07485b32",
        "cursor": {
          "ref": "89728a6e-0e5e-4b67-9eae-25e0403177c8",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "50796dfc-0196-4241-85be-12bd65c251a6"
        },
        "item": {
          "id": "1c134ac5-1d97-4ce3-a2d7-950f07485b32",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "88f1ad39-b83c-407b-bcd5-f285a4f649b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaa4dd1-bcbe-4467-ab2c-9c9e610e1a1f",
        "cursor": {
          "ref": "3abd6916-601d-4c07-b6dc-7c5ad3514ef2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1f5cf669-1248-4cab-86ec-cc7ac9d32acc"
        },
        "item": {
          "id": "4eaa4dd1-bcbe-4467-ab2c-9c9e610e1a1f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "95c48c7f-62d9-45e2-8532-ab7815f3c127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a32b86-329b-4f5f-b259-f00bbff21495",
        "cursor": {
          "ref": "3ef06587-4da2-4691-9b1b-bc7fe67e58d6",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9454fc14-244b-4aaf-aa6d-d2f2b274b8ee"
        },
        "item": {
          "id": "e6a32b86-329b-4f5f-b259-f00bbff21495",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5635bc83-7723-41d3-b161-f605c0a80e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a045c199-77cb-4c0e-bb63-f6ff1856c313",
        "cursor": {
          "ref": "acbe0c33-f237-472f-89bc-04c0bd3dc8bb",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f02f4f0e-3a3a-42fc-9e77-49cf6dfa0e02"
        },
        "item": {
          "id": "a045c199-77cb-4c0e-bb63-f6ff1856c313",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1314d291-4fbe-4c1e-89cc-84d6c999383d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2389509-24c1-4432-90ec-b853594aad37",
        "cursor": {
          "ref": "57d88531-908d-4037-9e87-1fceadfe19be",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e7444ae7-ce8b-47c8-82b2-e4ef72b8f9e1"
        },
        "item": {
          "id": "d2389509-24c1-4432-90ec-b853594aad37",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cd938c39-617e-453d-8fb7-74e7a828f270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39ea3ae-45e4-4be6-ac1c-297844906fea",
        "cursor": {
          "ref": "311087a8-bac2-4e97-b7c3-d323fa9604fb",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "89ea8f6e-e894-4e3d-a119-57b1360f694f"
        },
        "item": {
          "id": "d39ea3ae-45e4-4be6-ac1c-297844906fea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ac5277f4-5169-476f-bbf5-8b564dcd4409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a00451-354e-43fd-aa6e-db4dc83c9973",
        "cursor": {
          "ref": "90f2a7c7-4368-41b7-a296-6dbdb4054266",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cc4f588d-bd78-48da-8511-68e95efba3fc"
        },
        "item": {
          "id": "e6a00451-354e-43fd-aa6e-db4dc83c9973",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3a43cd60-5bff-4cc4-8850-9dc56c9229e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1418a147-7286-4ff6-abdd-2f8bd69a94cf",
        "cursor": {
          "ref": "eaebdc8c-b65b-47e6-828b-7a9a67a0b193",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "364f65ad-f865-4a93-8302-5019ea06f4ac"
        },
        "item": {
          "id": "1418a147-7286-4ff6-abdd-2f8bd69a94cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c3c27f89-745e-4319-a6ea-73c52cc3f599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c5086b-eee6-4a85-b500-355b78495e2a",
        "cursor": {
          "ref": "046a4665-297f-4b45-a7b9-f7cda52413fa",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5f3d2867-884c-4e40-91cd-fcb7daa97dd1"
        },
        "item": {
          "id": "17c5086b-eee6-4a85-b500-355b78495e2a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6d2d8bc9-52e3-4857-9dce-80144ae36b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e91f17-dbb9-48a3-b919-e1b1536cac6b",
        "cursor": {
          "ref": "d79dfdc2-9f3c-49ea-851f-c4fb15f46fa3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "987f84e7-6ecc-423e-bd72-70139237d921"
        },
        "item": {
          "id": "57e91f17-dbb9-48a3-b919-e1b1536cac6b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f3992203-bd27-4c85-b385-6c76b507565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854a21ed-29ac-4b8a-875f-cb31af36ac21",
        "cursor": {
          "ref": "4258b473-e34e-4f8b-9f2e-21378518cd53",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1c1191ca-e060-4db2-a756-d0458ead538a"
        },
        "item": {
          "id": "854a21ed-29ac-4b8a-875f-cb31af36ac21",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9f940feb-db02-40d2-a6f3-da1d3e23d2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ed3864-ee80-4e7e-873c-f2d679e080d3",
        "cursor": {
          "ref": "d237cba2-25e6-4df2-b5d0-d526231c401b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f4dd20e2-fdb1-422b-9673-7f95984b202c"
        },
        "item": {
          "id": "49ed3864-ee80-4e7e-873c-f2d679e080d3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6caec236-c4c9-4799-b388-e43b97164861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa852f97-5364-471c-8163-1837512b9001",
        "cursor": {
          "ref": "3089a71f-90b0-4f19-b4d0-2addcd0aa0f2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4b676bdb-9d9c-4c21-ae30-0254130d9c2c"
        },
        "item": {
          "id": "aa852f97-5364-471c-8163-1837512b9001",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d48cd30b-3d6d-41a3-9c2f-f53212638259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1736c45c-0c6f-4669-bac9-4e2c04754a99",
        "cursor": {
          "ref": "e20f0da1-c241-4793-a4ce-f04ff76ebd06",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9430dc98-7812-41b6-8188-21dabc5fdd81"
        },
        "item": {
          "id": "1736c45c-0c6f-4669-bac9-4e2c04754a99",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "86f565e0-1103-432c-b329-6619d8ee9835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00afc41e-8a58-4f09-8092-483093ce1a32",
        "cursor": {
          "ref": "2dcbc688-9c04-4ee0-ae24-f6152bf3fe8c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "93282b83-77b4-4de7-aae8-7e5e277908e4"
        },
        "item": {
          "id": "00afc41e-8a58-4f09-8092-483093ce1a32",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cfdf848a-9703-4c15-90be-a1318e3d0e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370a2e24-6141-4235-8f64-99da843b9dab",
        "cursor": {
          "ref": "b03b2174-e2ac-4329-aace-b8dea89b5cbc",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d6b8dcef-7973-4094-a406-fe468710c441"
        },
        "item": {
          "id": "370a2e24-6141-4235-8f64-99da843b9dab",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2b6e3d17-d305-4019-bc84-1f83ee9373e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9d8316-7828-41b0-a977-3165ba58a405",
        "cursor": {
          "ref": "5c76213b-662a-4830-90ed-326dca872d00",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d03af383-ce09-4749-a6fa-33ad72278872"
        },
        "item": {
          "id": "8c9d8316-7828-41b0-a977-3165ba58a405",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eaaf6940-63f3-46ce-b656-6e5259209b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6370778-7563-4057-b76b-34a31856bcda",
        "cursor": {
          "ref": "b46d757d-8358-4d9c-9dd5-bb96a25fe2ba",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d83fd22f-60b4-45a4-a42e-8bef4c5c5834"
        },
        "item": {
          "id": "e6370778-7563-4057-b76b-34a31856bcda",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a9d420a6-69a9-4375-b987-0db067eaecaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cb8164-4161-434a-bdb2-2c6b5578bff3",
        "cursor": {
          "ref": "61f5b6bf-f508-4e9a-a279-0b4f7268e9ad",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "29f5fcb0-3bcc-4827-aed1-046486b706b3"
        },
        "item": {
          "id": "27cb8164-4161-434a-bdb2-2c6b5578bff3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "be028ad4-b5d0-4730-a346-44aa6a6aed1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ae427b-a633-4d77-83d9-b00a75eb53dd",
        "cursor": {
          "ref": "b618ed7f-5b21-4dbf-8b69-34651d645767",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1fc5ca35-b61f-4db7-a5fe-5aa803334b5d"
        },
        "item": {
          "id": "37ae427b-a633-4d77-83d9-b00a75eb53dd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "99e6f107-4457-4172-91f5-c3d03f85ab12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d269906b-1f49-440e-ab6a-95401197b9eb",
        "cursor": {
          "ref": "15a9ae30-1e0f-4b69-b8b7-7d080260514f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "47da0749-ae58-4192-948a-acba0a2554c1"
        },
        "item": {
          "id": "d269906b-1f49-440e-ab6a-95401197b9eb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6ec6f0c3-5619-4650-a99b-f2022cb0e260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75747abb-2735-4350-8458-b2e8507a1e4b",
        "cursor": {
          "ref": "8e2cdc1c-87b9-49b5-a418-f043a68db12f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0e724fbc-0ece-43c8-a5d7-a1c68811d389"
        },
        "item": {
          "id": "75747abb-2735-4350-8458-b2e8507a1e4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "45f26229-68e3-4057-a08a-6a94b2f90721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a00ad6-f56b-4374-917e-d8a87300ffa4",
        "cursor": {
          "ref": "d442a326-8ae2-4897-83f7-4cd6ebcbc663",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2883b266-ccb1-4022-ada7-e8049222ab43"
        },
        "item": {
          "id": "73a00ad6-f56b-4374-917e-d8a87300ffa4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "69297663-072f-4e07-95ac-8327e68fbd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65d990a-6c59-4e1c-b4ba-43aa6a2ad5db",
        "cursor": {
          "ref": "7b794653-cc57-49be-824d-ad483d81581b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "13811e37-6ce6-402b-8c97-2c01b60d503d"
        },
        "item": {
          "id": "d65d990a-6c59-4e1c-b4ba-43aa6a2ad5db",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "434b66d4-d7df-450b-ae38-7758583af3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d70947-23c1-460c-a492-2d55c42db2d4",
        "cursor": {
          "ref": "def392a1-9029-49e4-84ce-77c26984ed70",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "762e3da1-7679-4cb1-b68e-1fda4d8a4253"
        },
        "item": {
          "id": "51d70947-23c1-460c-a492-2d55c42db2d4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "aa2edcd8-cf6c-4aa2-9c5c-2c030e19c2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d62af13-e89a-4d35-8541-958fb3e72b91",
        "cursor": {
          "ref": "095281ff-6fcd-431a-b9eb-6aeda0fa9a5f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b158ec25-7481-406d-ae8e-364d50734ed3"
        },
        "item": {
          "id": "7d62af13-e89a-4d35-8541-958fb3e72b91",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8f9fa148-07ce-4ece-a273-658e63a19b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52d6a5a-c483-4f1b-93db-afbff532685d",
        "cursor": {
          "ref": "6fdf72bd-63f5-49d1-8e3d-ee529fed12f5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6a69fa7a-04eb-4968-97b2-753a8d60dbd4"
        },
        "item": {
          "id": "e52d6a5a-c483-4f1b-93db-afbff532685d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c665e9e0-5bd3-4685-8319-e282e326430c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820c77cc-1a11-4b99-ae63-a092641703c8",
        "cursor": {
          "ref": "490dc348-67b3-4722-9bae-453acea5a92e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c8f5e743-bb0a-4213-ae54-59e310a176a0"
        },
        "item": {
          "id": "820c77cc-1a11-4b99-ae63-a092641703c8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c2ef9648-5881-4681-ab0f-f2b1b6448d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409bfcf4-ac45-4c6d-be3f-a8a288a758a2",
        "cursor": {
          "ref": "a4071e9d-5ac4-4ec2-ac6a-8ee1010b8aff",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "87f6df94-30a5-4a9f-98b9-a65ae1a57378"
        },
        "item": {
          "id": "409bfcf4-ac45-4c6d-be3f-a8a288a758a2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0f4b4046-3adc-4bd7-87fb-8f5a81f850e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cedae2c-32a0-453e-82c4-a5a625eae2ce",
        "cursor": {
          "ref": "d054473a-207a-4ccb-bda8-0856a90023f1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2c597952-6283-40ba-b595-cb4a9ab4a9d1"
        },
        "item": {
          "id": "2cedae2c-32a0-453e-82c4-a5a625eae2ce",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0d4d8cd6-3dec-42e2-8cd6-03d0a81b2047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325b3375-0f8e-4c5a-8bac-173466e5559b",
        "cursor": {
          "ref": "d6974da1-dc9c-4dfb-8a2d-b075e0feb401",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cdfc2ec3-026d-443b-9602-2b80aad65ac5"
        },
        "item": {
          "id": "325b3375-0f8e-4c5a-8bac-173466e5559b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "93654bed-4f85-43c6-886c-f69b921d2fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385ff557-9011-43ad-a4eb-78aa24c24b9f",
        "cursor": {
          "ref": "043c308e-42b2-4494-84bb-a5bf0fa06979",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8fbf49b1-483f-4ce4-b130-1099c3f149e0"
        },
        "item": {
          "id": "385ff557-9011-43ad-a4eb-78aa24c24b9f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2e0a7006-15dd-4ea2-a309-e9ff296fbaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac946033-4f95-43aa-aa0a-e6aee7cdcd02",
        "cursor": {
          "ref": "344d0c7c-5684-478b-8da3-66f6682a1fd4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e8d18884-b384-4af9-99d2-64737321166a"
        },
        "item": {
          "id": "ac946033-4f95-43aa-aa0a-e6aee7cdcd02",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f17bd93c-b504-46e7-b6b0-aba1f431bed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d83e2a-ff2f-4396-b533-7708ce584d32",
        "cursor": {
          "ref": "04549394-15f2-4c67-ac56-5613346ebbe4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bfb6e082-ff26-4b48-bf2f-5098ac68dd82"
        },
        "item": {
          "id": "71d83e2a-ff2f-4396-b533-7708ce584d32",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d44eb2b9-b00b-4176-a65c-5196bd06dec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7f9c91-f09c-4704-937f-149d39511fda",
        "cursor": {
          "ref": "fa4ebe12-0007-4f57-85b6-c04ae9e00d12",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5dbec0cf-2560-4a09-aaa5-ebc1a601fc29"
        },
        "item": {
          "id": "fe7f9c91-f09c-4704-937f-149d39511fda",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0aa821ad-4c09-46c3-8670-0a77d53222c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5decc3-adbd-44e6-b6ca-382a8adbf17e",
        "cursor": {
          "ref": "2fb33f8e-c95f-4050-bd86-30bb07b7ddba",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "280ded41-493a-46b1-a0ec-298206b970b6"
        },
        "item": {
          "id": "7e5decc3-adbd-44e6-b6ca-382a8adbf17e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ea78901b-87f7-40c8-b978-af04cbd51074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04308352-d73c-4078-b88b-da311a3dc266",
        "cursor": {
          "ref": "e4f7145f-d6d4-4e83-96a9-191cffe36bd0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0f8e0eec-0fce-4fbb-a034-dcb35c9160fc"
        },
        "item": {
          "id": "04308352-d73c-4078-b88b-da311a3dc266",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "553916d5-fd09-4a0c-ad2e-2f9330ebb72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29db7909-6b6c-46a1-b2ad-62cfad0ecdd4",
        "cursor": {
          "ref": "d2933b09-3f92-43b1-86d3-49a4a53ee0ad",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "65a34419-52f3-4e13-bcc8-704913d1ca3f"
        },
        "item": {
          "id": "29db7909-6b6c-46a1-b2ad-62cfad0ecdd4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6ff59e6f-3e9d-4bde-b683-ca1bde885a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db895ea-171b-4990-b2b4-08aaf2bdb68e",
        "cursor": {
          "ref": "25c39b7e-1349-461b-a10e-d84382b01f91",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "375dd21e-ceef-47ad-b8bd-625e265cfe1f"
        },
        "item": {
          "id": "1db895ea-171b-4990-b2b4-08aaf2bdb68e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d082f59c-f682-4745-95a5-45d82f57206d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc579f6-e2df-4318-97e4-7f4d0f50c45b",
        "cursor": {
          "ref": "e3e81f7c-4dc3-41b0-8757-53cc80d62d9f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "89824f37-1a30-46ff-a7ce-72d9fcbb49dd"
        },
        "item": {
          "id": "ddc579f6-e2df-4318-97e4-7f4d0f50c45b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7c36213a-db6a-4253-906c-7f345919631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f2f0b0-6918-45fd-a7de-228017318e38",
        "cursor": {
          "ref": "dc63f8de-07b5-4f9d-afa7-3fd7c998fdea",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f815ba18-287d-462b-a3c9-0c8843293b5a"
        },
        "item": {
          "id": "99f2f0b0-6918-45fd-a7de-228017318e38",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8dc004b5-fc3d-41a6-b0ac-c07edf9d11cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2fb1f4-a3ea-4144-bcbe-50d5801be35d",
        "cursor": {
          "ref": "20db314e-9c42-41b4-827e-fa68b7769cff",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b98ac46d-aa87-4517-8eb5-2ff03835963a"
        },
        "item": {
          "id": "ed2fb1f4-a3ea-4144-bcbe-50d5801be35d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cfa637d2-0af3-4a97-a334-c8fe5ce28da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7520182-dd4c-419d-8e75-cf8dd4afeea2",
        "cursor": {
          "ref": "3cb3a8e3-3894-420b-b42e-09194eb9ea74",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4382c456-e45f-4dce-a05e-8e2d6ce63cd4"
        },
        "item": {
          "id": "f7520182-dd4c-419d-8e75-cf8dd4afeea2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ee9889d3-c84e-4d45-b19d-ff0a7c307770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842a957e-af00-4726-9423-907cf4950684",
        "cursor": {
          "ref": "75188ebb-b9ea-48f3-8cfb-0820195a4915",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6c01df17-d834-4cee-93db-06ffa884d44b"
        },
        "item": {
          "id": "842a957e-af00-4726-9423-907cf4950684",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f2cc31e5-aa7b-4c81-b05d-7cf6f5ba7b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197ab7cb-92a2-4e51-a387-e22a6dafb456",
        "cursor": {
          "ref": "b47d90e4-c7f0-407e-9fe4-8cf09ef69aa7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5c9f1254-352f-447d-92f5-542a9af5d8fa"
        },
        "item": {
          "id": "197ab7cb-92a2-4e51-a387-e22a6dafb456",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "24ba9cab-fbac-4411-8d40-56478b4ebb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e0e223-2ede-4c83-9e09-811960bcf3aa",
        "cursor": {
          "ref": "997f5abc-485b-4c57-99dd-f9ff8572c496",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "78931d43-de94-4d62-8eb6-19e98d678a6c"
        },
        "item": {
          "id": "80e0e223-2ede-4c83-9e09-811960bcf3aa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "811e2e59-e41d-4b54-8671-2479552976b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7606bab6-a3c9-410f-845a-c5b001f080ff",
        "cursor": {
          "ref": "43180097-8db3-4f8e-83b7-445d7c85332e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12662cb0-5786-40aa-bad3-cf9da3492cfc"
        },
        "item": {
          "id": "7606bab6-a3c9-410f-845a-c5b001f080ff",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "50b1e73d-f2d4-45f5-abcd-17a4207be39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dc9ebf-88a6-44b4-a5f6-a6b9b8dd47e5",
        "cursor": {
          "ref": "60dab950-5495-4796-a8d2-cf72d408380f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ed1e1500-8e53-4e15-a6a0-31dfaee371b2"
        },
        "item": {
          "id": "78dc9ebf-88a6-44b4-a5f6-a6b9b8dd47e5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3416a82d-9418-47a0-b773-33625df46969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18285811-45d4-42c0-8b9c-7d7a78610063",
        "cursor": {
          "ref": "9f9bd14a-2b7f-4e8e-9787-2cca1ce88005",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "44e6349b-0b7b-4bf5-a8c0-83350d4c5ec3"
        },
        "item": {
          "id": "18285811-45d4-42c0-8b9c-7d7a78610063",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5ed7ce9b-5da0-4461-834a-53e41b78fb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328a7736-c719-4156-b09a-c06f528e2742",
        "cursor": {
          "ref": "15372191-b8c6-4c89-815e-330a8f1fb878",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "36efb614-e457-40ee-8dd0-8dc4948b12e4"
        },
        "item": {
          "id": "328a7736-c719-4156-b09a-c06f528e2742",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "748b836d-2feb-4a48-b50e-193b45f07e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2e32b9-e10a-413b-9e0e-e66d8b2a06d9",
        "cursor": {
          "ref": "b965a46a-1cbf-4489-83b1-1813561e15ad",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6b628e0b-28b6-4923-8074-56ed12dacb0f"
        },
        "item": {
          "id": "7d2e32b9-e10a-413b-9e0e-e66d8b2a06d9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "680e1ebd-e6af-4c80-a374-83c78be5b969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3af1c1-af19-4555-ac85-cff3b1245f55",
        "cursor": {
          "ref": "84adf7bf-b9d1-4d64-829b-916f4ab42480",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7df3b28e-83b2-420b-9dbe-783a664b1f8c"
        },
        "item": {
          "id": "ca3af1c1-af19-4555-ac85-cff3b1245f55",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6dce7111-6d83-496d-b841-03a0faf22c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30e760c-1d4b-4ac6-823e-3632990ccbb7",
        "cursor": {
          "ref": "f194b16a-f3ab-435d-9279-14dec8e67338",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ae125f6d-a2a1-4074-918c-4c407aae949d"
        },
        "item": {
          "id": "b30e760c-1d4b-4ac6-823e-3632990ccbb7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b5864599-7034-4648-87b6-1da1af35c581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70aa7ce-40ed-4bda-9d92-5fa9bc8b792e",
        "cursor": {
          "ref": "7941941d-a494-432c-ad32-05c39dc1057c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f560e603-31aa-4eef-bf96-9829ec9ee4fe"
        },
        "item": {
          "id": "b70aa7ce-40ed-4bda-9d92-5fa9bc8b792e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5eb6333a-1b6f-4ba8-bdcc-0af5b84bfddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39ca74e-2f8a-4770-8130-10862737749b",
        "cursor": {
          "ref": "41fcc2e3-0de9-4f08-84d4-6d9404ede41e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "65cb9eee-6553-4479-8e4a-55c0850f738c"
        },
        "item": {
          "id": "d39ca74e-2f8a-4770-8130-10862737749b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1b3e0572-339d-4b12-90bd-79ff6e8c025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa8a2b4-180c-4ddf-b3c4-c6ebdd66ef7a",
        "cursor": {
          "ref": "0b7c179d-d854-4ae3-a0c7-643e04734377",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "153a7fc4-c24b-4f15-a5e4-21425959d5b1"
        },
        "item": {
          "id": "5aa8a2b4-180c-4ddf-b3c4-c6ebdd66ef7a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4de70a11-300e-4021-9f53-e9d470535023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef91a4c3-ee74-4b03-8d93-28a4a2669ba3",
        "cursor": {
          "ref": "0c668f56-c684-4d6f-8739-259adde96880",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d428f6b5-5747-4a59-bf52-ac402068c617"
        },
        "item": {
          "id": "ef91a4c3-ee74-4b03-8d93-28a4a2669ba3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e1dd200c-286a-449a-ac70-52f7df6a6ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe31b034-693c-46e2-8e11-97753da25bbd",
        "cursor": {
          "ref": "76447754-3658-4121-bde5-0cff939cdadb",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c924757f-d9d1-488c-8dac-61093a26afb2"
        },
        "item": {
          "id": "fe31b034-693c-46e2-8e11-97753da25bbd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "52a9df7a-7604-4bbd-9b1c-42cc9314c6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38174623-4e2f-4975-9388-e85a06d780a6",
        "cursor": {
          "ref": "86208a7f-9afc-4c99-ae58-4568a9bc92ca",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8389b742-f890-4993-9116-79ef16024684"
        },
        "item": {
          "id": "38174623-4e2f-4975-9388-e85a06d780a6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "59ec1283-a7fe-4033-9b82-f924d5e0e223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d794b16-a438-4758-a3e5-4615fc8a0fa7",
        "cursor": {
          "ref": "c229166a-1864-4e5c-a840-16705275f5b3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8007a3f0-f345-42e1-8dd6-863ae366b38c"
        },
        "item": {
          "id": "3d794b16-a438-4758-a3e5-4615fc8a0fa7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2352d9a2-81a0-497d-97f7-e6a47acfbd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cc3403-0608-4f09-8ce7-40d39ff13f87",
        "cursor": {
          "ref": "3fc661aa-a827-4293-b6e6-773b4fa08a77",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "edd031bf-3db9-480a-80a0-abb9bc65bb62"
        },
        "item": {
          "id": "33cc3403-0608-4f09-8ce7-40d39ff13f87",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f016c9a0-7710-4db0-b1d5-12e416716e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521adb42-5a93-4d00-9932-06ce5d53f5dc",
        "cursor": {
          "ref": "cb232a53-124c-463b-b721-503dfec11927",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "200ba3ac-70a0-4cd2-89c5-fad97e14b652"
        },
        "item": {
          "id": "521adb42-5a93-4d00-9932-06ce5d53f5dc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1a07c9b3-ea49-4cb0-9130-523128f84ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a071b36b-8cae-40a5-ae36-c76e9ec91a1f",
        "cursor": {
          "ref": "78621178-989e-4c72-bf09-63cb1b3608d8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "252dc3d7-35ab-4c34-ac3a-243cccb196b0"
        },
        "item": {
          "id": "a071b36b-8cae-40a5-ae36-c76e9ec91a1f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "97ce2a52-5416-4ab2-a183-5cfab5a633d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b892f897-45c7-4e73-9f9d-3929c7541b67",
        "cursor": {
          "ref": "f826f572-895f-445f-8f2c-8258866d768b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6662dc3f-b420-487a-95ae-914ff85eb0cf"
        },
        "item": {
          "id": "b892f897-45c7-4e73-9f9d-3929c7541b67",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b989384d-c799-4c7d-b6b4-2e08556fcc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e92608-67db-403d-bb7c-2b5a787a73f0",
        "cursor": {
          "ref": "f4f01722-53e4-4d58-a35e-fb39c5e76963",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "69d24261-14b1-4464-a389-609215f7ef5b"
        },
        "item": {
          "id": "30e92608-67db-403d-bb7c-2b5a787a73f0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a2f41cac-63e1-4278-9872-0c4466dc3140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ea7893-4911-4a57-928b-a0d1e0a8e21d",
        "cursor": {
          "ref": "7abf1d30-8e8d-4e2b-aa4b-73ced242714a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f110fce7-1dd7-450d-84d7-6f8e9b6c9134"
        },
        "item": {
          "id": "22ea7893-4911-4a57-928b-a0d1e0a8e21d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "061519fb-9211-4434-88db-9cd7d4379e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154ab69b-2265-4589-a0d5-1ddc5a466b88",
        "cursor": {
          "ref": "f40f3984-e83b-4810-9cb7-1239bd9f19f8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "45e6b1bb-d23d-48c3-b82e-e392638800d8"
        },
        "item": {
          "id": "154ab69b-2265-4589-a0d5-1ddc5a466b88",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "90aaef9d-c32a-4176-b764-d25d5fcdbf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62996225-ddcf-42bb-be46-6236e86a6230",
        "cursor": {
          "ref": "ab1507f4-6f3b-410d-a587-6f9bd15a26a4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "63210732-d92a-4cbd-975a-b4b52b0867f8"
        },
        "item": {
          "id": "62996225-ddcf-42bb-be46-6236e86a6230",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2a6db537-fe1d-4c4c-a966-d6fe9e150ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff5f930-8f64-4943-9c7e-4918fd086c7c",
        "cursor": {
          "ref": "6e9ab9c2-e740-497a-aae8-782f4661b000",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "599bf505-8ed9-4847-828c-4f5330cffe50"
        },
        "item": {
          "id": "1ff5f930-8f64-4943-9c7e-4918fd086c7c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f1f22955-3767-488d-9d91-a044c7c98890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c84992-0739-435c-97c7-69e3ebc11a3e",
        "cursor": {
          "ref": "749bd0cb-bd3c-4b27-a9aa-6356c422e47c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "31c9bdc9-9a6f-4cf7-addb-5c3f09b78c2b"
        },
        "item": {
          "id": "95c84992-0739-435c-97c7-69e3ebc11a3e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4dbed2de-2576-4c6c-9bbb-178fe0487d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f398046-cda5-4346-baf2-d467a4b4b259",
        "cursor": {
          "ref": "7172944d-e0b3-4652-8213-8ec28e67310e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ad422f22-5103-4220-a97d-5e7791d5e8c9"
        },
        "item": {
          "id": "2f398046-cda5-4346-baf2-d467a4b4b259",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "16cb041c-b681-4781-bcd6-4b7979601b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc9e885-a43f-483b-a62b-805866a66e78",
        "cursor": {
          "ref": "5e396063-80c5-41b6-bade-030a7aa36da8",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1b497903-9de4-4b98-9efe-ca87a65fa1dd"
        },
        "item": {
          "id": "4fc9e885-a43f-483b-a62b-805866a66e78",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9b862cf2-ee28-43ed-9643-de2c75e7d837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682d501e-ae3c-41e0-bd18-747a07d7b627",
        "cursor": {
          "ref": "b6ebcc91-af1f-4a84-9f8f-964cb219a395",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cebb0e6a-ce9f-4296-91b9-20387a46ebf2"
        },
        "item": {
          "id": "682d501e-ae3c-41e0-bd18-747a07d7b627",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d17f6834-48a4-41f2-8b15-33d14a3e12fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df3fd58-ef69-4935-8320-4d4a9d4a8581",
        "cursor": {
          "ref": "d224f680-40da-4742-b218-b3d972b4b7f7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e9ccbeda-e062-40d1-8d60-98bf9e8b2504"
        },
        "item": {
          "id": "2df3fd58-ef69-4935-8320-4d4a9d4a8581",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "963c8bf7-0eaa-44b4-afb5-4ed63d83ad67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4943a289-713f-4768-8f8c-f4058e015190",
        "cursor": {
          "ref": "2bd1f3e3-6dbe-44ac-b0d6-12ae70864aad",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a8dfb270-54ab-4646-879a-115f8f638fb2"
        },
        "item": {
          "id": "4943a289-713f-4768-8f8c-f4058e015190",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9d456189-8df9-4f08-9984-73a455c76e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cb1099-c0cd-40e6-8f60-4999f28edbb4",
        "cursor": {
          "ref": "fdd21eba-cbc0-4ce3-889d-34bf6b2bfff7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d542c457-18f6-48bd-98f3-ae121f7f6277"
        },
        "item": {
          "id": "97cb1099-c0cd-40e6-8f60-4999f28edbb4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d092cd06-6d58-4d2e-bd25-03d15f015120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58324f58-cb64-49a5-9787-f6b478f04039",
        "cursor": {
          "ref": "9f4b203f-4128-4d4e-b84e-5d0233479dd9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "72cbc1da-7210-4486-9026-56d19b93e89f"
        },
        "item": {
          "id": "58324f58-cb64-49a5-9787-f6b478f04039",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "19d9ae20-abc7-4493-a37a-96a5e3c68a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d32e932-8370-4fb5-b826-8473ea775d3a",
        "cursor": {
          "ref": "aa98a35a-d69f-4b98-acd6-e7420d0c4e5c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "123e7cd6-70d9-48d1-9acd-cef421231c7f"
        },
        "item": {
          "id": "3d32e932-8370-4fb5-b826-8473ea775d3a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ea9b299c-b464-44b4-8354-194654c34263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748bedae-a874-48ca-b3cc-217d6de7ff1c",
        "cursor": {
          "ref": "96b5b573-b83c-48a0-a840-0f76e8cd7910",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c0669555-dc4b-425f-928b-60146cba1c8c"
        },
        "item": {
          "id": "748bedae-a874-48ca-b3cc-217d6de7ff1c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fe5b6677-4fa7-463e-9358-2a856a38665e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76105d8-978b-4edb-a6a9-532a1937e18e",
        "cursor": {
          "ref": "b3d6c9ec-c64c-4508-b2de-dacc46828194",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e627e279-1bb2-4c29-89c6-f1d7c2373944"
        },
        "item": {
          "id": "d76105d8-978b-4edb-a6a9-532a1937e18e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "348a2d50-5867-47e3-a733-b2394dd1693b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439d97dc-fe69-43df-abaf-fa21cb5895ee",
        "cursor": {
          "ref": "6e1a77e2-9fa9-4b98-9337-48c48a767235",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f7fd0a29-6f5d-4f8a-abdc-c13fc5b9769b"
        },
        "item": {
          "id": "439d97dc-fe69-43df-abaf-fa21cb5895ee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b4e1cb72-5e8f-4823-a616-9e9b6baf2b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff660f0-461d-4a4f-a2c7-3c6d5b884e2d",
        "cursor": {
          "ref": "7b61541f-a98c-4072-98f8-88966cc82d19",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3deaabfa-e744-4509-867e-9baada88954e"
        },
        "item": {
          "id": "0ff660f0-461d-4a4f-a2c7-3c6d5b884e2d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "08b31dfa-ae53-48c8-a3cc-1fe48b70a19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c147964-6a27-4ab0-8619-78d994ef8f45",
        "cursor": {
          "ref": "903d591c-6fb0-42e4-9439-66be0844e1b8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "15ebae3c-080b-431c-83a9-e9f6b286042c"
        },
        "item": {
          "id": "8c147964-6a27-4ab0-8619-78d994ef8f45",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "aa1e1b3f-a136-40f2-aae2-b8d420e284b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0abc38-b0ab-4148-a602-7e73afcf3aeb",
        "cursor": {
          "ref": "13979122-2e68-421c-8e62-efaa4876be0a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "75dc261e-abbf-4c68-8243-c1e67a02659f"
        },
        "item": {
          "id": "fc0abc38-b0ab-4148-a602-7e73afcf3aeb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "64a02668-7304-4f2a-829e-64ef45a30121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d823dc3-8b55-45c6-bfb4-5e1c447252b1",
        "cursor": {
          "ref": "a38ba82c-dd32-4c35-938d-c026623cb7c9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2e15b8b0-645f-48fb-8009-49779eb06a94"
        },
        "item": {
          "id": "3d823dc3-8b55-45c6-bfb4-5e1c447252b1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6cc50b2f-e988-447e-9074-a9ead193eeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06457057-fa05-458d-9756-2d347e2331cf",
        "cursor": {
          "ref": "920804df-f004-4cfa-938a-8d43c78159b0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c610ded0-dddb-45a4-a4ec-b7e70879472c"
        },
        "item": {
          "id": "06457057-fa05-458d-9756-2d347e2331cf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b5563456-7032-4ca5-9189-d118d67a9677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1833d3-8237-44e4-8a9c-5baa72ee0b60",
        "cursor": {
          "ref": "30279597-55c3-45c0-b03d-0b11527e2e91",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "035c845c-1822-4e1b-85b6-196a0955d2fe"
        },
        "item": {
          "id": "0c1833d3-8237-44e4-8a9c-5baa72ee0b60",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fb539927-d1f5-4695-9916-25723f4c3ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b02e715-cb6d-4033-84c1-e2d357732a11",
        "cursor": {
          "ref": "6df1f7ef-1da1-48ce-9b4e-e119f15c84e4",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ffe69400-ce04-4281-b465-6d9ebd84970e"
        },
        "item": {
          "id": "9b02e715-cb6d-4033-84c1-e2d357732a11",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c4452e4b-ded2-4f16-9f37-659ce96cee2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d3faf7-c6e3-48c8-8871-6cc103ce4d0e",
        "cursor": {
          "ref": "d5cb5ad2-395d-45f0-981f-626803debdc1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b115d121-64de-4383-9e0f-0a5a43a88474"
        },
        "item": {
          "id": "21d3faf7-c6e3-48c8-8871-6cc103ce4d0e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a6fdf752-ba38-444c-85a3-bf94abfc4de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff33f2c-b9d3-4019-9b89-74eff62db408",
        "cursor": {
          "ref": "ba6322ae-b61e-4b7a-a345-762c01f60dcf",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "71ce075b-517d-411c-9438-adcf5d5478c6"
        },
        "item": {
          "id": "5ff33f2c-b9d3-4019-9b89-74eff62db408",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c0e18bae-9828-4382-80d5-11685711edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8407a575-2d17-4645-baa3-381cf2ffc858",
        "cursor": {
          "ref": "9ab37760-327d-4a1f-b660-1592284edbeb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1ab10639-b877-4550-a5ac-69c567b5e62b"
        },
        "item": {
          "id": "8407a575-2d17-4645-baa3-381cf2ffc858",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "794aea71-e997-41b4-971e-f2b98fabab74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf907ac-a169-4cc3-aeaf-cb807d62b08a",
        "cursor": {
          "ref": "39d40b13-4c7f-45d8-b343-bd164cb4cd23",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a1d28bcf-a5d2-4f0c-bbba-f42ba39f85be"
        },
        "item": {
          "id": "cdf907ac-a169-4cc3-aeaf-cb807d62b08a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "464ad451-e1cb-4504-bbf7-fcdc786c3a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc963df-fe12-406d-b35f-0911ac8f81b9",
        "cursor": {
          "ref": "c0e786fb-0867-45e7-9d05-a5ce702fbf86",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "256c87ae-696b-4419-ae2e-c538ebd8c93b"
        },
        "item": {
          "id": "6cc963df-fe12-406d-b35f-0911ac8f81b9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c4572cca-3738-4165-aa86-6dcfd4eff3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a42362-9e66-4480-986a-3eb4c0012894",
        "cursor": {
          "ref": "338ae615-2555-4fc3-ada6-26329fd66ecd",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2853c034-e217-463f-90c9-c70f2c153bb3"
        },
        "item": {
          "id": "14a42362-9e66-4480-986a-3eb4c0012894",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "be3ac8de-ce25-47b4-b709-db6836c0f7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8552b7-e83d-491b-a9a3-1be569e4a253",
        "cursor": {
          "ref": "fdb1dff6-6b67-45d0-b896-2d088b8ea88a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fc2754ba-6393-487b-847f-b54f8e549ef5"
        },
        "item": {
          "id": "7d8552b7-e83d-491b-a9a3-1be569e4a253",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "279bc589-2b62-44a8-9340-404e81ac288b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eaa8b5-fa29-4119-a641-e1b3ea0167ee",
        "cursor": {
          "ref": "a13cb806-49aa-43a2-8a97-e568fb1bb9a0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "de7f7277-1146-4f18-aad2-4f00e9b745a0"
        },
        "item": {
          "id": "a4eaa8b5-fa29-4119-a641-e1b3ea0167ee",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c32885a0-9ac1-4cf5-9567-7c8a6d25681c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2702a7d-6b81-4f82-aad5-b98720cf9e4e",
        "cursor": {
          "ref": "019b4d9e-08d3-4bc5-af65-1bc377ec5b9d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a817ccf8-460c-427e-8c21-df06489102fb"
        },
        "item": {
          "id": "b2702a7d-6b81-4f82-aad5-b98720cf9e4e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "30c60d8a-82b3-4597-b45a-0d5391285c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682702f0-d0c8-4e9c-9f27-72692e4ab4eb",
        "cursor": {
          "ref": "ef83e489-7aad-446e-ac19-f3ba83689c81",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b1057cfb-5072-4d5b-a9bc-1b8e1fd83729"
        },
        "item": {
          "id": "682702f0-d0c8-4e9c-9f27-72692e4ab4eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cbed12ea-7c20-47b5-bbe9-ec911ab46339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882cda92-c872-443c-ba82-b535df67fa05",
        "cursor": {
          "ref": "3c5be0ed-5db8-4f76-a2bf-a833b5ea3017",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8360d159-bae5-45d6-a016-fd2456583188"
        },
        "item": {
          "id": "882cda92-c872-443c-ba82-b535df67fa05",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cfdd8ba2-6276-4111-9236-e8323d46bc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d21dcec-5ed2-4bb4-b9f6-bc7988b2c652",
        "cursor": {
          "ref": "12a08284-ef70-47bd-ade8-178677b7615b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "68b82744-53a7-4b65-96fe-8a43a1c5a104"
        },
        "item": {
          "id": "4d21dcec-5ed2-4bb4-b9f6-bc7988b2c652",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "53bc066a-d77d-4e0c-8395-8b59aca5ab41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050a6c98-f357-405f-ad6b-a8024a8efb5a",
        "cursor": {
          "ref": "a00d4c95-7a46-463b-a2fa-b78e4e77c6c3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1dcdb0e3-b2f9-4039-aee5-934f62298efc"
        },
        "item": {
          "id": "050a6c98-f357-405f-ad6b-a8024a8efb5a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "117be24e-8d44-4ec4-8c52-7499bd26cf12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7837c97-cd88-4eec-a4ab-1b55784667c0",
        "cursor": {
          "ref": "0dd49007-f8f6-4925-804e-3d6afaea66a0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "36ec0f1b-ebbf-41af-b3d5-fe0fcaf9b212"
        },
        "item": {
          "id": "b7837c97-cd88-4eec-a4ab-1b55784667c0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6815eb8e-adac-43b9-940a-99325beb288a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b2107f-5c6b-4af7-9e16-24e8c29cdd3b",
        "cursor": {
          "ref": "6b964124-3af0-414e-a117-7874ec9cb412",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "53a6f95c-4c9b-427d-af90-7d7ae68281d7"
        },
        "item": {
          "id": "c8b2107f-5c6b-4af7-9e16-24e8c29cdd3b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2851c096-d375-4cf6-bb3d-391ba2dd1135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c532747-5293-48c0-86c9-def4d3a24cda",
        "cursor": {
          "ref": "a2e82416-8391-40e3-a654-907d32d4b845",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "552576e6-8de1-4a90-b997-fbf26e447fb5"
        },
        "item": {
          "id": "5c532747-5293-48c0-86c9-def4d3a24cda",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "65f1bc49-6c9e-40fa-b35a-1fef2206cd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad0930b-a49f-4720-82b4-d132b56f7fe9",
        "cursor": {
          "ref": "9cff0f78-540d-4793-898d-dded047b0bed",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cfce77aa-febf-4b45-a2a0-ca2e20813bd3"
        },
        "item": {
          "id": "4ad0930b-a49f-4720-82b4-d132b56f7fe9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "16e07fcf-d170-4fbf-9a1e-418dba221bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702a8146-13c4-4a38-8fa6-ef5c58e566a2",
        "cursor": {
          "ref": "8c71e9fa-2efd-4421-9bb4-f18221510954",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b4f8c04c-7317-4a0f-947b-31d815582c54"
        },
        "item": {
          "id": "702a8146-13c4-4a38-8fa6-ef5c58e566a2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0111fad2-0124-426f-a4b0-61b09746dd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec74bc6-0e7d-4c85-9883-e88269d2aae3",
        "cursor": {
          "ref": "d9cff041-1603-495b-9c63-255d3ad33845",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ab11cb00-fd48-4692-bba4-e9aaad3e0d79"
        },
        "item": {
          "id": "cec74bc6-0e7d-4c85-9883-e88269d2aae3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "51aa5e49-2259-4c97-bbc0-58362221ce30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ea0561-a156-49dc-a4f9-08a7662d7d03",
        "cursor": {
          "ref": "c9cda638-aba6-4871-ae1b-46dfa829a9f1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "79277b64-8f24-415f-962f-9b5411630414"
        },
        "item": {
          "id": "a4ea0561-a156-49dc-a4f9-08a7662d7d03",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c44bd825-2d07-4970-8c48-156784cab589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1920ac3-84e2-4129-80a9-48bd586d4a36",
        "cursor": {
          "ref": "ac8c62f9-62be-4503-ba76-4ff92625c57b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e6241aed-4c63-452a-afd6-1e12fec11d22"
        },
        "item": {
          "id": "f1920ac3-84e2-4129-80a9-48bd586d4a36",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a1de5da3-0d9b-4dfe-a4e3-ae46be66b2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d0c9d6-cee4-48dd-8e3a-7b37fb663a7b",
        "cursor": {
          "ref": "14d95a5b-2621-4c5a-91ea-0f07e7d2fbc3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d10a7d65-1f34-46d3-b869-9b541fa76921"
        },
        "item": {
          "id": "a9d0c9d6-cee4-48dd-8e3a-7b37fb663a7b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1fcd3b6a-405b-4fef-9914-2723dfca5276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb51a91e-fc38-40d5-a43a-a342d098edd2",
        "cursor": {
          "ref": "5a401adb-7e27-4cf2-b202-212eb9497e5e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "50b21cc6-160e-4b7a-9e1b-274d2f9c879f"
        },
        "item": {
          "id": "fb51a91e-fc38-40d5-a43a-a342d098edd2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e937bbe2-4221-4fb8-9544-213222e0ed8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f81cee-87f2-4a60-83ad-82dd5c90a936",
        "cursor": {
          "ref": "cad59f26-0708-4784-be71-2e15154facd7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6505e800-7fe1-486f-8af4-8a0bf5c436cc"
        },
        "item": {
          "id": "59f81cee-87f2-4a60-83ad-82dd5c90a936",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e760ba24-a926-445c-8ba2-52385625a4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4399210-1216-42c4-99b4-31366642b7a2",
        "cursor": {
          "ref": "91ca5762-60f7-4681-a418-69335fa4931c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "31d3ff39-0d27-42fe-bdd4-59f78f04c8a5"
        },
        "item": {
          "id": "c4399210-1216-42c4-99b4-31366642b7a2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "09842445-83f5-4523-ad78-bc1d57c4855f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5220b7-a7ed-41e9-a9d0-bcb42c40c2e4",
        "cursor": {
          "ref": "2c9e1bcb-8c9d-459b-91c9-209f9eac57d6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8d4b4a80-20b8-4e53-9858-b7ee25858703"
        },
        "item": {
          "id": "2c5220b7-a7ed-41e9-a9d0-bcb42c40c2e4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fbf8d9b7-11f5-4e98-a266-7921d3071fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a98bc6e-8754-4349-9e55-15f513136f5d",
        "cursor": {
          "ref": "70b1a067-6443-42c7-b21f-bb0572468f08",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ebaec2d1-71ac-48ca-bab8-06c720e79acb"
        },
        "item": {
          "id": "6a98bc6e-8754-4349-9e55-15f513136f5d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7f38b344-3688-49b2-b057-dc1497381e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ab14ce-dca2-4b97-a8ae-0111de725e6c",
        "cursor": {
          "ref": "51b3f461-ce40-4dbc-8d6d-6a625d6c4e3d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "379ea6d0-9352-4bbd-ae79-a72fe74f65b4"
        },
        "item": {
          "id": "19ab14ce-dca2-4b97-a8ae-0111de725e6c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "370a8a4f-0e5f-4cd3-8609-4181408771eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d2651a-83be-4f3f-bdf8-fb8b6d189401",
        "cursor": {
          "ref": "d63a7c3c-13b7-4ac2-ab24-9ed500db16a9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f15373c7-e3c2-4ea7-8a42-071ac8d4ad0c"
        },
        "item": {
          "id": "28d2651a-83be-4f3f-bdf8-fb8b6d189401",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4263da0c-09cc-4aa5-9e33-b73e881f946f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875a300-3f8d-4f9b-bc0f-3bcb4135c993",
        "cursor": {
          "ref": "89e0a812-6594-47a4-ab45-36045ab3b03a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3aae8033-8d98-4c85-bf28-745fe8e3270a"
        },
        "item": {
          "id": "d875a300-3f8d-4f9b-bc0f-3bcb4135c993",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "631bc462-add0-4fef-a766-c30599c5fe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "c435f1d7-62e4-4086-961e-819dac828da7",
        "cursor": {
          "ref": "c9756a71-c451-43e3-9ab1-eda09f149e56",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c2ee12b4-f74c-4b32-aa57-0e84af047fd6"
        },
        "item": {
          "id": "c435f1d7-62e4-4086-961e-819dac828da7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9d3f2a0a-33d5-48f1-9559-e0006c4fffb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "ae052ff7-b9fd-4ca8-9728-d01d6ac414c6",
        "cursor": {
          "ref": "44ed93c4-3869-4c44-a8a5-55d2f6a554d6",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5ee0a9d6-33fd-4360-a256-d170b5d2660c"
        },
        "item": {
          "id": "ae052ff7-b9fd-4ca8-9728-d01d6ac414c6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9c93845a-20c8-46e6-84b4-550e472f9269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "d61b36ee-5e57-4b81-8321-4e46cf3b15f4",
        "cursor": {
          "ref": "346bae24-d0ad-4ceb-a7d7-8d5b807df62f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf4ee6fe-2782-43e4-90c6-77cdcd9d7962"
        },
        "item": {
          "id": "d61b36ee-5e57-4b81-8321-4e46cf3b15f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4db80552-f37a-4955-a88e-c16435b88d1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61b36ee-5e57-4b81-8321-4e46cf3b15f4",
        "cursor": {
          "ref": "346bae24-d0ad-4ceb-a7d7-8d5b807df62f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf4ee6fe-2782-43e4-90c6-77cdcd9d7962"
        },
        "item": {
          "id": "d61b36ee-5e57-4b81-8321-4e46cf3b15f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4db80552-f37a-4955-a88e-c16435b88d1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a664ac-2591-4184-848e-951b67632977",
        "cursor": {
          "ref": "3c0212f8-aac3-4cae-97c1-3a1e52cf31b0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f855e17d-172e-46e0-aef7-5e98acad2045"
        },
        "item": {
          "id": "30a664ac-2591-4184-848e-951b67632977",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "760a234e-0ecd-4561-bc10-ef5a115179de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d56d14-6ee1-4995-b1da-73b115f9d721",
        "cursor": {
          "ref": "099837d9-b41d-4bd6-ac2d-7fb16962b517",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9e9e58a1-0efe-4618-8803-1385657a4fea"
        },
        "item": {
          "id": "06d56d14-6ee1-4995-b1da-73b115f9d721",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a5e43eb5-f456-4336-a25a-0630a6a92bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}