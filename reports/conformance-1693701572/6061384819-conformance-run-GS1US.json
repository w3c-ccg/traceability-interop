{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e3e419c1-4e41-4b1b-82d6-602856ea45eb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "21b12b00-4f6b-43b6-aaa8-410682782cce",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df001c37-8f4b-4d9e-a28c-93e1b8febebe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84d1b96e-6a6c-4cc2-8a0e-632c273fe75e"
                }
              }
            ]
          },
          {
            "id": "f7301003-60fd-4bbe-a909-14499a62631f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6686e396-3a69-40e6-a249-e4e373fcbeed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c323c06b-e8a3-48d4-a4ce-64841178224a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fd289fdd-6665-4f72-bc65-2354d3031b6c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "25725b34-c1a0-46cc-8c90-a03b991352f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "abf260f5-0bcb-483a-bc9b-156a60e71c45",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d88490a6-0368-4c92-b840-d1e8da312181",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3780ca1-532f-4a05-833f-72249fc419d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5130bf6-cb11-40b6-ba5e-c42dd6291973",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e06ce04-1f5a-47a0-91df-dbbf887b4fa6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "639a5edd-e90f-421f-9211-a3e16574d089",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f740cf6-6276-4131-98ad-cb2f48c5bd26"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1e9a345-1c50-4a45-b668-dd8b9db6d77e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "eb5d6fd2-5b18-4419-ab19-bc693aad35d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c34bd18c-814a-434b-bc16-3d151a75077f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6388226-4159-46a7-bf87-e505b5ae85a5"
            }
          }
        ]
      },
      {
        "id": "f57d97f6-6161-41e3-8e5d-b631879797c4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c4be6a00-f750-4825-ad72-c0f3e9db3fb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a035f2d-e551-4deb-974a-4af24f963a00",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cfe8eabc-6f29-440a-8006-1703f5fb7d1a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e9709-6ec2-4c44-ae35-3757f5fe746a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e013117-1982-49f1-878c-ec2974492015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3997736-d1f8-4551-86e1-6d71cf2a0ceb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eae559-f125-4573-85ed-142cb176c463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "242cfff1-7873-428c-8977-4ad481e3bdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabbc2b3-0c8f-4994-ab37-17700838efbc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bcdf43-c7b2-4bf8-a592-a9ad9141634a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d6cb27e-b717-424c-ba49-967ec48c95f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8f698bc-40e9-4c9d-8ed5-7d4770f727a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce2e55e5-7e5a-4ec7-bac4-2d38e3be79b4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ca0729-4f87-4efc-9ec5-5f67334e62a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9673be9f-d44c-4482-bb66-61c4e5c359e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7ab0c2-799b-451e-b8ec-ea65eb665737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80855bb2-64f7-47b9-bcfa-df54c82eeeb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "135d6980-6abd-4a7c-8eaf-0c15a75b790b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7e70a95-e244-4402-a00a-275adaf8b183",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aa5e653-371b-4df7-ab74-5b2854bf5cc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "01a2082d-5525-490b-8c8b-1f909c45f423"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e41ea37-3cf8-44ed-aedb-40f18d2aeb2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9c52e143-091d-4457-be8c-1f9fdb9ad4d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "094f6510-e2d2-4498-913d-7957c3e4d158",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6fe9bd7-aa8d-4079-8396-7c9e0a396e00"
            }
          }
        ]
      },
      {
        "id": "18683042-6a5a-4683-82f5-042c21935c31",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4ef382b3-2651-4e82-baa7-0161577c828e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95e99fae-d1fc-4780-9b3c-c27038060b29",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "575d9be5-f6ed-4295-be52-f3ea28cefb06",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fbf840-7b01-4eec-803e-9ed2fd3a2a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49baddfd-b037-47d7-ade6-0978227f5527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8be11b2-6e22-4e12-a276-ef1170d35f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76641239-2b07-41fc-a2fe-ffda5da09430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b088e7-befd-4c55-a289-ffb411e06e85",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac06f900-73c3-4bd9-bd25-92b9b1cb77a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e25035-2852-40da-ba92-5964549451ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8c17fe-b022-41a1-8b05-a569179cf4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d51d526-42cb-4ed2-955f-589e4db83553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebe5c49-a826-4b74-8cee-a37c7226c377",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ddb96b-9998-43f8-bc16-67daf3b081a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63f9df4-48ea-4624-aa67-3ab03b816f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a09fae-599d-4e99-8998-d6fe73ba69a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5deed94-a9a3-40cb-8cb6-6f89a0395cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae93cd3-3116-48ba-938d-f33d50bd0722",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ca4ad0-3c39-4939-a8bd-19332b3d3a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73afd162-8d32-4985-abbb-a2c8c2a1153a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999ad375-4bdf-4c4c-a996-c0656b508937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c781b221-0deb-4db9-856f-9838870808cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f647de3b-1de4-4d3e-bb09-26015ca3e60e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43398585-57ba-44f7-ba23-de8706cd0ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb645ec-78f4-4baa-804f-6ef6dc384a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bed775-48d5-4d02-a7c2-c899abd6ae91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00616715-8cd5-4ff3-8028-83b57b8bfc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffad142-3381-4f44-86c0-9d1e557e404b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4842358-98c4-4984-83b9-cf0027a781b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863f4192-73fe-43b4-a435-8c6726baf158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a08f8b-34bb-4b79-9fa3-f3df35c252f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cd32044-8998-4837-a404-c37a0ab21f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01987ad6-42a0-4d60-886e-c21efbbd96ab",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f381604-219e-44ae-b782-3926c567b478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee42230-5305-40fe-9ccb-43e9fdfe6762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83577052-c934-4435-b411-ed154a7e3782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b6829f0-7417-4337-b4de-01ef5205817d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db852ef-a0e3-431b-97ab-0b0906d164fd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfa4227-f742-4311-9e62-e5fc01cded24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3590236-71ff-4633-9b19-1da8eca9de43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f234bdb-47d7-4576-b06b-70248459fe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35bf54ab-ada5-401f-8f25-f953a1bdf34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7892eb-dd85-42c6-90c4-fc9efcdab666",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6538a364-dc79-4c03-bd8e-6b4b2b9be750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a00d6dd-ae78-4092-9b10-1ee871521b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fceaf64-7240-4821-9531-687db4cbddc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d4aec94-5354-4797-8cd3-3589995e9914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8389d50a-0a93-424c-a74e-8208de6c52cd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e89716-c7fc-4161-844d-d308c433cc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94784f5f-d2a6-49ee-9e6d-e1ea5122f6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3365a3-2aa5-430c-ab4a-636bf6ff400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d67eeef5-abcb-4fdc-8dbd-ca1ee8d22d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c096e0-4391-4f79-b23e-36583c3367c1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbcb61c-7348-40f0-8157-7c6176aca3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65293441-87c7-4f40-a386-35bc03efac58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d821db65-a4fd-4e94-999e-3de057e1fab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d905b08-74ad-401d-9a95-b4d84f5fe43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a8c9c8-e3e5-43d5-af3f-bdfbf7b54a1b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be5fe3e-df11-47eb-8b0a-ad2341007537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a52070-9dbc-496b-ac22-35520645244e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ab483d-24a5-469f-bda4-defc57437ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9593b4c5-dd58-4976-8de5-4a14ed7234db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdc2ed7-147a-410d-956f-6a1631813687",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8bf62e-b462-4042-b9e9-82a15ffd2812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a409b51-6af0-4361-b7e4-abe041a751cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec901429-a92a-4d2d-b0e9-f0fe75238fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a92820-ad51-4f62-9d98-e0c94ff71ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25af80be-bf52-44e6-8ad7-6eb68c2a5332",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e1c056-91b7-40a3-82fd-fe94ac1965b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013bae8b-4662-42be-8282-c2ef087da032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f691e3c-fba6-4c2a-a523-b939862eba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5235936c-0004-4437-913a-7eeac9451584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d555d97f-e523-4778-8f6c-9b59c8b57695",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035c20fd-36c4-4337-8151-52fe6c92cc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60f563b-7aaf-4589-8c7a-01534d2d7ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bd3433-5c12-493c-bef1-00302d6097d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80240433-b3f4-4e39-bf52-2ad984ab9b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355c0f1b-b164-4347-81c3-de4c8be93767",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8387019a-94d7-4736-9a24-f5a17158ba7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb22de2-1e9c-4d9c-b342-c9a65c2f094c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71f1ae7-1edb-4d74-9856-e6b7a434b3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecdc9672-b987-49eb-a716-3004edc1c7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291d27f0-abaa-45f6-afa0-7b8d9ba25ffb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36afe734-29d4-4587-9e61-11650aab2202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329ba7a1-c96b-4a48-bcd3-002f81619856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74d008d-e621-43f8-9dcd-1c7accba85b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad22154d-b44f-44be-929e-f88a859e34f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec303f2-be1e-440e-83b5-d8bb8f929a28",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ec56f2-422c-4bb6-b86f-b2936fd1703c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e52a716-54ab-4cb0-ac5b-59b4b483325d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809dbb6f-31ef-4355-92ad-e88be666646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d1ad9b-dcee-40de-a1f9-04d31bf217f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2454e8-5eeb-4d2e-9314-03efeb3c4792",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50caca78-3f13-4991-959c-f44271581647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59824204-98b9-4dbf-b3ad-e43851b484ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e35dfcd-ed4d-4df7-bbc4-68112ec5b5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa91d99-3ffe-4d52-a7bf-ec3ee85b6173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ee128e-f616-4415-a88a-ffb88721feea",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b727f4-dc44-4ff6-9ad8-faba283248dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ef8424-cdfd-455e-8a0d-deaee8c5c5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d1c305-0fb2-44b8-aff1-f3e42d95ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "919ca9d4-0690-4ac6-8824-ff5bc02cab4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251c8d81-0b6b-4cf7-8284-0d86bbdd67c5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeef7473-7fe3-4632-ac9d-dbeae46044ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8bfd6d-9358-4fcd-b024-56b29e5e3a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75df19ca-2bd1-4ad5-8d92-0098ce07d6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20ff7e3-88a1-4743-9d4f-cb2ca22f1d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7500e745-dbb0-4a80-85a1-e72c06c3c48f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1950d2-e219-4af8-9628-9920f4cebebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09b6615-30bd-46f7-bb51-76baa9917cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4337187d-010b-4357-899b-321fb2ff3c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fee15e2a-37e4-4f55-b200-f862147f6511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c8aebb-9f97-4b96-9055-f9e511118f8e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e2fe39-2728-43e4-a8e9-87d5be738e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585a6a7f-ae87-4ee0-9432-8a901b1d33c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a408d97a-be2b-46fc-b391-bbac519bb8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d60004a2-7349-4715-b76d-cc62d732a11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85066e2c-a3fb-4f11-8f85-b4c1786e2e13",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e678e359-a07a-40a6-8297-87de9802826b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a0f4ad-24d0-4e78-b94d-0e251381cdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a716ad16-d464-4624-a3d0-527683413ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e3be04-74c2-4278-8b34-c7aa6c88d8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac049eef-cbd5-494e-b8d9-253cfd448daf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57da6356-f4d3-427d-860c-cee0fca630c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2487a28b-de8c-45f9-b25b-016c4b29b95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38754e2-988d-4972-87ba-ff21788462aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6824ea5d-c503-428a-8804-5eae3e3c25df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996f5548-be59-4cb5-b002-cb6f9f72cbf0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f91ec6-0679-4716-8596-fa79d2ede1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77554ed-ea2e-447f-91a2-1f1dfa798366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14ec7de-6b8e-4d03-aed7-2d2cac8a0d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb125b0-515a-4c21-b361-b4f14a74e47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435838e3-d4df-4a08-8fa8-5c2492bd0ea3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbbb174-cd27-4bdb-9f43-5f1c298655f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173ec2e3-abb4-49d2-9d24-4f419849e65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27c6924-981b-41c5-898f-41cf6cf22f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07265614-36bf-4394-a442-5963d8f4f7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2227d76a-9618-4f90-8280-0c16b16c1630",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35ade9b-27df-43ea-9698-6ca2f607a2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bbe95b-74ad-4472-acf5-46333e50f4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0441911c-ba6a-4843-a5e7-ba350194d78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "080fec46-e7bd-4638-9e43-196167a0ddfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bf12d2-adf4-4077-a1df-902bc2cf33c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d52aa89-de8e-4ac6-a9bf-783f86cf4aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c592f30-b49f-4681-b41c-4ec8254ae9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df639576-0a0d-4154-b074-1abe8fbae110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6992ba7f-91ce-4e0d-867d-d963b04c350e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a147ed9d-eec0-4480-b355-233d540ce9cb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b96a348-4651-49c3-8a43-4f0133a50801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975698ee-256d-449b-93ee-9801dc895c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0020071d-f05f-40c2-9793-15e5c35dabd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c93ecc-a442-434c-8a80-1162b9c33e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abe3239-35be-4307-bfc9-346613bdfa60",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73749fc0-9dfd-40ae-86b4-9f8f7b586db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95d0124-6112-4a65-afbb-c80b4f5b398d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398cb3c9-19a4-49ba-8954-f724c84e4ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6709041-d794-440f-9e93-209962c8424f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea5292f-73d0-4298-af04-b4bdfcbf8c5e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29d54be-3dd7-448b-891c-135ce024ae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0729de-78fc-467b-9bee-d2972b3316fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3a8d91-50a9-4b34-aaff-5367c3732b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec8f554-65f4-4f56-a490-a39f8307556b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8588e21-0574-49ed-a0af-832d3e48f819",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a984a3-c712-4e49-a212-129e7b8d26d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb27048c-5f7f-462a-9ae1-4d3fe6223d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca9328-a611-49ed-8c0f-7d5390237c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece0f9f3-dd61-4904-9c02-8b1d36425d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da669b6-8447-43fc-96ad-672c1621b6ad",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee108dd-589a-4f0f-9453-51f5936a9c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5c37f4-ff7b-4f22-915d-dba1b8d81024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd94992-ad5a-4e8d-82f7-9c16c5c910bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88ee7642-f454-468a-8597-4d795803b3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9a6b9c-f500-46d6-a809-05cbc20c3c89",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f8f72f-6525-4e15-a8b4-f83ac729f565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33391634-7d29-43f5-a420-3d9112d00af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bad5007-621e-4df6-a475-73a4317aecdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "507e302b-8204-404b-b5ce-2f1b51b8d48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e90af2e-20fb-460d-a4fb-292380bc51b5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797ecdc2-f832-4202-a8fc-b4485e7917a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d515dd96-a42f-4160-8bd8-9662e7462fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a1111f-8916-4e08-b47a-66a92a567575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c592696f-58b3-438d-8ad1-cb2c9d0a0237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddc793d-0362-470b-ab40-112596147a30",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f40b50-9f16-4d66-a4da-05e403970b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bde3cc3-88de-459b-b074-d1ac5119f19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a91202-8a34-4841-afbd-78544c4f1c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64175f5c-ffa3-489f-b836-0c01541fdf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d76a1c-589b-47dd-bb85-7ac7ceeda334",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a076671a-f5fc-4385-88ed-9893c4bb396e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdad36b2-501d-474b-8503-a697baec554f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9450b3-9759-4c68-b257-a3d284c4155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c4e0e0-4038-4011-8c67-c36732abe799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8de778-d61b-41f2-9427-167f62a226b4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef442b82-519d-4582-92c3-8052747b1b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd546ac-ffe6-408a-819c-bcb71bd97243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed53989-cc07-48e7-9ec3-898460f488af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1e72fc-c156-49e6-b639-5c5d475fbf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97193312-5d01-4125-b2bb-03253387c6c0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8654e7-33b9-49f7-9cfe-adcf33ebfb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52dbc49-b191-4f75-b811-bc0a641f4ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16457c05-2b05-4bb2-9a15-09ba1ff7b164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6691662-d57d-48e1-b903-daa7011a706e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90761342-926d-431b-b070-9b4d090fae65",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0240c8-5196-415b-b1f1-b4743b67d88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5501b4-3452-4bf0-bf83-3a582433883e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d7c40b-4e2f-4362-83f3-e8eb1def8468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6a3968-1fda-442a-b4b7-725a7f5a06f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30aa67b2-95f9-41ed-8bf1-b59e2b8931ef",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d0c668-d599-4fa0-9a3b-ced553f67eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea5308b-4e11-4334-8bab-ed19251eb0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22503414-c131-4a99-8b34-02bd96da792b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c83a6725-99da-427f-9633-d643bda891d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068ebdd7-9340-403b-8499-8198991d89f8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f27cc3-ce53-4c75-8237-6179e85c4550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b323ca32-6271-40bc-8b4c-15c17676c931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8aa694b-928b-4237-816a-3f7af4a40683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7345e8-ac83-445b-a403-756df30f017e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09239f16-27c2-436e-a5d5-c8fe82e41aed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9088cfc4-d1d6-40f5-a5fd-40e1a8f799dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63676769-2bcd-4c7a-a802-2fbb3a10bdd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b73165-a2b7-4fbb-b97f-76bb1c7203da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "98015b78-768f-4071-b2d7-b21a12950413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84085cc-1803-4ad2-b918-5ec8883a3c55",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d78fb5-4842-4bd1-bbfe-5824bfeceeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302dde5d-a413-4606-a23f-520964dcd90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba6bb2d-7151-4ef6-a640-b2b2311455ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44a9721-f0ac-46f1-a191-e00b4087d93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20891a37-d601-41f0-9db3-e0f66c8f276d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd01e895-5bbe-492a-89a3-907dd851c2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c2f757-2587-475e-9cb1-c134decbfa34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbb5448-e7a2-4410-9625-681facdf649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdb8cf3-2c62-4172-9d73-610fd78e58df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238d3deb-b2d2-4322-9ba4-1b2b306300dd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411249fd-4c80-4d2a-bc0d-4f38e46c8ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2c0c73-501a-4d43-babb-2193636d0daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80242eda-e37c-413d-8128-e5c63648ecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "937024a5-abf5-4417-a058-48abe0623a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6b1a0b-7cb1-4744-80c4-b234603713c3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3d5489-673f-47b2-931b-a1890716fac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a306d6-f87f-4b72-bfe3-e1e209e8b74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9948e2b8-b3a3-4532-b259-6f0d2148d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ca9482-df00-48de-a991-13e761e4c914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8889481d-eb40-4d6f-890c-c23bcf9db447",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b7220c-918d-4e53-8a41-a74300654de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddee771c-6b66-43da-9226-7876e42369e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b69c22e-031c-48c9-a182-8391a22a5c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71417712-f1c5-4930-94df-a2eee5d58eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbbfde9-c1e2-4ebe-9e23-3f2a50f454c2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282f1b6e-3331-487e-986b-95e329220917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51ec06f-2878-4c20-b8c4-e811ac73715e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09084e06-c94e-4104-827d-785f270b3ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "438547f1-3f50-444d-a6bc-c73bfdc9d10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704a6cfc-ce2e-472c-92ce-5722e24fe7aa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb45fc6f-d747-491f-add6-1c56af23f4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ff81ec-e242-4521-8577-bc35d6a3802d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67370d1-64d9-4741-b642-70c302ed4a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbf8f85-7c22-44ba-8a92-b159812f5ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e1772-66c9-4406-baac-3c3c184d8964",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9641b02-2b71-4ae3-be72-1f2f9303a1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aecf050-5e92-4b49-974e-4a16c25e4497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0f0fa7-b4bc-4d8d-9f18-7bbe6725ed71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2791ea-37e8-4641-8013-34fdba178ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59d298f-a630-4d7b-aa4c-8d477af477d8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7318dd30-e35d-4dca-8e73-0da680f9e93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b583a31-ce7a-4579-a514-a330913efdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d8a1d0-4e28-4399-8f8b-5b7e5dcfb082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0fb3ea-9ed0-4a8b-96c3-2bf83fa48929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201f5238-7d9e-4be8-85ea-356d031124f2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2805491a-f15b-4dab-ae15-fe0cac156722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4ea2a5-014b-4a03-92d5-a434a5dde1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af44ba0e-e4ce-450f-9393-d56d924f504e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7043d02-9f2d-465d-9aae-0844e3c9ae68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d7f776-3c28-4685-bbe0-ed8763a0fed0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f37329-359d-473c-831f-66e9aa7a0cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f849718-9ed5-4668-ae3c-4a3b3c27e59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cd1ece-6c2d-487c-8df2-25a6e5c56fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5714f11f-6c2f-403d-9632-41c6425834d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21163f33-9755-4fba-9ce5-881b2c7cc52f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1157ebd-875f-4d74-9533-ba41b6fd2aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2a9b00-c029-45ed-bb5f-e9a15dd531c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce2fc37-5de8-439a-a6b8-0eee557d4acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b359cb20-df77-4733-a3c6-8257613c647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ad129d-9865-4b1d-9dd9-9ff00e860637",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf851a4-2965-4f65-bb9d-8843d35a5fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06328bd4-64d1-421b-be43-b6323647851b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83e81d2-ccc8-45ce-b894-968f44577f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ad8259-2fc6-49c4-b81f-feafe63eff1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc46694-bf8d-42bd-95eb-ce027d8ba7a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa894ac-0f81-4f49-a145-ed520e953c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e53d04d-728e-4306-9356-8950b4aa66df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd09cc18-b6ea-4a8a-b139-0bc3c6135210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f494d62-3961-4082-ac0d-22429d8a3f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef827e5-4897-453d-8465-75b7e2913fed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedd2e16-2ccf-46ed-b54a-39bf8503192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dd065f-15f9-46f0-ac99-2668b4c3c05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a5fd89-8490-4f4e-8758-0307a65ee963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a10ff09f-9f6c-48e1-bef6-f66eb497b993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e924f67-0370-4fef-ab92-5fc5c2def0f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2007b653-2060-4a7d-b690-6168f2394666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778a2b80-275e-4ef1-95f8-6e8210754b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a09d48-131a-4932-9133-fe6bcad7d9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "053cee44-7353-4548-8f52-f983bd22c482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a679e8f2-20d1-4753-a31c-cbbf643d48e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474a362a-8c52-4165-9cda-fc79848a7def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3332ee4c-ce39-4028-a710-fe40c144ff16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abde3b84-f848-4a53-8c05-4d179516f6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dda79f2-b09c-4b85-becb-7ad48b012ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40360d3-ab87-40b7-8218-8d739c8237da",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6559f4f9-a693-492d-ad71-9cc27e7fbc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281a6d0a-8b71-45d8-8d74-de18c0d6bd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a9abf2-58b0-4397-afb3-2c27039f4d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1482c65-3b92-400d-902c-fa7760ad46b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d87ca15-fb69-408f-86f7-a774a7b282e2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5a1945-95b8-4daa-ae1b-99b27a5ee590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7539f51c-d32c-4d81-8bf6-fa0289c030ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bae5ea-c392-4297-820b-c65a9015664e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5058043c-1dad-4ff8-bdce-67aee055c8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4021c71b-bf46-43ad-95da-89bf4edf4570",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c89308-39bd-4693-9a94-3fd12888dc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f45039c-4d54-4a08-a308-7440536589cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028eb08d-da5d-4f0d-a822-856d75ca3f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31badc15-f953-43a3-a81e-e9be09e4e45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2fb5bb-b958-4bcb-8e32-c75b35875f37",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c6686-0f2a-478d-9ee0-a9defb311ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa808b78-8cc9-441f-88b7-c7e9e06356cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0006d7-e4ae-45b8-8d4e-440f54d0aade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abfc12c0-a249-4576-ae46-8b777aa01239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f021aa-2746-41be-bc5a-6fef6ef9c400",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edc0fbe-6cb8-46a5-afa1-8f5c9c2f6d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ac77d4-2153-4611-94d2-63e424d74572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3f718e-5d95-4877-b4a0-c3b3bca61b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9876599-04c8-4aa4-ba94-247438b84a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c133eb2-f62c-476b-9da7-bd8144d4d35b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7b9bb-b960-4245-b428-1fa77c4d77d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148e4f72-35ae-4e88-b28e-81f2027f0a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d59d396-98d5-4f4d-b258-9e35166ec097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57595d82-ae9a-49e3-a224-058e7272767f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc5bf60-a2a4-44db-8066-a111a2ad012b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9299a2dd-c605-483c-88db-48d2b6b48289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f55798e-95da-4c52-b41f-a08bfabc35b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455bbb67-bd84-4a8d-8979-2c52153224cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa6ddff-9a8d-409b-9baa-c03a9a970247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00af7987-ac8d-4a9e-87ef-03c4c1ccf6ff",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd83840a-bd3c-4570-95c3-593cc93b3d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993a534f-9f50-485b-8702-17a613349c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c228a9-6b1e-45fb-afc5-73b00109ee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d24b5db4-c659-4a49-9483-6e9fb53e2246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bb8e82-48dc-4b2b-a898-bacabc188584",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8864281b-db01-4304-8587-6ab9b9667462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2526311c-b208-4fc0-a328-c235007d11a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f208284-6692-4425-9154-a429c93ec2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4813835-87d0-457b-8fa3-6f6638253214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fac54e1-9bc5-4ae3-a064-564fe51c1383",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ba48c9-223a-4f2e-9712-a78b86d1cf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1295b5-16cf-44f2-abd0-684d839a3734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10236b8-5d4d-446f-bd97-a1129d9c1e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8208d8d7-c3f7-4834-90d6-e0aa9cd902c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4165bf6-e9f8-4a59-8615-477141183eed",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a03d8a-18dc-4799-b814-4cfa59aba7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a46a4d6-87b5-4c2e-968e-6fc43d61f14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e571da5-cfcc-4886-a201-eaddc5ef992b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7349d0a-76a9-49f2-a5c1-be2d965d364a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ee9662-23bb-418b-bfca-9f72f429eaaa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e87d97a-9da2-4de9-9e11-dfb6ce3c0cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734a37ac-b288-4934-b02a-86f83aed9f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7fe1c6-1577-472b-aea2-bbe579e1a04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "193ababd-2208-4040-afc6-77ac9ff39309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aea3012-4be0-4fb3-9379-4932afe7e981",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb7f629-3480-4afe-a461-9e521563f5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fd445f-6c7e-45da-859d-d78140cbbf4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af101258-0fdc-4383-b676-21a9318bcf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36029987-b620-4020-b22a-aca005d69ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae4c787-bf8e-4b57-ae55-5846e2138a55",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7b04d0-da87-4618-b44d-599d83adea7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7476d60b-5e58-449b-bf98-36a10f1b4cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328be471-aaa3-4caa-93db-62cd2f40bc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "305f4273-b177-42a9-b44c-d42180258063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daafd424-dec5-4ebc-b934-34b78d834481",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3539f16-ffb3-453b-b707-98975d345465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85ade07-5748-4b7a-aaee-64ef780e01f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc6998a-76ed-4827-a302-2a5e2bb2282c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d595bb4-3383-45f2-9903-da20a4f1dd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339c05e1-6c87-4ff8-8f99-234041b001ae",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46ee473-9546-4126-9777-45a233cacd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f74e08-ab05-4706-b20b-46c5142d09ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8243091-6f84-4a7f-ae1b-4e1a3ac39191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cea1b7c-8123-4c94-b6cf-689218d9b9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b126ab9-71bd-4bd3-a316-7ca9d395648a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3fd572-7e3e-4844-978e-a18008d6e966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c85589-3e34-4b31-b932-cc771e800c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957f6392-55e8-4d11-8710-318c4fd36c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e298357-abaf-437b-9ae2-3ee758ecbcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685159fe-bd92-49f6-aaea-2f41e949d42f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7df6cb-3588-4e5d-81b0-5ee8687dcb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca867433-0830-4c8f-aa8c-575810222ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77501580-0280-45fd-9ba2-5ae0fa835ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c875db-57ef-450d-852a-876b90d96125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bd6d71-ef77-455f-bbae-3059e4d5b8d9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6a44ce-ddd3-4360-a3d5-8717c61cafb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6acdcc4-5a38-4bea-b5a5-a83aa86471fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194dfa1b-ee06-47c3-9e13-7d41b1891734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e43fa62-9d06-4d5c-b65b-36caf53029a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a48979-cad4-489c-9b96-3b49a3a6581c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5cc038-2f7a-4c45-9f53-f805ad90b215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a64959-99bf-444b-82c8-f27b906a6648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44376061-4ed8-4c27-b27c-deb4177cc2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0648815f-ee14-42d5-af68-f1f770287ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e684600f-beb6-48fb-a019-a21b0d007e7c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63129f7-571f-4982-8c52-d5f647dd1aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcf14c9-de08-424c-b90f-e926e69611da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25f4f75-959f-4ded-80bf-2745c5b3f700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7e3fcd-77cb-46e1-8b78-b0c0d4d23685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f60852-766a-40ec-8194-81e2130f5499",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9399c80d-86db-4ccc-b338-c76219c874c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcd40f2-b8e4-4ed0-a4a8-cb25972affb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b05492-036a-45b7-90eb-e13e7968b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8c7fed-4327-4e13-9536-9620aaa0b260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e337da86-a471-4618-9459-6e36fa422f02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35087293-f0a0-495a-b0fd-852cad089362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18df899-153d-4de1-bc74-ebd9ee6c2a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806a5ce6-79ea-4d22-87a2-15dcb2ecebb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f5ddf4-a55b-4b20-a18c-e28a6e508d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f79e2e-c9af-470e-a5ab-17aeb3f85cb8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756bff5e-1981-4a0e-8027-86755b1dd0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca21e41f-9dbb-4401-a5d8-7a73d95fe344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eb6dd2-039c-438d-8130-19787436bafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97142bbb-23ce-4c52-916c-777610b9517c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705ad79c-7100-4fe5-ac2b-781c157f9799",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0a9911-f01b-49ce-b02c-e9ca8b39e939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b587f99-a71b-4314-855c-1e8446fa7aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46c6e1e-5281-4512-b89f-7251d7dcb6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "573faf9b-ac66-4e7d-a4dd-427a94161e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1783e54a-1d36-46e6-964b-c02c3d94fb22",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e791182-c49c-4be0-a4ad-6c602a6ec163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b54f5b-a00d-4ace-8cc0-92a8bf100fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9a4270-1190-48f3-8d3b-569d6c4b9cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa439def-40a2-4961-9e56-244bf59d4769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd27551f-043e-4a94-9f62-4c51fc8d1b5e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30a47d2-15cb-49fe-a1c9-f6e1df6da06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a536b8-5cc6-40ce-87dd-345a805a2fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285056ca-cbcf-4f76-bebe-4acfebbb4bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bee4e390-814a-4d57-96bb-aa4344439903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4716200b-1253-4ed0-87b7-b94b1b607f3d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6de5166-f115-48df-beca-f285ee0650bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830003e2-6b67-4514-97c2-95fcb2303804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da4831c-c602-4dc7-b020-000e493fe73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72ce8978-8337-40c3-adf3-71be6c74d2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71024697-a395-4957-8feb-e562c36ce8e2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5304f8e5-1d3d-47df-9601-28d3f2efa9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8777f19-7ca2-4b76-aea2-09a283959f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8350e000-3991-476d-bb02-1bce2a43f29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "410d694c-0e5c-4b32-9225-3cca92319498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994fd8dc-27e4-49b7-a4e7-415d0253fafe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3481b4-d124-4a83-ab70-ebf940c77510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b9215b-fa15-4e47-8a4b-8958bdd67a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d6a752-f943-4375-afa6-e07f06cd9cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc76cc6e-d7fe-40d2-a701-f851441360ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb657759-0c46-43dc-a4f1-d8ad9140940d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ebc95d-e988-40e0-9f1f-61c8775acd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f85b49f0-742c-4764-b2c3-e1c128493f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28adfab-14b9-4765-ae0e-90815b70be5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0391e09e-1a9c-40dd-9174-71d9ba98f76c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c49a786b-024b-4d11-b288-400cbd581732",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5cc8ee1-0fab-4f6c-a214-e885e3216647",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf33346-e1b7-4e4f-9363-37a28b868524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf8cb967-c5ea-473f-9e92-647715ddc635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f185ab-3955-4289-8589-876ad669490d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "525c4522-5206-4860-81e2-d92a5397c911"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3adc52a-e08e-4eff-9102-acf599369116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd82b0b3-dd9a-4be5-b794-06ac251de7b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d4e7e40-e2eb-41c7-ab68-0c65b2b0da94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4547ca9-4ba4-4133-80d3-727110ecb243"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1daf75cb-52fc-4a44-b8f4-ab161783fa12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "250e0e3b-b3b6-499b-93c2-b2eaddedebe8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d14b920d-5db6-4f89-b9ae-87036c852d2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26af3aea-fd1a-4489-a3c3-a458919e6dde"
                }
              }
            ]
          },
          {
            "id": "e511cd8f-713e-4645-a490-a8e92317b782",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e13cb1da-a7f8-464f-bf7b-4748bce6a16b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44cab419-c13f-45bf-89a3-8df50227a9e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ce8d6c5-c0a3-4819-874b-31612978a5bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baec8072-f96e-4ab0-bc59-ab54c4510bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a740bef-d8cc-4dcc-916f-61ca474eace8"
                    }
                  }
                ]
              },
              {
                "id": "39b466f3-62dc-4259-a850-fd501127e8d8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "099a3a55-3a62-4090-84e9-d24b88fd1af6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97b00669-884f-49ac-a568-a6e0100b8fbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e37277c-6e3d-494e-bc14-afdcf08621c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f5447db-6550-4650-bcd0-759c04d05325"
                    }
                  }
                ]
              },
              {
                "id": "e20ba8e9-9b89-48c2-a751-e7970ae9ec71",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "187e381a-d401-400a-8583-d37288511af3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6de5df8f-9cba-479b-9953-937b5111ace6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a87c8c2-2c97-4464-9cd7-912802ad9467",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c40e2231-cf74-4166-8c0e-f7439c1969a2"
                    }
                  }
                ]
              },
              {
                "id": "68daa31f-0ef4-4f9f-adbf-a23cea8552f8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c623eab0-476f-4e90-893a-d7b09cf0b8db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5992fadb-1493-4d95-a9b1-affe4eecfd52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7254cc4-866d-4f25-ab49-624391c23b4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7b5d74fb-1e4c-4fff-af6f-9a3d650bb16a"
                    }
                  }
                ]
              },
              {
                "id": "3b6ac765-9bca-4a05-852d-306be6c5ac7b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b68f593-664a-4056-90da-ea2cbafb7e40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0180aa94-dc77-4052-9b01-c87a08d902a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f85de8c-9fcd-4508-97d7-70504cff0a5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9a483fac-f159-4ffe-a6d5-cf6b2ec1553d"
                    }
                  }
                ]
              },
              {
                "id": "9a37d086-aa00-49b4-ab58-f541473b18be",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bdba531-9b8c-489d-83a2-3ceb4fc9a138",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0535d7f9-117a-4c50-8c45-d50288e9bf5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b1faba4-6c34-4608-a838-526f06603583",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4bfba153-261e-4c82-9d31-938891ffb667"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f42e240a-b1b5-4ba3-b292-678ae55e524b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a18fcf76-7fba-44a1-a9ed-f40de0d7ae9f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c53b7800-c96a-4f8e-9997-34941fe57f5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6c90d53-b272-4ca6-a1ce-f1f8af5dcff8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e533f5aa-cbd0-444b-962c-cccccf1d1ea2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7918ae97-0c23-446f-b012-243af59efe3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ceb9d3a-c385-43f2-a65d-a2372968a2a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bfbfa1f-a7df-4a6a-bac1-df37022f3806"
            }
          }
        ]
      },
      {
        "id": "ec51cacd-25d3-467e-bfda-fd2070743fde",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "088bbb41-f85d-45a9-904e-9c8747de0516",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dd5b77a-f65f-4839-9a1c-956630a6fae3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c3f6ae7-e122-44c0-9e52-5243e67e2150",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002eb87a-5564-4af6-9a26-2c943a4dad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10733f8b-be73-4f20-adb2-7d7c5cd3e615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65bd87e-42e2-4360-bfe0-3aa9d4d8f0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0c83f2-6431-40a9-9646-07dbc94fb97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af08f68-7504-4fc7-9dcd-9b397ee355d3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb0589f-b946-4a39-ac1c-353d507f8a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782c48ac-dcab-4368-abff-f93a93762b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5144c49d-012e-48db-b9d5-7a7e6ff9b081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "045725e9-4348-4104-9299-dff085551c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d274b8c9-258b-4ba3-9651-15ef2391685e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c0a756-9aba-4f98-9541-25a0289ec9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f34f3d-d7dd-40a3-8984-8056af446a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f822fd0e-172b-4f23-86d7-49a30f15388b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70b429ba-690c-4bb4-8ea3-3df799964e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2540be-de9a-443d-8f78-9ac339d7ddf4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11271ad1-83b2-4a29-8942-ee18d6d2bd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46018843-a07d-466c-a6f2-d130bd75605f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9deacd3e-9d1d-4c2a-9821-2c331ebf7c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97972455-bd86-4875-b9cb-e4612cf4307c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5794bd-8d0a-4386-a4f2-3cb5e1dc609a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8aca73-dc13-4e31-840e-8ac90d90e58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18421ad-8db9-470d-8d4b-b4a9fe9c32db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fb2c1e-95bb-4be1-8f49-0f4870f8201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "385ae846-1d48-4cd2-9f0d-baaa659ac96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1c332a-b997-4f14-b929-06eade93a930",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b189d790-fabe-40fa-b9f5-17b6fab3b350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23de73ae-2a87-4bc3-b195-d0717e00cf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e71c565-12dd-49d6-9726-4554eabe9159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bc028c-e77e-4b35-99a7-2c881cd4edde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10949ff-f094-472b-9ac7-c6e55d4f7965",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a23534-0646-4bf3-ad9e-13c88591584b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c7bd99-452c-4643-977a-ed4e689bd09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006ce76e-e964-4063-9723-e22eb6efe2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1932ea-cc57-4d0a-b41c-f46f74c1d495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0c6c7d-36fa-4a49-beff-c0120503e1de",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c944897-8e0c-4185-aeed-697435f0879e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c683f969-2557-47c9-84ca-08bf831a688d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3204590-1bec-4452-a268-80cb8f6cc031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef087af7-550a-4f9d-9a98-79b982987982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6bfd30-3cef-4481-a1c1-2f898366b720",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0f6f35-f524-4fca-a47d-5c1c840d021a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dabff56-2022-4041-aee1-ca6dc170904b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc42523-0788-469d-af64-a625b6c4c874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bb5641-2964-4c67-bb93-e055b64febf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ba96b6-a45f-4759-8756-af24dc48dd44",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b419db61-7388-4cd6-b3c4-f4ab9e77a817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcb2861-2f81-43c5-9ddc-09cb4f0a092a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8714dbd-88d6-4ac3-887a-31fc7937988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5398fbd6-66cb-44a2-9c3d-badb276a3765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbacb6d1-828a-46d4-8f42-a264e888fcdc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d2348d-dc4d-4922-9e21-067f134cb9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ecb6ce-7b57-4df1-8b95-4c0802c84d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04626a7-c9ca-48f2-b8f7-7df891511b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2d4b80-56aa-4d5f-8c21-982163cb54b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fac8b32-2e8f-4c34-932e-d34b2f815b38",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef3a2f3-bfab-4c34-bacc-14de4129b17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c919af37-b5ae-42d1-b7e0-3caeebca9fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a66e10-214b-496a-8971-bd6db52eee2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a90fef-a0db-4e69-9d6a-fcf4751f8b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54af7ca-1de6-4172-9a93-a48d153f5c47",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e701cb7d-f73b-4192-9e8f-9faa6a44c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb3e0da-be4a-48a9-a0c1-9e87d3228c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a46379c-6ef4-4d3f-a1ac-842743844548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "884c2a74-51d5-43c0-809c-006e4b91f385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ec72bb-104e-41b5-bda1-d6cce3668813",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a16a8cf-e2f3-4e4f-a2f5-ee076d51e659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6467a2-5eec-4ead-9c85-ee43ff6b2cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6ca93a-a983-43ba-9ba2-6e208628ba90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39b3fbe-7a96-4625-b1f9-99bb59a728f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a953c778-7f3e-4644-add8-c42d33fb5de1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c1aa27-4101-4bfa-9106-ff77bde0bac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25295682-4fad-45ed-91d0-1da3f53aec58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd4d668-e70b-4d35-aacf-b14369fac438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb77715-1be3-46d3-8144-f4c08c588581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd250b2-7e5b-460d-8416-5a49201a504a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a08146-7344-45ed-bd95-e81a9c06430f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d503d0-b92c-4d99-8dbb-9c588bfdb710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41030b8e-6d9e-47d8-aa5b-837874bf323e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "62221e97-8ff6-40ee-bd10-921a3b70ab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8d230f-904e-409b-bde0-b025c5559929",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3560e1-b3e1-45e2-952e-90951fa576d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e4c4bf-9138-4857-9a0c-f6847bef144b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18419e09-d5be-41f9-9b31-649a2dd5b013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0defea1a-5a82-4949-97e4-13232ee96074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badf7b21-afa8-40e3-b760-207071c27450",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19abb0e-c004-45f3-92dc-bc23b11473a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db062d98-e55e-41d3-ac6d-c200d928a149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f883e2-04bf-4e10-aee5-e1ee8ec6ca4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03629012-6944-4c29-9a87-8578915d54fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031c167c-2985-491b-b115-965d80b53947",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3356965f-812a-4e65-bf01-b6d7ebe008a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3ca0de-a36c-4930-8a1e-9a2b170b0362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18439763-a2c7-484a-bd16-2dcec03700e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "215f4d61-1eb0-4815-a46e-a845e3ed2866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d22ee7b-0c95-4101-a3c9-f1db2592e561",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c497d69-5273-4261-81d4-678d4dd3dfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34fd351-3e76-484a-9e1e-e70950505989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1293dd9-f547-4b33-bc8f-8a1a49050dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14eaaf2-cede-4429-baef-f7526598f402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331c350f-f7a0-44da-ad3d-e48bccfd4e7d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4b5974-a458-4de1-913c-58a7d3edd903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9bd175-98a4-4a49-87ab-da8ff22560cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1289af3-ba82-4d7b-bad5-4837e54a90c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fbe829-33a4-4c0b-9fee-849ed71095fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209d3f79-0457-420b-a815-547c6274bfc5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94ddcdf-efaa-414d-95d2-76b98e23a642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592e9c7b-1499-444b-b0f5-d9060a4a6123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad08db8-85b9-43f1-942f-b2bb8e574596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b510af-f06d-4d3e-8cdc-eab4f7cd4f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5adf37-32ef-4a86-8174-109cd52565bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa07ee2-270f-4633-9d6a-63723dd06eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfc7e71-a3ed-478d-93b6-519cf0811e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a2f31a-f6d3-4d24-9075-0937732e96b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aefab02-f0ca-480c-b8e1-1d1c10af9206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bda044f-67c9-4f6e-8eb1-cd8215499e75",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd90c6fe-825d-43c1-a8b4-591612bd5c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04253faf-f0fb-4171-8bcf-73fecf8130c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52af0785-48de-481a-9c4e-61d9a9e6144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0acf8245-ec56-4366-9c7e-752e314a0db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df322147-1dd4-47d6-ab9d-d404d12948fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1610ee15-5a55-4891-89ff-a7e026c27b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776bdba7-84b4-4890-88ad-f30c747026ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70863072-c54f-44dd-8064-69f6d1095cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c70254-361d-4651-a932-5d5ea51daa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc56df63-9d20-40a8-b8a9-cd8af347a405",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624d97c7-6de3-4108-af25-bfc340db50f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1c74c5-9d04-4a59-b8b6-0e48e8d53714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1b9d9c-4071-4c47-b865-543e42ac09af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "862db925-94c2-4bea-b007-7a65868de14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddccc401-b9b6-44f3-874d-15b300028205",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eed56e9-9fdd-4ab0-9b1e-5a77d7389cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c39b6d7-feca-4086-9848-031e71dfeefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de10e7eb-97e2-4608-af22-1ab7bf3a34e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e86f23-cef7-49bf-8b53-98b742f5c2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edc608f-ccf8-4fd2-824d-0035bcc48508",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7439a36-b32c-4784-b6a0-983cda6e2c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f457525b-df96-4b81-a2cc-3917fe604b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d46929-49fc-4a66-b3fb-ac6fc897d2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdecea7-dcf3-4f57-9191-bf43056f5712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c0d7cd-4277-4ce2-90cb-84207380f2fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a5aa71-6d0c-413b-a88a-90cb73968362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ea7e14-330f-4615-bd85-34eb55ab4d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a855987-3ff2-43c8-aca4-7b07045307ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17950e7f-4cc3-4143-8a22-feb37321fcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad571f0-c93f-4c3d-86b4-34de1c206eee",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2bcf70-e7d5-4f66-a867-1ab4cda100d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6ad13f-7568-48ea-aa95-330d893bc741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9564fb9a-5e86-4f19-b444-27c3bcd26c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c42269-ec85-4927-b390-fce4a0736c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3ad186-e4d5-4a98-848d-1e07b7e31226",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373a0c12-8afc-4df0-9d18-b76591fe6942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad18781-6eda-4071-9cd8-77d0a4018c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6b3f69-9dcc-46f8-bdcb-7c4c78c52fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c58c00f-c5a8-46da-93cc-36ba43d7fee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177caa6c-573d-45fc-88e9-b2d384b9e220",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6195c58-3cfe-4c6d-a9d4-d65cd5517b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9cad1a-ffcc-48c3-ad71-bf82b0b4e88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15fa6d4-5733-4027-a673-eb8cbc75ba0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "842ff926-5496-43a3-8074-0847108960b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f1a357f-b9f8-4cff-8768-4de37a7bd6a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14088819-7509-43bb-8d3e-bc7d19abe9d5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a5d7d9-968a-4627-b0cb-a793218dca6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "83b68034-cf81-4e72-a244-d3e1aa41a977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52ebd63-fce5-405c-83eb-54742bc25a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ce15ac4-c21c-4f31-ab31-e6b7028a00af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed33179a-de89-40fa-8516-c9ed4cbcc36d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b4460e9-ddb8-489d-811d-dcb452fe36f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a5d890f-1b2e-4ffc-9bdb-23c4451a5f03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f164019-034e-45d5-8c16-802097ddb730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78d0309f-130d-4b87-9232-06747bdce90d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "524abf22-88fc-4367-a6d8-f836a121c2d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28b13a16-8acb-45b5-b35b-93f60dac729f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2df721f-6494-4cb2-80c7-f346e9904987"
            }
          }
        ]
      },
      {
        "id": "3a3c830b-6ca8-4bf5-af4c-2ac125a3d28e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7aa9edd7-6df7-4e2c-a5b7-722c1ea2e466",
            "name": "Negative Testing",
            "item": [
              {
                "id": "140e03c3-bebe-47e7-a11b-438f8ab49d84",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bbfe2cb-b06b-4932-86ea-ef427a1ef929",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07c4f58-0093-4bee-a0a0-bb5916e5eae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c44f03-4f35-493f-b561-f9cfbcd3b013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e661925e-bd0b-4b74-baa5-f5c256326dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8eab74-7351-4485-924b-947e0857c723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c0ae6a-1bef-4a92-b5eb-4280751497dc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f58626-6e15-4a34-9841-babd92e6b869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a61e83e-3632-463e-b425-f847787388c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f5f1de-bda7-4f25-a765-0696fd4a6f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcf8327-cae4-45ed-977e-2f2948bd63b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3e88d7-c724-4d88-9c05-7fa8395a2546",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d8e27b-379d-4d5e-9bc2-64b81b02d0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3091d8-de20-4050-bc51-c2be16bb0849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae8662f-101c-4f53-9769-3f7f2d31ae9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "935dc1cb-e91f-48d4-bf44-3c0e97e91f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821856df-bbe7-47a7-8f1c-c55021d08cd2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df0c9ec-dc34-482e-8dfc-a91c8f6da066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb681ef-0deb-4704-b033-892ef9913381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9877d578-0877-4880-ac94-8d400ade87a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c63a845-10f6-4425-8ef4-aae6732f884e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64db010-1d77-42e4-afa3-1d41863eadf5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e17e3c-8042-45d2-b7aa-8139e55bfb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5357dc-f00d-4bac-bde1-20d04f4c6a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c879a362-c720-434c-a683-5cd37d0ae474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd11f67-2fc4-4c4b-bc26-06a15d8a8f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b701be-1aba-468c-a156-f4ae6a3ece15",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878a5697-6d47-4cf3-a86d-3b098807585f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47176d2f-f4f5-46eb-9469-a48a33b7a0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754b0842-93e0-45c5-a1f1-98b6bffbc376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffff9c3-eacd-4199-b15b-c3a25b9b4dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56111cc7-dd55-4a21-ae4b-3b7b263eb11e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679fd7f9-8290-408c-9df1-db168525d852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fdc815-69a6-4563-b5da-fb9be10dae81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45601e2e-f671-40af-a447-62df029a0802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3992ad-68b9-4a08-ab36-ee00983115c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d3b161-40c9-4c5b-bec3-792541012f74",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dcc6a2-3936-45b8-a77b-144559fe3849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb3b477-c575-496d-b702-39f88bc186c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736e2459-0abe-4cb6-baad-0f5ba7719b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abb1a47c-f6f4-4491-b30d-ba755b0693be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b3c5f6-6bad-4b33-aa3b-55231b514bf8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5ebd73-39e5-461b-82c3-a61cdb1a5ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71743b3-b153-403c-9972-d5b52163ea91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49704d33-52fa-402e-863d-e584ff6fb11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f060a489-00fc-4709-8861-0457fde0d36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385edc17-6b0b-481d-8e0a-0996312e7668",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad24457-58e2-419a-918c-67df6f2d217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977ccaa6-0b98-45ce-bfc0-0bae24d4fdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68976299-3037-4b08-8589-462a67895bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "745ca166-f3a8-4384-bb65-0d2eadd4bab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bc3aab-b65d-44c3-97d4-e7bfbf6cfa3f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f52dec-87b7-410a-b0cf-76fa8a3a5a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e99c83a-200e-404a-8e8a-4611b223382a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183e29a9-574b-4e00-a961-f728a8c9b690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b83bc579-b3ed-4e04-8cb2-901194cbe9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a8f862-81c9-4682-aa1f-ee59cfe291b3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7363445a-5fa1-4eda-a32d-630e46a71a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d653cf5d-e624-41f4-a8e1-c12640843574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ca7c3a-11ab-4341-9301-d606f424f788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6258e60-1b85-4177-8e23-9bfded92d126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f78212f-72c0-49fe-b8ec-2ecbee53956c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c627558-5b76-4ca6-a5d9-786251576895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee2db3e-eceb-45bd-969e-84b2cf5ce5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ceefd9-cc41-4282-9b53-228f48012018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "024886bd-31f7-44b6-8083-92471cc4092c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756c7309-50c2-418b-8071-931b372a22cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93846f0-bfb6-4295-ad7f-54a1a326f38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a651b500-ddeb-45ae-b715-bbfb36ed496c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437582bd-5d29-4120-8caf-2456dcf991c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ffeba5-0ec7-4e87-8348-bfec07a53305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038f7e51-2e76-41b8-874e-99ed0628d449",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a087b7-2a2e-4c16-8634-31f5f1f77dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc96c29-9a3f-4d1a-983b-791305f22b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3843f90f-8ccd-4a05-8f4e-477497926e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2937aecf-2385-46c2-b528-e13ae3efe6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee462408-3cd0-4c2e-a1a5-0a45303493d7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c7dd4f-7f22-47fa-88c7-5669d10411fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4db0b8-4afb-4a44-b224-4efbcf2b9246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893b39be-8ae3-44b2-ac24-4d7a6aa386a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "62da56a5-6a16-4766-9271-d51175163d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6ff45e-391a-4fb0-a6a3-c24667e410f3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0999d20c-693f-4397-b23e-50098409993c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18890d9d-430a-4573-ac04-38a1e614b360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7089fe33-b49a-4ea8-b0b1-300a65ccbacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b23f29-f640-4499-9a33-a87dff57400e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6bc934-c29b-4a72-b435-642db0ffc6be",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1af5232-4608-4b02-9a89-acf0167a587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49099d5a-cf00-443c-8778-834dce4fbc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318d5ce9-e4cc-491f-b488-8f0bd3a9aead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f26534-d8a0-45fb-816f-eb9311dfd6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84705a0-7a02-497d-a2e1-3058cc0c329f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e573ec-7748-4575-a6a3-3a4d8104355b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee14ab3-1e49-4f2d-bf29-f9e42458e2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a61b876-4c6d-4232-96ef-72a960595be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffbaa38-ce5c-4b23-b3ea-e5e265883f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6f0bdd-c7fa-48a8-b6ac-fccd9c6cc451",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366f9bbd-ee99-4cc6-ba14-e60b1e69f331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21face69-6ae6-49a4-af28-11976a6c9db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d037e6-5e30-4497-9b2a-7e238b38b1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ce0dbc-83c2-4ade-b889-1a0b756efc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b121b2c-f4e3-41c7-8fc1-e817833d8604",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae6dbeb-6f09-49be-90c0-49b6bf8631f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c60ba9b-f836-4c73-8f8e-0e98ada4785c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f004e9-fb4b-402b-bcb8-6daa2aac8206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "745aedfa-f64d-4048-b52a-6cbc75d1c8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f6fb19-8726-4ad9-a2ce-51fd53092af4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a81e914-1485-4587-888d-c00f5b934788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8d3e2a-b821-4254-9931-362505d3db67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e325479-91b6-44e6-a9e7-59c2a12bcaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b1e55a-f214-4251-9bce-89879f14884d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e982c27-2be2-467e-8e73-044d0bb47f7d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e86f323-f62d-4074-b7ea-1ac1d8147970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97933ab8-54de-4a32-a737-3e2df60fa300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166c7b78-75fe-4bac-b151-5c3af6d62121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0377fc6e-fe2c-4276-b36b-a3aec15b98d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bb5d68-aed8-40ea-a1c8-8ecd36c8022d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4692954c-9440-4977-89da-7f76d86c9941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab7f2f9-d6b6-4023-a285-281d4ab44dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880d2788-69c2-445e-b84c-8b2b53c268bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ea5384-3a66-4f10-a2b0-624c392a540f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857f8cf2-15c4-4a1a-8186-26368468eee7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cc65e7-04a5-4c0e-b1cb-20f5c80c727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4341a12-2e02-47a2-ab6c-bd66065ec6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31e76bc-0d22-49ab-ac97-f2417c0c0ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c099f110-b052-44d1-be23-cae8b0d111eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecc2c8c-a229-43b6-a268-ab3270871e6d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbabcf28-5794-4509-9820-6315156cf7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284cc281-711e-41d2-8af1-a4e27fefa2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b40133-4423-4329-89a5-53e8886268c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f861d4-1287-43dc-9db0-16a2fd1abed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd8639a-9b8f-4708-ae13-aa5b805bfd61",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08450be-f87c-4707-9b85-06096fb59b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8255d0-306b-43dc-a906-a4981ed49dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251c38f7-456a-415b-a82b-960e44f0b50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6ee6b4-d15f-4e18-bfc6-16d890ef1958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6d7e8d-e787-43b9-a416-f8e7093f845d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b5b948-7b82-4650-b31c-9e314ac15eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f95266-17aa-488c-aaea-83567d44de73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22cd79b-f4db-4dd4-b6a9-cf864550738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b16344c6-8273-4859-b0e3-edc860c5af09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcec51c-d129-45d0-82bd-be7d1485ad91",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f8b99f-fadc-40f3-a363-b47f9a918b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852e384c-f71a-468f-8716-ff3b189cf06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe85d71-2f14-4047-9389-6e0fa5a60785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d229431-a39b-4c80-be74-b73a62cde373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acdba81-a904-4cd9-a2a3-57dfd4182cbe",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b716bd86-d611-4c3d-a804-42ecbe4f8c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d07e32-09b8-43c3-86d0-e0a6080b4955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a59c98-552b-4665-a9ce-dc1a909dace2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a2eab6-6490-41f4-a7a4-ee2db1141d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1ef6c0-6155-4df7-a52d-042b4a15ea0d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9bafdb-52f4-481d-863e-dc4b152f15ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b46e8d7-7ad5-47d5-9212-b547f3782355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e566a4-9bd0-4eb7-ac71-d7df8d2868af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ddd781-0d11-48ef-897a-1705ae50f6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac77a8e-a095-4a87-a817-aebc7b5b8a7f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84283a9-d50c-4328-abc8-481b804bc6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644f2a16-c289-4475-a06f-d041966e64b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a73406-2ec1-4d02-a3c1-e9238c49d955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a946780d-daaf-4a0d-aa5d-9aeeeadc8910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed92b22-f017-4632-82c4-e5e773070681",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d41393a-5e07-4743-88a6-9152827f0235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5beb72-7059-4128-b1ca-6978cb669816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9042d02c-bc7b-44e2-88d9-ff25940c9157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3fbe8b-1786-4075-91f9-edd0c2bb8139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549d7a1d-2869-45a0-98d9-8db5ffe091c7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451039c8-2eaf-46d4-8cdc-1ea052e4c2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a794eb0e-b4f3-41e6-b81f-fbf04bc39df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429e9e23-c9a9-4fda-b17e-a3f36512fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb42746-ca2e-48ce-b06d-1aded849dd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a7408e-8e93-4203-952d-f8464c837c1b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f693636a-c7a8-4827-bc09-20ab151402ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d675d0-1d07-47b5-94c2-24d567a873ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fe2683-858b-43b7-9dbf-9d8dce9da8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c594ceb1-3f74-4273-9254-d373f49983f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a8b335-e3a5-4e0f-b495-8e76f08cc9b2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccfca0c-247e-43d0-9859-dd09af1126de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b744e2f4-3b21-4252-800f-e90afd64c5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e172d95a-3d2a-4165-98fe-a56be29b99eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a6006b-418b-4c73-87a7-2d3ab858b251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81a9492-d2ad-428c-a9e5-54c32138f38b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc30fb4-b221-4a0f-8993-ee5d164dcb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed222cf6-f334-42e3-be44-e4c470a49fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04939292-ea59-47c4-b731-a7eb9d2477ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c3118e-fde3-4f5d-93e2-ee2819658791"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "843c9bf4-4c7e-488e-bb77-62cca6909280",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e9a4541-ee2a-4f73-a7f1-a4e16d1447a5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1a7d70-9c9a-494a-99fb-d9f8a710ec62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bffa0d-f138-4507-b899-96480aa6cd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e05e92-4d58-4edd-ab33-012bf02141f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cccda82-21a6-4d63-87d0-d62ba27feac1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6992888b-2120-4051-9efc-c2984985c3a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32c5dd3d-c00e-41e8-8782-bc1d62aab6d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f906e88-7bd5-48c1-b9b0-e091847a5ba6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "791e16ee-3598-433f-a262-25516dac330a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed4adf24-b46f-48bf-8dd9-ddd273863922",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd3fa6b3-cc7d-42c8-bc3c-c37a8e08496b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da73da07-c109-4681-a2ae-557f69420bfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c364679-eb11-42aa-b7e8-14a936b32e2a"
            }
          }
        ]
      },
      {
        "id": "67a99e2c-8c44-40d6-a168-c86d64cbadcd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e3595134-0669-40de-96a8-f5fa2a938e0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe168735-101d-46f8-8ad1-2be266949131",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "921696b1-6672-4a9b-a9b7-f320063ebfb2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7a9417-096a-4805-b4e5-5c20ab45236f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c859f3e-6ff0-471b-81f8-a316ece6331a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c16c2e-1a14-41b4-82d9-6fe0603b2657",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb729372-5f59-4085-9770-27d3b4f0ba0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec5508a-9056-41f2-8a84-a15eb316c6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cef021-79ec-4405-b6a3-92e0e41bfba7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4490cae5-40ec-42b3-9e68-951f1bd05a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75f9fd5-f712-4fb3-8aad-5aeb2f33f113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce06219-3409-4ca3-b700-58986ba4af40",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b72bbfb-0ee1-4f90-932c-2d3afe6bf008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d56f62-d959-4647-9afc-52f2220c4376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be8b19c-28eb-445d-a23a-4e0764e75031",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2868947-0181-4762-b350-a0216a7971b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4e2b4c-da99-4ea7-b43d-7f32a02a697e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba27717-453d-4f01-81e8-d36cd484b078",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef8be88-f9d7-49d4-ba03-e0ab96962ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c280a1-6751-49c4-b811-75885ffa0c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f4b369-f67e-4c73-9f7a-378b46c38adb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bf9777-631c-4207-aebc-4bfc0b17c458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6af7b9-bfbd-4a1e-be95-00d1515dd0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a657e2-9a1e-434e-8a21-c881cbcb026d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81fed7d-29fe-4c75-b4c0-bc10725a31ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9158f61d-5b21-47e5-b533-1f89eb11c1df",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d15ec1-6cae-4288-842f-5489ad6d4f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbfcc2d0-ccc8-4ada-b58c-9c6eba00f4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc236c0d-8e81-4992-89a1-028a97c9afa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e851fc88-8e36-4831-8a2a-b2c9865f25a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc3f80-bea7-46ea-90e5-d52febcdda4d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfab4038-f4a7-4347-b67c-e78fbcf7fb88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f162512d-9c5f-4ffc-96a8-c955d598bf69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6b985c-31a6-4140-aa95-60cb38df38bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41b849d-306c-432c-b4d8-a925b1baaaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0549ea-ee58-4a9c-8fcf-11a8ee1b67fb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8598615-dc6e-45c5-ac74-459973180f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8abb23f-5837-4dfe-9ccd-8e578eb4db5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c8349c-b87f-40c4-a4b6-6fc480ab4822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a68b87a-c0b7-4c41-bc5e-3eb1bdc1190d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20126b18-07ef-4a9f-9a96-724848a7d0b0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9907aa44-ce7a-4c5f-af01-388737f325ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e81012-4fe9-4957-9a1e-5d07c630573a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae67e3de-aadd-4481-8d8f-cf6b9c6ef64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ca3ba5-f5a0-4b96-bde4-6a158f7e5221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de69cb0-3251-47e3-ada8-2b4542840788",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6567b8ec-7342-4690-abfd-6e77aa6cc2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0463f3d7-7daf-4476-b13b-469ff3d62cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dd9283-b3c3-42ce-9923-f47ccd8515f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7781b5dc-657d-460f-a7b0-4503a7ca6a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316fdfb6-abf4-432e-89f4-7e8142302527",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7f4670-b4ec-483a-acca-cf40d66d95fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54982455-3101-43b5-96b8-459a7a1bc415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452133b1-0073-4af4-9f10-f1f6e7518140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0135b6d-21ac-48fb-8003-0dd95f5a0ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e22533-3543-4126-9802-faf2571e4bfb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e510e27a-c700-4fa2-ab05-68e6c0831b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c29ce64-cd38-4493-90ab-fc4ce68bf3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b19426-0fc1-4226-9973-72df2f95009e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a95433-df72-4c41-98ce-42e874df0cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec61832-f016-4801-9284-6073faba00b6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ee99c1-dad0-4332-a6b0-f002f6acdc29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a00349-f9c5-4cc7-9a81-d96498c65a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb92a6a3-9296-4b20-b785-b54c7066e719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e8d447-91ea-45ad-b63d-3b70c0cd4d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b46fb50-7995-49e6-8cc9-f3a293ab03d3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22399399-a6e3-49e0-ba1c-c3089b6dfc69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb5e672-1184-48e8-bbfd-64e7faf8416f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a582ab1-d780-48ad-98cb-f7402e37535b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662c44eb-e98a-4423-bcfb-9477edfe1337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51a43b7-2002-4d84-8507-dc072e11c92f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9508e23-1bba-4b03-9eb8-d9b858928209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c453ce-1ee1-4b78-94d8-ed1a0ca3af89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fc78a5-1ffb-49fd-b83f-8fd1a8bb8b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252c5216-0ab5-4891-92ae-af8f3f0c8062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584cc2fa-2e0e-4119-9ed2-58c50ecd19f0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5100ace-6d0e-45d6-8ca2-cb27f1ec0b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be129945-d875-41da-ab17-ad9e85a7c2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fae28a7-cf46-41f1-817d-347b38e2cdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203ea8a3-9377-42cd-91cd-bebc5590e143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eccdd2b-a25a-486f-af4b-0981a293a3fd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bdd93e-a07f-440c-9b72-d5a39f160f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9549d56-8046-4369-8533-6ba8b2e92c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b196633c-e629-4a28-ac83-2b4bdabb211a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3470d66c-5e64-47c0-872f-1ebfe87192d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70198034-e52b-4510-8d06-be52b8520ab4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b8009d-e359-4592-9b93-c85e68d8c079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c47e4b-1931-452c-904a-f11753b27cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baad8ac7-791c-47b0-9d3d-6c75456a38ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd57c9b-f335-4b7d-b4b5-7a18a907b0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2618ecde-f5ef-4d0a-83ca-c1885e3d3003",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92a9fd2-7daa-4f1b-912f-812487fbc7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a046e3f3-613c-4ae3-9fe6-217f2afcd79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8517ecdd-160b-4a85-ad65-c556c8bac6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a901fa-79e4-4705-9581-7b0c3762e2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bd7059-5b60-4114-8e61-8f0e0bc609f6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8bb129-b4fc-4f45-bed2-5b1c9fcb04ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc448bc2-037f-4b1b-b6cd-c0e7b1e062c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84cb5c1-2802-41e9-81c7-38610b2797ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a492ffc-bd6a-4695-b9de-0fd740d944cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0274a7ca-59eb-4039-be4b-c8e7ed08e3ff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe53fcf6-6eaa-4d1d-934b-8abd6b8c84e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ae0606-4528-4946-857c-a50d4931e87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e590e0-8202-4e46-86ca-9c53a01ce479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcd14e2-5c03-4528-bd02-0a80cf401734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca33cae-9dce-45ca-8f7c-5769b2099f78",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c8a653-b9c5-4763-a1a2-3555382c14c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2192e66-0d0b-461f-8b25-2ed70f4a9411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1735cf84-387e-40b5-88f8-cdd0ca74dc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8799d2d4-49ca-4881-982d-18ab59c1ae4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988b102d-a084-4f94-8b0c-04a4f68d9388",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10a18ed-a35b-4f02-ae84-9100119516d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe40241f-90d5-4918-ab6a-2dcca0a06cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c90092-673a-44ae-9ea3-2bf273116003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e6256f-af5d-4c44-8bbf-80f94ec9f514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8f7386-089c-4442-9d62-48ff3d41d502",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74917741-2a20-418b-8f6f-7cf0b7792fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1dd77e-1b70-469d-95e4-03ad361f8d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1ab877-a04c-4ccc-9aec-6c09e4e1ac0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a00a948-7eb8-4690-ab8d-b9aa8e1d42a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84498362-ebb1-41bb-aa66-7f380c2a1f02",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cf2555-2fdb-4b60-834b-66f319172758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b7270a-73a4-468f-8a34-2bc5417fce8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a538883-3afd-4f34-a3e3-9630dff869e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eb672b-b893-428d-9136-a21d13b03dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58141005-03be-4186-85a5-2aa35b624f22",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b60154-7d68-43d7-8b5b-a56279e6b2a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dfe252-14db-404a-94c3-a164995c0d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbad09cd-d1b0-40d1-bc94-eebce7e1936a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b746126-1fd4-48a5-b56c-a24862aec17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5246a65e-190d-404a-ae03-df378e656877",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f409a1d8-0611-4914-ad34-b701a1b4f6a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85165689-f136-4384-81aa-6beaf5039cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b42dd1-0748-498c-8057-10b815280daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4b47a5-1626-4464-a648-1306de8acbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b543a292-7897-4793-83f0-0f80517d8891",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547f83d9-b71d-4bb4-a6a7-f97444f40fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781ac344-0d35-4811-a655-420c861f1be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfeaf45-2915-4a3c-b631-cc10f5128f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee1c8b3-638f-4d51-b8fd-d8e5dd8de0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45e2a78-78ba-41e8-8d86-33d9ad347c9b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ae5614-9b0a-45b4-9013-23188e340fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ce28546-af6c-4145-8e12-3f20049a5115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e029b3c7-5354-4e62-a682-1dbbedbfb60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e90503-16ef-4f97-9043-75d9a991f760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b4418c-c372-4481-9292-2dbd4ede7155",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38a1ac2-b13e-4fde-9d55-e9f0bf222edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ccbd52e-8a24-44de-a1ab-180da599b624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eccfb6-d1aa-4d59-a968-1ea8b8e30d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362b3e1b-5387-40b8-91b2-e502bbfaa5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6792ad-5fc0-4a1e-811d-e98341a5eba2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a24588-211f-4980-a003-543a09b887df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d722eabb-d2ba-4663-a175-03d87bc3133b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c14664-69ad-4b18-bf4d-b24ba5b7733d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268d74af-babd-4ec1-a3ee-d2508151d60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca9297b-d5c3-4a14-9243-d28b40cb525e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff421e1-3553-4929-b0dc-c6e5d90dfac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d384eca-74de-41c0-b114-f0dd43361387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fe610b-b262-4cae-8c45-a4bd2ed850ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca30cfe-0be2-4025-b8fe-9d4bed1d9e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381ce8de-cb5d-4d3b-89d8-c6354b0e0f74",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c6c07a-b78f-40a5-ae98-f07523ac44fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d126ad4b-7ef5-4668-92af-e0ce359e87bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f542a6-4f2a-4c61-b72f-8a68efe0be94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eee369-6c69-4bd1-b02b-0db1999cbeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca99047-e4b6-4f49-a6c5-e02d2efed359",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd6ac8b-af8f-4c4f-a4d5-1123af8e2369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bc9fed-f496-4a20-8575-29b3b6816eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5facbef-250e-42e9-b025-d7478678c218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf2b0ea-0ac6-4f79-b0fe-338867d2b072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd381ad5-7c7a-4d9c-a0d3-0331527a3748",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c1793a-940c-48a7-954a-aa2b7cc3024c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73d0990-7f7f-4a12-9c4e-74ab72d0e988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d3c057-2ede-4e82-a2f6-177fdf07f2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd8b1aa-7d55-4e0e-aef7-5c47bae8a5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c3fbf1-4ad4-402c-b589-215b7b3599dd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3c0ace-7d97-44dd-9e5e-212d8d41dc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3332d3d6-7e95-457b-b780-60aeb508d297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b88421f-86ee-496c-ac3a-c9bfdef172bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b60928-2f59-490e-99b0-fcfc79ac7235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de87d17-851d-4351-b305-adfe694c0845",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2e25e0-6e12-4092-a9f0-b0c52f03b30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675e5dc4-504e-440c-85d5-6761c835033c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2e92fa-29cd-4223-8a17-5c18ff06e3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d80a336-02e7-449d-9dfc-a7e0a34bd032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f883bcf6-3da1-4f26-a51f-4b18c75af763",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45df91e1-19b1-43a0-b04d-65e8a854fd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44737e96-7fee-4750-be2a-b9170a217dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031e208f-69b9-427c-b158-0b4adc92c090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403d75d4-970d-4247-bf66-2b837aad6aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5538fbd7-f355-44ca-b89c-6e3c32431fa5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d0d25e-5806-4964-a5dc-2494ceb36a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a71b015-a811-424c-b9b7-3e21c4911e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f450681b-5380-4e74-9bc6-cdd5733d5fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe92983-bf00-42f6-8578-28b70c7ad1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e048c957-04fb-4fe9-a1ae-fbacea0e590b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8309b0f6-1265-4e13-9cac-cdba85b5cd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0f64e9-01a1-432d-9037-131ceac84d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a13d8c-9786-43e4-a84d-be69ff12b570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f0a075-2682-4c59-bedc-1c965a64916a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1cfd27-605f-4091-b3ae-3fad55784f69",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1790620-d851-417b-a172-58dc2b4f2cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7e7bd4-8ffa-49a0-ad64-5524b212e2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d3277c-03cc-4c0e-a6d7-8535a26936e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f7f7f4-1bd0-42db-ba7c-109134f9a986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61de4345-e5f2-4621-b0cd-8b813c4c48e1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34903fc7-879a-4153-8486-4824c210d2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a28cee-3c24-470a-8951-51f599914a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13138654-d641-4d5c-952c-a463b07402c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e27ba9-d4ee-4898-ac7c-29351124355c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eb64dd-64b2-438d-8ca7-ad7c8aec47d9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c470ee0a-4e85-409a-9940-d3c696b4aa17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3a1cd6-e376-4e9d-a89a-e2d7fdd3f5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1889cc32-8728-4fce-b24e-ff58494d2aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e23823-616a-475f-9aa3-136e0deb071b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c708d34-144c-4c30-9d31-a4bb74f52388",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0964f0f2-7696-4d64-8dc9-49780cf2250d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eccccb1-2f22-440e-b18d-1965ff023e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e56d512-d5b1-4db5-863a-088222482f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656e7b5c-465f-4c15-85e9-effdd2db3ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a630d653-7f85-4034-9abd-5bd2193276be",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4898c23-28e4-4bff-827f-40eaae709003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36a56fe-322f-4ac1-b3dd-2e07a1867441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e75e14-cea9-43c4-923c-c315bcb6818b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359e07de-3e9f-4e69-b929-285a15b0ab02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebd6f6a-59e0-44b2-9ea6-ac2f5294f472",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1844137a-4061-4bbe-b2f4-a51abe64e534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc744d4-af67-4369-b7ca-0e1243b18417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe067a5-e2fc-42a5-8836-fcb4b7c05975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f3c708-b43b-4d92-9c00-19373f379c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0782e030-ff63-412c-a643-b0dd63df7c60",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20845dc0-fec4-4a0d-9225-dff57c9e611b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d14ee4c-0ea0-4b0c-8630-69840b8e2882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab22e88b-c391-40da-af14-5fd0564b5109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad3abbf-e60e-467e-8c3b-eb7d1767f12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34cd976-e807-45d6-84fa-d3fc352ac677",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd69c0a7-7542-46c2-b910-b2c51fc36e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e0be9a-2ddf-43b2-a191-4d02008a4743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b8143e-82b5-4e3d-a5a0-df4969f965f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b550c48-05d8-4a3f-ae15-ce6d8bdea23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792e50db-a511-445a-badb-9c5dd5a66c85",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd519e4-9c87-420f-841d-f1e17f5babb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52edd352-50cc-4133-b8fe-b28513e444f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fed005a-d322-4906-ae92-2765d863d086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e6b462-d72d-4c2f-b260-214325e677df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736bc9c1-b66c-483b-9623-d2f50970b1d3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8288cdce-01ae-4959-8f76-c663a729afea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8a259e-c546-474b-8db8-6d6700a1101b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7676bb21-d25a-4874-9cb7-8f779bedfad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7214f301-6598-438f-b0db-bf060f113134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dabb5e-faf7-4849-8284-a41f6b9a38bf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c4299f-05af-4ec6-b2b1-d99d33c625dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7179666d-5a88-483e-a544-e7b107eee8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a877c0d6-f85a-4e3b-8071-2e57b618f514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7632d959-79a6-4bab-9389-48667eea19f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e2511a-247f-41af-9874-0b0fa89bf909",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9161d1b-23c1-46f3-a5cc-7172abfce3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1edb6ba-184b-4381-9804-6becfc6350ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ab1f0a-926d-4a85-a02b-f8e38e0ae132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a30221-fd3e-478c-b6bf-0028b5480b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "face5777-d521-421c-aead-75183cdfff42",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadfa13b-64d9-4afa-b9e7-77dc62f163a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d6debf-bc43-4d63-899f-b42aa88bea7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a147887-f5a8-400d-a786-dc6c1c26f74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a8dd2f-d389-4fd0-9ea7-3854e4013f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d49c8e6-c152-4f34-b447-6bf163ac3ee4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd1ec4b-565f-429a-a083-e31ff093a8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63decec6-5b9d-456c-9c51-c4bc7f372477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f931c1-5a01-4c8d-8a7f-4867f0561cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30879c70-9c3d-4141-b011-b937190f43c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcd7ea7-6c5d-4e4f-9ede-65cfe1aec69d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ddee5d-cf06-4806-9f93-bfca52528bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d62d959-83ac-4b0a-973b-d43eedf7ca88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2671839-3c12-450c-9003-0eb9edf16c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135d7e72-fca0-416d-8bb7-a66d644cf13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10887bad-8ef8-4eef-b13e-2542921fee40",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd0cc3a-ca68-470a-86e4-0dc69dfb9ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b747d04-f4b9-42f4-93cb-1ce567b6fda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77c6b8a-9e33-4a8b-9266-61ac52709a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5108b8-56af-4252-b57d-92a7af6b2e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500e194-1b3b-4c25-95fa-a28d7334ea76",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbffa5b-0edd-49ca-aa0a-058cc415709c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca2540e-7d6a-42cc-a373-a5ecbb265412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6209530-7f2e-43bf-b074-0604f953b18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e2f5b9-9999-48a5-a433-01ef19fdc097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb63d61b-cf2a-4d76-8049-c03219842885",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b9baa0-b714-4dc5-873e-dc1443849824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2c34d9-16b6-4bbc-b6db-8d32b2dbba0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1fba68-3369-4abd-9c70-525c5503add2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03c7bda-977c-4d39-a8e0-1977847d7fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6cb890-4a4e-49aa-b6d5-d91ad0e69cba",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c521eed9-8c75-4f7d-b884-bcda50453086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244396e7-ed28-4582-b54d-55ae36abe812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c1c646-5818-4f57-b41e-056b3daebe71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1b0bd8-4eb3-4c14-ba9f-a4ee2548e184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e1b3b3-be99-4ce0-803b-ed1c50cee6c6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecaf15a-2e09-4b82-bd35-c67fe28ab8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f104deb-2c05-4042-9274-225a044dddc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe73cb5-73c0-4ee1-b48d-0307e73e2cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8ba647-0f08-40fe-a96e-68165d2162d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30caa55f-6368-4f0b-bc02-19f699d124b2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a694384e-b617-49d3-9201-c70413829d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e354649b-b380-47ff-8bff-a683295d8a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e6fb66-514d-4dbe-b901-8baaeb7fb644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd455df9-5287-4eec-9289-3457dc319609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b776bc4-e994-4df3-89ca-2c810729d0ed",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c04f91f-d95b-4198-89f6-b66228e98755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1493bd-3753-44f9-bfb4-cb474b5c913f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c04571f-6851-4135-ad5a-34299e202f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509a63d1-b350-4e8b-bc09-80d5cddc682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b82d5eb-1deb-464a-9090-1a9f39bbfd26",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e93e4e-464c-4746-a214-eac3115c4892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cbf0a12-11e7-4ae2-8c20-2291891d48a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf120b7-3aab-48d6-af0c-f4b2c084c5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6bc898-7e82-47c0-9ea1-7e26a0154e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9d1c43-7939-4ca2-a990-31f94b79d730",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6956cdda-754d-4792-9b2d-663fb858f79d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd27262-bcbd-4124-840b-50b2fa4c7d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f66132-fc97-4341-ab5e-28a977e2f4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60eb302-28bd-4f4b-90b9-d23e5c80d6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73782e30-74d3-44b9-a5bf-90f4b075934e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e2127c-163d-4264-a543-2f5b1665eeb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f090d3-c992-4e83-abf0-f3d4b525bc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf3612f-154f-413a-8147-f520093c8855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28631bad-a48c-4dd5-a76c-372a1a203a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a8f1b6-f9e5-4502-98ff-254a25620305",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a2cca9-8a29-48fb-83ca-728a8f912387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ccaf881-0237-447f-bc62-634058317b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f430ef-b735-4867-975d-86256831c013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed57130b-fcea-4f68-b990-2c2c5f20cbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01181183-f68e-498a-a607-036130222cf2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61348c2-2444-4e55-9016-537eaafd67be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d897abd-f92b-4b54-83dd-82199f311de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1f9f7e-a160-4d01-b3bd-54bcc0381b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9659afa-eef2-462f-874f-84f2a2006378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bad47a5-eb67-4882-afeb-f45046aabda9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d5938b-60da-45f2-af96-38baa368f3b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cba344f5-7997-418b-83dc-05ef0b2daa80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f235e08-e033-4bee-8bd4-28afd6aef8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c77490-eb88-4b2d-b247-8764a48c6e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c998e96-85c6-4c92-8559-566a6337b8ff",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7a4885-8a1b-46da-a306-600d8af7e786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "630f24f2-cc7d-4de2-b0a8-d2c09af1a248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2b9e47-56dc-4ef6-8e42-8694607c8297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0ab362-b62c-44b8-afdf-4f69b5adb304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05124e0-afae-4517-a7a5-bbe33d99e47e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a632eb0-32eb-4f95-bfe5-cb01455990e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af5d55a9-33ff-442e-a919-4c44ce2f8f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d14a982-07fb-43f7-aebc-b0acda33cc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214c01de-de21-4ca8-84ed-a5211aeeb8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518f0103-8d42-4229-b4c0-c71c6953a705",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78625c1-c0f3-4741-a98c-11903713a034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655d7f01-9976-4caa-b950-b3a03902821c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea64dba1-7e46-43f3-81b4-2f3eb96ece87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2220a6-d083-4f05-9265-82c949aedf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1576588f-25c1-4913-8a1b-eafe8911ab6f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cd4c8c-c6f8-46c6-afd0-b3c29b4a9bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04944b03-685b-44be-b33f-469ad077767b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d41fc4d-9a3c-4972-9378-e4b21486056a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35975f89-dd90-40c6-b22d-14429cf20a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91558c64-f8b8-4a9c-a343-6e32474a6428",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d44367-6820-471e-b0f4-136e073b9542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ab6dcb-adc0-4f50-af99-499ed6bc5a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81d1a39-4875-4b85-8be9-9afc1e97671e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b2af02-7b14-477e-addf-af73cc8f94db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fa9930-a1eb-46ef-8961-883c87e94da2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc5c169-846b-4dcc-a51a-47a5cc026790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa5e1708-37da-4e8e-baf2-1cc62b41a733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67670add-7f9e-4918-a40c-072e19fcda2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3df9512-507e-4a32-bd02-1b07665ccb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35e27c8-af49-457c-b87d-98a2154b7f29",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b09e91d-4d68-4aa8-8e71-09fbd41e8ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7d34b4-a86c-4ab0-bd64-5c0462ed7c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfe4357-80f6-4680-85e0-e09f5f85ead1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb751423-2c6d-4a8c-a914-b62e4b2e7599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cb2606-a31d-4249-85be-ba65d5680345",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ee961d-9f2b-4203-8e6f-022738a0da4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7626c80b-1fdd-4cd6-acc8-9f23e55ec07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20866017-c91e-4ea9-8660-090646324572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9834d8d3-2651-460f-b495-c655a4b5956d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34c93c9-3ade-4703-b345-f94f0b0570cb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04bbe19-9827-4223-b516-909900d20495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139cf826-62d5-4846-a4c7-4b4579fd36e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd35753-f18d-4499-adb9-4d1213f7ff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14e459d-7c42-49c4-87b7-2b5b5109f8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a994e6b7-d36b-4861-b513-595939332ed0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c1a432-571e-45a0-8860-1b3c2148ae02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9baa4bb9-de25-4d4a-b09c-f78603904c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871be681-bedd-40b0-ba99-88ad28bec02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f22ca9b-a6ed-4d19-9159-417a9f94b205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7057fadd-d153-4074-9032-7752a7345fb5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63879502-7c87-4005-9345-0b44d793ba8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad83db5-b5a0-4e08-b2b7-86a3863848e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81066f2-6c3a-44b3-8144-b8d8fc272625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add12d72-7094-4e05-9253-8f9b95a65f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2eeb62-1c3f-402f-99f3-98e2139ba4fb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3e8b46-d903-4cf3-bfba-6a9057602141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "672c0f6e-b3fe-482b-ae14-f7d48edac7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541ba3dc-bb26-4555-b643-eeba361ff302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6060aa2f-a81b-4b23-8868-6b55bafa627b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83cc83c-071f-41dd-86e1-8839b8a45bec",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca859c1e-cbce-4ff5-933e-129ff84438cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56db6494-ee68-4a99-8ccb-a1d666c72ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34393a2a-5c50-48ad-bd8c-79fe0f441ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3f7681-0df5-4b08-8473-8ac63e191b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0c1f3b-6108-4cdd-aa2b-833c12ef6b44",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db76a941-2800-488d-99b7-50dad904eebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac2fb6f-e3e3-452d-a1bd-6b62cde54f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362bae8c-d207-46a2-a642-65024afcdcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68cc0fd7-8300-4368-a954-a100572d7d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef64b7b-417b-463b-9a3b-b41c633b8fc3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05c2743-1c4f-4bb0-8a47-bbc35aafc13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d0bd8b-aadd-4fc7-b9de-44fdfa6e3075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9982b56-3c05-43f5-b385-28a8d2c0ecc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771a0bf3-feeb-4a72-b6a7-aa125767a4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82227420-02de-4174-9a58-ce93ddc8349a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7242a50e-f2e1-47d7-990f-39117ba52e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6ff17c2-77dc-4011-9f94-8568afd41894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea5dc11-8efa-4bdc-8eb3-c1c501a0d6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e8d2e6-a337-49cc-97eb-98292215a59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14aeacad-a5c4-4368-9a90-06470b26b02a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40701ffa-9983-48e3-a1e6-705b43a5dffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4fa6ccc-f393-465c-a5f1-7d4f566563f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de86394a-b196-49cd-9895-48edecb6d7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0f6c22-d9e9-46d6-9994-688173043bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7396cee-53ce-4e94-9478-d40c94f02d5f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d2a42a-2bdf-48a5-9801-1526206fa1f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c5aa25-eab5-4bb6-8d8e-14f56b4d56b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4a9bab-daaf-4284-b592-07ba723f4384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23028c58-d2a2-4dfc-9132-d492165260a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e775e5e0-deef-4620-84db-0b585ce3a954",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fc8fa3-888e-4ba7-87cc-cd989892efa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dece48e4-77ab-4175-b286-77e4b8e536f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59156e5-c639-48ae-8e5c-efe50e015a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3995d1a-7c30-4e7a-a7cd-fed09c9f4ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a36fe0b-1273-4158-8f6e-dde0b63b02c4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c577b0fc-11ef-4559-8d70-0de068fe5c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a88750d-4233-4f1b-9849-500a1bd280c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5eb629-86b4-47a9-9af4-e4241e68a20b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131ddaee-64ce-402d-ae8c-6ea5f27ff0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e02979-1847-4b3e-ac65-7b9a7944a165",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3823e150-ca73-4a64-bf38-03953c381d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41aaec48-1f29-4dde-b221-999e8cba1cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda5c1e8-f53c-44d0-8baf-87bf9dc7266b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69173ba-6a45-4ff8-a42f-ebe4e3688a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace149b7-b766-409f-9563-1633419ebe11",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b033211c-1a87-43fc-92d4-09ca7325a402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a168fa95-9606-465d-8a7e-beceef98bcba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868663ab-a321-4479-b8aa-883b5b77b099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71dbfcb2-6162-4b73-a6b4-3455e8d61c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5981cc80-0783-4a3f-9f12-b8c50bd77e9f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a19ad2-ba09-412a-ac6e-a42e6aa321b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85d878c-f3ad-4a59-bbde-b6bffeeb9c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df34669d-c016-40f8-b44e-7fb7981ac8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c03e6a4-650a-4e6c-af1d-9ed45251ba55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc60797-c8b2-46d5-a69e-362edf63bab6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2c42d2-a8a7-47c7-b084-c338da3c75f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe353cc2-32e1-49d9-8850-c2d7abc36b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5c6475-0091-4f09-877c-ebc2ee1ae4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfce6e2-ae95-49b7-8f5c-009ceb8d4c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c068d8-f06b-4ae0-bd3b-780c79c80c41",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98029933-784d-49d3-9ed6-ed0889f6b889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6fc1722-b0eb-4379-99b2-6964b1b1df45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e681f273-92d5-489d-8162-30695dcdb523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70062a00-2f41-4b38-95e9-320dc6c6b6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d14626-34d4-4be2-8614-931798d1f6d4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa42383-1bd6-4973-9243-4968ad28b6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48cbc82b-8c70-4013-9aee-45e691a9099f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed9dd40-0129-4c07-9fbd-c0bb33af2ed4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e05366a-6fc2-4ba7-96fa-0ba9746281b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f8c48d-9bd0-4783-9565-bd300f064c8b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8af87e9-68b0-46ae-b0ae-f46d7bc8620f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a38c57-759a-4434-8c6d-859820b0d0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09db8c2-c43e-4c08-b16d-b441e9e5b13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff786c3-2b7e-43ec-823a-9e6d03f1353d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e9d95c7-3fbd-407d-b9f7-334549f3ff83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c330233d-7c73-43f9-85b9-3da27f8ad749"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fbdbadc-393d-49aa-a8d2-4e581078e458",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f27fcd0f-c33a-436a-9379-645814c165c9"
                    }
                  }
                ]
              },
              {
                "id": "23edbb11-607a-4c98-9e69-32a9d4a0c49b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8d3b645-1ce6-4c39-80c9-fbca7d67f06e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd56c683-f179-4dc1-b0c7-bb245bb10554",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a8c349eb-ec0f-4b6c-b1b2-9dc1772c5d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47238cc7-7122-4e34-bbc7-cebee527b6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9412f51a-668a-40e0-8aa5-59e7660c690d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae14f70c-9d7c-4066-adc7-486a465ca67c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f9a2921-6eaa-4f3b-94e1-563ec64df715"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b3c11e0-5b25-4fa6-ac31-26371e7077b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eeb2f34-c1f0-4b86-ab3d-6625098f1e0b"
                    }
                  }
                ]
              },
              {
                "id": "37b0cb96-5a07-4cbe-9680-a367a2a5d6b1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bcc2d3f8-2b1c-4d3d-86a2-6f893bb4688d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260a8846-0cc1-463c-948d-b14edbd9f69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ea98fd1f-ecd0-4051-afc3-2860d7004fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891ab63e-d71d-4620-a67a-b84d38e392b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8311a1-5d85-405d-b111-7121ff6ba854"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "797ec94d-2053-4615-9636-af8623e0a627",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e413612-2156-4a89-8677-d7cedacc2fe8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acd74ae4-0ca3-4a8a-84fe-d11cdb598dc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83ab9bea-c79a-434d-9734-b440a6394093"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "846aa372-d6e2-4f7c-bebb-783e9790f241",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3edddcb6-a7dc-4155-8fa8-24f9000ece61"
                    }
                  }
                ]
              },
              {
                "id": "b31c22cc-179b-43d4-8246-f6488a4bf2b9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03babffa-dac6-4fef-8b56-00bb87a94eb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "036b9b16-c982-4380-9ea6-659dfa56ba34"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0abd5d15-dd74-4dc1-904f-9c1b3f2bc10d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46326ecb-cf48-4498-baa4-7e5abee83942"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a83598c1-8478-4c91-99ec-771a67788092",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b6cfe530-ede6-4a49-8fb1-e7998f6347bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e16bbf1-f0e1-4c9a-8762-885786a56583",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b18c4f3c-7630-4d55-9518-0d5fda6c6cb6"
            }
          }
        ]
      },
      {
        "id": "b298f536-9bf5-425c-be95-335a6e20bdeb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3ba80db2-b9b5-4516-89b3-f42032470c7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a646c40c-ac60-49fa-8e14-04c2c562205c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "793b14d4-a812-4ab0-a107-9c8041274eb3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7fd836-06e7-4b17-ae19-340ed5c77c3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "330c00d2-fde3-47b6-b337-5efcbc11d8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cd7e6d-4ff5-40cd-9687-7b2ee043260f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc29e2cc-aa46-41fe-95f8-7f3799a11a73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d9a3cf8-fcde-4c15-8555-4df60df17a8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "234bd0b0-9294-4eb2-92fb-12dbf462923e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3312b226-1006-4919-af40-0e2b7e12137b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "607db16f-24be-47bb-a277-88c576c70d63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "728976b4-e248-4320-bfb4-f984479ba462",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "87a903dc-6668-4945-adad-390ecf0d63f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "786a75e3-8d7c-4fe4-a5c7-a28d3fea0d86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46ce64e9-bed9-402c-a4b9-dcad9c705ea7"
            }
          }
        ]
      },
      {
        "id": "1308797e-692f-40fa-9fff-553e02944d26",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "011264e5-a345-41f8-82dc-46f6e6af652d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40432bd3-e11f-4740-858e-de29cfd568ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7af1e883-2858-4931-8a4e-45ed3eed8c5d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc69637e-3023-4816-9381-fb2b17f1e114",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf70cd6d-4fc7-4c19-aefe-e47c27d31368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d387b95-86a0-48b8-8117-3201cf7ccb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2ef7908-732e-4433-926d-6e25d711af22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ea3c44c-f296-4d2a-a998-53d1de73c36d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92d73beb-7b86-4cbc-be05-18b2457eb36b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e614d8f-8725-4707-9f01-e796e10f80d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16cee28d-217a-465a-84fc-f664a889576e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfc5e435-89ec-4bda-9178-e9e794745408",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5fd425f-d3ff-41f0-bd32-f8b419c74b5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2de7ccf3-4245-4c15-84f6-82a0415a0511",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2784659-ada1-4895-a5cd-29930f897833"
            }
          }
        ]
      },
      {
        "id": "075078a2-3b9b-4a8e-967f-cf153db08dc3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8429a69a-7712-4237-bfd5-2d515174f0ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2f8f0bd-01ac-402e-bdff-fd805b6433c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5e0593b-7141-4f6f-b59b-d12b232f3515",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eade0f8-5c57-4526-a303-4fd3fb9ffd8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3803b82f-7d9d-47b0-a145-c1fea530e372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bda5aa-46e8-4d75-8bd8-f105f2b73085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b99086e3-0550-4127-801c-bac286c8992a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a6603fd-3bea-489e-8d12-adea0c647906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26917112-31b7-4efa-a658-b399ba723b2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b4ab0cd-72df-4977-ba83-7ec6d00d279b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f74db26-2c96-4b3b-876b-543f719b5b58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff880425-7dce-4c0e-87bd-43c6b22cbcaf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87e6b840-a862-4191-b2e3-a1ce20be23b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47b882c6-87e4-4bf5-9cae-9999d3f457c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50f30be5-88c7-4f52-848a-0c0e456c74a6"
            }
          }
        ]
      },
      {
        "id": "60eb9a81-597a-4699-a84e-7033fcf8f8f7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0fa6ec24-0e5b-47a5-a900-07b0a384f9ed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b65b741e-6758-40d5-82af-86b7d9a5e3a4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "94ef26b0-975d-4acd-bfdb-07f4bba54910",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b8a5ab7-aaf3-4372-9747-8bea83e789b5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "236ce2d7-6800-4bb1-b165-bf7ac14f6400",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 88.80633802816904,
      "responseMin": 12,
      "responseMax": 5164,
      "responseSd": 431.591993802896,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693701270930,
      "completed": 1693701307994
    },
    "executions": [
      {
        "id": "21b12b00-4f6b-43b6-aaa8-410682782cce",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "321e4343-691f-444e-8604-6c767f41d744",
          "httpRequestId": "5dd006cf-fc00-45b1-9f72-fd05cfc6eb7b"
        },
        "item": {
          "id": "21b12b00-4f6b-43b6-aaa8-410682782cce",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "04a55086-f783-4159-81fb-6ee24b5582f6",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "f7301003-60fd-4bbe-a909-14499a62631f",
        "cursor": {
          "ref": "110c2117-c65a-4514-a6e3-e79dca974313",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "138bca40-50a6-4494-b428-7ae34269beb2"
        },
        "item": {
          "id": "f7301003-60fd-4bbe-a909-14499a62631f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c33fa4c4-2046-4e3d-9f2c-b17ebfccbc3c",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "abf260f5-0bcb-483a-bc9b-156a60e71c45",
        "cursor": {
          "ref": "fd683e1a-833b-4d59-a5ea-d7cacfe73e08",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fe98b570-87c1-4495-bf39-7377050339e0"
        },
        "item": {
          "id": "abf260f5-0bcb-483a-bc9b-156a60e71c45",
          "name": "did_json"
        },
        "response": {
          "id": "def08118-e9c9-4af5-b7c2-348c5b97b404",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe8eabc-6f29-440a-8006-1703f5fb7d1a",
        "cursor": {
          "ref": "0bc1eaac-9a93-4124-838b-0d8bacfed2b3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d7ae6c2-bb45-4654-bc5d-61fad6dd37ad"
        },
        "item": {
          "id": "cfe8eabc-6f29-440a-8006-1703f5fb7d1a",
          "name": "did:invalid"
        },
        "response": {
          "id": "44fd077e-53ba-417e-ad3d-dd100f67a9a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 770,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe8eabc-6f29-440a-8006-1703f5fb7d1a",
        "cursor": {
          "ref": "0bc1eaac-9a93-4124-838b-0d8bacfed2b3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d7ae6c2-bb45-4654-bc5d-61fad6dd37ad"
        },
        "item": {
          "id": "cfe8eabc-6f29-440a-8006-1703f5fb7d1a",
          "name": "did:invalid"
        },
        "response": {
          "id": "44fd077e-53ba-417e-ad3d-dd100f67a9a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 770,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3997736-d1f8-4551-86e1-6d71cf2a0ceb",
        "cursor": {
          "ref": "a926c08b-a3ea-46c5-b389-bec75e75304a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7ca40e16-d7ef-4d57-8a32-363e8a534753"
        },
        "item": {
          "id": "d3997736-d1f8-4551-86e1-6d71cf2a0ceb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "65db2d86-6c23-4522-a65f-a0726dbc90a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabbc2b3-0c8f-4994-ab37-17700838efbc",
        "cursor": {
          "ref": "73a5dcb7-ce02-4915-97c8-5ae31bbd826e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4029d6ae-143c-4127-b54b-83155eb7a769"
        },
        "item": {
          "id": "aabbc2b3-0c8f-4994-ab37-17700838efbc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "43329aad-be14-4f73-8733-f3299c218d74",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2e55e5-7e5a-4ec7-bac4-2d38e3be79b4",
        "cursor": {
          "ref": "71ea366f-8399-4f01-bca5-4688e1d1283a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4f99fed7-75c4-42ae-81a4-d48122f27b61"
        },
        "item": {
          "id": "ce2e55e5-7e5a-4ec7-bac4-2d38e3be79b4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2a673de1-0ba0-43b7-bea5-0428a07ae9d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e70a95-e244-4402-a00a-275adaf8b183",
        "cursor": {
          "ref": "845312cf-16cb-4810-9eb9-250b74403c02",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "189ddfe8-7130-471b-88d5-a26423c1eef5"
        },
        "item": {
          "id": "f7e70a95-e244-4402-a00a-275adaf8b183",
          "name": "identifiers"
        },
        "response": {
          "id": "cfa8c62c-cf03-4e29-b313-87d40d83c3a1",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575d9be5-f6ed-4295-be52-f3ea28cefb06",
        "cursor": {
          "ref": "42fb8bfb-36d0-4f4c-a2c5-0eb775eaf786",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b2da1c6-fe0c-4661-8c95-f14adb4208d1"
        },
        "item": {
          "id": "575d9be5-f6ed-4295-be52-f3ea28cefb06",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "130e0a9c-d08b-4867-9d37-027048ae63df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b088e7-befd-4c55-a289-ffb411e06e85",
        "cursor": {
          "ref": "0cae4e5c-6d17-47ab-a7bb-6042c2463f54",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f15aa308-1364-45ac-949a-3678df8a10b4"
        },
        "item": {
          "id": "79b088e7-befd-4c55-a289-ffb411e06e85",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "37714aeb-ed3f-4550-9b92-244531a0e420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebe5c49-a826-4b74-8cee-a37c7226c377",
        "cursor": {
          "ref": "9be94d23-7048-477e-b4d6-87843464c3a8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1eb0ee96-420e-4868-98f1-92fe3d7bd1af"
        },
        "item": {
          "id": "6ebe5c49-a826-4b74-8cee-a37c7226c377",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ca23c70c-71c0-4271-bce0-d15d4751941e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae93cd3-3116-48ba-938d-f33d50bd0722",
        "cursor": {
          "ref": "c3477f1d-a63e-4d4c-80a3-aac3fb2b735d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e9cef8a5-0ea9-4d56-b338-61bae2aad44b"
        },
        "item": {
          "id": "2ae93cd3-3116-48ba-938d-f33d50bd0722",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "084882ea-ae4e-4f95-93bb-ef3cc5c214cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f647de3b-1de4-4d3e-bb09-26015ca3e60e",
        "cursor": {
          "ref": "b5cb98cb-9a31-4c95-8d1e-21080665acce",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "955ab61b-509d-49be-acae-9987a6b33967"
        },
        "item": {
          "id": "f647de3b-1de4-4d3e-bb09-26015ca3e60e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dcf75ece-5339-439e-9565-4c8751ca2d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffad142-3381-4f44-86c0-9d1e557e404b",
        "cursor": {
          "ref": "9677d205-fb7a-47c1-9267-568a4fd92c00",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9d98763b-5855-4644-81b9-4e58a58f1f81"
        },
        "item": {
          "id": "dffad142-3381-4f44-86c0-9d1e557e404b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e64eff8e-0b2f-474f-829d-94ad8ae2bec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01987ad6-42a0-4d60-886e-c21efbbd96ab",
        "cursor": {
          "ref": "05e1a4c8-d35d-4d10-8e56-f38a70c8bcc0",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "da1dc98b-df37-4fba-b160-2a1003a2122e"
        },
        "item": {
          "id": "01987ad6-42a0-4d60-886e-c21efbbd96ab",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b4ff86ae-1eea-4892-ba44-b69804199e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db852ef-a0e3-431b-97ab-0b0906d164fd",
        "cursor": {
          "ref": "363ce1fd-09d4-40fa-a897-0ffa68950f3d",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f55377b0-76a3-41ae-896c-1574fe51334d"
        },
        "item": {
          "id": "1db852ef-a0e3-431b-97ab-0b0906d164fd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2753125d-85e3-41e1-b9d7-5d7abdf496b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7892eb-dd85-42c6-90c4-fc9efcdab666",
        "cursor": {
          "ref": "6f8bc3a7-8822-4397-a84b-759851659b05",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0896b0be-2f70-4887-b867-954e40b03a88"
        },
        "item": {
          "id": "4e7892eb-dd85-42c6-90c4-fc9efcdab666",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0e365f38-1454-4dbb-bf5b-1b795de5fcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8389d50a-0a93-424c-a74e-8208de6c52cd",
        "cursor": {
          "ref": "6ebd4677-c9d7-4624-8613-207e5a14c624",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1599a71c-ed15-46c3-81c0-39109d20fb67"
        },
        "item": {
          "id": "8389d50a-0a93-424c-a74e-8208de6c52cd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2ea4f2c8-cc8b-479e-a379-7a7790e02825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c096e0-4391-4f79-b23e-36583c3367c1",
        "cursor": {
          "ref": "90c779af-5ad4-4aad-81a7-88266ceca65b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9f525ab-9ece-449f-816e-aa35917bb857"
        },
        "item": {
          "id": "98c096e0-4391-4f79-b23e-36583c3367c1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "48989aaa-65de-4b10-a124-16de81bcf211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a8c9c8-e3e5-43d5-af3f-bdfbf7b54a1b",
        "cursor": {
          "ref": "31699df2-518e-46e2-95bb-65a60ebc316b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6197f868-2ce7-4248-ab35-3506eafcf44a"
        },
        "item": {
          "id": "79a8c9c8-e3e5-43d5-af3f-bdfbf7b54a1b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "030a7a38-e6de-4fc8-9f02-cf88db3cd47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdc2ed7-147a-410d-956f-6a1631813687",
        "cursor": {
          "ref": "cd9bc4a6-ef5b-4982-b1d6-e7013b664ab6",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a6736841-d932-4ab9-a2ef-33f7b6c8b623"
        },
        "item": {
          "id": "bbdc2ed7-147a-410d-956f-6a1631813687",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b7c36e36-5a4c-4fa0-b4a3-ee536652da21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25af80be-bf52-44e6-8ad7-6eb68c2a5332",
        "cursor": {
          "ref": "9a5bc05a-7db6-4a3a-b85c-f1be25e4da37",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d2a6b233-3f6f-41f0-9969-d88bb0431292"
        },
        "item": {
          "id": "25af80be-bf52-44e6-8ad7-6eb68c2a5332",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8182988f-3c2c-4bfc-afbb-977dfb015750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d555d97f-e523-4778-8f6c-9b59c8b57695",
        "cursor": {
          "ref": "d1f26954-eaad-4f9b-be75-588b73c8c722",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0e138e02-b8a5-47eb-b631-8f76dfee1769"
        },
        "item": {
          "id": "d555d97f-e523-4778-8f6c-9b59c8b57695",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "590d7363-8cd5-426b-8c88-4934671d8932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355c0f1b-b164-4347-81c3-de4c8be93767",
        "cursor": {
          "ref": "aeeab60a-f3e3-472e-b613-6da917ebc43e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f404aec2-9e83-446d-9c00-ec9565b8098c"
        },
        "item": {
          "id": "355c0f1b-b164-4347-81c3-de4c8be93767",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "793cd93d-60c1-4388-b77a-53c7c3e91372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291d27f0-abaa-45f6-afa0-7b8d9ba25ffb",
        "cursor": {
          "ref": "8e3b410b-f2c2-4d90-a894-c64cdfa1e8f1",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9cef31c5-0307-4d97-9bc2-4872ff453da7"
        },
        "item": {
          "id": "291d27f0-abaa-45f6-afa0-7b8d9ba25ffb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0759d9d3-7bc9-4ae7-abc8-27c09e8882e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec303f2-be1e-440e-83b5-d8bb8f929a28",
        "cursor": {
          "ref": "bbb3ceb6-6118-4771-8ff1-689436bdc633",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8a2690ee-bfdf-4428-bdd1-62a6ca801a4c"
        },
        "item": {
          "id": "1ec303f2-be1e-440e-83b5-d8bb8f929a28",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b46a1d77-5fc0-474b-b831-2820ae0d67ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2454e8-5eeb-4d2e-9314-03efeb3c4792",
        "cursor": {
          "ref": "77be7c55-387f-479f-b959-754686ad38eb",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b4b886dc-9e9b-482a-875c-46b2ab06fd5c"
        },
        "item": {
          "id": "8e2454e8-5eeb-4d2e-9314-03efeb3c4792",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2bc9ac59-4cda-4ac1-8e86-bccb03420938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ee128e-f616-4415-a88a-ffb88721feea",
        "cursor": {
          "ref": "56bb4351-28aa-457a-93bc-39721845e49b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2fbe7d7c-5bdf-49f9-9bbc-64d8b126550c"
        },
        "item": {
          "id": "09ee128e-f616-4415-a88a-ffb88721feea",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "15fe5896-06d1-4b3d-9399-85e38c7af4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251c8d81-0b6b-4cf7-8284-0d86bbdd67c5",
        "cursor": {
          "ref": "ef54774e-f3fd-4d9c-afa8-478927790086",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d7f6e202-8f35-4a20-97aa-086219e8d8c7"
        },
        "item": {
          "id": "251c8d81-0b6b-4cf7-8284-0d86bbdd67c5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dffc9bc0-0d2f-44fb-8192-d9b1aaed15c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7500e745-dbb0-4a80-85a1-e72c06c3c48f",
        "cursor": {
          "ref": "dad5bc4b-b4c8-44e4-a1e0-ff4b5086561c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fb8659bd-ec5e-40eb-9d5c-69f790876d68"
        },
        "item": {
          "id": "7500e745-dbb0-4a80-85a1-e72c06c3c48f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1c304570-aac4-408b-bc30-76d0a2c79649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c8aebb-9f97-4b96-9055-f9e511118f8e",
        "cursor": {
          "ref": "3f9fda6b-1910-4066-a8f2-175338a9fda0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7b217d89-66f2-4965-9793-6dd4881d4c08"
        },
        "item": {
          "id": "98c8aebb-9f97-4b96-9055-f9e511118f8e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3c4a30ae-8779-468f-ab4b-4d6428aafc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85066e2c-a3fb-4f11-8f85-b4c1786e2e13",
        "cursor": {
          "ref": "c8a43816-1c05-452e-8e69-3edbe4f994dc",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "46b2fae5-c16c-4ae1-87a9-85cd964fffc9"
        },
        "item": {
          "id": "85066e2c-a3fb-4f11-8f85-b4c1786e2e13",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fdb55a4f-ee5b-49ac-9ab9-71600eadb489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac049eef-cbd5-494e-b8d9-253cfd448daf",
        "cursor": {
          "ref": "77616e13-5e5e-4365-9c5f-22ce8dd5fc96",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d04b659a-2c28-4391-9ded-de279388656a"
        },
        "item": {
          "id": "ac049eef-cbd5-494e-b8d9-253cfd448daf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2277a87f-3134-4e4b-8779-ab47e0593357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996f5548-be59-4cb5-b002-cb6f9f72cbf0",
        "cursor": {
          "ref": "f7eff0f0-13ee-47c0-a6e6-e5de15ab58a3",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "70710a80-8094-46d3-8dd8-d51bfda9bb28"
        },
        "item": {
          "id": "996f5548-be59-4cb5-b002-cb6f9f72cbf0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2010fed0-e710-4c18-ab31-44018e382553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435838e3-d4df-4a08-8fa8-5c2492bd0ea3",
        "cursor": {
          "ref": "4771bfea-c1cc-478a-955d-fa54ed0fef94",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5bafeed2-624a-4104-a0f3-54d3c86c2aa0"
        },
        "item": {
          "id": "435838e3-d4df-4a08-8fa8-5c2492bd0ea3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0c39e8cf-a53b-40c6-ba8a-96d2a8b60ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2227d76a-9618-4f90-8280-0c16b16c1630",
        "cursor": {
          "ref": "3ba6d5f9-c966-4e26-96bd-56cd072a1bf9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "620457e4-5af1-428f-b17e-85391aee15d8"
        },
        "item": {
          "id": "2227d76a-9618-4f90-8280-0c16b16c1630",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "13669dac-e8ce-4a46-b7d8-9f69d5ba6e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bf12d2-adf4-4077-a1df-902bc2cf33c5",
        "cursor": {
          "ref": "aec6cba4-1d17-4d64-8411-7bd3c86f32c6",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0eaa89a0-412d-48af-a1b0-7112a4650a94"
        },
        "item": {
          "id": "39bf12d2-adf4-4077-a1df-902bc2cf33c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "27aad923-772e-4b09-b405-042f569ee6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a147ed9d-eec0-4480-b355-233d540ce9cb",
        "cursor": {
          "ref": "2d32e411-9f55-468b-8377-be14f7e2ea89",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cc88ef17-7056-4a76-9f8d-d667faa0973b"
        },
        "item": {
          "id": "a147ed9d-eec0-4480-b355-233d540ce9cb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cadac25f-f106-4a6d-889b-618bea98976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abe3239-35be-4307-bfc9-346613bdfa60",
        "cursor": {
          "ref": "65defb50-218a-47eb-a880-1358ad9cce10",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "15aeb5eb-39d3-4273-93f9-a4d3799fa61f"
        },
        "item": {
          "id": "1abe3239-35be-4307-bfc9-346613bdfa60",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "74ba0923-5834-452a-b099-cb6a9da792e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea5292f-73d0-4298-af04-b4bdfcbf8c5e",
        "cursor": {
          "ref": "a17a14f9-1ad8-4ef6-a8c4-d4536d9dfac4",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6679033f-0639-4663-a8b2-599f652eec31"
        },
        "item": {
          "id": "eea5292f-73d0-4298-af04-b4bdfcbf8c5e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5104b826-d087-40f0-824a-4b056c122b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8588e21-0574-49ed-a0af-832d3e48f819",
        "cursor": {
          "ref": "84990e2f-41ed-45f4-b2e5-55496cca46e4",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d919fd6a-51ba-4a48-9d5a-ce9708bf99d3"
        },
        "item": {
          "id": "b8588e21-0574-49ed-a0af-832d3e48f819",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "52c3ccac-5fe7-472e-836b-a63ea0a66c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da669b6-8447-43fc-96ad-672c1621b6ad",
        "cursor": {
          "ref": "6e218feb-2d30-4a0f-9ac4-6689e9206377",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c05e27c6-d40c-4de0-9879-986f2f09780a"
        },
        "item": {
          "id": "0da669b6-8447-43fc-96ad-672c1621b6ad",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b2dc23d1-ea44-4bf4-bc3c-2444345245b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9a6b9c-f500-46d6-a809-05cbc20c3c89",
        "cursor": {
          "ref": "9f544b02-489b-4f72-bf35-b7c38fc02ef3",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "66f90045-6252-4dbf-bec9-dd9d4850f596"
        },
        "item": {
          "id": "1d9a6b9c-f500-46d6-a809-05cbc20c3c89",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "adfae0c6-7ebe-40f4-8877-f10d6545aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e90af2e-20fb-460d-a4fb-292380bc51b5",
        "cursor": {
          "ref": "68a98da3-36d4-4a18-95a8-1d9e2751fe9b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f100e9f8-75ea-4234-b52d-07bdca8c3078"
        },
        "item": {
          "id": "2e90af2e-20fb-460d-a4fb-292380bc51b5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "592976fc-0836-4153-b13c-acb0879b8b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddc793d-0362-470b-ab40-112596147a30",
        "cursor": {
          "ref": "3adb7dcd-901e-47bf-8b3c-412813620823",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "078ac4ad-90d1-4e4c-93da-09029adb270e"
        },
        "item": {
          "id": "0ddc793d-0362-470b-ab40-112596147a30",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7b54dadf-3504-42e6-b42a-c7e3a0edef70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d76a1c-589b-47dd-bb85-7ac7ceeda334",
        "cursor": {
          "ref": "9bba0b26-9900-48ae-9b42-4e967ebc5355",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ae1af502-c4c3-42a3-b4fa-5409f211f64a"
        },
        "item": {
          "id": "b8d76a1c-589b-47dd-bb85-7ac7ceeda334",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "80433a97-e339-42f0-958b-2265822e414d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8de778-d61b-41f2-9427-167f62a226b4",
        "cursor": {
          "ref": "55c5e15d-b7b8-441e-99e0-d7a8d07d1fcf",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4c7e2006-de09-4c8d-9513-f1c8cc14365a"
        },
        "item": {
          "id": "3f8de778-d61b-41f2-9427-167f62a226b4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cf6d4cb4-81c0-44fc-ae83-88c46269a921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97193312-5d01-4125-b2bb-03253387c6c0",
        "cursor": {
          "ref": "2d4ecb43-2a0d-48e6-8a63-50f428a3ffe9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2f885485-c691-4905-b059-b23dbac89a7a"
        },
        "item": {
          "id": "97193312-5d01-4125-b2bb-03253387c6c0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d10aa53f-6d99-4815-b990-186d3d5f1eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90761342-926d-431b-b070-9b4d090fae65",
        "cursor": {
          "ref": "c92cb3b9-3888-47cd-b04c-b34e61450244",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "28b8ca59-971f-4e14-a092-81c0da8b4349"
        },
        "item": {
          "id": "90761342-926d-431b-b070-9b4d090fae65",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e8dabc70-4888-4f72-a78c-9da1d75f2a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30aa67b2-95f9-41ed-8bf1-b59e2b8931ef",
        "cursor": {
          "ref": "cba5f7fe-bebe-47ef-b981-7bf2616ac947",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "15508452-01c8-4537-85c0-debb73442b00"
        },
        "item": {
          "id": "30aa67b2-95f9-41ed-8bf1-b59e2b8931ef",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d7b0b420-473a-420d-9f2e-824e1677e8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068ebdd7-9340-403b-8499-8198991d89f8",
        "cursor": {
          "ref": "0bceedac-1317-4727-bf9f-0f7cb3e43e8c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4424f003-3d14-4c98-808b-7adb9bc7112c"
        },
        "item": {
          "id": "068ebdd7-9340-403b-8499-8198991d89f8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4d1b18e3-476c-4639-a954-87575f23c7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09239f16-27c2-436e-a5d5-c8fe82e41aed",
        "cursor": {
          "ref": "f4b7cd18-56aa-4456-9e09-9acde113a622",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ed650b5-d789-40a8-93c1-62099d9c193a"
        },
        "item": {
          "id": "09239f16-27c2-436e-a5d5-c8fe82e41aed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0b9836ef-dcda-45c0-ac9d-e033630ec065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84085cc-1803-4ad2-b918-5ec8883a3c55",
        "cursor": {
          "ref": "2f76cf83-11cf-4140-8ad8-4a81dcd5ffe7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7af5263f-5cde-4905-9f67-194ade400eb2"
        },
        "item": {
          "id": "d84085cc-1803-4ad2-b918-5ec8883a3c55",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e2846f96-c80f-43d6-bb50-90b9e3c94766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20891a37-d601-41f0-9db3-e0f66c8f276d",
        "cursor": {
          "ref": "9c8dfbc0-459e-4fa9-b2fd-9d22140fd74d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1c79f659-640d-488b-b88e-747537c3d70d"
        },
        "item": {
          "id": "20891a37-d601-41f0-9db3-e0f66c8f276d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "19b4405b-0bd2-446e-b1e9-0257db868d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238d3deb-b2d2-4322-9ba4-1b2b306300dd",
        "cursor": {
          "ref": "46be3f70-dd5d-48da-92b9-5a0e6c62abfd",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8442aa9d-499b-4b86-bfc8-d38d33112943"
        },
        "item": {
          "id": "238d3deb-b2d2-4322-9ba4-1b2b306300dd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "060ee9e8-0592-48d5-b602-e9a7c1f8263b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6b1a0b-7cb1-4744-80c4-b234603713c3",
        "cursor": {
          "ref": "557e7710-654f-4bfe-85ce-7c9487432784",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2c2f6435-e3be-4a9b-bea7-0468c52c926f"
        },
        "item": {
          "id": "de6b1a0b-7cb1-4744-80c4-b234603713c3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "898e268c-b6a3-4053-be54-075eb03e4893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8889481d-eb40-4d6f-890c-c23bcf9db447",
        "cursor": {
          "ref": "618ccd76-bcac-4b80-be41-9a11632e0e9c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "617f0d24-65ae-40a8-82bf-7c618902a12b"
        },
        "item": {
          "id": "8889481d-eb40-4d6f-890c-c23bcf9db447",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "789c8545-1fdd-477c-8db4-de509c0adac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbbfde9-c1e2-4ebe-9e23-3f2a50f454c2",
        "cursor": {
          "ref": "089b26e4-a98d-4471-88a2-c4461bcbe8f3",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "535cbeaa-4532-420b-81d9-12e54d31288f"
        },
        "item": {
          "id": "ddbbfde9-c1e2-4ebe-9e23-3f2a50f454c2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0a69a942-5e0a-42e3-a0df-4b9af3f8e0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704a6cfc-ce2e-472c-92ce-5722e24fe7aa",
        "cursor": {
          "ref": "d285f0c3-2e70-40af-b429-9ffca51444e0",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "57bdf355-96ca-4ee6-bca5-7c18e1e03ea2"
        },
        "item": {
          "id": "704a6cfc-ce2e-472c-92ce-5722e24fe7aa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "63894660-2581-4ce6-ba57-d473cf736f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e1772-66c9-4406-baac-3c3c184d8964",
        "cursor": {
          "ref": "29794084-55c0-4736-a84a-8510c3253002",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "25bae6d2-be39-43bc-8001-4c30369ee6a3"
        },
        "item": {
          "id": "d20e1772-66c9-4406-baac-3c3c184d8964",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "53d12dd8-de05-4d65-b3dc-5f7b143acf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59d298f-a630-4d7b-aa4c-8d477af477d8",
        "cursor": {
          "ref": "3089336c-e67c-46b6-a072-5228035caeac",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d8bc1418-8948-4090-ab05-b6c80186671e"
        },
        "item": {
          "id": "c59d298f-a630-4d7b-aa4c-8d477af477d8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "eb761d71-8c68-44f7-9179-640c8f37fc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201f5238-7d9e-4be8-85ea-356d031124f2",
        "cursor": {
          "ref": "6e6ecfa3-af98-4afa-9a8c-b971f9babba5",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5e0d6583-a416-44b7-9005-42ec61e4b4d7"
        },
        "item": {
          "id": "201f5238-7d9e-4be8-85ea-356d031124f2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c3468f36-9ec1-40ef-95c2-18b42282d20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d7f776-3c28-4685-bbe0-ed8763a0fed0",
        "cursor": {
          "ref": "b5ef344f-5631-4e6c-9ccf-bbea4d016f48",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "47fcd364-4701-4254-b63d-f748135929c0"
        },
        "item": {
          "id": "e6d7f776-3c28-4685-bbe0-ed8763a0fed0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f2053638-fe36-4d3e-8140-032bcba5c0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21163f33-9755-4fba-9ce5-881b2c7cc52f",
        "cursor": {
          "ref": "2157173d-54cc-45d8-bcbe-751c050dc097",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fa42af07-1d32-4419-8032-0733f9e0c04e"
        },
        "item": {
          "id": "21163f33-9755-4fba-9ce5-881b2c7cc52f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0149608d-5937-41b3-b1b9-af223b0d2b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ad129d-9865-4b1d-9dd9-9ff00e860637",
        "cursor": {
          "ref": "b9d81cfd-bcdf-48f9-85a2-e578caf3cedb",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3d4d5e45-5f39-43da-abbe-32b1b251f378"
        },
        "item": {
          "id": "00ad129d-9865-4b1d-9dd9-9ff00e860637",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bfc5d20e-a8a6-4d72-b8c7-926ef655f326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc46694-bf8d-42bd-95eb-ce027d8ba7a0",
        "cursor": {
          "ref": "88a57596-8d98-4061-ad7e-3a3f7baa4817",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1319a2cb-d674-486d-b0a7-977d0b3158bb"
        },
        "item": {
          "id": "8fc46694-bf8d-42bd-95eb-ce027d8ba7a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "12c6dd8f-cedc-430c-a73c-d7d84667b772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef827e5-4897-453d-8465-75b7e2913fed",
        "cursor": {
          "ref": "463bb0f6-7b0a-4f6e-92ee-030cd61ecb8f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9d707a38-7d56-4e96-a536-8f57f35af9dc"
        },
        "item": {
          "id": "9ef827e5-4897-453d-8465-75b7e2913fed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cb8e9900-e2a5-49c7-aeec-f4f6d66ecb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e924f67-0370-4fef-ab92-5fc5c2def0f9",
        "cursor": {
          "ref": "e4c35bfd-f842-46a0-9847-4e7d8142a9fc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "01564594-9be1-44b9-aee1-d231de71845b"
        },
        "item": {
          "id": "9e924f67-0370-4fef-ab92-5fc5c2def0f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "943904bc-eae4-41b4-9eb4-501ad4cfbf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a679e8f2-20d1-4753-a31c-cbbf643d48e3",
        "cursor": {
          "ref": "f0a76ede-6a4f-4508-ba58-2952a0a1c493",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "285c4500-18f0-403d-b859-39b9244952a1"
        },
        "item": {
          "id": "a679e8f2-20d1-4753-a31c-cbbf643d48e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "441bdbc7-ab1a-4e3c-99e3-9038e6f748f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40360d3-ab87-40b7-8218-8d739c8237da",
        "cursor": {
          "ref": "e024ff51-1cf4-49e7-80a5-06253768cada",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "41d37903-5d92-4b0d-86a2-bbd1a8914952"
        },
        "item": {
          "id": "a40360d3-ab87-40b7-8218-8d739c8237da",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2cbb0265-87ac-454f-a0d0-d852bb446c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d87ca15-fb69-408f-86f7-a774a7b282e2",
        "cursor": {
          "ref": "e02808e8-c3e5-4905-a144-d2d43109698b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "be9fc20d-2c9d-4d44-a5b9-a71c5e6da25c"
        },
        "item": {
          "id": "9d87ca15-fb69-408f-86f7-a774a7b282e2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "554f6cc0-5ff7-4973-b715-d9a0c35272f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4021c71b-bf46-43ad-95da-89bf4edf4570",
        "cursor": {
          "ref": "c3e7ca9e-0c81-46a1-87b4-9f8c0932e4d3",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "65690fc8-df41-4dc2-83c3-c03bc7055681"
        },
        "item": {
          "id": "4021c71b-bf46-43ad-95da-89bf4edf4570",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "26d9c014-0090-4529-82b4-b2052074a777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2fb5bb-b958-4bcb-8e32-c75b35875f37",
        "cursor": {
          "ref": "2a90f4f6-1aca-42d9-9c08-23afc454a2d8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "87a96d4b-0e1b-442c-8abf-ddd3aa6320c4"
        },
        "item": {
          "id": "cc2fb5bb-b958-4bcb-8e32-c75b35875f37",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4fc3491e-bc85-46fd-9cf1-78f7cf160b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f021aa-2746-41be-bc5a-6fef6ef9c400",
        "cursor": {
          "ref": "34f4b3ae-d858-4aad-99cf-104dee15f885",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ab7273fc-60c7-4042-881b-b69cb3e0f58b"
        },
        "item": {
          "id": "a5f021aa-2746-41be-bc5a-6fef6ef9c400",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "887404a0-7748-42fa-901f-f9d853005b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c133eb2-f62c-476b-9da7-bd8144d4d35b",
        "cursor": {
          "ref": "c930c069-5da0-40e1-b8f9-53a6b543bab1",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4bef6194-c864-491b-97b2-20484638aabc"
        },
        "item": {
          "id": "2c133eb2-f62c-476b-9da7-bd8144d4d35b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0ed8ef0a-8544-4dbf-b5a2-206c168b6aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc5bf60-a2a4-44db-8066-a111a2ad012b",
        "cursor": {
          "ref": "1d4563c7-852e-4874-b07c-78a7ae2e7293",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2c56816a-89b6-42a2-b541-d3d7dc9215c9"
        },
        "item": {
          "id": "efc5bf60-a2a4-44db-8066-a111a2ad012b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "99eee0be-375a-4fdf-956c-0b2203e22f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00af7987-ac8d-4a9e-87ef-03c4c1ccf6ff",
        "cursor": {
          "ref": "62a759b4-5261-4275-b59b-9d4cf4b8fe23",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4f063ef9-d2cc-48dc-a343-3f77e9bb8bc3"
        },
        "item": {
          "id": "00af7987-ac8d-4a9e-87ef-03c4c1ccf6ff",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "83ab58c1-5e98-4543-a21b-b7f7247306b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bb8e82-48dc-4b2b-a898-bacabc188584",
        "cursor": {
          "ref": "55b54d13-907c-4c51-82fe-4754d7f56865",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "067b56c6-1761-4bb2-bea6-ae1fc08134d1"
        },
        "item": {
          "id": "98bb8e82-48dc-4b2b-a898-bacabc188584",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0eb1a7ff-a640-4afb-b085-574a1d029a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fac54e1-9bc5-4ae3-a064-564fe51c1383",
        "cursor": {
          "ref": "eb8c6e55-5770-483c-ba8a-75321677b8a1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "63da6233-c345-4ea6-9a9b-477276358037"
        },
        "item": {
          "id": "0fac54e1-9bc5-4ae3-a064-564fe51c1383",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7f44b61e-73bf-48ec-8af4-8932b3cc769e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4165bf6-e9f8-4a59-8615-477141183eed",
        "cursor": {
          "ref": "60f847d0-c54f-453b-b4ec-d51aa3919a2a",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "addee58c-0033-4124-bb99-055cd691e207"
        },
        "item": {
          "id": "f4165bf6-e9f8-4a59-8615-477141183eed",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "84690def-cd40-47e1-a7de-9825ba1fb29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ee9662-23bb-418b-bfca-9f72f429eaaa",
        "cursor": {
          "ref": "14ff8181-c1f0-4693-836d-4064ff9bcd6b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c628f0bb-6553-4a4b-9080-c84d9aade85e"
        },
        "item": {
          "id": "51ee9662-23bb-418b-bfca-9f72f429eaaa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9c885d85-f079-475f-ab1f-fc6db43edede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aea3012-4be0-4fb3-9379-4932afe7e981",
        "cursor": {
          "ref": "a1b7e838-d66d-4029-9de9-091491e3967b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "596b170e-b1dd-41ec-8d6e-d775d37bae0e"
        },
        "item": {
          "id": "2aea3012-4be0-4fb3-9379-4932afe7e981",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6981a6f5-c7d0-4d6c-a3b0-b5b6564cca5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae4c787-bf8e-4b57-ae55-5846e2138a55",
        "cursor": {
          "ref": "65addd09-6087-4a6f-91e7-d1598c86a60a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "07b14b39-8ae8-4153-a729-82af087343d6"
        },
        "item": {
          "id": "7ae4c787-bf8e-4b57-ae55-5846e2138a55",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "62edc484-a604-4cb3-932a-3949c17d5fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daafd424-dec5-4ebc-b934-34b78d834481",
        "cursor": {
          "ref": "537d0785-c142-495b-8ddc-a69585144f1f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cc255838-8fe4-44cd-b277-9096f287fbea"
        },
        "item": {
          "id": "daafd424-dec5-4ebc-b934-34b78d834481",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "143b0e93-9485-4467-9466-91ca98aced5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339c05e1-6c87-4ff8-8f99-234041b001ae",
        "cursor": {
          "ref": "16afdb6b-3866-43f6-b647-024826873f33",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d4b41832-3bf5-46f1-979e-c901fc07eb48"
        },
        "item": {
          "id": "339c05e1-6c87-4ff8-8f99-234041b001ae",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e6f04156-4470-4280-afee-8fe8c3d4c23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b126ab9-71bd-4bd3-a316-7ca9d395648a",
        "cursor": {
          "ref": "e65f6e3c-a1aa-4d6a-9eba-7beaeee19bbc",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "59ef227a-e186-4afd-b971-a3a3512fde91"
        },
        "item": {
          "id": "6b126ab9-71bd-4bd3-a316-7ca9d395648a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "da0af7ec-3a44-4b44-8307-9e2b27a45b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685159fe-bd92-49f6-aaea-2f41e949d42f",
        "cursor": {
          "ref": "20f23a6a-9244-4aca-b9f0-ba48e3d714be",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ce1db392-2787-4b97-89e1-1658b7f46ff2"
        },
        "item": {
          "id": "685159fe-bd92-49f6-aaea-2f41e949d42f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eb9e53ed-2861-42dd-bae5-d7679edbeb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bd6d71-ef77-455f-bbae-3059e4d5b8d9",
        "cursor": {
          "ref": "5b25cb05-8541-47b1-a6ac-298afc30708a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5cbb4b6f-0423-4e79-89e8-70aa60d20140"
        },
        "item": {
          "id": "57bd6d71-ef77-455f-bbae-3059e4d5b8d9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b28cd3cd-239d-40a0-99ff-4b31c765b905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a48979-cad4-489c-9b96-3b49a3a6581c",
        "cursor": {
          "ref": "f638d620-8f72-4e82-a074-553b6ecf278a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "259a9a3e-3e7f-4dab-a568-0d00513a5eda"
        },
        "item": {
          "id": "55a48979-cad4-489c-9b96-3b49a3a6581c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "33b4ccd2-5a6c-4fe6-9bdb-6bd6aaea0d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684600f-beb6-48fb-a019-a21b0d007e7c",
        "cursor": {
          "ref": "1b703999-b8b0-4b65-981f-5599ed9da45a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4b6081b6-42de-4578-9286-0567ad4c823b"
        },
        "item": {
          "id": "e684600f-beb6-48fb-a019-a21b0d007e7c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "45f0b05e-c668-4849-b4e5-89772c22323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f60852-766a-40ec-8194-81e2130f5499",
        "cursor": {
          "ref": "8731f146-ebac-443b-bce1-88795571ac3b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "59ef29c6-1669-45fd-a79e-0e5179624082"
        },
        "item": {
          "id": "50f60852-766a-40ec-8194-81e2130f5499",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cd061dc4-b1c9-4433-b8ea-f686695e9410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e337da86-a471-4618-9459-6e36fa422f02",
        "cursor": {
          "ref": "747ef192-a553-444e-b9bd-a8ce91b131d3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a1e77cc6-0e32-4377-890c-d062e57d3bab"
        },
        "item": {
          "id": "e337da86-a471-4618-9459-6e36fa422f02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "92b5e7ed-15b1-4108-9c0a-c595749db5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f79e2e-c9af-470e-a5ab-17aeb3f85cb8",
        "cursor": {
          "ref": "399965c0-36e1-40a5-869a-f8719a6f5c14",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f3830560-5e8b-453a-9e72-f464cb88dbdd"
        },
        "item": {
          "id": "60f79e2e-c9af-470e-a5ab-17aeb3f85cb8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d2130e7b-4ea7-4f87-96a0-c8a8ede3b7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705ad79c-7100-4fe5-ac2b-781c157f9799",
        "cursor": {
          "ref": "7a5a0f01-3d46-4bde-a1d7-910511228cdc",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ad1162b4-bdc1-4412-98e3-36b0a3b3d8f5"
        },
        "item": {
          "id": "705ad79c-7100-4fe5-ac2b-781c157f9799",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "66333e55-3325-4575-b3da-c2474ad47f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1783e54a-1d36-46e6-964b-c02c3d94fb22",
        "cursor": {
          "ref": "aa7717f0-948c-4350-9de4-e936b3051bee",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c790ce0e-f17e-43e5-95de-293f9e571880"
        },
        "item": {
          "id": "1783e54a-1d36-46e6-964b-c02c3d94fb22",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ec480a9b-f3d3-4c02-98a9-804116b68cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd27551f-043e-4a94-9f62-4c51fc8d1b5e",
        "cursor": {
          "ref": "7fd6b3a8-69fa-448b-b525-0d26004708ff",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bae158a9-b36d-49ef-b305-cc8483f0c3de"
        },
        "item": {
          "id": "bd27551f-043e-4a94-9f62-4c51fc8d1b5e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e7f24384-d0fa-4896-89ab-510b062995b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4716200b-1253-4ed0-87b7-b94b1b607f3d",
        "cursor": {
          "ref": "5fceb848-e164-497e-870a-872ed640d07e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b3cd9a3a-29e3-466f-a0e3-2f2bd12fbd76"
        },
        "item": {
          "id": "4716200b-1253-4ed0-87b7-b94b1b607f3d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7d689633-6f91-4d50-ab25-0d05c2c7d853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71024697-a395-4957-8feb-e562c36ce8e2",
        "cursor": {
          "ref": "365acc6f-c259-4e66-be36-cef5b89dc1a3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "79709c3c-0466-48a7-a28c-13510d9b7328"
        },
        "item": {
          "id": "71024697-a395-4957-8feb-e562c36ce8e2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ecd85a39-fec2-409a-9c90-cc2f260e1724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994fd8dc-27e4-49b7-a4e7-415d0253fafe",
        "cursor": {
          "ref": "9123222f-ad68-4969-8a79-046d4edd63eb",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "63eca97f-0355-4d7a-9dfd-ef2e92391348"
        },
        "item": {
          "id": "994fd8dc-27e4-49b7-a4e7-415d0253fafe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3501ce4b-363d-468c-9069-4e380cea2392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb657759-0c46-43dc-a4f1-d8ad9140940d",
        "cursor": {
          "ref": "fa29456b-cd46-4991-a332-2d4325d01388",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "74c7f290-c51b-4d62-9b3b-7f37b879f889"
        },
        "item": {
          "id": "fb657759-0c46-43dc-a4f1-d8ad9140940d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "432a7405-5b94-4316-b7a7-9e6359c140fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cc8ee1-0fab-4f6c-a214-e885e3216647",
        "cursor": {
          "ref": "fa47dc74-007a-481e-a362-66f01043de85",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3ea7351a-ba56-4d68-b66a-13e007075556"
        },
        "item": {
          "id": "e5cc8ee1-0fab-4f6c-a214-e885e3216647",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "614ada1f-4bd3-4fea-8500-f0f0b8ce595c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13cb1da-a7f8-464f-bf7b-4748bce6a16b",
        "cursor": {
          "ref": "ffbf178d-669f-43a9-82ca-acf4d478c636",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f1c64185-c691-4997-ab8b-1a068440631d"
        },
        "item": {
          "id": "e13cb1da-a7f8-464f-bf7b-4748bce6a16b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8e9e3b73-2ff9-4c74-bcb5-9087153380af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "39b466f3-62dc-4259-a850-fd501127e8d8",
        "cursor": {
          "ref": "153a5249-d799-409a-a756-8c156b06d0cc",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "faebf736-8163-4a0b-8251-aadc8edb0c26"
        },
        "item": {
          "id": "39b466f3-62dc-4259-a850-fd501127e8d8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1e553161-0adc-4694-8926-851da3f38b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "e20ba8e9-9b89-48c2-a751-e7970ae9ec71",
        "cursor": {
          "ref": "9ba86ff9-74ee-44ff-934c-d34b4a14dcd2",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2ebe9457-9825-4d65-8b37-f5c53db46a66"
        },
        "item": {
          "id": "e20ba8e9-9b89-48c2-a751-e7970ae9ec71",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9a06da06-a555-454c-a6d7-00a355e5352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "68daa31f-0ef4-4f9f-adbf-a23cea8552f8",
        "cursor": {
          "ref": "1f337e00-5ba6-4e78-b038-56ea0f2d9f85",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "03bf267b-bd08-4210-9535-fca42d588f59"
        },
        "item": {
          "id": "68daa31f-0ef4-4f9f-adbf-a23cea8552f8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ebcf06d3-1025-4322-92a9-aaedd77fca6c",
          "status": "Created",
          "code": 201,
          "responseTime": 5164,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6ac765-9bca-4a05-852d-306be6c5ac7b",
        "cursor": {
          "ref": "72c74764-7555-4eda-bcc6-e8c6d704b2ca",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3dd7a177-535d-41e2-96b7-a7b00b63dcd4"
        },
        "item": {
          "id": "3b6ac765-9bca-4a05-852d-306be6c5ac7b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fee735e9-b1f2-4189-bb1b-4b5c206abf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9a37d086-aa00-49b4-ab58-f541473b18be",
        "cursor": {
          "ref": "b87b4dc7-6f9b-45cb-81c3-bd8ad95439b1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ed1afbb0-4240-4476-82bc-3743b1debef7"
        },
        "item": {
          "id": "9a37d086-aa00-49b4-ab58-f541473b18be",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a4bf88e3-895f-414f-a509-63762413d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "8c3f6ae7-e122-44c0-9e52-5243e67e2150",
        "cursor": {
          "ref": "b9daf92c-54b4-4ee3-b8c4-ccfae3acd0d9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "57f32659-014a-40aa-88c4-4ce60703f473"
        },
        "item": {
          "id": "8c3f6ae7-e122-44c0-9e52-5243e67e2150",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2f04a2f5-6893-4906-a8da-30c20b76e720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af08f68-7504-4fc7-9dcd-9b397ee355d3",
        "cursor": {
          "ref": "e547666b-a7f9-4ef2-b6e7-cff0beab923c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "22d807bb-3659-4491-89f1-e71c73e8b519"
        },
        "item": {
          "id": "4af08f68-7504-4fc7-9dcd-9b397ee355d3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "631dc24d-278d-47d6-95a7-da423f7737ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d274b8c9-258b-4ba3-9651-15ef2391685e",
        "cursor": {
          "ref": "aa2d21fb-7b58-48ce-badb-cbd8b6f14d6d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1d40f7e4-2e81-4a49-adf3-2dbd0cfc9e06"
        },
        "item": {
          "id": "d274b8c9-258b-4ba3-9651-15ef2391685e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c8807e1e-20f2-443a-85d1-a8c30d796b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2540be-de9a-443d-8f78-9ac339d7ddf4",
        "cursor": {
          "ref": "20429d65-45c2-4f87-9f90-055657651698",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "45961df4-6235-4907-bbab-d97d5b773493"
        },
        "item": {
          "id": "6b2540be-de9a-443d-8f78-9ac339d7ddf4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f23b774-de7a-4ad1-b2b9-f0309b893069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5794bd-8d0a-4386-a4f2-3cb5e1dc609a",
        "cursor": {
          "ref": "ee428969-3832-48a7-b219-7352d90ef3bd",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ec0bcffe-3170-4ec0-b85f-9a2d1595a21d"
        },
        "item": {
          "id": "6e5794bd-8d0a-4386-a4f2-3cb5e1dc609a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7e108d9e-bdc0-461f-9a46-05230153e313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1c332a-b997-4f14-b929-06eade93a930",
        "cursor": {
          "ref": "59e209d5-e2de-42fc-9cdb-583cc5bf2552",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "937fc47d-de20-43c8-8385-85a3270c728e"
        },
        "item": {
          "id": "fe1c332a-b997-4f14-b929-06eade93a930",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "df658211-dca4-4613-ad09-d3209b91d459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10949ff-f094-472b-9ac7-c6e55d4f7965",
        "cursor": {
          "ref": "b534476a-8fde-44e9-a302-7c90212b6eeb",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "855c7005-01d8-4870-a5f1-4df4cfc35ee1"
        },
        "item": {
          "id": "c10949ff-f094-472b-9ac7-c6e55d4f7965",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7e6dbd93-77a7-4c38-9369-e1b7134884f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0c6c7d-36fa-4a49-beff-c0120503e1de",
        "cursor": {
          "ref": "6c7ef3a6-23df-4315-8faa-d7b813a4fc04",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1801611c-27f9-4ba8-ae05-b2521b157b83"
        },
        "item": {
          "id": "0a0c6c7d-36fa-4a49-beff-c0120503e1de",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ed597245-a989-404c-88a0-8ff24b9e3c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6bfd30-3cef-4481-a1c1-2f898366b720",
        "cursor": {
          "ref": "4ba8a092-6677-4317-8727-33197ca16145",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "08bab9cb-5785-4b3b-92fe-7cc731d0b3ba"
        },
        "item": {
          "id": "6c6bfd30-3cef-4481-a1c1-2f898366b720",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d8caab0-7820-4e72-995c-c01bdf7724c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ba96b6-a45f-4759-8756-af24dc48dd44",
        "cursor": {
          "ref": "f6b6bf26-5569-4655-b797-c369dd73bd07",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1ed62394-e860-4982-b6ee-4f904dd424f3"
        },
        "item": {
          "id": "39ba96b6-a45f-4759-8756-af24dc48dd44",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "86657686-3c04-42de-9b21-969a28bd68a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbacb6d1-828a-46d4-8f42-a264e888fcdc",
        "cursor": {
          "ref": "dc06397a-4443-4700-abbe-c57e795c9f27",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "203907dc-3421-49f2-823f-e498e25f57fe"
        },
        "item": {
          "id": "dbacb6d1-828a-46d4-8f42-a264e888fcdc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1b1292d7-58af-4aad-b586-03c376af5131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fac8b32-2e8f-4c34-932e-d34b2f815b38",
        "cursor": {
          "ref": "e1da13bb-1c98-4a5f-bd0d-0d31ca11b5f8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ea0a2c57-d195-4189-a20a-01b8d29bfe87"
        },
        "item": {
          "id": "3fac8b32-2e8f-4c34-932e-d34b2f815b38",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "673f9017-8c6d-4f9d-8248-74c0af1c20ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54af7ca-1de6-4172-9a93-a48d153f5c47",
        "cursor": {
          "ref": "a65d29e3-681e-4dbe-b94e-4958a3680d92",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5f1caa2a-b7eb-4ad1-9392-958c46f6c8f3"
        },
        "item": {
          "id": "b54af7ca-1de6-4172-9a93-a48d153f5c47",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ae91de29-7474-494f-b8d7-4b938012a232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ec72bb-104e-41b5-bda1-d6cce3668813",
        "cursor": {
          "ref": "c86e7a2b-9e84-4f10-870f-52b7a7091a53",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0e8a8e12-f10f-4c41-9ce2-812c3720f860"
        },
        "item": {
          "id": "a7ec72bb-104e-41b5-bda1-d6cce3668813",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cf9292d9-2b4d-4abd-93db-084ddfa11b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a953c778-7f3e-4644-add8-c42d33fb5de1",
        "cursor": {
          "ref": "42b99462-999b-4ce1-86f1-76b40dc8babe",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8a8ef449-2b95-4fe0-becc-18f68fbcf396"
        },
        "item": {
          "id": "a953c778-7f3e-4644-add8-c42d33fb5de1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c19cda8d-55e8-4f7d-aa89-eba3ec1b068d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd250b2-7e5b-460d-8416-5a49201a504a",
        "cursor": {
          "ref": "d2ac9119-0459-4ac6-b5bd-874a38b81022",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "997cf4aa-3be7-4aca-b136-c99a21fe4b69"
        },
        "item": {
          "id": "3bd250b2-7e5b-460d-8416-5a49201a504a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bb12a2d5-5bb9-433d-a1ee-682ff332d7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8d230f-904e-409b-bde0-b025c5559929",
        "cursor": {
          "ref": "3dc8325c-8237-4cbb-a5a3-d0ece507aa4b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b788ac3c-bceb-4cfc-9d93-7950387a924a"
        },
        "item": {
          "id": "8b8d230f-904e-409b-bde0-b025c5559929",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "75e41fd4-a095-4aff-9b93-89e76f19d330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badf7b21-afa8-40e3-b760-207071c27450",
        "cursor": {
          "ref": "527b1434-d57a-46be-82b8-ecc02c9654fc",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "44051c6c-6293-49b1-b8c4-3d34b3949398"
        },
        "item": {
          "id": "badf7b21-afa8-40e3-b760-207071c27450",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "824fc171-285f-4fed-a02e-b9c27b3b3b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031c167c-2985-491b-b115-965d80b53947",
        "cursor": {
          "ref": "5b015d54-0060-4fbd-a69c-98d7785daaa4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "00664095-8606-4dd4-8c75-ecf39229a3d1"
        },
        "item": {
          "id": "031c167c-2985-491b-b115-965d80b53947",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "669690b4-ab14-4c0c-819d-60765d930962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d22ee7b-0c95-4101-a3c9-f1db2592e561",
        "cursor": {
          "ref": "07a08e62-d253-478a-b81a-4d9385244d81",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "55c9ba88-ecc8-4b78-af22-392c91714d41"
        },
        "item": {
          "id": "4d22ee7b-0c95-4101-a3c9-f1db2592e561",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b23ec53a-f8c6-4cc1-a21c-46a17e5b436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331c350f-f7a0-44da-ad3d-e48bccfd4e7d",
        "cursor": {
          "ref": "8556bcb8-05b8-4a27-a034-3aa8668cd55c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "77f80317-364a-475f-be1e-ad36f6bbfc23"
        },
        "item": {
          "id": "331c350f-f7a0-44da-ad3d-e48bccfd4e7d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "744d3c0f-5bb1-4f1e-a4e7-7115efb20a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209d3f79-0457-420b-a815-547c6274bfc5",
        "cursor": {
          "ref": "a062ec20-d601-4c70-a225-28dce3f62770",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3ba15ab7-cdbc-4608-98c6-4a2a6113c8ab"
        },
        "item": {
          "id": "209d3f79-0457-420b-a815-547c6274bfc5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "840321e8-2136-4884-a217-34b8f41d1c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5adf37-32ef-4a86-8174-109cd52565bf",
        "cursor": {
          "ref": "08deef86-e3ef-4b51-9283-bc9e3e89813e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "68641fa2-28ab-41de-a420-f9c1afe7844e"
        },
        "item": {
          "id": "cd5adf37-32ef-4a86-8174-109cd52565bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddc4d349-0837-4ccb-8ae7-1ad22c5f305d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bda044f-67c9-4f6e-8eb1-cd8215499e75",
        "cursor": {
          "ref": "9df56a06-6b49-4816-8219-843a2ac621cc",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5c28aee4-17fb-4664-9b93-d7cac4bf0c2b"
        },
        "item": {
          "id": "4bda044f-67c9-4f6e-8eb1-cd8215499e75",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7802dea7-6fae-4e5a-aa27-cdf80167db60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df322147-1dd4-47d6-ab9d-d404d12948fb",
        "cursor": {
          "ref": "aafa7e23-e332-4d90-b189-9a50e0580924",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d466fe4f-ea4f-46af-aae1-553eb95ece28"
        },
        "item": {
          "id": "df322147-1dd4-47d6-ab9d-d404d12948fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0401ec13-e27d-4d0e-ae2c-eb6d9fcf1d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc56df63-9d20-40a8-b8a9-cd8af347a405",
        "cursor": {
          "ref": "2a5b48cf-0ee3-460d-9195-1e8b57079716",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ba83c5bc-52ee-426b-9731-ebc6708b422d"
        },
        "item": {
          "id": "dc56df63-9d20-40a8-b8a9-cd8af347a405",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "029e84e7-efbe-4d29-9168-d36dc9dff8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddccc401-b9b6-44f3-874d-15b300028205",
        "cursor": {
          "ref": "9de4aac9-acf4-4618-95b7-f03ffa76e9ec",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "46ede1e4-a39e-4f1e-99f9-799230ca7408"
        },
        "item": {
          "id": "ddccc401-b9b6-44f3-874d-15b300028205",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b14ed648-b449-4fe9-9774-02950269ad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edc608f-ccf8-4fd2-824d-0035bcc48508",
        "cursor": {
          "ref": "307e8f29-4550-4c6c-ad57-70f77b916e46",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "86d9cc33-5f99-455d-be6e-94302ca30a1d"
        },
        "item": {
          "id": "2edc608f-ccf8-4fd2-824d-0035bcc48508",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2a8812f2-52d1-4c2b-9e41-4df54d27375f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c0d7cd-4277-4ce2-90cb-84207380f2fe",
        "cursor": {
          "ref": "3118d920-3d31-4ba8-810a-ba2cb74c595b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8839747d-bbba-4f36-ad92-2803adf3e12a"
        },
        "item": {
          "id": "14c0d7cd-4277-4ce2-90cb-84207380f2fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7f5fdc0a-9131-472a-aa73-fde910e3e4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad571f0-c93f-4c3d-86b4-34de1c206eee",
        "cursor": {
          "ref": "ac2e52de-6e1b-4ace-bfcc-54bbc1367a0d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5ff7b6ed-a637-484c-9c7a-770e276abf4e"
        },
        "item": {
          "id": "6ad571f0-c93f-4c3d-86b4-34de1c206eee",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ec0b81f-85d3-4353-86c3-973df2b77eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3ad186-e4d5-4a98-848d-1e07b7e31226",
        "cursor": {
          "ref": "b55bf3a8-2762-422a-8fa1-46914dada846",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "71d414d8-1e15-4075-ae36-3ff9b527b75b"
        },
        "item": {
          "id": "be3ad186-e4d5-4a98-848d-1e07b7e31226",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a33cfaec-085b-4621-b3d2-801196cd7778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177caa6c-573d-45fc-88e9-b2d384b9e220",
        "cursor": {
          "ref": "e8217f07-d4a1-4ea4-9778-baae6bd9d540",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "796791a8-a0c4-46e0-ac8b-327b81911676"
        },
        "item": {
          "id": "177caa6c-573d-45fc-88e9-b2d384b9e220",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "088fb38b-b1b5-4ccc-8230-1f6e20665e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14088819-7509-43bb-8d3e-bc7d19abe9d5",
        "cursor": {
          "ref": "5680f9fa-a5c6-4eae-a9cb-e44f005079d5",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9f021bd2-9821-4506-8b50-73e53d4b2ad0"
        },
        "item": {
          "id": "14088819-7509-43bb-8d3e-bc7d19abe9d5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6fc67dab-08cb-43e5-a36a-88fb9f6dcb29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbfe2cb-b06b-4932-86ea-ef427a1ef929",
        "cursor": {
          "ref": "38b053a4-b2c2-4150-954f-42863dc2deb2",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ccaded9e-6c00-4333-a460-357880c8de0b"
        },
        "item": {
          "id": "3bbfe2cb-b06b-4932-86ea-ef427a1ef929",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1c4ee0b5-a6a8-4620-9c3d-d4263d8ef13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c0ae6a-1bef-4a92-b5eb-4280751497dc",
        "cursor": {
          "ref": "6bcf94c5-0e92-4fb6-8e6f-991707579fdd",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3ee66ea0-a845-44f2-a74f-1be26a5e3ff7"
        },
        "item": {
          "id": "b0c0ae6a-1bef-4a92-b5eb-4280751497dc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f57b3ea7-943c-4fda-a541-8644af3c5504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3e88d7-c724-4d88-9c05-7fa8395a2546",
        "cursor": {
          "ref": "1f236189-2151-43ea-af71-61824b5dcb59",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "228980c5-0710-4aca-8f92-5b3882823c14"
        },
        "item": {
          "id": "fc3e88d7-c724-4d88-9c05-7fa8395a2546",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0cfb6609-db02-48f5-b2c2-013c9163f0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821856df-bbe7-47a7-8f1c-c55021d08cd2",
        "cursor": {
          "ref": "7ec359aa-286d-4f08-9705-edeb2c09bcf2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c95aa1cc-21e5-491c-9094-34e4a797d5bb"
        },
        "item": {
          "id": "821856df-bbe7-47a7-8f1c-c55021d08cd2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2973ddeb-619d-4058-9f68-f5c7977f0110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64db010-1d77-42e4-afa3-1d41863eadf5",
        "cursor": {
          "ref": "01633c73-30b4-44f8-a163-370830e05700",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "633dc2d6-6258-4335-9279-82612a47cd08"
        },
        "item": {
          "id": "b64db010-1d77-42e4-afa3-1d41863eadf5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ed7930b8-99a9-40be-b615-1778cff0a09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b701be-1aba-468c-a156-f4ae6a3ece15",
        "cursor": {
          "ref": "bc396ccb-f502-4a47-81b7-1033d00bd565",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a70317fd-b396-4a11-b2ac-570bd9c3d94d"
        },
        "item": {
          "id": "01b701be-1aba-468c-a156-f4ae6a3ece15",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e3a2d172-fdf3-4e7a-a6c5-d2085f90cb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56111cc7-dd55-4a21-ae4b-3b7b263eb11e",
        "cursor": {
          "ref": "48ff09ff-acaa-4f2a-b032-aca3fab9fd90",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6f9d8e96-d760-464d-a973-ea3ea88b6872"
        },
        "item": {
          "id": "56111cc7-dd55-4a21-ae4b-3b7b263eb11e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d0e11b7d-7d6e-4ba5-8c45-c2b0d3212cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d3b161-40c9-4c5b-bec3-792541012f74",
        "cursor": {
          "ref": "5658ac3d-c67b-48b1-aafa-84b142c3a1f5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6a2abcd4-e15c-431e-a81b-f1c6c5e48440"
        },
        "item": {
          "id": "12d3b161-40c9-4c5b-bec3-792541012f74",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "adbd6e7f-6293-47e1-9766-b8c858430a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b3c5f6-6bad-4b33-aa3b-55231b514bf8",
        "cursor": {
          "ref": "c5a71583-20f1-4334-97ac-961f0af36e88",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "95d275ef-9d21-4d1e-aaf3-7dfb7762b3b2"
        },
        "item": {
          "id": "35b3c5f6-6bad-4b33-aa3b-55231b514bf8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8ea3b380-14ff-4a4a-a3f1-c22233443e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385edc17-6b0b-481d-8e0a-0996312e7668",
        "cursor": {
          "ref": "d525c012-c36e-4ec5-b4fe-28babb178d7e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34773cd5-8e3f-4f3d-bc45-6b33039dccad"
        },
        "item": {
          "id": "385edc17-6b0b-481d-8e0a-0996312e7668",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "04196e91-9a95-451f-a1bf-3718d68af815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bc3aab-b65d-44c3-97d4-e7bfbf6cfa3f",
        "cursor": {
          "ref": "24add8d8-36e9-4e46-9894-c6967b6b7dcc",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "59f3692d-3038-4666-8ec0-5e301f270079"
        },
        "item": {
          "id": "05bc3aab-b65d-44c3-97d4-e7bfbf6cfa3f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "00ac0231-3afb-496d-a849-dd32a3298184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a8f862-81c9-4682-aa1f-ee59cfe291b3",
        "cursor": {
          "ref": "d1229c8f-dbf1-4dda-89bc-c3091a1f3efb",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "49fc9d5e-37e1-4c83-a407-4e3791802536"
        },
        "item": {
          "id": "f2a8f862-81c9-4682-aa1f-ee59cfe291b3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4df3a94b-d908-4622-9541-8a770b257e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f78212f-72c0-49fe-b8ec-2ecbee53956c",
        "cursor": {
          "ref": "50721e4f-9cf4-4f45-86f8-3731214d331f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fff3e9d7-7eff-49db-8982-2e22dca81fce"
        },
        "item": {
          "id": "9f78212f-72c0-49fe-b8ec-2ecbee53956c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "878d3d76-2d10-4995-9afe-651a3d6a0dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756c7309-50c2-418b-8071-931b372a22cb",
        "cursor": {
          "ref": "b4cb7044-7e8c-4195-bbdd-46b9502baaf8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e9e9eee9-9347-4167-b096-0cb3a3090009"
        },
        "item": {
          "id": "756c7309-50c2-418b-8071-931b372a22cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c635adc-e37b-440b-b1bb-8c01a775b26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038f7e51-2e76-41b8-874e-99ed0628d449",
        "cursor": {
          "ref": "ddd46a2a-ebb0-4002-a86f-2b27f7e6eb61",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "69f74279-0fab-4a5d-a26d-181c1a6ecdb2"
        },
        "item": {
          "id": "038f7e51-2e76-41b8-874e-99ed0628d449",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4ecbe99b-e9a6-4116-96eb-13120f22b021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee462408-3cd0-4c2e-a1a5-0a45303493d7",
        "cursor": {
          "ref": "baf26846-dafa-4abd-87d2-e0e87556149e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e14dc45b-16d2-4cc2-a921-04ba709dec68"
        },
        "item": {
          "id": "ee462408-3cd0-4c2e-a1a5-0a45303493d7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "951140e4-93cf-4e1b-8e20-2cbc511bb5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6ff45e-391a-4fb0-a6a3-c24667e410f3",
        "cursor": {
          "ref": "ed69b816-c915-4533-b25e-338196d40bcf",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d2c1e227-542f-4258-bf0c-ed29f70ccbc0"
        },
        "item": {
          "id": "2f6ff45e-391a-4fb0-a6a3-c24667e410f3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b4723b90-b198-4bf3-a660-79fde1530f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6bc934-c29b-4a72-b435-642db0ffc6be",
        "cursor": {
          "ref": "ae0ec392-4bd5-40ef-b004-fb792e5f3963",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "77956858-a9d6-4f32-8d3e-ce7507dfecea"
        },
        "item": {
          "id": "4c6bc934-c29b-4a72-b435-642db0ffc6be",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9b4d5b07-b302-4fcf-8e42-da4949127fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84705a0-7a02-497d-a2e1-3058cc0c329f",
        "cursor": {
          "ref": "e7a154c2-394c-4f7e-a3ff-58b7d0f7a3f2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "886d7eb0-56dc-4086-84f2-94225c24636a"
        },
        "item": {
          "id": "c84705a0-7a02-497d-a2e1-3058cc0c329f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a3bad9ba-78ca-4d1a-9739-b80424647035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6f0bdd-c7fa-48a8-b6ac-fccd9c6cc451",
        "cursor": {
          "ref": "2a89ca97-f1d4-4107-b92f-082aa72f0d7c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3ee82123-1624-426f-9cc2-26bf951c6699"
        },
        "item": {
          "id": "dd6f0bdd-c7fa-48a8-b6ac-fccd9c6cc451",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dfcc6a88-cb13-46b8-a95a-50e23c71ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b121b2c-f4e3-41c7-8fc1-e817833d8604",
        "cursor": {
          "ref": "ffbe5108-5307-4368-9260-492e2a55e557",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c2f04c49-9f5d-497a-b218-069e6402bb3e"
        },
        "item": {
          "id": "8b121b2c-f4e3-41c7-8fc1-e817833d8604",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5a241041-002c-4b84-94c3-e60d6ec537ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f6fb19-8726-4ad9-a2ce-51fd53092af4",
        "cursor": {
          "ref": "bd329f0e-032a-4b67-95ca-20a09b6c0d76",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "aec37f82-2f0f-4c51-92c4-5e9e9c8a1ced"
        },
        "item": {
          "id": "e9f6fb19-8726-4ad9-a2ce-51fd53092af4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a76bfb04-508e-4c89-b0ce-79bf550f4bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e982c27-2be2-467e-8e73-044d0bb47f7d",
        "cursor": {
          "ref": "ed971ae6-8dcf-4fa9-8743-d470e9a610a5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "83563c39-724b-4a30-b4aa-89aa73891378"
        },
        "item": {
          "id": "1e982c27-2be2-467e-8e73-044d0bb47f7d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "77bc8947-4c0f-4bc7-a6b5-ec06cd4635b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bb5d68-aed8-40ea-a1c8-8ecd36c8022d",
        "cursor": {
          "ref": "0177fb5b-5475-4464-b347-bbfd932b2c12",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6e1fe407-848c-462c-bccc-d667b129c327"
        },
        "item": {
          "id": "45bb5d68-aed8-40ea-a1c8-8ecd36c8022d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8817b3e3-48f0-4e87-b71b-46505bd226dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857f8cf2-15c4-4a1a-8186-26368468eee7",
        "cursor": {
          "ref": "02bf172e-d613-420b-a1c0-6578e0bf48c4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1ae25984-74e5-4d6a-a7ef-e211ab5aed8b"
        },
        "item": {
          "id": "857f8cf2-15c4-4a1a-8186-26368468eee7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0afa7bd6-041a-4a3a-ab76-9e600dc8ea44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecc2c8c-a229-43b6-a268-ab3270871e6d",
        "cursor": {
          "ref": "d46e7c24-9001-4d69-8dd3-056787eb384e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0afd6e7e-97fc-4a12-a36b-95c8fedbb5aa"
        },
        "item": {
          "id": "0ecc2c8c-a229-43b6-a268-ab3270871e6d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2824a548-3968-4b37-9135-f7f5b437adb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd8639a-9b8f-4708-ae13-aa5b805bfd61",
        "cursor": {
          "ref": "99fd7d7f-366f-45a5-a9e8-d503abe2ebb6",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "55b966b0-7428-48af-beb1-833f9513e7a9"
        },
        "item": {
          "id": "5fd8639a-9b8f-4708-ae13-aa5b805bfd61",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "19c971d9-29aa-4d5c-8f86-afcd747c5b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6d7e8d-e787-43b9-a416-f8e7093f845d",
        "cursor": {
          "ref": "6b26c165-1b6a-4307-9bc8-7b46ef50be9b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eefc5d51-4df1-4c28-be4a-3577c28acd71"
        },
        "item": {
          "id": "9c6d7e8d-e787-43b9-a416-f8e7093f845d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "df77c482-87aa-4b41-9db1-96ae77ef8dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcec51c-d129-45d0-82bd-be7d1485ad91",
        "cursor": {
          "ref": "d9407a57-e8ce-4155-8217-5b7f20dbeb61",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a920829a-c894-476a-be59-b3025c42156f"
        },
        "item": {
          "id": "2dcec51c-d129-45d0-82bd-be7d1485ad91",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b7cee8a0-c885-4878-b347-18e55e3240bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acdba81-a904-4cd9-a2a3-57dfd4182cbe",
        "cursor": {
          "ref": "b52b9218-004f-4f97-a396-3f611533890c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "567313d9-b350-4fd3-9397-0bf8ebaa6f1b"
        },
        "item": {
          "id": "6acdba81-a904-4cd9-a2a3-57dfd4182cbe",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c12e5513-d344-4261-8b23-e0733f096a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1ef6c0-6155-4df7-a52d-042b4a15ea0d",
        "cursor": {
          "ref": "a19ef5fa-afc6-4d7a-ab75-5c7669be4290",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cdb6b61f-3a24-476b-93c7-a2ebc2b94bbf"
        },
        "item": {
          "id": "ee1ef6c0-6155-4df7-a52d-042b4a15ea0d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "10c6fb8a-20fc-4320-a1fb-bf343894ebee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac77a8e-a095-4a87-a817-aebc7b5b8a7f",
        "cursor": {
          "ref": "8f1add99-ef03-497b-b8d9-9b12fb7f4708",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fa4c2e0a-6b31-42eb-8442-7efc97451d12"
        },
        "item": {
          "id": "bac77a8e-a095-4a87-a817-aebc7b5b8a7f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bee1ff94-ed67-4a31-8087-aa2a9d030fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed92b22-f017-4632-82c4-e5e773070681",
        "cursor": {
          "ref": "ffc54353-c5ed-49ce-b0aa-192ade5337d1",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c8af42b4-3c0d-40b3-82b7-495a6ce626fa"
        },
        "item": {
          "id": "2ed92b22-f017-4632-82c4-e5e773070681",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d56e396f-6568-445c-869e-8fbad906a5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549d7a1d-2869-45a0-98d9-8db5ffe091c7",
        "cursor": {
          "ref": "ed86b6c7-69c4-4863-b59a-f292562ecc70",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b3c9f009-a3e9-4961-b72c-1608259dce47"
        },
        "item": {
          "id": "549d7a1d-2869-45a0-98d9-8db5ffe091c7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1f4bbe66-c44f-4de8-abee-55d065216cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a7408e-8e93-4203-952d-f8464c837c1b",
        "cursor": {
          "ref": "ec47d33a-48d4-4cd4-b814-91bfeaf73d4d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a5aa59cd-5119-4ba5-b3f6-7dbf3326295b"
        },
        "item": {
          "id": "09a7408e-8e93-4203-952d-f8464c837c1b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fac3282b-a5fd-4300-9dce-274d1b9d5e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a8b335-e3a5-4e0f-b495-8e76f08cc9b2",
        "cursor": {
          "ref": "4052b727-d07f-4401-9e42-ce122effc85c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78e7594f-3770-4fbc-90e4-8ea855ff9c5f"
        },
        "item": {
          "id": "94a8b335-e3a5-4e0f-b495-8e76f08cc9b2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "32836b85-edcb-4678-a053-1d27316a753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81a9492-d2ad-428c-a9e5-54c32138f38b",
        "cursor": {
          "ref": "498a50c7-fdf1-4b53-a059-b6448d3ed0c7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "704c34af-375f-4d5f-82bf-bed89dfa6c94"
        },
        "item": {
          "id": "e81a9492-d2ad-428c-a9e5-54c32138f38b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3a9b15cd-d495-4fa3-bd39-0f8044cd0fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9a4541-ee2a-4f73-a7f1-a4e16d1447a5",
        "cursor": {
          "ref": "9fd4ca64-1889-4198-b3e3-547c22030b7d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a89286d2-4d03-484e-b5a5-de7195c9446f"
        },
        "item": {
          "id": "7e9a4541-ee2a-4f73-a7f1-a4e16d1447a5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "840cbc70-1ba2-40bd-a15d-6d678f1156b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921696b1-6672-4a9b-a9b7-f320063ebfb2",
        "cursor": {
          "ref": "7f1d3431-01e0-4017-a049-87c2fc3a768d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "eb4cd6f3-50c0-4117-a770-f220468c9764"
        },
        "item": {
          "id": "921696b1-6672-4a9b-a9b7-f320063ebfb2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4940740d-360b-4e4d-92e7-a48e79aaad37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c16c2e-1a14-41b4-82d9-6fe0603b2657",
        "cursor": {
          "ref": "533ea416-71b4-4e08-8f78-3b2128ac9720",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e373f43b-ce81-4d1d-b805-69edbd5779b1"
        },
        "item": {
          "id": "e9c16c2e-1a14-41b4-82d9-6fe0603b2657",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0acdc6b5-7b3f-4208-b2c7-b1160a0184d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cef021-79ec-4405-b6a3-92e0e41bfba7",
        "cursor": {
          "ref": "e3b3ab70-7eb8-4bb3-ba84-e0f9cd4b5066",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4acb921f-84c6-4b4a-a9a7-a22d95e0acc8"
        },
        "item": {
          "id": "b5cef021-79ec-4405-b6a3-92e0e41bfba7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0dd8cd6c-0838-4236-a096-3116269cc044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce06219-3409-4ca3-b700-58986ba4af40",
        "cursor": {
          "ref": "19dce165-c500-420e-a6e9-86fe7c27453a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c59ec74b-ad22-4f9f-b11d-2487aedc15da"
        },
        "item": {
          "id": "0ce06219-3409-4ca3-b700-58986ba4af40",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4f74be20-a6fe-4a5f-8e45-d69d5a12197e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be8b19c-28eb-445d-a23a-4e0764e75031",
        "cursor": {
          "ref": "f664ceb8-f8fa-40ca-9d06-59004510a1c4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "44ab055c-4a9e-4d95-b45f-f533c5504165"
        },
        "item": {
          "id": "3be8b19c-28eb-445d-a23a-4e0764e75031",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "39a7f536-a396-4faf-b24f-a5880ac4fbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba27717-453d-4f01-81e8-d36cd484b078",
        "cursor": {
          "ref": "13faf1a6-0915-4a92-9cbe-98a41702f1e6",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d1541e8f-a6de-4d41-9837-e6bdc4915b8f"
        },
        "item": {
          "id": "aba27717-453d-4f01-81e8-d36cd484b078",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "13f9957c-25f2-4994-a64e-881757224672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f4b369-f67e-4c73-9f7a-378b46c38adb",
        "cursor": {
          "ref": "e805b1cc-1e92-437d-9c43-6fa79bd18463",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "11faeb62-197d-4e0e-a654-8f33c84b7a81"
        },
        "item": {
          "id": "e2f4b369-f67e-4c73-9f7a-378b46c38adb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "09874bfe-9515-4d7c-b07d-026c089a4fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9158f61d-5b21-47e5-b533-1f89eb11c1df",
        "cursor": {
          "ref": "bb32aece-a492-45f5-99bf-ca5ce97e5575",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "95fba25d-1de3-4bf5-8cc3-c35663f9e454"
        },
        "item": {
          "id": "9158f61d-5b21-47e5-b533-1f89eb11c1df",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "74d738ba-1de3-4a93-8ff4-f3dc209c6048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc3f80-bea7-46ea-90e5-d52febcdda4d",
        "cursor": {
          "ref": "e2ec6440-215d-4bc6-aad5-fc159ba707d0",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5642a24e-d994-4749-b0d2-1e2656101a6d"
        },
        "item": {
          "id": "6dcc3f80-bea7-46ea-90e5-d52febcdda4d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f2fe4c5a-ddca-4390-b352-8c3fe6e7bd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0549ea-ee58-4a9c-8fcf-11a8ee1b67fb",
        "cursor": {
          "ref": "64b3c680-2f30-4df7-a439-9bb8fb0ae5dc",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6e03d727-83a2-439f-a5c0-bf5abed9fa60"
        },
        "item": {
          "id": "de0549ea-ee58-4a9c-8fcf-11a8ee1b67fb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "993575ee-0150-4969-b119-016df5f1eb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20126b18-07ef-4a9f-9a96-724848a7d0b0",
        "cursor": {
          "ref": "75e2a05a-9604-4529-92b8-7b0942dc4057",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "56f92a50-7fce-4b9b-a35b-08026925d738"
        },
        "item": {
          "id": "20126b18-07ef-4a9f-9a96-724848a7d0b0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "70e278eb-bae8-4d16-80a3-750486b05002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de69cb0-3251-47e3-ada8-2b4542840788",
        "cursor": {
          "ref": "d62bfa05-8c54-4978-bba1-902a7ae55745",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2d69cbe4-971d-4cb6-ac0f-e67a21d56621"
        },
        "item": {
          "id": "9de69cb0-3251-47e3-ada8-2b4542840788",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "689bce1c-04e7-4009-bf5e-d9d45bb26cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316fdfb6-abf4-432e-89f4-7e8142302527",
        "cursor": {
          "ref": "5507179d-b2a7-49be-b969-1fad3332079f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9ef7affb-7408-4a22-9eb3-942d731f125f"
        },
        "item": {
          "id": "316fdfb6-abf4-432e-89f4-7e8142302527",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f8030637-40c5-412b-85b7-83971f07ae14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e22533-3543-4126-9802-faf2571e4bfb",
        "cursor": {
          "ref": "5fe32765-38f5-4146-b087-57d70edfa19a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b02665df-cd08-404b-b913-ff9e6e50d785"
        },
        "item": {
          "id": "d2e22533-3543-4126-9802-faf2571e4bfb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6f1e4289-6bc1-4581-a753-f0441be0b8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec61832-f016-4801-9284-6073faba00b6",
        "cursor": {
          "ref": "737f0855-df35-48e4-b8cf-d61ab396b7b5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9b8bd805-317b-4bbf-a160-9210573d114b"
        },
        "item": {
          "id": "9ec61832-f016-4801-9284-6073faba00b6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "39ca8b93-a844-499a-a4cf-8439264ac66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b46fb50-7995-49e6-8cc9-f3a293ab03d3",
        "cursor": {
          "ref": "f6b556e5-123a-4966-be69-e66b4fc5ba72",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "88954a1a-2e6a-4299-acf4-c2e433806884"
        },
        "item": {
          "id": "7b46fb50-7995-49e6-8cc9-f3a293ab03d3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e63d3369-36df-43ff-8453-6c62c8389810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51a43b7-2002-4d84-8507-dc072e11c92f",
        "cursor": {
          "ref": "995c6bd9-25bc-420f-b9f9-0770af056268",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb93e87a-c857-4ec8-adc7-8b1bbfebadcd"
        },
        "item": {
          "id": "f51a43b7-2002-4d84-8507-dc072e11c92f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6ad47fac-80a9-4d95-a151-550bdfc7c10d",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "584cc2fa-2e0e-4119-9ed2-58c50ecd19f0",
        "cursor": {
          "ref": "53b46ebf-276a-4470-8b02-6da1e43b3ea5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7a002438-0e92-4fd9-ad90-0d7da56281da"
        },
        "item": {
          "id": "584cc2fa-2e0e-4119-9ed2-58c50ecd19f0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "928d778c-931d-4bc2-948e-449c2d9b3b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eccdd2b-a25a-486f-af4b-0981a293a3fd",
        "cursor": {
          "ref": "a3602359-f735-4000-aaa0-57a7aad74556",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "57bd4459-4614-41f1-b39d-2699ae007c3c"
        },
        "item": {
          "id": "8eccdd2b-a25a-486f-af4b-0981a293a3fd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f368b535-04d6-47b8-a174-c9bc519d75ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70198034-e52b-4510-8d06-be52b8520ab4",
        "cursor": {
          "ref": "3773fe7f-c6b9-4fc7-ace6-9a2364f189c2",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "67aca60c-9cb8-4969-ae10-d8233cf60342"
        },
        "item": {
          "id": "70198034-e52b-4510-8d06-be52b8520ab4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fae2f8dc-e561-4985-9c7d-bcd86c02a993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2618ecde-f5ef-4d0a-83ca-c1885e3d3003",
        "cursor": {
          "ref": "5f2ac771-9d1f-433d-9ce3-578f1e5eba89",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "15715a78-f5fe-497f-8260-34fa821c43aa"
        },
        "item": {
          "id": "2618ecde-f5ef-4d0a-83ca-c1885e3d3003",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "21869388-82cd-4dc5-a1d6-93b096e7a99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bd7059-5b60-4114-8e61-8f0e0bc609f6",
        "cursor": {
          "ref": "3402c987-a328-4853-a29a-c5d3b8b7ea69",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "90528808-a909-4f0e-8f10-b014faa1a3b1"
        },
        "item": {
          "id": "f0bd7059-5b60-4114-8e61-8f0e0bc609f6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1eb0a5eb-7fe5-4877-9044-26b2bd1a2699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0274a7ca-59eb-4039-be4b-c8e7ed08e3ff",
        "cursor": {
          "ref": "8da43293-87cd-41c7-992a-daa294feb74a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a12887f0-8c2e-4165-87b6-b40510202a51"
        },
        "item": {
          "id": "0274a7ca-59eb-4039-be4b-c8e7ed08e3ff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "556ecb54-0773-467c-9e67-9367103571a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca33cae-9dce-45ca-8f7c-5769b2099f78",
        "cursor": {
          "ref": "3e623a23-3429-4488-b111-35803e3eba06",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8a1abe79-6b48-4b55-8309-5583140047d0"
        },
        "item": {
          "id": "4ca33cae-9dce-45ca-8f7c-5769b2099f78",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "723dd3b8-a21f-4f88-84d5-7a2f3c4f04d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988b102d-a084-4f94-8b0c-04a4f68d9388",
        "cursor": {
          "ref": "5af50a9e-9ca2-4844-a6bd-fd64c7851ef5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b0022b67-0545-42d8-a8a7-7adfdb0cc8da"
        },
        "item": {
          "id": "988b102d-a084-4f94-8b0c-04a4f68d9388",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "119eaab3-a055-4a65-83d2-2996c2ac4571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8f7386-089c-4442-9d62-48ff3d41d502",
        "cursor": {
          "ref": "3ed48020-a5d2-4189-bd12-1a7216d9de8f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "61d8a298-170d-4a02-9fc9-db699a6cc519"
        },
        "item": {
          "id": "2f8f7386-089c-4442-9d62-48ff3d41d502",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "845ab527-a487-41cc-b1ee-3df8ef76247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84498362-ebb1-41bb-aa66-7f380c2a1f02",
        "cursor": {
          "ref": "704c8a75-0b18-45d9-b828-311f32cb98ca",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "19151fd8-6eb5-46e5-800a-5125416e02e2"
        },
        "item": {
          "id": "84498362-ebb1-41bb-aa66-7f380c2a1f02",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "af6d01e9-c219-4982-938c-914d96655160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58141005-03be-4186-85a5-2aa35b624f22",
        "cursor": {
          "ref": "1e9c5071-f306-4877-a40d-3cc93500ea48",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d737f33f-4877-4334-aef1-7da5cbaba23e"
        },
        "item": {
          "id": "58141005-03be-4186-85a5-2aa35b624f22",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b4e6c700-8e2a-4dda-8823-cd46424b65f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5246a65e-190d-404a-ae03-df378e656877",
        "cursor": {
          "ref": "a38c0072-6123-4200-906f-0653d40c0b8e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7e58b5a8-e95a-449f-9598-af4a25348d05"
        },
        "item": {
          "id": "5246a65e-190d-404a-ae03-df378e656877",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ea196b07-a187-4d81-a5b6-44e50b7311aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b543a292-7897-4793-83f0-0f80517d8891",
        "cursor": {
          "ref": "157d746b-a47e-47d3-a031-52cd271c73a1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f94f4d22-b727-4d1c-87fb-3f01c9f1a205"
        },
        "item": {
          "id": "b543a292-7897-4793-83f0-0f80517d8891",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c4a90542-ab83-40c5-8f95-d491311afb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e2a78-78ba-41e8-8d86-33d9ad347c9b",
        "cursor": {
          "ref": "1a5cbdad-c367-4599-82dc-3e8345af444e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "81c80419-e231-460d-ab63-5dde78e436c0"
        },
        "item": {
          "id": "d45e2a78-78ba-41e8-8d86-33d9ad347c9b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e0e53b08-1ffa-4ce0-8389-34b1d0a06ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b4418c-c372-4481-9292-2dbd4ede7155",
        "cursor": {
          "ref": "51b1bba7-e519-4833-8d01-e8afdbeb3c58",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6e7f8f63-8e09-42dd-852e-46017d151af4"
        },
        "item": {
          "id": "34b4418c-c372-4481-9292-2dbd4ede7155",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bdc2cfc6-21c3-462f-88d9-40715f59b8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6792ad-5fc0-4a1e-811d-e98341a5eba2",
        "cursor": {
          "ref": "ef4f888c-98ae-4688-941b-7f883b235d38",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0e2845cb-064a-41d2-b7e3-f9bfe85720bf"
        },
        "item": {
          "id": "ea6792ad-5fc0-4a1e-811d-e98341a5eba2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dae4dd5a-5ca8-4db8-b8fa-b23fc8d52300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca9297b-d5c3-4a14-9243-d28b40cb525e",
        "cursor": {
          "ref": "32cd461e-7b1d-4b38-a345-abbe4a44c6e3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d2fd7fc7-a43d-44bb-b235-68558012a06a"
        },
        "item": {
          "id": "2ca9297b-d5c3-4a14-9243-d28b40cb525e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bdd35850-6448-4b84-9c38-3eb11a63794a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ce8de-cb5d-4d3b-89d8-c6354b0e0f74",
        "cursor": {
          "ref": "de1dcc98-107e-4ab5-b7a9-17bed99cfcae",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "29961061-4b3c-4ebe-b896-6a356320a8db"
        },
        "item": {
          "id": "381ce8de-cb5d-4d3b-89d8-c6354b0e0f74",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "95b65478-eabd-4e8c-949f-8624aba15700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca99047-e4b6-4f49-a6c5-e02d2efed359",
        "cursor": {
          "ref": "6638b8f9-295d-42cd-98f0-43f2512e1e96",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "43082e0d-a69e-4467-9bbf-8c5ee16011b5"
        },
        "item": {
          "id": "cca99047-e4b6-4f49-a6c5-e02d2efed359",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "29339c0e-3f43-4e0d-9c56-f812e52bc675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd381ad5-7c7a-4d9c-a0d3-0331527a3748",
        "cursor": {
          "ref": "2756736d-a36b-42e3-bffe-473d73ebc6aa",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "99cc090d-8960-4de8-9d38-53ab337b9c4f"
        },
        "item": {
          "id": "cd381ad5-7c7a-4d9c-a0d3-0331527a3748",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2edd186c-b721-4d35-b5d6-972b8ac1c875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c3fbf1-4ad4-402c-b589-215b7b3599dd",
        "cursor": {
          "ref": "1d194a89-475e-4248-9c73-0ac902cdf9ff",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "eb5b144f-2a29-43c8-ae75-670d6abe9b49"
        },
        "item": {
          "id": "33c3fbf1-4ad4-402c-b589-215b7b3599dd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4859bbb6-2182-43b0-89d8-ca4e6c9306c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de87d17-851d-4351-b305-adfe694c0845",
        "cursor": {
          "ref": "a57146d0-f8c1-4935-848f-78955fc8fe3b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c5d5c989-017c-43fc-bc37-50c0146764b7"
        },
        "item": {
          "id": "9de87d17-851d-4351-b305-adfe694c0845",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "21d87f1b-db56-4cf1-8551-ca4522c5689d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f883bcf6-3da1-4f26-a51f-4b18c75af763",
        "cursor": {
          "ref": "0e88a2f2-d052-4e1f-82b6-07e7ce5640ea",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e09de18f-e5a2-471b-a929-bd56603ae5d7"
        },
        "item": {
          "id": "f883bcf6-3da1-4f26-a51f-4b18c75af763",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4aa6ceff-3026-4876-a60e-aaaf95c5e0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5538fbd7-f355-44ca-b89c-6e3c32431fa5",
        "cursor": {
          "ref": "6128e654-1ee2-4219-986d-628ea54e610d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "43e2b86b-2edf-4094-8625-d98ef50053fe"
        },
        "item": {
          "id": "5538fbd7-f355-44ca-b89c-6e3c32431fa5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7599c856-861f-494b-9c2c-bd9a26722ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e048c957-04fb-4fe9-a1ae-fbacea0e590b",
        "cursor": {
          "ref": "51ef3983-2a39-4876-86b7-0dd09011d326",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5c892416-102a-4d18-ad42-69eeea47c7ab"
        },
        "item": {
          "id": "e048c957-04fb-4fe9-a1ae-fbacea0e590b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "efc8faa0-a4d5-4ce9-b54c-32e0051bb262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1cfd27-605f-4091-b3ae-3fad55784f69",
        "cursor": {
          "ref": "b19546c2-f1a7-4d44-80fa-594b7b0381d0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2c64bf64-5187-443c-941a-7ce59d1a85f3"
        },
        "item": {
          "id": "4d1cfd27-605f-4091-b3ae-3fad55784f69",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "23f8fddc-6290-47ae-aac0-607a7a4ab08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61de4345-e5f2-4621-b0cd-8b813c4c48e1",
        "cursor": {
          "ref": "1cfbd49a-7107-45ee-a286-c53020760f50",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0ae49048-89ea-4edf-bac7-2266d24415e3"
        },
        "item": {
          "id": "61de4345-e5f2-4621-b0cd-8b813c4c48e1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b950ad3c-7993-49ef-bf51-d991ed5c0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eb64dd-64b2-438d-8ca7-ad7c8aec47d9",
        "cursor": {
          "ref": "dec7933c-91d3-4475-b000-8e0eec484235",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e2a4bf4f-cbeb-425a-8edf-8044ba54d966"
        },
        "item": {
          "id": "81eb64dd-64b2-438d-8ca7-ad7c8aec47d9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8cca2a1e-adb1-41cc-880c-239cae8ee503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c708d34-144c-4c30-9d31-a4bb74f52388",
        "cursor": {
          "ref": "128f271b-613a-4f2d-b3be-f02a940ac5f8",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "93298ee5-39ad-48d8-8d1b-103b62ed267c"
        },
        "item": {
          "id": "9c708d34-144c-4c30-9d31-a4bb74f52388",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31933490-99d6-4594-9ec8-338a6ede4749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a630d653-7f85-4034-9abd-5bd2193276be",
        "cursor": {
          "ref": "c2519027-edd0-42c8-8dc9-8185cc2d1b80",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c6da3a36-9514-492a-bdbf-81d51534883e"
        },
        "item": {
          "id": "a630d653-7f85-4034-9abd-5bd2193276be",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bf748a42-2ad7-48bd-b8e6-9d767bf3d49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebd6f6a-59e0-44b2-9ea6-ac2f5294f472",
        "cursor": {
          "ref": "e6cb9af8-5427-4303-9325-7cbea4b9e910",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "35245662-bb24-45e2-93c3-8190b3240956"
        },
        "item": {
          "id": "eebd6f6a-59e0-44b2-9ea6-ac2f5294f472",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2b4cc606-2c7b-43cb-8a4c-81128c183429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0782e030-ff63-412c-a643-b0dd63df7c60",
        "cursor": {
          "ref": "d26660cf-17f3-45c1-9d08-6aaa1b713052",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7b163a25-bb76-4b1b-b1a8-3d96a94a2e7d"
        },
        "item": {
          "id": "0782e030-ff63-412c-a643-b0dd63df7c60",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8c8e40f1-b906-44d3-ac17-ad46de850230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34cd976-e807-45d6-84fa-d3fc352ac677",
        "cursor": {
          "ref": "ca58a861-e30c-470d-82f6-9b7b7482b506",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e5729934-20e9-4289-8714-9f8b35ebdaf1"
        },
        "item": {
          "id": "d34cd976-e807-45d6-84fa-d3fc352ac677",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d97a7d00-2748-441d-abb6-0cc9fdb84da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792e50db-a511-445a-badb-9c5dd5a66c85",
        "cursor": {
          "ref": "db91e84c-a967-4058-9f77-34c0e2393bba",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8cf1b53b-2e36-4e85-ba01-2d305a58e79a"
        },
        "item": {
          "id": "792e50db-a511-445a-badb-9c5dd5a66c85",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ff0ff2d7-7215-4e7b-b16a-8a41672b1db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736bc9c1-b66c-483b-9623-d2f50970b1d3",
        "cursor": {
          "ref": "42b5dc44-d52f-4e57-b02b-a63f3c21322c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4108ae7f-a3f1-483a-bbbb-61402c9d6acf"
        },
        "item": {
          "id": "736bc9c1-b66c-483b-9623-d2f50970b1d3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b92fc82a-239e-407a-aa05-2c440b0138ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dabb5e-faf7-4849-8284-a41f6b9a38bf",
        "cursor": {
          "ref": "f5132b3b-4d0c-4158-a24e-482b6017cff5",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3b9bbb9a-d785-4947-a51e-87d1e40a1809"
        },
        "item": {
          "id": "38dabb5e-faf7-4849-8284-a41f6b9a38bf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e167fdf9-75bd-4c86-90f4-7ca4cce8a9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e2511a-247f-41af-9874-0b0fa89bf909",
        "cursor": {
          "ref": "dd11fede-11fe-4f90-a7de-c6812cd3c29f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "da14da61-5704-4f87-b1d0-6bffe2abaf4d"
        },
        "item": {
          "id": "99e2511a-247f-41af-9874-0b0fa89bf909",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ec0fc485-28cf-4f44-b605-531923d729bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "face5777-d521-421c-aead-75183cdfff42",
        "cursor": {
          "ref": "d5b3c3c2-3dbb-4090-80a2-e57e73ad08f3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "56f28298-359a-4958-be1f-837691dc3d01"
        },
        "item": {
          "id": "face5777-d521-421c-aead-75183cdfff42",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fef83b47-1d3b-4b59-8f76-8019804b3e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d49c8e6-c152-4f34-b447-6bf163ac3ee4",
        "cursor": {
          "ref": "fb6b1b0d-c006-45c8-b532-34d029300831",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "07e6b354-423d-45c8-bf53-26dfd1e53ad8"
        },
        "item": {
          "id": "5d49c8e6-c152-4f34-b447-6bf163ac3ee4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee19862c-40a2-417d-9ae7-59ddc275e525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcd7ea7-6c5d-4e4f-9ede-65cfe1aec69d",
        "cursor": {
          "ref": "85389c54-5526-449b-ae8d-49d0de58a224",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1e70697a-43db-4270-984d-f393bb37347e"
        },
        "item": {
          "id": "0fcd7ea7-6c5d-4e4f-9ede-65cfe1aec69d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b7da15cd-33e7-4170-ad72-c8742d8f5697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10887bad-8ef8-4eef-b13e-2542921fee40",
        "cursor": {
          "ref": "acb2ca64-e21c-43d2-8b1e-3b390a1e95c9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8ddcb8a0-818a-4a0d-bdf3-cdb232643221"
        },
        "item": {
          "id": "10887bad-8ef8-4eef-b13e-2542921fee40",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "af4ad3b6-f715-4c7d-8b0c-034132ee8fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500e194-1b3b-4c25-95fa-a28d7334ea76",
        "cursor": {
          "ref": "0060fe38-5f94-452d-9bc8-d8204bf5cac0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4d534509-5f3e-43a8-aca5-68ab4da5a82c"
        },
        "item": {
          "id": "e500e194-1b3b-4c25-95fa-a28d7334ea76",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "38801a17-7bf4-4b6e-9abf-ad73f5bc3b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb63d61b-cf2a-4d76-8049-c03219842885",
        "cursor": {
          "ref": "3778c817-c577-48fd-b83f-25857fee5737",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "deff1cc8-96fa-46c6-a85e-558a510ec634"
        },
        "item": {
          "id": "cb63d61b-cf2a-4d76-8049-c03219842885",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6ddbd1bb-b957-404b-bf76-ffc5df861007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6cb890-4a4e-49aa-b6d5-d91ad0e69cba",
        "cursor": {
          "ref": "149cae74-9bcd-408d-b8ad-2587af152b59",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "711751c1-f12a-4e8e-b8ff-c83772b75839"
        },
        "item": {
          "id": "ad6cb890-4a4e-49aa-b6d5-d91ad0e69cba",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4f872dea-1dc8-4a82-b214-e559c095a6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e1b3b3-be99-4ce0-803b-ed1c50cee6c6",
        "cursor": {
          "ref": "71ea92fe-c9cd-4515-9baa-3db07b39eafc",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fb72e97d-9ef0-422c-9d1d-1ac0971d8cd1"
        },
        "item": {
          "id": "58e1b3b3-be99-4ce0-803b-ed1c50cee6c6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3bd8c46e-35fb-482f-ad70-3a12a7dc46a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30caa55f-6368-4f0b-bc02-19f699d124b2",
        "cursor": {
          "ref": "82be60ac-b2bb-4b39-bed9-f712087cbae5",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2e824dcf-7351-4d7e-bf16-1e81cb8710d3"
        },
        "item": {
          "id": "30caa55f-6368-4f0b-bc02-19f699d124b2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "79ecdff7-9770-4385-b217-d2584a34468d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b776bc4-e994-4df3-89ca-2c810729d0ed",
        "cursor": {
          "ref": "a27be57d-bb59-4d64-8021-c5346e4898eb",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0884bd6f-7f78-4101-8c3a-d8fcb483eed2"
        },
        "item": {
          "id": "3b776bc4-e994-4df3-89ca-2c810729d0ed",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "54b3c2ee-5a1d-429d-a15e-765f2904b296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b82d5eb-1deb-464a-9090-1a9f39bbfd26",
        "cursor": {
          "ref": "f49cbbfb-e2c7-4b22-a7fd-7588b6fa6748",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "efb3013a-1c9c-4e30-9190-806892ef4b41"
        },
        "item": {
          "id": "3b82d5eb-1deb-464a-9090-1a9f39bbfd26",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bdef6b03-85e2-4755-8c57-2f86119df187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9d1c43-7939-4ca2-a990-31f94b79d730",
        "cursor": {
          "ref": "062922c5-25bc-4a36-adcc-a69115ffad7d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4fb8d926-ca91-4d81-aa99-92eb324db503"
        },
        "item": {
          "id": "1e9d1c43-7939-4ca2-a990-31f94b79d730",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "083c2783-0248-4b53-893c-ac5801fbebc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73782e30-74d3-44b9-a5bf-90f4b075934e",
        "cursor": {
          "ref": "d0db49a4-1061-47ee-b427-3cc6e1bee299",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "988feaef-bb15-4886-9316-4a00e31ae9d2"
        },
        "item": {
          "id": "73782e30-74d3-44b9-a5bf-90f4b075934e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "22458466-e41c-427f-a35f-5c7609a46409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a8f1b6-f9e5-4502-98ff-254a25620305",
        "cursor": {
          "ref": "8702de7b-10f9-4d51-b169-f8b26b2e2baa",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1726f4b5-c0b4-4b31-b9d4-c9565a4afc68"
        },
        "item": {
          "id": "48a8f1b6-f9e5-4502-98ff-254a25620305",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "af6449e3-5b56-45c9-a2ec-d02bd42b9ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01181183-f68e-498a-a607-036130222cf2",
        "cursor": {
          "ref": "022ca110-f0be-46c1-908f-7764c634ca91",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3393e681-2cac-43bc-afcd-bd65fdde914f"
        },
        "item": {
          "id": "01181183-f68e-498a-a607-036130222cf2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a84262e5-3eb7-499d-b8ac-bb1c0277c0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bad47a5-eb67-4882-afeb-f45046aabda9",
        "cursor": {
          "ref": "eaea6940-f8e8-4998-8bf1-42b4c798e8e2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6b0aee79-6395-4252-a855-8e2021d71fcb"
        },
        "item": {
          "id": "0bad47a5-eb67-4882-afeb-f45046aabda9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9a4eea43-a651-47fa-9ec0-d0bf0ca1e104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c998e96-85c6-4c92-8559-566a6337b8ff",
        "cursor": {
          "ref": "1b520df1-957f-4e5d-b4ba-eaf7c9e19c95",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "41d3d1db-5df9-4e05-abdb-30020cc82afc"
        },
        "item": {
          "id": "4c998e96-85c6-4c92-8559-566a6337b8ff",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "40b1ffbb-41d2-4e71-9a79-36e70883422f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05124e0-afae-4517-a7a5-bbe33d99e47e",
        "cursor": {
          "ref": "bcef91a5-90ef-4af7-8a42-75cdcf3f3f82",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a35e74fe-a720-4194-9173-0cf6ae083887"
        },
        "item": {
          "id": "b05124e0-afae-4517-a7a5-bbe33d99e47e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c299ce7d-228e-4ad8-a83a-848f4f8baa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518f0103-8d42-4229-b4c0-c71c6953a705",
        "cursor": {
          "ref": "6a4b0f69-35d7-46eb-93b1-70a30b154664",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "af48b706-6398-4a2b-89e9-12a4b4436f80"
        },
        "item": {
          "id": "518f0103-8d42-4229-b4c0-c71c6953a705",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3571f6bf-f71e-426c-9d7c-eba58ef101d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1576588f-25c1-4913-8a1b-eafe8911ab6f",
        "cursor": {
          "ref": "86c209f6-4bd1-42fa-a37f-2879c6e113af",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0f4b2b18-39ec-493b-a1b0-30a47d6d6420"
        },
        "item": {
          "id": "1576588f-25c1-4913-8a1b-eafe8911ab6f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f7b51fe9-6c4d-4460-b44a-71a552ab900d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91558c64-f8b8-4a9c-a343-6e32474a6428",
        "cursor": {
          "ref": "4bc7d154-7255-4f2c-bda7-a5417168a069",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0022b172-9d21-44db-bffc-5c00a008fa88"
        },
        "item": {
          "id": "91558c64-f8b8-4a9c-a343-6e32474a6428",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "643a34e2-4504-40ce-97d4-121ffbae85d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fa9930-a1eb-46ef-8961-883c87e94da2",
        "cursor": {
          "ref": "5ebcfeb0-87ae-4785-904a-92cb203cb512",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5c3f235b-87b5-4b89-adbb-252c4ec05b38"
        },
        "item": {
          "id": "94fa9930-a1eb-46ef-8961-883c87e94da2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b883113f-482e-4c1b-b816-2b2009c38394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35e27c8-af49-457c-b87d-98a2154b7f29",
        "cursor": {
          "ref": "69a6e832-dece-43d2-9d8c-aae7ae44b5a9",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0351f2ad-94e1-44c8-bf65-d7a305d3af21"
        },
        "item": {
          "id": "b35e27c8-af49-457c-b87d-98a2154b7f29",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cb4251da-8ca4-4868-a165-0395a26c3079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cb2606-a31d-4249-85be-ba65d5680345",
        "cursor": {
          "ref": "be2697c6-a9a4-419e-b3fd-e364a07656ff",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "747d1e41-c7ce-4378-bfce-9a09c108e4c7"
        },
        "item": {
          "id": "57cb2606-a31d-4249-85be-ba65d5680345",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8a954a1d-f4c3-414f-9f75-c6abdbf50a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34c93c9-3ade-4703-b345-f94f0b0570cb",
        "cursor": {
          "ref": "9e1f518b-a18b-4516-8675-d957074eada3",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "00deba05-94be-4137-afb9-d4326dfb5892"
        },
        "item": {
          "id": "c34c93c9-3ade-4703-b345-f94f0b0570cb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0be83351-9f71-453c-86dc-a4baefbe0445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a994e6b7-d36b-4861-b513-595939332ed0",
        "cursor": {
          "ref": "17e27b6d-494a-4286-98c1-fca326658cfc",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "447894a9-056a-411a-9ddc-3a16661fbbea"
        },
        "item": {
          "id": "a994e6b7-d36b-4861-b513-595939332ed0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "66a61612-0a8f-4a1c-b912-8bdea1798700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7057fadd-d153-4074-9032-7752a7345fb5",
        "cursor": {
          "ref": "a0287ec8-b96f-4bd3-84c4-a12a1eea9bb3",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ffc48555-257b-485a-be87-30a1dc9415da"
        },
        "item": {
          "id": "7057fadd-d153-4074-9032-7752a7345fb5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "25aa9464-cf94-4f1f-8e72-5d6d541364c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2eeb62-1c3f-402f-99f3-98e2139ba4fb",
        "cursor": {
          "ref": "f9fb385f-8b55-4a37-9bfd-d4438736d576",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "39350faf-1d78-4bb7-abe9-8176e751bf9d"
        },
        "item": {
          "id": "8d2eeb62-1c3f-402f-99f3-98e2139ba4fb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "67b468f0-55ac-4e8e-af6d-7097bf8ae5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83cc83c-071f-41dd-86e1-8839b8a45bec",
        "cursor": {
          "ref": "f822ab51-18be-42cd-8717-7a7cd3bf2756",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6456d526-a9e0-430b-b92b-8fe0da95e32c"
        },
        "item": {
          "id": "c83cc83c-071f-41dd-86e1-8839b8a45bec",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f013604e-873c-4f7f-b889-18c67d78cc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0c1f3b-6108-4cdd-aa2b-833c12ef6b44",
        "cursor": {
          "ref": "80fa767e-d386-4012-8a85-1a67527b6187",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "db115bf1-b485-4129-b74f-0d5fde3ac58e"
        },
        "item": {
          "id": "9d0c1f3b-6108-4cdd-aa2b-833c12ef6b44",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "833c54f3-0aca-4320-bf5d-ee0752f94cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef64b7b-417b-463b-9a3b-b41c633b8fc3",
        "cursor": {
          "ref": "a4d003ab-e079-4599-94e6-c22a0a22d784",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "812b9a9f-898b-42d1-be02-4103e16f60bc"
        },
        "item": {
          "id": "9ef64b7b-417b-463b-9a3b-b41c633b8fc3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d074a97b-f242-48a4-9504-3dbcdd655a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82227420-02de-4174-9a58-ce93ddc8349a",
        "cursor": {
          "ref": "91d9ed19-71ec-4b58-969a-077e3df15651",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9cf43e0e-81c4-4754-9b49-0dd86b31de6d"
        },
        "item": {
          "id": "82227420-02de-4174-9a58-ce93ddc8349a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "92287860-3319-45dc-bc63-0e49fc5a3fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14aeacad-a5c4-4368-9a90-06470b26b02a",
        "cursor": {
          "ref": "ff6e9c90-a76d-45b3-a9c4-a9bcafdb2c87",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6196246a-45a7-498a-9e25-426abe37d12b"
        },
        "item": {
          "id": "14aeacad-a5c4-4368-9a90-06470b26b02a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "23156f23-82ea-4b14-913a-ef8ec78bc63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7396cee-53ce-4e94-9478-d40c94f02d5f",
        "cursor": {
          "ref": "64ca5641-fd19-4ab6-9854-aa5aab4234d7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "08f4ba8f-05f1-4f0e-851a-69f78313e268"
        },
        "item": {
          "id": "c7396cee-53ce-4e94-9478-d40c94f02d5f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ecde7c68-1ca7-4f19-94fa-3646fb5112d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e775e5e0-deef-4620-84db-0b585ce3a954",
        "cursor": {
          "ref": "e3246bb8-2577-478d-9f36-054878e5ae27",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "71438548-6778-47ba-995b-8ba7790eab67"
        },
        "item": {
          "id": "e775e5e0-deef-4620-84db-0b585ce3a954",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f44d607c-982d-4bf7-bbcb-2e35901bf00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a36fe0b-1273-4158-8f6e-dde0b63b02c4",
        "cursor": {
          "ref": "c48fcb70-c72e-4fa6-a8e1-04ce2c25bf47",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b9e016ac-2462-49a3-8b14-12be1da8dcb8"
        },
        "item": {
          "id": "3a36fe0b-1273-4158-8f6e-dde0b63b02c4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2ca2a003-2625-4f8f-8c76-29ac500b5425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e02979-1847-4b3e-ac65-7b9a7944a165",
        "cursor": {
          "ref": "035b2e21-14c4-4892-83d7-5b8c9e3fefe5",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1d8252a2-79d5-4240-80cf-00800e833337"
        },
        "item": {
          "id": "84e02979-1847-4b3e-ac65-7b9a7944a165",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e3af10d0-cd6b-4169-a15c-b0d88b89b4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace149b7-b766-409f-9563-1633419ebe11",
        "cursor": {
          "ref": "e848d58e-fb55-40bc-ab2a-e2d81b84941f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c475cd13-2ee0-4a8b-827b-1d1a47574149"
        },
        "item": {
          "id": "ace149b7-b766-409f-9563-1633419ebe11",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "90077709-f22b-4467-8202-94dcc1a7c7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5981cc80-0783-4a3f-9f12-b8c50bd77e9f",
        "cursor": {
          "ref": "102d54cb-cf5d-4073-9671-320b33f61281",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "41b0f69b-a4b6-4313-8586-68e16627358d"
        },
        "item": {
          "id": "5981cc80-0783-4a3f-9f12-b8c50bd77e9f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9d4da845-1b90-4979-a5d0-359d654b0ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc60797-c8b2-46d5-a69e-362edf63bab6",
        "cursor": {
          "ref": "6ec2ae71-3812-4812-8ab6-3c25ac255057",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fbac8595-0d7f-4ef4-88e7-6ee9f86803b3"
        },
        "item": {
          "id": "4cc60797-c8b2-46d5-a69e-362edf63bab6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3770bcc9-9c4f-4f7c-b086-dc16480afebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c068d8-f06b-4ae0-bd3b-780c79c80c41",
        "cursor": {
          "ref": "b7c1e742-d879-428f-a8f6-15a8463fb9ab",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "332b6cad-1191-439f-b866-0c83e9d4ea39"
        },
        "item": {
          "id": "b8c068d8-f06b-4ae0-bd3b-780c79c80c41",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "aa1a5985-871c-449c-a18e-d3e07ad28274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d14626-34d4-4be2-8614-931798d1f6d4",
        "cursor": {
          "ref": "799e46df-d87b-47a6-9e9f-b4dd4961b770",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "924707a7-7cab-43c2-82d4-45289f719ce7"
        },
        "item": {
          "id": "e0d14626-34d4-4be2-8614-931798d1f6d4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "69a6a44f-8dc3-4eef-94b5-972aa859f6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f8c48d-9bd0-4783-9565-bd300f064c8b",
        "cursor": {
          "ref": "d9f6fa62-ec93-4c22-8477-d433db1f7f85",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a2a9c212-4866-410c-b928-929549347bd0"
        },
        "item": {
          "id": "a3f8c48d-9bd0-4783-9565-bd300f064c8b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "457b9d89-c250-47d6-b88a-ac05b6de3955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d3b645-1ce6-4c39-80c9-fbca7d67f06e",
        "cursor": {
          "ref": "47077e97-974a-4baf-a04d-4bae4b9d7305",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2baf9150-7c7b-414e-94e4-b578022aa8ad"
        },
        "item": {
          "id": "a8d3b645-1ce6-4c39-80c9-fbca7d67f06e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "484770d8-00b2-4ced-bd14-a1d3d6e78fac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc2d3f8-2b1c-4d3d-86a2-6f893bb4688d",
        "cursor": {
          "ref": "2e6f3c66-9e22-4097-847c-6723e48c9c41",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5f1a9962-791b-4c14-b786-15cdc7e7d8b6"
        },
        "item": {
          "id": "bcc2d3f8-2b1c-4d3d-86a2-6f893bb4688d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ec7c07ec-1b1b-41ac-9d19-d4e39045f74b",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e413612-2156-4a89-8677-d7cedacc2fe8",
        "cursor": {
          "ref": "cd2827e2-3a35-4ae5-a6a0-c3a621ab1365",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bae53707-09b6-4649-8e81-a4eca2449a97"
        },
        "item": {
          "id": "0e413612-2156-4a89-8677-d7cedacc2fe8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "884a1ef6-87be-4766-95ac-f233f11190d4",
          "status": "OK",
          "code": 200,
          "responseTime": 3878,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31c22cc-179b-43d4-8246-f6488a4bf2b9",
        "cursor": {
          "ref": "d98a3882-2149-48ed-8b16-54d5af0ae73e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9a8869c1-3934-4591-9bd1-e04bcfb2953c"
        },
        "item": {
          "id": "b31c22cc-179b-43d4-8246-f6488a4bf2b9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "042d463e-9952-4637-b3a8-7e13674fdf55",
          "status": "OK",
          "code": 200,
          "responseTime": 2775,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "793b14d4-a812-4ab0-a107-9c8041274eb3",
        "cursor": {
          "ref": "3d9f9ca7-45a9-4f15-b6ea-71f784d6fadf",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9421d3db-8219-41b0-96dc-0f929b620eb8"
        },
        "item": {
          "id": "793b14d4-a812-4ab0-a107-9c8041274eb3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ffa0463-85bd-49ab-b7f0-a71f92a6cc59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793b14d4-a812-4ab0-a107-9c8041274eb3",
        "cursor": {
          "ref": "3d9f9ca7-45a9-4f15-b6ea-71f784d6fadf",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9421d3db-8219-41b0-96dc-0f929b620eb8"
        },
        "item": {
          "id": "793b14d4-a812-4ab0-a107-9c8041274eb3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ffa0463-85bd-49ab-b7f0-a71f92a6cc59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af1e883-2858-4931-8a4e-45ed3eed8c5d",
        "cursor": {
          "ref": "ca5bb1aa-64e1-4a7b-ae51-be8701cdc169",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5a182fe6-03a5-4604-b354-e1749ceea811"
        },
        "item": {
          "id": "7af1e883-2858-4931-8a4e-45ed3eed8c5d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fabed8c1-cd9f-4e04-9932-b0b279c4fb8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e0593b-7141-4f6f-b59b-d12b232f3515",
        "cursor": {
          "ref": "db8ba0d6-3bc2-42af-8b83-f4be26ba8a56",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5a82e973-ebd9-44c7-8177-61fbb8f528d8"
        },
        "item": {
          "id": "c5e0593b-7141-4f6f-b59b-d12b232f3515",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a6569cc5-ec15-434e-98aa-005e22217858",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}