{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5bf913ee-8a8b-41f4-87ed-54223733ae5d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6f255e51-8aa1-443f-a4b5-3090fd20da5d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e54b7d3f-1727-43df-800f-03c098442162",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a14c4467-1145-4a9d-b5b6-3fb039ccc2c9"
                }
              }
            ]
          },
          {
            "id": "f83f43e5-4f3a-44bc-b1f9-2e1123d74b66",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3eba375a-8549-4e3b-b5a1-b9efee59ac97",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f140869c-4c57-457d-9fda-7bfabcfeb241"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "efb26ba6-9fd6-48bd-b410-432ab9b2e4d8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9ca2ffcd-bfc8-4f97-888b-019992bb5a41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3913cb31-76d1-425e-9feb-d3800b0dc339",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a1f618e-0652-44d1-ba27-c32e31ea90aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84e86282-2107-4401-b74e-5a0d1e26ff66"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c7236a0-96c3-4104-b3b2-69240b848c7d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46a25e4a-dd66-47ea-9382-4b26eb01fe16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "890042d1-b30e-42e6-a1ed-bef6a0f81189",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0dc6ec00-5df9-4a19-a647-9fcffbe84dcc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6e29fda-6f3a-4937-92f9-4b85cea9faa6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8a0db6c7-a043-4437-88bd-a7a9fb6c28b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47b2bfb7-84b3-45a1-ba35-72bb774ccaee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf6330a5-ebfb-415d-b04f-ed06047f56d2"
            }
          }
        ]
      },
      {
        "id": "0ee8e0af-aad6-4f50-9e13-ea1e9f5934a6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c424b6ce-d062-40bf-830d-906092b93605",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f6e093f-4387-4880-8a8c-7eea5b26be4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d947ea7f-b63f-4df8-90b8-619a208044bc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdc604d-d771-464e-a238-59dd2efe4d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "198dddaf-d7a2-47cc-8716-9fc8e958745c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da287d9-42f0-4ef7-ab03-23b3e398eaac",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f5f0ca-e510-4a13-9fca-2eb97f4aecf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "870b7ce3-d6dc-4327-9a71-28cddeb6b4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8794e11d-27ad-404c-a76b-f17f804308b8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6533beca-b319-485b-9e78-fb30834a7f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7abadab7-bd9e-4e8a-8743-a518456564e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b998a15e-9f04-4ffd-b979-804a99387858",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "374c83c5-f88c-482a-b70c-c94a725a5195",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13827d8e-39c6-4f3f-9975-7eb4ea734e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46b909ec-3009-4002-bcd8-bcc084f61211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fce7087-c877-4812-a205-d669bd27001d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb283367-aeac-41d3-a25b-e729f97ba8a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "63fca945-fe3c-42a0-b7c9-6588293412b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e8fd2627-0b9a-4c2e-97d9-146f5c24693d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1f1328a-7187-43b9-836d-4cb222ee3381",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ad1e7866-2ac4-4448-823e-0c5b948e1d7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9530f980-e5d0-4844-aef8-cd2c7bde2b75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "47a81506-ca5b-4b6f-85b4-4bfb979e2aaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7d77e6f-8df3-4cb2-aa33-89f54c470b0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abb0db1c-004f-406e-96b4-ef1f9b77da26"
            }
          }
        ]
      },
      {
        "id": "dc59a7d0-8f02-4b1e-b960-66e66bca583d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "88847256-98b3-4ebd-ae4a-4caca61ea1fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "809345c3-3ed6-4b84-a404-bf1e72cadc01",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8d8ce6ef-1715-44b6-96b0-46fb3dd8eda0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899b7d27-4d4f-479d-bca4-808a0d0ff22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881bf2a7-be29-4375-b868-d87287b4578d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fce941-ec5f-4388-8e49-c34bd2eb93cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff1276a-1040-445c-9974-5b75be0a48aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2b65f7-7805-4a1c-8c5f-6494d6b46a11",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66e63bd-3419-4957-aa78-aaf8566a4682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b854ff-d35a-4062-bab5-9fa52cd736fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbb5199-a1c4-41f0-992f-ec3616008e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73312bac-ec20-4d72-a877-bbdccacdbc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec3a6dd-81be-4bc0-a351-01df4051964a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66336f94-2679-4bab-b64b-5fc695663fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756ae70e-e697-4d9d-8b7e-6d7c9bc56fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f064e33a-58b0-47b7-9b17-080347aa7b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51fc1098-e296-43c3-83f0-48668cf55a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771a2359-0242-4cb9-9ffa-4c6145f92c26",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1c024f-bbf0-425d-956e-1f24bcd09f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec8629a-4664-4eb9-b043-e478ed08cc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c619df6-bd0c-4beb-b637-5dd4879af087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b01fd0b-1ef6-470e-9337-4c21f888ac1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f39076-6541-4475-b4ba-fa8e5f682acc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99de5a8b-8006-4e4b-b5e6-8da05d58be08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e8ec68-2e4f-4e23-983b-4e52b0320d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3205003-dd84-4b28-a776-e5af12fb00c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e41d6549-33e7-4ec4-b697-ab1181ac73f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e3d755-03da-4273-a9d5-1b0371d96b3b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd549891-fc50-454e-b589-70186fc75cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7e3de3-76ea-4c4a-b8f0-a9308b1b21d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aaad70-9881-4795-9f6f-4d3ea7a424ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc109ddf-9e69-48b8-9d34-2e3f858504c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9386cc0-80d3-4bf4-9bfd-6a4eee7a6cc2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1749bc-16c3-45bd-a3a2-de0316889e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b07aae-4879-4a6b-93c7-9794aa68b41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7832448-85b4-42cd-80ff-975483d0aebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b867799a-c994-4a9a-97fe-c548900fd572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9a6a11-074e-45b7-a824-b8fd322779e8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce313dcf-6eb8-4f91-91fe-6891582daf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355f016e-d4bb-4076-8eae-3777b6a14d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c45a19-9d2d-4bca-9d83-c0a4486f22e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d790ab8-af17-47b1-b5e8-a443eb1d48d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e97c80d-7dab-47e5-bcf8-05f929be8c57",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837c1995-2d40-4fcc-8c43-545f5fdcec92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67d8dcf-2177-42bc-bdaa-a52bcf2abaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187e8d23-a0b8-453a-b388-9ff8a9b2705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "755ba42c-017e-4261-8483-8e519cac6b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69d50a6-a94f-449f-9852-53b1cefde478",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc0cfcb-0a37-47ac-9159-1c2ab7fc58d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d0ba9b-4a86-4085-aac2-d55636c6fd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baea23f3-c230-41e1-a67d-d0daabe32d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce05799f-28b3-408d-9129-d2bc8743aba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3792702-77a8-4b54-abbf-dfd07a9341e2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06a6c3f-638d-4a16-8627-084eda6debd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffa6620-2b08-426f-96dc-d3db84caa315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268c10a2-ad97-4d30-b8ac-20e145c0154f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe3ddc21-e5c0-4b35-b41f-0efefae40784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f70239d-7d9f-4b67-aad7-29beeab2dcf9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f394767b-2340-4424-957c-920c1bc551ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0883c88f-ce89-46b2-be71-c807ca5671a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b656a82-7414-4c3d-b52d-596957b07cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01c1efa9-4351-4a59-b69f-c86d815a5a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13aed2d7-8c8e-4edb-8185-17c726062a26",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19d91a8-698d-469f-b5c3-ab96ceb36307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3210693a-faf1-4de1-95d4-8ba1b9d2bd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ea675a-4ef8-4a2d-9133-28f1d83dc825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ded2230c-479b-4758-bd6a-3f8366ff69d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6085a3b-b5fc-4c9c-a4b6-69970e8d9942",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077d244f-72cf-425c-9654-94264765373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85cb662-195c-425c-9470-9d197759b253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8891343b-9720-43c2-9b9d-10be8f500973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a27c8163-4f4c-4fe8-b58d-afde4c621001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca45b5c1-1265-4aaa-a9fb-342b42940567",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef29e10-88af-48c0-b038-2ea2346fa0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6523ec-4a1f-4f56-8c43-9f0a59fb4c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ededfe6-9bcc-446e-ac31-1d4abcb86bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08713c1a-b833-4e84-b3d2-76eae90bf8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30aa1b7-4034-4645-ad8a-ff0fb7ac1248",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9da6b03-572e-4bc4-95c1-18b354c68abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8beb8c6-59f2-4ed4-b348-216138dc8db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb486bf-bf69-4b3d-9267-fd2033650296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e77f4fe-88a4-4bd6-9799-1bcf4a891c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572ca71f-3318-4fd7-9369-98e3d2ae2e44",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68104092-282d-4421-82f5-0946047af248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1ee75e-bbe7-44d6-984a-4101e8e592bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca3b061-1f3e-4494-bd07-bd4e1989b415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4d639a9-81bc-416d-ae7a-130208d58a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699d91c6-2b3e-40c7-bb5f-82ffac2dfa4e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e48a6c5-4098-49fc-8263-c83076847484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a179c72b-7e59-4448-9498-c0934fe96db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc61967-36a6-41b5-9708-b17afd281cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98748fbe-97f5-4da5-b74e-507519eba280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b12aed-df52-4003-9dda-b9ddc31e1ac1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fe74d6-ab6d-480a-a901-52de33960ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd3611b-0338-4097-972a-f4ca20becc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01a106c-9636-4c56-be18-b96e5d6064e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea430fd-ab45-4333-965e-59741b429875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03033c57-9ff1-4204-a53e-e0e5e92470d8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a54a061-e2f3-46bf-a7ac-2f1a6d901a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f670846-afd9-440e-8b0e-28304a294646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e50be04-d1b9-489b-9111-a2fc2a68180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3b4b21-d168-43ee-817c-b8499b668061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0457e8ef-b3c5-4a6e-b92a-fab5f3946d96",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad857670-20cb-432b-89e5-e5fe56d9046c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ca688f-f62d-4116-8381-b83b1ca1a68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2133cdae-7ad5-43fc-9aaa-56b7aa58e6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e635ee0-3c6b-4ea0-9b0f-696355901fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ec4a46-63e1-4391-a6d5-73ab85b2afc8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a366fc8-7d59-44f4-a60d-c95efb84ac39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19aaa10d-b5e4-47b0-8d9e-836278485b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec73ecf-18d9-4428-9936-42823ffc6bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f89df2ca-dfa0-4e61-a393-0e301c1c2a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1db6172-1cbf-412e-866f-cf8848ae9e98",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e558f9c-2148-484d-ae70-50fc8c6f27fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456107b0-eabe-4a5b-9b28-13f2eda2e26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83579185-e259-4ff7-86db-2faeed81177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "680ad786-27d1-4501-9b84-873613f5422f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fcef0a-a57f-4a24-8418-5c3d6a83ec11",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e104e1ba-bb20-4f4e-bf4b-cf47d7ce6ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b28e43-77f1-463f-bdfb-8669905dd6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb706a7-59c9-4e7c-83a3-60536681911f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e627013-ecd1-433a-9708-da812a925d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef183b8-d6bf-4127-97bc-abce26499cc0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb85876-1f2f-4207-927a-fe1949bef363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cb19d2-a8b4-4048-ac8c-686aea7f9363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7054de6d-55a8-485c-8a5b-a8c6fca8c32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98854b84-a8b6-4171-b4c9-0cdabb59a713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07214db7-dd6a-43bc-b6e8-0afe1eb1d97f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9fbe20-50b2-4ff4-889b-77cf7d6ea3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee06682-5f80-4e85-bdd4-339930e51ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dba603b-b36a-4238-9f5e-7661382b1496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b56391da-d894-411f-9bd6-0e984775f37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78071fd1-8465-44c7-b906-6af181c260a6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5653324d-dbfc-4b35-87a8-02eb0268e537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b99476-4b80-40bf-8366-5e6c76e68282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0214c47-eb9a-4ed6-8365-80c4f1c531e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9f7db2-cefb-45c5-a105-d2817ddff2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6c0307-4798-45ea-adc1-181bddbba107",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f715d1c-7172-4a2a-bb95-039786320ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abe70be-d3a6-426e-b363-e4f9755d07f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149287ab-c5e9-472c-8a8e-6fa009d1c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c293d0-d659-46ed-9c43-0c39497de54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e908f1-716c-42cf-a51f-8cee5efed1b8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc0a075-2035-4300-9ee6-dbb3f899d485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4d9f77-d437-4bd3-8e36-bd5dcdf9f2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720a2c6e-b204-4b8f-ba10-ac5add90c091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d609f1-0a15-4094-8c43-e53e9a1b9a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d59edb6-0e92-4bbe-90fb-db5dbba18637",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e3b1db-9cd4-4cc4-ab96-407561e4e3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56d5303-6465-4462-8294-9308a7eeff60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6983ab90-c8f1-4107-8d40-fc82dfdebc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "118d266e-e565-483a-90ea-04df5b30f26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee3ebfb-8cfe-40b2-a2d6-9ca87446fc35",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8551fb1-777f-4372-952d-b2b19fcd7504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78f8ea7-55c2-4525-af0c-a95fb2a2b2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dab4b45-cadf-4b13-85a7-a1a13e482917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a6dede-8bb9-4198-9e4e-dedb574a0b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7fbf38-95d3-48db-b122-47bb0bc01768",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f29668-06c6-4e86-8390-bbd427ca8f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a5ea5a-8d4f-429d-8c98-3f77079f28d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2471ecfc-06c6-45f9-9205-2651e9736936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3aa248-4974-4eac-8cbc-3a55e115819e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e953e3aa-0af5-45f2-9914-27409a3d0f62",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6027e093-400b-4dae-aac4-e6263cebab29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677dcbde-1152-4641-b489-9f1265d70cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e27c98b-7f58-4bef-8824-5dd4daf21641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8b2695-2dee-46ca-9ac3-6d4e58946c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbd1803-1bc7-43ba-9954-9536a5c6a274",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd517f5-f83a-48d2-821d-36f015bbb81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebce938-1c55-49cb-8e33-c5b83b035aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b761f7a-6564-4a51-8b06-6f5c05f18d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0836aa45-028b-4336-a9a4-094022a59539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dc36dc-8562-42a0-a917-8fcf95dd2e95",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749dae99-d5ae-418b-867b-68c36ce50596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6b4686-1a73-4c7f-9fc5-0a7031762b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7b11df-ea44-470e-bd25-f3f883ac1a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c5627f-579a-4a0d-a9cc-481fb751e756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c34c653-6322-48d7-89fd-86ec15bc6c5a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21891a6e-acd5-4d07-8e88-a79c510336c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7022696e-a005-4167-8767-db4b6090c758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e6097e-c8fc-4506-a877-1be17b121886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "86c5612f-22db-41fc-a7d4-f376b38bcee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac89506-f4c9-4eaa-b67b-1050221ff441",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36980ba-df4e-4fed-8c8e-207bdaac42d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21575f15-0fc7-466c-88cc-93bc0d1cfd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907674ef-f45f-4395-87b2-1d875104e336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "593dcad4-6ed9-4641-86c8-09370ade6db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb45a78-b9c7-4fc4-8bb1-14e306af119e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c534907-40a9-4387-913a-3056e9bf3d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5a1afa-34dd-45e4-b622-c8ef58630ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf54ea13-07fb-4964-8e94-94cac8863ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13d9b459-8cfc-4ca6-a039-6ba460b21360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ae5d79-332e-4b2c-b9f0-c27e37e606aa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d863819b-c6c1-4a89-bb7e-9362ab36d0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bdb971-7386-46ba-9cf7-6251d1342276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c371012b-5dcc-4651-834d-38ae132d46c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f565ba3-31ce-4c9d-a528-98bcb9880d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b00098-4d0b-4376-a2db-12b885a17b40",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006b5647-09ff-4262-a88b-6c78c52b5b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77835f7-b242-4725-b457-386b28061c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f5c4e8-002b-4e62-b1e4-b215134a3fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df8eb28b-46ad-4a37-9ca7-31d6c620de98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca212015-5d95-4f78-9c19-b8da7ec8ea37",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342da3b1-de44-4183-bb32-2d0903f35b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c218a386-8ecd-4527-95ef-b09e38cf1228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b016dfd8-edaf-493a-b1d7-999d1e8319ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c913dd-fc6e-43f8-b0b4-6bd7b4c5c8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a4a75a-d6a6-44f9-a0f4-8bbe32f8ac97",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c47604-6d24-4bfc-a60b-5c43d9a96efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c78c4f-5d48-40e1-906b-4f50827220b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab650599-731a-41ea-b629-313ee8128439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18a654d1-bd92-4220-94c2-258fac2d7415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18777520-5296-4f04-959b-dee6fa807a1a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef2c340-f9d0-436a-b7fb-cd0396acb909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb0b948-9f8f-4c7f-87f1-5a60cc80db4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dac557-96d6-4f90-b817-43c295383627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5660d55-d9f1-413a-ab7b-7164b220a0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc4cdc4-6d11-4294-b6e1-8da548b1b36d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7800780-557d-49e1-8223-fb5101f77fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5738f2-d18b-459a-98ec-b4f676e8d059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac963331-9fa2-48fe-b331-8d8c63c8525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "85c6fd5a-b0c2-4e70-99b7-da341e4f0374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8041efb-5b7a-4c2e-aca0-8bb789ccf275",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5981bd5-b1b3-4124-ae9f-bc5a73f33e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1425cbce-b71f-4573-840e-3be6d841b55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781a60cc-382e-4772-a0d6-8340259ce310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48b9c4e-d5eb-4d92-9b45-f8d2ff4c9757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ab36d9-1b4d-4252-b811-ddb3f67143f8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5945b5e2-bd27-4a51-86b2-0a119cc0bbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4d4bfb-0669-471b-b526-1034709866f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90879d29-8b6b-459e-af37-f18b3af4ada5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "783fc7c4-cc63-498c-82ce-312d84c5ceeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105d6fa3-0dcb-4cf2-9005-a831250a37a0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcf270a-69f7-4e3d-8e50-20d5a7c5d21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad2d6bf-c616-4400-80d3-38b1a91b492b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793b7930-928e-40f5-9af1-f7e22068663a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "919d56fe-6bd8-48ca-9881-260e19e856b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c28cfd2-e10c-4d32-a3e7-dedf74851226",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9808146c-4f42-4790-9cee-d71a480505c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874f0b09-b9d5-467a-86e4-4faadadd67cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b26258-b280-4fd0-9042-6c539fa63328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0eadf20-11f8-484f-90fa-2f525a0ec97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4792ef-8272-4ba6-9e9c-f003dd4cd661",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf4ba64-6f62-432c-b895-c46d29bc716b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6afffb5-ffe6-47a2-9af1-b99cd4703111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825ea438-f370-482f-bdda-4590658291f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "616f5b5d-7cc5-4332-a722-831aca3f44a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61464073-257b-4145-9fef-a43c1c9d51a4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75146e4f-97ec-4c76-8c06-2218e66f217b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56380c9e-8d62-43a5-99ef-c3727fbef735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd145007-54a2-4518-878d-1345b7fbca67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0380136a-4cae-456d-8ea8-fda1401e4b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e52cc62-2a60-42f4-b4ee-8b4514a00940",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188349e4-49bf-4e9a-8943-151e09f2b8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f84e49-8ca8-424b-b1f3-fb21b13ed3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97070af-a8c0-49f1-8641-68b0dc82f159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea87b6d-b13e-4b58-9b7e-78a360bcc0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1057ee-546b-4920-957c-aa90ec72b9a2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d844dd-19a8-4ddc-a78a-4ef777783804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc6b983-103e-44da-a0ee-0f386648e30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564723f3-6e30-4c3e-9335-6a65db349b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67010782-24a7-4616-8009-12c72da5642a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab34551-4a7e-4d24-9979-2d85624a759a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60a18de-b357-4bac-9c79-637f4868969d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b22305-9941-4730-8ed1-71a892bcd51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a6a3c7-b6b8-46c0-80a0-3f93b422f73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c1ee53-d287-4df2-b396-5e3d80850ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d02504-a98d-4fd5-9100-d06c4c9b6264",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff19a20-9a90-4b97-867d-bc1ae87a1d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d30ded0-97e0-413f-aa07-ab427cf22fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c06e20-88f1-49bd-957c-22d9e8cc0eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5b595c-ab76-452d-87dd-c5ea4dbfb707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9d9513-6cba-4628-8812-347846d2394d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f442a93e-99e0-4455-8aa3-744d9a0e1e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be03afa4-7f6d-43b2-869c-100fd52dd548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc55ded-8ee7-46ea-8511-8d188e213f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e1173d-f131-452e-aa94-0426b288dc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38c1038-b3a6-4037-b15c-5d5c0ff59371",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa68d4f6-e74f-4470-86d8-81fa61949632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a6ed02-e27e-486f-af2a-b6733a837f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56c9bd0-d4b2-4eaa-aeae-4fd3f868a307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "22fd1377-70d6-4f4f-995e-fe66302c6326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600b1632-9623-415c-ae4b-98c406585003",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93d4020-4c1a-493a-9a34-6773ab874269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8be07c-8097-4413-9294-1886db2a9318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74acf7be-907a-4c5e-a467-e43cca637dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d539737-ef21-4343-8edb-b6b85eb58250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f965c79-c6de-4d51-abfb-202d837c8adf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ca890f-eba6-4228-b22b-4d26ecd7575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c709f5d7-065b-4727-ade7-3f7218711222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6d199a-7723-4e78-a7d4-65a2cae37ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8427bbd-adfe-4cfb-b53e-63ca306fb632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48504f7-290f-493b-9f7a-7b10c2aced20",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab04d154-bb85-4c97-9ad4-d5cccad84186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95d6089-28f2-470b-8769-1239a1b889d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17da913-e27c-4e6a-8165-bf02bb2cc142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "333a8dba-4df2-4737-ab02-bcd461b56741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a02d3e-16d2-471a-b0c7-c11711a75d4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201a47c4-274d-4c2b-b090-582da826a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad333a1c-7660-4294-99bc-a81590c7d54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d2cef7-1ebc-4cd6-988a-329496ecd933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8930602-2275-4f63-92bf-7992886431f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65fbeae-56e1-43d5-a6e4-d1d451225789",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da68d2e9-0a8e-4e33-9d13-36dab6a115eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147948a5-32b1-405a-88a0-da270252c7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28952285-7609-4118-b286-fd5cb7d1d2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "18871501-574d-43ae-a600-7c15645999fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f0c4d6-c9a8-494c-bc65-957aa88210cd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ea8a70-0958-4d6b-a6d9-8caeb6fdf3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6716e2f1-e16f-4483-bccf-50f326fc4405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fe9be5-8d6d-4e85-9ade-22b20c631a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e15f782-9dec-4fa7-8a83-5cd0f157a1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad3d6c5-c8a4-4926-8ed8-7d235d91f120",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f31be0b-0b55-4019-ad14-792ee2961afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdbbca8-0c69-4c0a-a553-6ca8122483f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddb083b-5bdc-4333-9ce9-46d8e944b609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5f094b-54c1-4272-a6da-a653ea36c3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0470146d-4cad-44c7-baee-d95e6617ced8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468414fc-b881-4578-8706-e943a3883a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c616b5c2-eadc-45d5-ba79-93838f1837e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e2c9c2-dc9a-4c2f-8c0e-08e4a0672449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "beae594b-546f-479d-811e-4a8726e98216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec817171-d69d-4c54-8cd6-1256f379c80f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f301048-0cba-4e56-a7cb-adfdc3d2647b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415d8ffe-1b81-4a33-ae40-8330c80fe418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911819e4-f6a5-4bf1-ab2a-5f929f567427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea833543-92e8-40da-aadc-b5bd1324c44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e41c775-dff9-4feb-9c17-f287f5e1a93e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6aac7a-7fd9-4df8-b0d0-ec1ea87dfc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c910a8e3-77c4-48e4-8b9a-f76441518624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f0d4e2-63d0-4f5b-a66e-908c23ea885d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e1f879-1837-4e74-81b7-5c1dc27ba471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d420128b-0eb4-4640-a63b-e854b23195ba",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5200e74-7459-4ea1-9da4-c4da75e3abfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e30a853-3a32-4e77-9f7e-e9bd6a9c7f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2802ef86-9411-455a-868b-4eb66b2e6ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aeffa8d3-2f40-4fcb-8e5b-fbad8f3b84c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a0d32e-6224-44db-b744-3b497f8f0cfc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c5dc74-38f0-4d71-b5d8-73be4240c179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7b023c-82e4-4765-bd92-bf8497db84de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a6a4bc-5251-4a14-8305-1ab4797211da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e452c5-66e8-477e-837b-05135f89a96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b57d17-19c5-48c7-a517-fb8d36302950",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb2bcb3-69cd-4715-a1a6-6ecb14a9cb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b04551e-87b5-4f55-b22a-34388e653387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87c2b09-ad90-453a-b548-b7191015a816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e02a33-cd54-4a58-b313-a6ca6656d2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810ccf15-b389-42bf-ad7a-a126d7cf7a22",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30e44ec-aeb1-42ec-bfed-58440487898f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0be59bf-5d27-4e30-9a3f-7a88fe425b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f95de42-dce6-43e7-93e2-33040f31bc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e93bfb-eaa0-484c-b274-57a59604ecdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37618b26-11e0-484e-a224-fb710b25de19",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc7f95c-a956-4147-9aaf-328ed7227e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318d9c27-06a8-489b-949c-c3cfc6d1051d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f875aa-a07b-4d5c-8f2a-7ebfe5d66b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9f05b1-e3b9-4851-a899-53a6e0a4c67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a44cc0-1e9a-4f5b-be58-fc406a66851a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a976298-afe6-4179-b6b8-779fb41ba139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f963bb-d090-4d5f-b7fc-40f28804575f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651a5a0b-3d55-48c3-bf26-6bd5a363055a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce21177-7440-4636-960d-693df8dd6614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92624014-4018-45f5-b072-6cc962b15b03",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc37ceb6-5bfa-4912-8ce4-aaa1c8067ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7af6a4-f10d-4659-bc2d-2eef0551aee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb7ac89-4f4b-4519-ac96-ad88e44fe969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4438b4c6-619f-4f40-8684-869b33730d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573514ef-da42-494d-8978-b51a26ce1c3b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0021442-3f3a-44ec-bb59-b24ff83fc7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab94ffa-d3c0-41e3-b3d7-ebcea3157b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c8ba52-78cc-48b6-8d7c-91c1fa285bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e950b7ad-d759-41f9-879e-ef4f5bfff1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fd5228-e048-4b0f-97be-cb79d476f728",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a257bda0-d7c9-4881-b20b-41bf4df6b273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ab1f6a-b6af-4892-b36a-cc13d41233e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56037805-82dd-4bea-b44e-77d49bb2f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b474d3d9-749e-43cc-ba1e-96ce8d11631d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1831f2e-45ed-4eab-80bd-2e6477bcdf8d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe94e95-4da7-41a7-af50-38b273495194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5273440-a17b-46d9-bdfc-aa272f0ff6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e36d8b-0f24-426d-989e-c872a09e6b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0703d3bf-08da-43a7-bb30-e090e4fd7e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c0e41c-4497-4e2a-8ec6-35f29eed1b36",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49052aab-31b5-4faf-9771-abe821c24998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a0b1a3-468b-462b-8e76-72fafd750a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36e15f4-82f0-4eab-b0ad-1b0c8b0d517d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "494c8f6b-e29f-4da5-8287-1d2412dd0f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1ba964-cd04-4318-89a3-00b3e040c87b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33af9e7a-3cc1-486b-bbf2-01e3180dc943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8feb8136-26cc-4117-8425-b1e0e3347135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045efa06-6a85-4746-af61-3444caeb2c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bbfd61-91b0-40ca-8d89-4422a0b4c358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0f3dab-34e5-4c6f-9e25-b9b2aad1581b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83944f7-a9fa-4bbd-b45a-e2b65e24b2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb2d69c-c9d1-41b3-9f92-7119599b9b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4388c3-dfc5-4daa-ae77-975821395e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad77b74c-7d83-4be1-bea4-0389fdd6fb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d00c68-91d9-4ed3-b708-76365a453e86",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6751ecca-30ae-407e-91ef-a2dae2fbdb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62bc49d-64fc-4c90-874f-e4a94ce4fc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec63950-4472-48e2-8ea8-1b52877736da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96a3a7ec-b7c2-409b-af04-a65de2a280f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d582649f-abc9-41dc-82d0-c9e00da4e517",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf65afe5-9dc8-4b58-b3de-b386ff7142a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dd47a1-6c00-4d99-8c56-6117f555c6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a12033-ec9b-448d-9fdf-db7aded30a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e315ce-3aa9-4e15-b26c-6994ef1bbf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926ea6f6-df57-4a3a-827f-0f9335dc94d1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271cbef0-0253-4008-ac6e-dad7a89da74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7075555d-123d-4620-86e8-c69d3bbde5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8292d6c-856b-44a2-bb94-43b2aed4ca7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f43c1905-bbaf-4ba1-a1be-8aacfc7b1906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e60df90-6af5-4a7a-9c31-d4af4d2273a1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01601f9-e0b9-49ec-a9f2-b7f4c408678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4068e2d-c4d5-454d-af45-8cddf5688505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a7c897-ba9b-4c49-b1b0-f430b6f2d0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e25825c-217b-499e-9389-b5e9f230dd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc0be05-2935-4a96-a36f-e1417dcdb51e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e32e98c-5bcf-4b4f-a2e8-bac9a29239cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3152a9fd-82ea-418b-8b42-a0440a40ceff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2851faf-4bc8-4126-b456-4cb5a9ea6b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8080ee5d-a5c4-4b5b-ad47-75903358737f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36275cb1-1a9b-4a70-9ea2-233b8abcf03e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e51c534-2685-4600-bb23-f0c2d4e21123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f67b87-c080-4d0f-a750-2889b760f838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bec6a7-8645-4dda-8ce4-0b588946b82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91b89ffa-9de3-4826-926e-f2f7a0029efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349b3280-7658-48e0-9377-6497fcebc9fc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab0d576-e26c-431f-8c54-7c6683c8bf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40fc21e-b479-4a04-bcac-eb3c1e7a72d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171de2bb-02ef-4864-9bbd-6d8db452d39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b257ba-2e7d-4117-9367-ec6f0e76adc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ad9d6f-9a94-41e2-867e-65760f4ea2d1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce9d877-d305-45e1-8330-640efd45b2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0557390-89c5-47b9-825b-8c35e02e665d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e088a46-2f51-49ec-83de-aaa1e6271ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29efc840-67df-420e-aca5-b892477a27b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de05f9ce-bb5f-4c15-985e-d78840ebd6eb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d532d3-1907-4ecf-ad00-fb1fede255e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc0634a-201e-461f-b685-a6bd7f963bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d3a324-f46a-4caf-ab92-ae168461fec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "121434b6-a624-46cc-b724-aeb17be9f978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c60d408-cc5c-4147-8b05-244ef30f117f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b15366-c9e8-4bc3-afdb-80270844355f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1cece5-1b0a-4a93-8b86-9f673dd016aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1019d389-d022-492f-a81f-a32d80ab2fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c28bec-93f2-4bf4-a301-f03f4f889deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26af1fb5-5583-4e38-ae85-a2b4366fcc7b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99637f7-c388-46d4-a766-111b7ff69a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff87add3-173c-475a-9706-eb816441fa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dcf5c9-367b-471e-9efc-415d595392e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13f62707-1984-4ffb-887a-dc87c7a10565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60508680-53b2-429b-a675-9b872484368d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8acc8ba-946a-4384-8d9b-63c101f1110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dc4e1b-47a5-4368-8335-c8ec18b99cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf61027e-b8ac-419e-b103-bda40fe6a9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ffda6c-1cfd-413f-8b00-0c35bb177265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4a22f7-3efa-411e-849a-e1e8f77de373",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ea2b13-7e64-446c-9ab8-a78daea87aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e0519eed-1975-4aa8-9353-970c9c778fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b970b3d6-26db-4389-98a6-db8a2e3371f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "38d7fa09-3ae6-4071-b356-b08c17524919"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae0784d1-b706-4b10-93cd-c011ddbc82fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3468efc-59fa-47fb-aff3-c629078b5fd5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4039e6-6757-49e8-979d-4813dcb35dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edb02555-17f8-4a56-917d-75d461906991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ce4d0f-1f27-4ff2-a180-ff01fef7d29b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5238ec27-2574-4500-adf2-34b3307378f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89197acc-0705-4514-8b2b-88e424299bb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afee5393-b79f-4b3b-a128-8b35c33bdb78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5642357-f2dd-44e3-9dab-17bf18cf8fa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9443a025-4033-4bc2-949d-f1c176fff5e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fea998e7-1e55-45eb-b9df-a4e9fb4cc30d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84b10c53-c50e-49ed-8694-8a19fbf2c056"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d76e1d2-8b19-44ee-ac52-cc02cd14a746",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa903ba0-33c7-4078-bcaa-505051b211ce"
                }
              }
            ]
          },
          {
            "id": "d92d6f25-eff4-4029-beb7-3d9494f955b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a7eaac0-25fb-4014-b4d6-27f95d7fd250",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3319a03-2ff0-4ff0-984d-e32ee9df6627",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cda1f282-876a-4f25-9e5c-f5f46cbc6ebb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecfd3876-f49a-49e9-8e54-29628eaa8b0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c653ce4-535f-4c22-a84f-44b52f55bb7c"
                    }
                  }
                ]
              },
              {
                "id": "69cb5b7a-d6b8-404f-9ac5-463c5404d36b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dca4efb1-6694-401d-8a17-969f8a5c6577",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a681a74-1539-4562-89cf-4de00ba464dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d17ee35d-169f-4ec8-af08-4898b7426b6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3047313-7aa2-466a-923f-9394d097fd6b"
                    }
                  }
                ]
              },
              {
                "id": "004190b9-2143-4a64-b171-b52df8636edd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4a2222f-cfe0-40ba-a98c-a4bc382da9c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81a64ddb-9f66-44ab-99df-912c29d51dd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae928d02-62bb-4d1a-8174-8e1ea06a2101",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69da15e5-193e-4326-a9bf-f2758fda40b6"
                    }
                  }
                ]
              },
              {
                "id": "bab8bab0-db27-4e87-ba1d-40199c06d760",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "640ef337-bd6b-4f43-9a0f-a0d7b3c00e08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c933346-62c9-410e-acf9-9016d42d8d4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62f1d2ca-a75a-400b-9034-4915a1c943fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c9e65c32-93b8-48e7-92d8-c4b750021ed7"
                    }
                  }
                ]
              },
              {
                "id": "a2a037c2-7872-4116-be73-7c58bdfc3dbc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5392cba8-1e81-41cf-846a-4df8d625b8d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e14b4af-17af-4a36-8a0b-706f60c3f31b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df95b23e-8035-4b97-a965-4b09cc190b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "02ec5dea-ab60-4459-9e1f-53b6042bc594"
                    }
                  }
                ]
              },
              {
                "id": "cfeab7d0-e20d-4b41-bd37-e132dc4389e7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6248bfe-dd0b-4b89-b077-97b2842aefa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a09bbfc-2628-4b5a-8712-b765cd1a957b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebabfcee-f15f-4b80-a3cd-b86b975b902e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0f44b01-33b7-4776-9d26-596fa6af04e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27d7b1c4-d08b-4961-b91f-c0001ab84fd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34c91f6a-9b26-48e7-9585-5c179a39b885"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "95019e5a-4d87-4666-851f-b7bb1e906422",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23d4d9f5-9ac5-481d-b9c4-6e375ada4afc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34820d49-eed8-48ec-8657-91f169ec8063",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9fcff6f8-d99a-474e-be03-41735e0b25d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8966373a-6a56-442a-a4d1-67fc905989b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54418504-60c1-4601-aad2-8d7ab1c7050f"
            }
          }
        ]
      },
      {
        "id": "8b3e7e35-9d9f-4d50-b315-70990af2c19d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0492ebe4-3e9f-4639-a66b-392a4f1c554c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4df23e09-1a53-4096-898b-1e93e81847ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8beff8b-9de2-4f43-95b4-5b479d35b543",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11afca2b-eda9-4186-b4ae-9d5770550512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436db9ca-67fb-411c-9b0c-e0750646eb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e07cac-f9eb-4e0b-a341-e18751dcb6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f37e36f-0d9a-44b3-a016-4492e1092d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5121c509-0cf5-4df6-a76e-7d239b41ba62",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd5e471-209d-4c4c-94cc-03d01220f141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f3c315-b0dc-47b2-889e-a3964cbb1075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ac5f18-bf58-45e7-9e5b-55d365aa32b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8615b755-440d-4b98-a046-4e320341d0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9e5ac6-a3f3-4c30-9c20-3d2ddf831d38",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eed98b4-f2fc-4dd7-bc92-385c13656bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5029b85c-ffa2-4c10-a31b-f3a6cfb6f5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1457bed-a4be-42e7-9899-a55c957479b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c237d3-2f01-420a-bdf2-3dff9ecdaca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9835280-10f3-4b1a-a2c0-ba7007e792c5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab676212-3eb1-4c3f-a434-56bce99118a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b3fa29-be87-4717-ba0b-6f2a13fcf089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8f9047-5647-4a32-b5a1-4111d215f37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c98b15f-0645-407c-8866-666968fce3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be63ce94-e139-4c88-8891-d256e3841e53",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ac5c27-1fac-4e9f-9f40-213123e56fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41856f12-111f-40fe-84a8-90e08aa9ac5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4667f1e-f4c8-4589-9f5d-c60769af7cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ae8adf-53ee-45be-8cb3-8d5e1774d121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88f3b79-8c97-453e-93ce-3766d7b9c60f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5470a6-5294-4f03-955b-c05e5b13ee0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ebfc04-30a7-4495-9bc4-b13a20240bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ca0589-b7be-4462-842f-3eb72416d85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1df07add-c5a6-43a2-99c4-1c4c52cdc5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8813fe-da1a-44f1-8d70-76387942de29",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1bb45c-4c5b-44b6-a15c-e7532ced84d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86955dfd-9ebc-4ceb-ada6-aa7512703fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50ab2fa-d72d-43ed-b03d-62d783508890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c002989f-0ce1-4253-80b8-2c17cee0b28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dd9049-fe6a-4579-a317-96f906eb9202",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d4bb34-6539-4b2b-8896-6211007c1b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a71e03e-ccfd-4e59-9377-a126d2ca80a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fec774-6d7a-4d1f-b4bc-6ec18f77c317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0071bd-4cb0-4136-b5a6-56ee36c44cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00063cf3-f1be-4d68-8f2e-71fbc241bc40",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adfb1da-93b1-47fb-b2c0-08869c4529e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f550d0ca-48a2-4dca-8e9f-ccbfe1882e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc530a91-53ee-4d00-a297-1ee39a2e0801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "237f84e8-8f28-42f5-ba0b-ed88d8d9258a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399e2d9c-2708-4a2f-bf40-1184c58602f4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3448af-e784-46af-a0ca-3f42ca495792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d614ec3-8c43-4fbf-9db4-5e98c8a53052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19918c4e-7433-438c-adc6-80f40393eea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c54e0e-8bf5-4563-a9df-eb85f8ca737b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309fa617-10ae-4e83-b836-3b83481a76ee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c8421c-a2f7-40db-9a49-c9c07128c776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77804b5d-d212-4cd6-b903-3f4b4f97161f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72bc9b9-dd4d-4851-8aaa-0b34db23db5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6005669a-a9d1-4730-91a9-e2f08c944d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80672897-dffb-4283-84d8-803a5e41856a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a853c2-d496-4275-9676-ede34549f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1733ca26-d756-48dd-ae38-949d63d9d071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cf152c-dbdc-4694-a20a-f147f0d8f69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a88514ca-1a23-4185-8510-3816aa9914bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd20f7e1-0fbf-4e62-8290-30a8411c33a3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f2a20b-f049-477f-9ef8-6b08e6fc82a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d896cd37-b6ee-4aaa-9dd9-d623af167fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5213b9e3-0b91-4e5c-a09f-34de52b2186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a014ea74-6543-4db4-a231-40b21569f3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620e9172-5845-4a03-b920-091f7b9b8053",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef80366-2b96-4211-9891-f16a8b7459d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bb4a83-f422-4fcc-857f-146a3e3f8bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6f3010-4db5-45a5-9abb-ebb9ddbac7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "408319da-9adb-44d7-be60-16eab74f30cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d16a993-51c3-4c50-8a70-c7fafa867ba4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2eda09-eb10-4ab9-879f-7354fe092f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e958b79a-248e-49e5-b85c-3c88959c53fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039e5d1e-9118-4053-8dff-124aa7ca9e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "63fe74dd-4eb3-48a9-aeea-8d42679c2213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff8576a-3cff-4e5e-add2-391743c06d1d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83c3cc4-f788-43f9-b383-456576d20d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2be64a-65fc-41ed-a28a-41f22e9d682b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb50f2b0-053a-4fc2-a99d-7b4b03973c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "43f48aa1-9055-40b2-9bd7-3db35e559dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce70fc8-e3bc-434a-95f2-e42e5411e1e6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d233707-6480-4884-b8c8-836ba726d220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba330560-ad9d-4659-93e0-627c6b120744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6483d5-d325-4dd3-a852-73d3ccd52c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "14cc8619-cc42-4417-9c61-9a4d2ece6dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60492dc-2006-4fc2-8647-ed58b04b23a8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e2706a-46dc-4df0-ae94-cb05a4ffe215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214e2aec-d886-4e18-bdca-cedc7c5370f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723e830f-d132-4a57-bc6d-7d07e2c8e86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaafef0b-57bb-4ca7-86f6-28af56f51748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1052dde9-55b9-4332-9377-12bb3d9fc1ea",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34d85f0-3a69-4467-9748-a821ef2a2713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0da23ca-ecd5-4b67-8cc5-e20055ece888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3d69b2-7460-4f39-b204-e0a7ed6395a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e400a4-bdd1-44d2-bb9b-cf4b3ebac9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4435ac-e2c9-4f90-a60d-6d864c005dca",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4e02ad-eec0-4847-a461-47c987f6f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b367dbab-9f23-4111-ae28-d6ef3ab1e57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d12d82-8e30-4e35-b123-02286f805eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b51dbcb-c7cf-4231-aad4-756de1fdd4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de637bd-9a80-450c-b492-0ad229fef4ec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1d07d3-3e99-41fe-88fa-f38f323c2236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280a8b7a-771e-4b6e-acbe-4e635735391b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df34d4d-f756-4a56-a48b-ffa9c9bcf08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0a1490-504d-406c-b1df-73ca67fa5ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27522688-39ea-489f-aa66-c9ca13fbb929",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebe8633-f46b-4312-84a8-cdd63a3c9a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e65f3f2-7098-446c-897b-2c39f2328c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571d1aec-808d-4eb8-a292-851c220be6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f029dd1-4246-4537-a482-35b2891ba11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28c135c-afec-4406-9816-9b7816993872",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f71656-d005-428f-bd43-3fc88903cba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5c89d5-81b0-48d0-9bc5-43137a27ea6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09633e88-3a00-4fcf-849a-dd1e9886b426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87fe23fc-0bcf-4ab7-86db-93787702e984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340fe91c-ba56-447c-94f5-94d722687006",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ffadb6-abcc-4895-a894-c67abc3d0b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc744fd-9c4f-41c3-b2e2-72b29733b053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9204ee2-bcca-472b-807b-06c75677b180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "859d9dd2-1c15-44fc-bc8f-530a74610f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbd5618-faec-4169-9a9a-971bc4838e5a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ddf852-9822-442c-9af6-d1fdfe796f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596070c7-8185-45aa-a132-6c13040d94e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df4213e-ff62-4515-b193-d7e09c814971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82884135-4134-488d-904f-366c6244736c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d5ad12-3a75-4a4c-ad87-7dd947ae1b42",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e236f59-4954-483e-a513-f8a8ebfb7f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1380f42c-b6ba-4dc3-ac19-2bd4c261dbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bb65cb-6d3c-4349-b967-598095d28902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb36765-cb42-4901-8ea5-4c27ddb299b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa632efd-aa3e-4880-a2e7-5e2850fe25d7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f28e38-981e-4a00-bc90-1e18765e591e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c78673-eb33-4f51-bc24-7697ea05146f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939b5a4-8e1d-41b5-9e25-69dc27ebab35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae05fd78-59fb-404a-a99a-5da32bd7f9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c958352-4fdc-43fe-8f32-3c6a575d10ef",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1ba2eb-7a7f-4057-84fa-c845441935b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06580dbd-11c2-4093-892a-40eeca6399e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae78dab-8f22-4663-b0c0-c0cf78651676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9be256a-454b-47bd-aa46-55be3ca85131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b499ead0-76c0-498d-a259-2cc5a59e9b77",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0544c5-1182-4192-a7f8-bf291b463c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b84aecb-0692-43d5-8ac6-3d23462818c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2673c204-2390-4837-9a7d-e739858240a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c9e0b4-16d2-41dc-b1d5-5f3e84706108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b63e81-9c3f-42d4-9eef-87b77e38c4eb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0c46c7-c758-4404-924d-bb627b9eb121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2663dd8e-12b4-445a-b846-50cc089a2c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e3cb63-14c8-4731-8f1c-fb4b998f0fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "857fce9f-ec65-4b4a-b463-39d930d09b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0a5d2d-3d5e-4753-8ea5-333862bb67da",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359fb866-4b9a-4681-80c3-ad89d2093bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0259f3b5-f1f7-4969-a7cd-b251cc02746f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e72c11-4bd4-4d30-bdf9-868f82f566be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcb5e74-afa0-4924-ac15-336d0cf417c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c250d18a-e177-45af-af1c-b1ddf2e60734",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58014b95-72f6-40a5-ad03-c50dd9dfb3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc0b34c-13b6-480a-9bca-ca5b233925cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee679909-3573-4c45-999d-4bd786fe7e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc0b3b6-e766-4fe9-aba7-a25181471812"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a218e53-4e5e-4c05-abbe-2eaa0c986d04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc0598c3-9c69-41a2-a82a-122112b5a1e5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22225b5-0ded-4782-a7b3-3cf8c799c1f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "490fadb0-6ea6-4263-8636-3744c79f33a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8767c676-99cd-4bac-8302-c4f41d27a378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a557646-f2ae-4839-bb29-ee225b575873"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "923bc1db-7e3d-4151-acec-7bda52234453",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25625368-b008-47a4-8289-b3eb6bd9b7a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c405a9d-ee85-458d-9783-a362124e6679",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14f6fbbb-ff64-4794-aae2-7c0bfc6d2549"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44b5dc3b-92e3-4ab3-8f44-050003f1a7a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68e33fc2-9995-44d3-96b9-9ca02abc70ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "787e6197-65c7-4874-b29d-1d9ffc5ad85f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0616367c-78c4-4c12-82c3-89a3d7fdef02"
            }
          }
        ]
      },
      {
        "id": "afa7f9f4-5e90-4ba0-b78e-27705e46ef44",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2a49b867-56d8-46ae-9683-2e4a91dbd373",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5053939b-fbcd-405e-a464-f6626053459c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f1444f9-a62f-41cd-b3eb-cffdefe2546b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a434a132-9b0f-40d8-87bd-0e80a6b4c73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48500bcf-3e95-4e42-847f-c59020fe5145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43382e81-eedb-4e50-a514-9e3e56d9a49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a362e1-d6b9-4ceb-abcc-00c60cc273ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0451ae0e-ebe0-4b9a-9e24-17371a2f5fc9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d1953d-aef8-409c-a60b-48a933cd3043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6474981-3ae6-49a1-a329-f766ca1590f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837ed72e-c1af-4185-8fa1-7da497540ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df00333-8510-4a58-9349-5fd66c639e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8314cd7c-6bd0-4f95-a577-3e225d1cb68d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17761c7b-2312-4fed-9835-bec0eca963d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b70d6d-1e8b-4118-bc1c-7e2615a3fc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4a4a23-682f-44a7-8301-b5c94672d52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f277fe1-b9bf-4636-b67f-7a73337444c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4885a0-f028-4691-a372-6ee0ede47704",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880e6c08-1b11-41b7-9c6c-8db212967150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f61a2b7-d9c0-4636-823a-6ed201d2958e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb96862-0027-408e-a955-1fa5ed7ed9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac7cde6-8334-4f07-a5bd-09597dbdd629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fed5fc-513a-46e2-abce-8f68e35e1cf6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92f8b86-02b2-45bc-b46b-eec297c9432e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1303f05d-855b-4999-96e0-489bb627832d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60db8083-0eef-44c8-b18b-42e37ebb09ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea08f8c5-93ac-4651-91e5-b8a73c46b294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9ec482-062e-4bf8-8c70-2480b92c8fe6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff31272-d479-42df-bc2a-943246a9e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe76a5e-cd5d-43ff-8bbe-1ef302ca96d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e02e417-514b-462b-a252-3eeb6b048f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "005659dd-c56a-47e6-b024-52ca0e3e3322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d78b988-4d7e-4d20-b0fd-4314de7d7082",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b4210e-cd34-47bc-a1e0-02180c245c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe35b9d-3fef-4e33-aa22-5addd05f4b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abc086f-03ec-4fee-b162-a2b12ca6ddbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c270883f-4bb8-40b3-8d03-c1fe79eaa265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cc28b5-0320-4794-bd75-7d2831f1766c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd67168-872a-4900-a8bb-7bf29d4f10a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6daa8eb-c9e6-4bc7-a923-863a5547dbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14de20de-3ef8-42f2-a0a5-f691e872fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a327f2cb-9287-4e97-bcd6-4f5e291a167d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b367ed0-1e44-4ff2-adff-ef36cebe5bf8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ec066d-80e6-4407-a5ef-3742a0e24de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cae6d4-ebbf-43a6-9018-335abffe297d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c0b66e-2ebe-4bd8-9003-25dd1480dcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cac5f187-4557-447d-9a81-848f31c36980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5de2f03-5ca8-488e-be2f-00a19f61a9fe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762da8ee-b5bd-41b3-a759-e52e062b204c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aed93a7-56c8-4699-a10b-af416be1f4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bece3b36-c968-4c56-a8e3-521335b3903b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c5210c-a2f9-4a66-b8f4-523a859e41ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d45490-2f0a-4970-971c-552c3e4a1fa3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab09d06-d60e-4061-80c6-c022031efecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd4c098-37ca-4dad-9c43-6ba3bff20576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158bdb1f-f4a2-4be2-89f8-37a4c86315cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "444f018f-086d-4134-afb7-9037cc5f36f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c4babf-126d-4d40-a28a-96dcb936d3df",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcdb296-ff6f-43d6-9d6d-6fdfc0f10f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1041d193-a863-4e8c-ac53-329328e4a2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd399a3-5fa9-4230-a0fe-b0e98d544728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e014172-4251-41b5-8e51-fb833368d8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8728ad5-cc6c-4564-8bee-78885b94ff8c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1d9f64-9949-42e7-b8f5-a52d4d4dbd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec50833d-75dd-4eb9-b763-641bb7647020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7c1b3a-a397-4c9e-aa88-47594e1dd098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6edba747-9888-4847-95eb-b2dd62069987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ea9c93-77dc-49b4-9942-5f5009a20ec4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bd7fe5-000f-4c29-8ccc-9c39275c2351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa7f475-ef3e-45d8-a9a4-411be8c5d0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f951c30-4550-456e-84b3-b85d99bc50ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a379da-2e16-47eb-94f0-728d10c08a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620e733d-39ca-4c80-8334-c8fa7bf1cd0f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92812f31-7820-4139-9ca7-e86ae4bcaf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3740279-7735-4f1a-b803-38461eed4e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a5e9ba-76c1-4349-abe7-4651a6112abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e657cd-cb46-47d1-9d84-3f556ed14d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8459b679-604e-42fb-8aea-5bbfe47564e9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e75e5a3-e866-49f9-bea8-d77d912a1b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1026778e-2f34-4cf7-adf3-433348f63dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe8c9cb-a7be-4788-a121-cadfda77097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a7c03f-9cca-4f1e-8662-7b1222545791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62760c91-e1ec-4840-b7ee-dcc7e062bb11",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c4e394-32e6-4d0b-b429-4abae2801473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31d169b-f84e-4bb0-b5d6-88b7983eab2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffae36f-5151-4383-8178-93a9f5d965ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a502530-f9b5-4798-a1cd-6d8932be2221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caef8110-d479-4e74-befd-091e1c14e1dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4759acb-8b14-4ee9-9e36-6844c6c3a033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c3e20f-f5aa-43f5-9931-ff76a3ddff1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785c77dd-9df5-4f51-9fc8-3755f9770f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1552ce8-c2a1-4de1-b8b4-81a6eaeb4dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397a7e19-e9e6-4f7b-a193-b0b88c86fcc6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b605221-f947-482b-b4b9-f2a511b15883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567c9ed7-55db-4b6b-913b-3aa72e72ce8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3ad0ac-52da-4759-a19f-dae107665d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67faa026-7b1e-439b-ab1b-4f694a449394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f34206-d3c6-4dfa-8a48-63463b815140",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebf44b9-ca6a-4ec7-92b9-cfc2df1d0297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbd10ca-ad03-40ef-a5e2-81d465ad101d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bed36e1-6e4b-4a3b-81cd-58995c62e276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "887c5c4b-be3e-4e68-8e0b-04fcc2c43173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f01bd9c-2b7a-4da9-aa15-0077fd243ca7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbdeac7-b6f8-4b18-878c-1226d94fa240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4244f967-e76c-4721-a26b-ecf54d3793de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9105c216-0eec-4922-ab9d-6356e29d6276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c717d395-be06-4f4a-a310-09bd5e53d8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466c97cb-e6ef-4317-b8a2-0f739c9cc2f6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353fee35-bfca-4311-b1ba-acbcf7c8d9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da74617e-642f-4b00-942b-208341df8877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaf5fc3-9a48-420e-92b5-c7ae16146be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1c0811-07fc-41e6-b41f-7244c6cbe536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87abefd4-0c2b-459e-8cc9-73dbeaab3de0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f97f33-6a55-4133-accf-0c0c69a7b4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a3d0dd-6701-4287-a701-8f3fe143653c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2e0cf3-0ba6-41ab-a31c-cbed6f6345cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a4177e-4afb-4f83-a057-6b596afd7ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f84507-51df-413c-b83c-86df32cca1bc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feef6514-f364-4c9e-87e3-f1728a5b13c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ad1dad-41f3-4f8e-9942-2334082091a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfda954-265d-4aba-b291-40287c3840a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6c130b-027f-44f6-b929-226749db1266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f618b2aa-4212-4205-a3a0-777156ec608a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592145c7-5667-46c7-a08b-c676a38865f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1206934e-c672-4d65-814d-0088a191a1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a85eed9-1539-4304-bfa3-e67dcc2aa734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5c2708-24d0-42ea-a594-6c897159724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f922e0c6-58ff-4421-adbc-ffbd4ad68ea6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4748260c-6c83-4527-8542-c72bc69d73f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a2e89f-ea24-47a6-a514-4c43fd790fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc738bea-32f3-45a3-bb56-4ac607a40ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb4b125-8f11-48d9-aef2-939590dc9de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9023c0ac-0f57-40c0-a3af-703476088354",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf0f5dd-7d97-4f72-b92e-43c77fdabcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74015e9a-d54f-4438-aa80-597e5e2f3016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad44c64e-794d-4f21-910d-b59f02f7fac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4001f017-48a6-467d-aea5-d8902da3986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98ca9e9-85b0-44e1-8363-1e5c8ad360a4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0086b5-0b96-49eb-ba86-7b9d4ac95c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9873584f-31a0-456f-b970-50592d32b6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb38f5a6-3f40-40c1-9190-9394157f1368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7cd278-4b8d-479f-91df-90eb2a644c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8275f9d-6c7d-4213-8548-478b67e7c1f2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0fc827-f3ae-4af8-a82e-2bd5ced0eb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f1254b-307a-408c-82a7-39adc9866c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9f8d29-fada-4a4d-9ed6-0a6fb82b18c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "719dd530-1cfc-47e8-9815-85b9b143fd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31ed771-045c-4280-b59d-08726fb477fa",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcf0735-dc8b-45e7-92c2-a88410c83788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546ce4ad-7444-4cca-9007-4b8b6b575c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d37f5-1913-490d-923f-50f041c5ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5addda88-4b56-46d1-9cb7-db2e908816b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fd7c8a-1eb4-4cbb-b403-3bbb3c4a85fa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4195dca8-06e3-4aa3-9cfc-decdf673d86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1caf90c0-13ae-4515-868a-14929f8c8781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d49c82e-4437-43c4-b049-e9d79201b146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beee5ff5-8ee7-4b49-a6bd-b5179e8617fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021cd04c-8c4c-4dc9-9c0d-5292c5e53606",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600bcb82-0e71-4a75-8d80-7e28ccc8167e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7be0c8-b3e0-4a9e-a4a5-fab702208765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd6e76e-1ccf-4b43-b776-559d07a4a20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6320a4-ef1e-4724-8add-131ab66c37fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb7c458-4334-4195-b982-586832b1c196",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b091d1-bca2-48c4-8d7f-6fc74feffb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b992c3e1-4851-4299-96f2-b060922d8db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521a178d-4f81-4709-b1b4-13b8a19f6eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffe22ae-13c1-4c80-9409-51254f0319f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c627ec8-277a-43fb-ad18-7f15e649d675",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af7c7e6-6c9a-4c8c-81f5-2835d98b33ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9fa71f-7e4a-440b-be5d-d1dc969b6e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d7b728-62bf-4497-b82f-f9d2112122b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e89e06-9c7f-4efd-a130-e307c673cd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdd7ac3-2e84-4fd4-b81f-0a6210eaad48",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30e196c-7647-4ab2-b928-b1211b9e6228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a95d24a-93fd-48d9-a849-78914770c94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd2bffc-a8c7-40df-8299-d3fa3ed1df50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed145959-9794-4e6e-9fdd-844db4a04e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1045c8b4-da28-4ee3-9fad-0d92ef9db7f8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffee3be-5b9c-4c61-a87b-f4746a896f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155996ff-70aa-428a-80c2-9da71362ca6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4989f0-b276-40e9-a925-e05fe3011237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cea7867-89fa-47cf-8d01-aeed3812bb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88d7831-9426-4fe9-904a-cdc88f9a3ce2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c51f9b0-fdf6-437c-8e9c-cf88bcdc7bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0992cba5-08fe-4ecf-aba5-26706ba36686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb0f4c3-a232-4572-8eac-bc9f50ad3e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8471ebbf-9191-43aa-94f7-32030aebffb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4810b76-024d-49d0-9379-fb2592bba4c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60a38e1a-0cb2-4d62-913a-a1e146bbc8e3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd0ff44-1325-4b3a-ac6d-54c4db03e960",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2908b27d-6677-418b-bf27-71d40e2fe38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a2cf24-71dd-43d7-b720-a3d747f2af7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df1ed102-262c-47d0-b8a2-efc16c100fcc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3219ad0-0ec8-48fc-9184-5ed4858c2b4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a59742e-58b7-40c4-af03-6a2d2d8db191"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b542442a-4d1e-4c49-8052-b1d9c07487c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50e66137-b487-4fc8-af6f-04d2becfedc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bace8207-ab3c-45d8-b2fd-982c3f25898d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "422c9ac5-252c-45d3-975f-9026fe3d2f7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fbce935-ea9d-48cd-a00e-a712d9d48afa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8a4601b-62cf-42d2-a8f9-2e57e97ef4c4"
            }
          }
        ]
      },
      {
        "id": "e18818e0-abab-47f0-ad96-2bca9e774654",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c48acc82-bdd2-4167-a787-277876fb8925",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a599b67-87bc-4367-99ac-ec6c2796d86a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d59e2ed2-e5e9-449c-af65-6ae72dce4a24",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2632c4-7425-4b48-a9ee-25add5f7340a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e519311f-a120-4d40-b245-90da8ffcd1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3974b661-8ea3-4e3c-bdf9-6c10ba554af5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6714407e-818a-49fd-888c-1308b9a555c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455be7e3-9cea-41a9-aa9d-603fddca956c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b37576-dac1-4510-a6c2-b70967f70f59",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a6b991-7e95-4f77-9814-cbb992f334dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e91340e-962b-4d47-a81a-2b2088b0595c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c818d8be-f9d2-44b7-aa73-3a513e9d02c7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98501813-7aff-4eaf-8bd0-d9381cad18fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6e8330-b295-4eb9-af2c-923e8c546214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421e38cc-6c61-48e2-be72-15972dac4cfa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c3983a-543b-4ca1-89e8-2378bbe4b19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c71dc2-fdb9-46aa-b850-dded749d0af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad135dd2-5aa6-40aa-b47c-72f0617ece87",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89188f6-4815-453f-97e7-00a5646f7fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b702065-4a9f-4990-bac7-7f700cd4b7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17715c8f-917d-4cae-aecc-aa61657a420c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4477b386-fd6e-4579-92ac-2c5fd9392f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c764dbd7-9cff-4164-92ef-dc9da2e16b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b1f1c3-2a13-4e36-b69e-df3c99fe89a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c28eb7-6c70-4698-918c-7f341f406975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae42b261-bdff-415b-a479-74dde7a15bbb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5b5e5b-c2c2-43a7-b4c9-efb5483ef1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fcc889d-05e3-4028-98cd-e312748a26ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99478ece-9f1a-4c2b-af48-c9bcb4f20c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a90908-4a64-4fab-960e-75d682a634e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf1159d-e244-4a8a-b250-e3bd43a54297",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4905293e-c8c8-4b69-992f-7b16c0d1db2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a3a015-cbdf-4ffa-86ee-e3ab42c4a76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bf4a78-ff5d-4532-bc6d-fc6d0217a4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3568445d-936a-46e2-9f90-15c3d8f96b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02e1da2-0050-4c3f-b18c-2d60fb94a2cd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846e09b2-5e93-4501-8dbb-46f017826170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7256c1a8-431e-4704-a75a-8bbf45cd4c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f005dee-8373-4146-a698-9024e325643b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d84ef2f-291c-4bdb-a389-2acc3448a333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4bd459-8e4a-421f-a78e-109cb8f7c285",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de56801-ac3b-4e3e-8ba9-bb945bccee0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f649e7b-6be2-40f5-a240-b8bcad7cfc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db03483-a106-457d-a7d1-8f17bdd7a003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449ec9db-684c-4558-9367-9c6e7c3e1c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41320136-e1a7-4a5d-8aa3-05ade91ec32a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bde9f59-0594-4921-9c27-e33b93423163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae959c5-8f7d-41c6-9f6b-a6b2e370674e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc05282c-ba6c-4464-b3c9-79637bcc01bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadd9026-6e5d-4790-8569-b5796ef31246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a779c5b-8250-40e5-972c-158946d70820",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7e2366-0223-4076-92f5-5f1798a7a174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5618d787-c3e5-48de-8587-c7fe2bfc7a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21084574-38c4-4ed6-bd20-a4795c925e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc55289-6f79-4413-bf23-f552bd4a3f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bce456-6f0d-4a37-83e5-2f30451974a3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656c5410-bd7f-42d9-aa6f-0f14f29917cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf97d1c7-4111-4300-bf7e-b676a6ffd292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c78448-27bc-4514-b1eb-1c38ca594c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5056810d-460b-4a08-a6e7-a055c4f5d2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8924974-944a-4866-bd62-dfbba9e3312d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55c3a1d-2668-43f8-bac9-27041eb67e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c44f85-b795-4fcd-8dc8-c9696e69e6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8141b19f-6f3b-42fc-b61d-ff674ff5591c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe149f66-fcd8-4b98-8311-d74c4ac8cfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0baf95-dea2-48d5-a7b4-90251b6f919c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a883ceec-fe16-4395-8dab-500fee8aa242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c2722e-600c-45e9-8eab-f31164aa6ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9c7f1c-95d2-4bbb-bf8e-ddc12da6e598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa897d59-142f-4ac6-9560-58e58eb3f514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7440f185-2262-456b-a407-9f858d48d7b1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c152ee-a5f2-4daf-8654-b71d40769c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3b559c-9174-49a8-b12c-65b9206b9672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dda66c-6ab1-4ef7-8def-7c2a03433cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc05fea-f04f-4151-a658-34cc2efdb7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc829fe-2a16-4db5-82cb-9d75b0f5f786",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa455e3-786a-47c4-93e1-33502a79bdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205cb149-9fae-4dea-9a86-4d895c7463e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e076f18c-0042-45d4-9471-2d5af967161b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc9489e-4096-439d-80bb-58d43070e36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ee2cf3-5eb1-4678-ac18-a998ae5fdd9e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d91fad-8974-4ff8-9739-481161c02d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1e5f95-92b6-45ce-9ebf-86d8216e9e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdefb1f-5097-4b3f-908a-5e906332db40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac926bfc-eb50-4497-bb12-4624c548a90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c01d724-165a-4809-8cc6-b9a5eff6c8fe",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdffcd5a-5865-4117-a9ab-386685bdab6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c136cfb-ac7d-4ef2-8520-a57cc01dcfc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5b27b9-54e1-480c-8ff4-49e93b67847c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943cff31-b481-41b7-b936-de9034db4992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96a5f58-4bcf-428f-9e38-1d7a0633691f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b08434-89ab-48b0-b7fa-69b1ae878360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e1b76b-a1bc-48ac-aa0c-60f11bec7d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa9da2d-d27a-42ba-a73b-a3d1c2267c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27943afd-6eb5-4d97-8c9f-1662dc3cb945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8510e5b9-8962-4466-8d79-dfd078300bff",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73230a4a-ec49-46ae-9cde-96ccde4a738c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a6c624-a96b-49a0-b5dd-92a563dddf84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3371c11c-76b1-49dd-be1e-40baba2891be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf8bc6c-fa70-4253-837d-cda89a172dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f660d2eb-1d7d-402a-b5b1-10a096c9302e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18dee7c-060d-437c-8b9e-d9662814d2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c530be-e7a7-4dab-a911-ab98c1862109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7e6fba-f837-42ee-974d-0d8776c1759c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f927aa74-8de9-4b3c-9753-95c218530649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6804c11-464f-463c-81da-ee8e2b9cc15b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8e0486-fbfd-4042-af55-1e0c612a8186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599cf60d-0399-4cf5-bef6-bf6bce26bc76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c91e5f4-0470-41f7-b4ad-179d82561f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b9e8af-8318-442a-8017-195216a84aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d01e91d-e1ed-4789-9289-e9e3a7f9705b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d7623c-4c1f-4a51-abf3-491881f3eec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30eb3db1-d512-4a9a-8b0c-f70da986f234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5459bc9f-a0b1-440f-8a07-922dce8bd6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74459c6-ce1e-4a2b-9331-5cca8edf2550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794075d2-03a2-40db-a70c-e4e332226aa7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476b56a9-e292-4636-a41e-9c402a290c9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a610d97-6704-401f-944c-f72edefee044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0745ee0-0d3a-4d96-a607-268fcac43d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7575bf9b-1944-4146-aba8-c5f7e758f869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab172df-74da-444c-813d-5b5c108bf44d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a09143d-9800-46c8-a027-f5478268c296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f426274-d6a3-4b0c-9925-c71e4256b4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f280b89-032d-4acb-98d2-1ffa791f343f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7ed8a0-e41e-46dd-8ab2-8c0b6fdcf341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369332bd-a937-4ce8-a009-6b1190d33774",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e637dd24-8e67-429b-a094-5c061e419d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8cccc1-e2b6-4b9a-a99e-3064e6e3e746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe07b4f1-eedf-4f8b-b8a6-c1ddc5031b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea0cc59-4617-4cac-9270-300af8effb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5441fa-653e-4599-812c-093a70d1963f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ad6c85-8db0-488a-a58a-45dfb5164a88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ce2ca9-9505-4692-b0a6-93fc667e3493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b082d6-e766-4ae8-a997-2bad8045c821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378f022d-4d1e-4d88-8483-7586127eb1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa0dedc-9260-4ce9-9dce-4800f80486c8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a861fa6-a603-4482-a0d7-36f9f38e6bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe18789-d9a4-40e5-930c-47a31774941a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2657510-58bf-4799-a9f4-393133c0155d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f7a1d8-737d-4653-a424-e94de2e1b56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2015752-a071-4f84-888d-d00374c944fa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4b9111-4b96-458b-8efc-0fd7bef8254d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dd6d12a-cb32-442a-9ba5-fd1a2e67ff5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bb862b-d73f-4f06-88c9-ec459cb1fb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758447cb-045c-4beb-8bc2-fe21199946e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082bca2e-65a9-4a8e-81e0-680cf3c5a912",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b1e0e4-405f-4652-87d9-4b55b9659ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feeb9df1-e2b2-4482-9049-402da3946040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2735f02b-2328-44af-9a1b-889fead9cf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5645fd2-9f83-4bb0-ab20-52f9add69640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b265da-ef46-4b84-8898-7d540ba7dbd6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09c8c1f-c894-4c91-8056-397c56fe9d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2a1d92-0b04-43b9-9811-136cecef3a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571f6354-81c8-4b82-9f3b-00561ab46130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba35405-2804-4b6a-8a73-4dee5f1ffef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43209f8-2a4c-4e85-afd5-4acea210b79a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20f2d4f-f739-41e4-b1d2-6e3a52720932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f69f148a-1d16-4f80-9d55-5c12388a0128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05257f10-2576-4e34-8ab1-fdd29c1b71bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ef9a78-130d-411a-b302-dc05230855c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11dc0d1d-5542-408c-8584-bbcc7e54a01f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffb9c01-47a8-412c-9fc2-aa75bf394a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc25a64a-95e4-484d-9a15-1bcd97a16642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffe401a-013d-4832-a077-724d9928f24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46559661-fbe8-460d-a80e-edb7716e51e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0376f798-9be1-49ec-9400-2b953b2585d1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c68e369-72ab-4870-887f-c39fd1af3fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd87c4d-2860-4bd0-9e17-f7852ef44d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe9b03f-99e2-46a0-85df-393611715d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a086f6-9500-49e4-9b2b-d54d53e945da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d625cadb-8e79-41d8-92c4-d37e35639a8a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f072a1b0-013b-4d22-9482-d2bbc150df84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b126393-0963-44bc-8a7b-64a4cb62dd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ed79cc-1f93-480b-acf4-c62ba373b021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faee79a6-e0fa-4bee-a97f-2b5da5973a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38058043-6d73-45df-8f12-8d7de2355786",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55acb677-d6b4-418c-bb52-de5c7eaffbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c2b742-8f95-4782-b832-03001a105530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cfc0b9-0d75-4ae7-92fe-bff880806d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b8f4b9-ea2d-4705-9715-e9fce4752aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eb43dd-1a8d-4741-ba4c-9b518d43b6c7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f6457e-97e8-4bca-a25f-4ba202008517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23de5a8-e6fd-4788-b8bf-dee9ae558ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320e7991-9882-436b-99e7-536edea09774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161b6cf0-f6da-49ad-b270-fe4a277e92b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a635f836-8193-48df-bb9a-00a8b6a96721",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6568fd0-c3d0-4560-9dc1-c002a80150ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e011833-5372-44d1-8903-bb44443b7d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f63a46d-fa7d-47c2-a4d2-23ce97d55dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79bab61f-e119-4633-b076-368fb85e3e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9459724b-fe44-485e-bf22-576dcf301f47",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b2c709-5ba3-4dd9-8591-62f6eca661c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80182a4d-b2b4-472c-b1e4-59ffe7294820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c07c709-e4fc-44b6-bf4b-2c29d6927695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3653773f-67a8-452c-87a2-a57181e35c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f6037f-ea4f-4a37-b8ac-191530c64c67",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3387e6-31a6-4b74-b88a-c6fad49bb366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c21f883-5b71-4443-950a-b8943bb3ce26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ef2851-10a5-456a-be0d-6a0659880a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a94e16-14d1-4fda-b2f0-bf5e6ed304fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76578c72-223f-4f57-ae6e-284674ac9441",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e76870-e09e-483d-82c9-7d403f275869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1a6f66-1840-4d55-a892-5b5d7d56d071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeefd18a-0302-4285-b202-a298bcc81358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd22ec76-04cd-45ae-b987-d09526bec55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdf528d-c217-48fe-a687-d8265a07cf33",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8194cfbc-f5b0-4df1-967c-3ce13ef79de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfce2791-b438-407c-881f-abe05be6ad72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9ed187-a05a-40c5-adaa-26e6a67d0126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc12aae-e74b-4a38-aa98-00f7b99bf307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee2dc42-ee68-4351-8287-322670c9ddf8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2739b4b0-d473-4bb9-95d7-81829f36a8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dae5bd-325b-472f-a0cb-358855c818e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160c5bdb-a0f1-4193-8b02-baa1ec39db0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db4f23b-c7cd-4740-a8c2-11eab0348d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5496464c-02b8-4825-a9c6-c7ea7aaea959",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cddc35-1749-4aba-9e25-092c483fe468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff9e80a-f140-432d-9cda-9a16592cb683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac976601-bb9b-4b32-8de2-7eac3da0912c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42bf084-8cbb-4cd1-a961-58323eebbebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898e82ae-bdc9-452c-b4bd-67990eb9af73",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226ffc82-1fc8-4d46-ae87-73ec8bf92422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98fc873-4f08-45db-9dfc-afa79ed631de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba491faf-8a8c-40af-b0a7-f1f109cfa14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb688942-b33f-4108-8f26-79fa26e8bd2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc3a988-c4cb-438e-88a8-7023b68d18f6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41847c07-b83e-415e-b385-99bda2415894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bedd3d2-cb51-4157-9ef7-c9d7553df27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee3ef17-6ae3-4df8-b6a8-48ce3ae0d52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c92b176-0694-4de1-8e4b-105ed5973ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365a780f-8b68-4ae9-9ba5-c85e7c5c1b5a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf28e321-5726-48d7-af10-dc26ff1c1d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd72150-4e2f-4b7c-92db-d2d03200fce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c91e01-c379-4459-85fd-85cc93408fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769fe044-f249-4e99-882d-fa8904030143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c285fcd8-4c12-4824-aa38-043b828bd186",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4af445c-e22c-4c54-b0e8-a6d9e21f98cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35e14ce-7c63-4e04-b5cc-f05d85873a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84507ed9-8032-4245-896e-f936f5e16c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94268df8-07f0-4a46-8583-561e34aad9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcac7cb5-717d-4822-8f3e-d16d64f9e9a6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b0779f-02f8-46a7-ade1-a52ae765566a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2007730b-0786-49f2-89a4-7ee99cac0546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fa1b3d-83ea-4866-8a80-8295bc3332d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abec8f51-549d-4bea-81f6-38c57e3c1011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3091446b-d86b-4992-984c-209d61725dfe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d46b78-2e66-4e77-b85b-881736812bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86fdf82-27ce-453d-a92c-6bedcfc25512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea45bc26-6b6b-4aa0-b5aa-8b868f1b9b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbad24ea-1b18-40ef-b86c-a973254e5f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e235e-db92-477b-8b3e-c4b74458c392",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18324b6f-ddda-411a-ac35-746fdd604ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7427fa0a-efa1-4164-ad36-bc0fbf6eaa8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80d135a-49ff-43dc-b2e6-6110e362148f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc9c837-8e62-4467-b0cc-3d9c3bb3e987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb1c25c-199e-4b8e-8a39-275538f8c54f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be22ed42-08d3-4485-a35f-fcb2027b98c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789e649b-c836-4a21-87dd-41c1692f130b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c716be2-7d0d-4f5e-9f51-fbf9dea72465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1c461d-3dc7-4c4a-aeae-bb4ef9bbc2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2130a574-af32-4a8b-8883-7358630ed677",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa06aa9-b377-4b75-8e69-c9f4a5354ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc84257-f38a-4fcc-866c-04bd0d2d88dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8825cb81-96b3-4f2c-a9aa-cdcf81ef2906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300cd274-5edc-4638-b0fa-ddb2525a090f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ed9650-fc9c-4136-9649-2309e50bafd8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939c9f3-0202-4d9f-bdf9-ea07c6196a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17719b6b-d704-4114-8bee-6894c47b32d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80fa538-5862-4250-b967-58675b141fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54704607-e0bd-49ad-9bd3-f11242f39c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ea0890-bf62-493a-bc1a-f293441e87b8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d68c8d9-e435-4b5f-ab97-5de9b0358360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525b7273-3b7c-40ee-b370-85ced0d94ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247e7691-7fc4-4d5d-a6a8-8150b814335d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb241474-4000-47a2-a60f-ca2e6d006ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5c4b4a-30ae-4842-a2fb-91809f9a9a41",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d13950f-7697-42af-971f-feabcd9deb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1f7e37-2a95-4816-993c-0a2f3aea7c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799fb319-8cf0-4511-89a5-d07581b01e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab3847a-17d1-4a86-8487-b2a4ec743f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb967477-85bb-4c23-aaf8-a08cd33d72c6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93291c6b-a38d-417c-a7ed-7f264e8f8407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328e49ff-3fb6-4780-aa28-8e878611df79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce057e2b-dc91-4f3f-9711-966e2f1b3356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52061a3d-797a-4e5b-a658-663f042b30ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b23628-4803-4de1-b68c-78ed0e80c9f1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d5e6e2-e6ea-4010-8492-e1f80e004054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ba5406-57b9-4bf2-8f19-d271287772f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e573a47-2f8d-410d-b144-1978d5f22ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e694481e-035e-47a1-9700-9f2051fbd61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e800d094-39a1-4d91-baa2-06c498e0b4dc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dda8bb9-110b-4924-82c4-b6acc14b7b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193b553c-8e2b-4a89-898f-9d56fa2ac4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22903faf-7dc1-4fbc-be06-92465b613e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213c105d-dcbb-402d-80c7-0afc86a1471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b67a09c-e974-4d96-bbf8-5afbb2b61c5e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c32600a-3483-4b7a-8e6d-c65ceb75a666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6192fe9e-166d-4b97-87d3-c0e0bf7096bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8edfb4-a75f-4848-8dd5-e508752eaa95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962563cd-ad33-4784-8579-ec625c4a7d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d9c3b3-75b8-4932-9a98-f6fa4a9e9bdb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c789f1-0847-4b65-b5bf-76aed0acbfc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9675b33-bd8b-4073-948c-db7a26b6357e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4e61f5-7eb3-4f0a-93f4-9e678e519001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7448b7-b9c4-4231-8c87-6eb4cd01263a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1016c3b2-ffe8-46b4-aae0-292bbe9a5091",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94015f6d-4d77-4d3a-8998-2f255ceea91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d396e5cc-0e45-4ca1-ad04-9911ed09b518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec249786-203f-4d02-b9c1-c6eac9cc4253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d883bf-f903-4ed3-a61d-804d3940f077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7754d32a-9fec-48c8-8667-bd9c44176d9e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6df248-1aa8-4b16-ab89-619fc4706544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40f6993-8e71-46f5-ab1c-6e83c1a6e0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eea729b-279f-4340-b649-efc3df7bf4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0b0b12-fa94-4256-9b80-c2659377ecc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa80bc27-50db-4b3c-a3b2-8d29d9a67f32",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098bcd9b-2ca8-42f6-8a4d-354e5dc6a75c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53577a8c-77ba-4049-a763-0d3e67cafd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884e2c8d-1f9c-4d10-8e85-ff5e08801389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2ea1a6-c494-4fc9-99b8-a2e3e9c38401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229e3851-bbbe-4644-baff-80f3234fb5c0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0d13f5-9c82-414b-a0f7-64d3ecf4900d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4027a59e-b776-4b17-88b9-556f0178157b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4e55a1-83b5-48be-959b-f1881d1b929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1514826c-c6e6-4435-ad2d-bfd62db8151c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1365dfb0-d8d8-4f66-ad16-759d9f129568",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c79195a-6ffc-4f07-8b5d-68d9acaa3b67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cb795aa-c0c8-445a-9b3b-ec7ec56ebc68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62326ac-b30b-45dd-8cb5-67b7f278edec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321fdb49-4b47-4295-8f0a-c0baa55e2b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f759be-1130-4a31-8ed0-dde445bc6dc8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2b5ee1-1b31-49ba-a2e6-33ad51889f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7922578f-77d6-4a45-9e71-209ef84267ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b946f01-73ba-4a3b-8a45-9c8120d8c39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04824b1a-7d8b-4087-8b1e-4abec7b197eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dd2115-70b9-40ba-a112-b3e3d9ad70b6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ad74d9-0125-4c6c-8465-2a65a834c52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db471686-42a6-4ecc-bf25-83b95bb3fbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b569d01-d4f6-4cc2-acf9-f0f761999621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adc8a3c-1e30-4c45-b1d5-d8a8ad5b208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90868b3a-4e64-4f0b-83d5-b79f80d39b8a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3da4af-f5f3-46f2-a8c0-df8e80bbef9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217160b1-c7be-44e6-a7db-bd2b74b00aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04052e8a-be1b-480c-81dd-d8b260052b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0bfc0d-acec-4fdc-b7a9-557ecce0bddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1eb4c0-5dd2-431f-92ba-1f872466dc51",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8751a09-7b59-4c62-b220-d382d8fba79f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7592aea5-81b3-4ae1-91d8-c7e250df38e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab6b36b-2df6-4262-a07c-0d5a39c67268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a9e141-f219-4892-8acf-a353f017e3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aeb57b-5169-4c66-88e8-fe4b70655d68",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad2bd9-4082-4f61-9622-60f79c69e175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7b6181-2e9e-489e-abe7-1d97502dc931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e966beb5-66d7-4828-9b2c-ef038aaf072c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b33dc8-7c59-46e3-8666-cea5e2a2e321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbfcfd3-6049-46da-8bbd-e3ecd9a11790",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1982d30-0762-4a93-bf06-b6fffb30d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39363dd4-e5cf-469d-9a8d-f8fc4d27aa7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e72a11d-8fe4-4646-b54c-536f100bf10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6f6244-8975-428b-8523-802d6c5d7c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016f2dc6-1ead-454c-be04-7c225cb6b4ab",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e8fbb7-6b9b-41fe-b89a-3995d81788ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b04f851-e7ac-4866-b616-6f7803ea34ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c7cde3-1873-4fba-8059-3074b3f49a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac7b8d6-6f77-4a3a-8566-7013861bde4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fed9f3-750c-449d-ac6a-463cd2e9aebc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0914e129-74c4-411b-8487-e472c613b0b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d64fe78-b1ad-4bcb-8cc3-f56461482df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f65638-78da-4ad1-aa5a-b233fd542a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78f74ef-0a47-41be-ae82-257f17cbdefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a53db1-7936-4fb8-a40b-d55fc38b7294",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbf07d3-b9ba-4374-aad6-7055b4f0febc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb7352b9-ef2c-482a-8dad-046a38b6b34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170a1a5b-045b-48b1-91d6-47e6b66e20f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508c8d18-51ea-4482-ae99-6bd3833fc6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f7808d-c4cc-407b-862d-1acf72b2c878",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1405328b-c9d0-4e7b-9e5c-6c6eef5efd44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109342f3-cd7a-4844-be11-13e5c8078fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df360d71-b30b-4592-8616-153291a9c37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecebc17-586b-4030-a4d5-01f09440580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52310ee7-5bf8-4156-9e6f-72e0e1bbb3df",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b70511-4aa3-4b42-9d12-7221650406d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b4db4e-9f2d-4f7a-b091-8c96c3241ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e444b9d1-60be-4c0c-8f19-f7c816ed2cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803c0538-e03d-409e-85ea-602afcc4d5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5beee5e1-ad66-49ac-aebc-51b8e6d7c4b0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8248d93e-8980-4b0f-8463-1211369ecf42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4e88f1-ed23-4633-bba9-09cf5543b168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b8dd11-1362-43f9-a4f4-a9837c2ee809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9689b15d-bfd8-4172-87d9-063314efca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28d66c1-3b77-4a82-821e-d518d5e7fe54",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee49b4e-ab06-43b5-ba63-08c92fd9e292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e29111-ea32-4b4f-b971-31de20197f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7997c8fa-9462-41f6-8bcb-2f0007e39b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0798aecf-2897-46cf-8df7-dfcd5c0e2497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be32dd57-ace5-4de5-a7ae-99981e40f92b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fbfe29-cecc-4a70-bbe9-e969f2559dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94dc272a-5c2d-4b72-8669-a61e8b5f09c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715e5130-ee1f-441a-8467-5a5bcc73784a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2f07e2-95b7-4b9e-ab58-626b510b3dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f9d110-d915-4e74-98d5-e7e9e4755e1b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c26fea-49fc-43df-a087-0f123d2647f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21645c5-b882-4fba-9832-d7bb95b4fc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287a2037-de47-4378-b4c5-307124eb0bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7169a9cc-aee3-45fb-b9be-6efef1094bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d83fc9e-9418-47ea-bccd-0dd27a9c11f4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51425496-a666-481a-8091-703663463915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ae3505-01ed-4527-8b84-5b9c433daf75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555d57c4-8a7e-473c-839b-59b78ee622cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba447a98-d8ae-4191-9355-125c74059cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30955bf-e549-45f1-a24c-1b4fa1e14444",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec262b25-5e03-4a6c-8f40-a1b232b0f403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a9e8580-3d74-4ef4-ac08-adf975ebd2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e051de-718c-438b-90bd-c32f315cc6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50afec6e-d021-499c-9fcb-c99059c3ae4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322ddcaa-bcab-4418-bc6c-53e545e75b78",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f31a53e-4b81-49ac-847e-a1182f447f91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7da6265-b0ae-41c3-9dcd-58671dfb5604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bfa2e3-d2fc-4a43-b5c5-514d4865f7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20eac537-7cd2-40c8-9645-852c751e27cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2e48b4-5735-4517-9b64-a9fc18501e95",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa0c670-27a7-41ec-b1d1-6e02c779b905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0503a4b2-420d-4a1c-8f23-65e93497624a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1080f34f-07cc-425e-b956-964f293572a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6535586f-bca0-4313-ad61-6357d23c8604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9530162-106e-4e1d-94ec-f1207a104e9f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d19ca3b-9227-463b-966a-ac9dcea6bc74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9248a947-dbe9-448c-a0a4-76155c0cd846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1873ad5-8716-4a18-a894-c33c3f117e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a30d353-c3a7-4aa0-abb2-06a412373a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3beb02f-451a-423b-8bec-9418f3692dd8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef886e12-c41d-4a12-be42-7c0568eae09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9b1c7a-e8ad-4f63-ae1e-0e6af2dc4653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4a4954-9a3d-4599-8ff0-63dd06a354bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96e2f79-8f24-4564-9744-3efc31595e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8693c75f-c1fc-4303-ab84-90e228962904",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49c52bd-a36c-49ee-bacf-4abb24cca793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c914a34a-cd75-4225-a47d-69137f212e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72840fa9-4184-4e66-a123-ca4412e85c89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f5cec9-4b58-4b56-8475-c95e11c008ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307af1ed-79f3-44f9-ba8a-73a0dee65ca2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bdfe1c-8f19-47a6-8e22-93aa9a0fd18a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b5779aa-c051-4bb5-afca-e723fae32a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c2317f-15bc-40bd-a2b9-a778af0b393a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240ca8e7-f166-4c4c-8e23-bdab16c0c94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cefa2e7-47d0-4715-a3b5-58f5a50f7039",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7a3298-2b2e-459b-8853-47c0c978b920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a97039c2-b615-4355-81a7-24a55687a616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da85200-45b8-4bd5-9200-ca29137c1748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a3b96e-1279-40e0-987e-0baa1cb1d33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75306d63-1b13-428d-9bea-2f6691f2ac5f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0d4afe-0fb8-4d38-8e73-1b50c11b53a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fc9367-0fce-4029-a6b8-9c050840e370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816f90a9-e7fe-4962-8761-86ccc155ee83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5772d240-f694-409b-81ff-e5d5622066ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0713555-c789-412e-802b-8e8d0184721f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bc330b-1028-448c-a5ab-93bad6e548ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a82af729-6593-431b-9028-f1572744dd59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c75202-2f36-4ff7-9d32-56bcadb054c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aec1a47-579c-453c-9226-7ce0b2126f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c965b5d7-9436-4ab7-828a-8bc2549571c1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b8fb87-2ebb-452a-b3e1-d9ab06c5d056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa0b8e48-18a1-453f-9090-9a1111af5807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39238e94-0793-4458-84e6-e2ca5516eb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174cd7e3-beaa-4cbc-9748-f57cce501f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86306d73-d4e4-4a95-801a-62d9857c2596",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e393aef0-b940-4354-8bff-ae0e75b8565f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f53cc7d-4fca-4934-88a6-00a2baf594e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ebd25a-dab9-4ca8-b295-9ec2fee2b304",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6bba13-f31a-4f85-ac91-b0daa7539d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b3bc7b-c60f-404a-b51d-778dc8d1759e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f01f606-626b-4e42-a7f2-124354752b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15a9eb2-da96-47fa-ba6a-ee56bb3c9ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dfb63e-4484-4bbc-a3a7-c6139085d615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1f52b8-a6cc-4527-bb34-d4f05b03a3e3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dca37b46-95e6-401b-baf9-431592e60c53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d267dc6-f9fe-41da-a3b8-aa530da104bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0c84b5e-6820-43f5-aa2f-dcfe75a846e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bd11c61-fc0a-4035-9cd3-7d1d85097380"
                    }
                  }
                ]
              },
              {
                "id": "0051f6a8-468a-42e0-a253-69554b46dd86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a05b890-5ced-49d8-a735-a58d94dcf6c0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6b45c5-8da6-46d1-a69d-4cf75fe08005",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "536d066d-a157-4694-863c-837235425655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797ba42e-c93c-4d5b-83f6-62ed8839c8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "531b2ab6-6b62-406d-9344-bcb968426042"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8180896a-9679-400a-a79c-4dccaaa97d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f48b8fb2-6052-4017-86ac-81474749f97b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "451d323d-e854-49b3-b354-8f1285a269de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28433d74-19eb-45cc-aa4d-8528b198c1b9"
                    }
                  }
                ]
              },
              {
                "id": "c60b16b3-5f30-423d-a6c9-101b97f7d574",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "111e077e-b237-49d7-bf9d-bef40627d102",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cc0d0c-507a-4ab8-936b-7c8929665b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0ae170b3-a12d-426e-8e5d-cbe08fb13f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e193b3d3-2f6e-48d5-bcc3-073405fb8943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b4085a-206f-4e0a-9313-ad85a6a4e199"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f628b0b2-4264-4dc0-ba2f-c3bc4287f19b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36fa4b53-a6c3-4263-be75-1fec806910f1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84335759-5230-4a27-bda5-e27e4ac79f3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9ba102dc-4574-4396-ba66-6e5ba3fe8290"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef91a348-e001-40c7-8241-e4d1b3c68f4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19cf08a6-baa3-4104-b253-fb1d3baa9cde"
                    }
                  }
                ]
              },
              {
                "id": "38653d36-8312-4613-9f8c-f095b67c1a89",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0fc72c6-ffbf-4b5f-862d-ea4c3ef1ff8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6320bc97-6196-4980-ac9c-f67fe22dc466"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21d760b0-2ac3-404c-902f-8f740cd621e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bf8fa27-cd7e-43d3-a670-168dbabf1675"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16361a6d-a252-445d-b0fb-4f8201719794",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "02bdbddf-7de0-4704-b8ec-66a1d917e3eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "964d6fb1-ffd5-4015-9798-bdc16c7746ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0365e3a4-c565-486a-bacb-fd0c2da84c1a"
            }
          }
        ]
      },
      {
        "id": "6279e640-a3c2-44d9-8ea3-5a7e8b764a2f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f4dc0214-4012-421f-8f55-79843825ffcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ed0ae89-d990-4d6b-8681-ff0ea4dfc52b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e61dfb26-38a1-4689-b0b0-d75dab4c89df",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c37841-711a-45de-a411-3d5893f0d365",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4602fc7d-b738-4ad0-8842-82c873c9c418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a43ed97-06b6-4369-80c3-983dd41c7c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b92b4c1-9cff-427e-91af-d0e2c8f54228"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "893905ad-c14c-4ae9-8319-3bc649282add",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eec5a411-b54e-4dc0-8a08-f0761cff9ccb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9284f462-7746-47e6-aa0e-750ecf283692",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4d046a1-54a9-49d2-bfb0-8ba265a3eef0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eff27572-be02-4b48-ac0b-c562ed266a9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1eb4965c-345f-4dbd-bb66-49631e10d1e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74fe1222-dbde-49ce-8b3a-686f35c188c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35e28141-e453-4822-ab0e-1dde6dc7a1c1"
            }
          }
        ]
      },
      {
        "id": "e20b653b-4e45-4e56-b6bc-e8fdd668ec06",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1c22b9b9-9708-4c31-9a05-f0a8ea93da27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb505a7b-7582-49d7-91b2-282e143c3ebb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33890358-788e-468d-aa85-18d4f00067a3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee40a18-0eee-45e4-ae4a-2740eb76c7c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc933d7f-a048-4d7f-887e-436be7fe1b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f908a462-fa5a-4d9f-8c90-62f5a8dadcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1af011b8-0906-4e48-a1de-feb021ad87c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "678e72a3-cd04-49d6-900a-f33ea20d1087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4270218d-add5-43c4-9465-bbfeff42be78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29af37ff-eb86-497c-85e0-f1fc4692079b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0341783c-9cc3-4a43-b42f-f8637c04e7e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "442fb602-b3d4-4582-8fce-1905eb9b2eea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "55124394-6d28-4c6f-ad3d-3aefc35d42ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c50d1122-d5fb-4168-a6e0-5b4906631c91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d438ed9b-14c3-4a35-9c5d-7d92953ee7d1"
            }
          }
        ]
      },
      {
        "id": "cc1df27b-cd25-4bcf-82f8-7ca0d3aa8412",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "36776a67-6bf4-4f0e-ac6d-7aa0d43bffbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ac1c96b-6065-4e37-a37a-e373d80875bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4240049-f691-4125-90d0-2491c2b2faea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3a6f15-eecb-4af5-9765-4e771cefc02f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69c9ce73-31f3-46df-bb10-549bc9d826b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2df805-0743-4881-8dc6-03dc4a2f29b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bfa2876-28d9-4873-88b6-05e43f8593bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36de2f91-cf72-4294-bccf-6ba415126cde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e4b4a74-8cc6-48ac-a7f3-ab33d80961bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb34201f-1a8d-4f71-8591-dcb84a907d16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fff9f680-3485-4dab-bd97-0b290dca2933"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93940032-0c84-46e9-b770-ccd74806e031",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3cf89073-60e5-4f3e-a5d5-16442abe8695"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03a6fe13-da34-4b6d-beb2-446876b43e32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a7c3e47-4f77-400e-9acf-7eef4480a993"
            }
          }
        ]
      },
      {
        "id": "cb57bb3f-5989-4315-b9bd-50e12174a2f7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ea67c87-49c4-4497-8af3-a271276d1de6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12ea597e-0979-4815-98e4-0fdf7c42cb19",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "171c7df9-ea52-471e-95cf-10fc4dfce6a1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58b49e4d-3e43-4a60-9c2c-af0fa968461d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53e3a803-9a12-4514-b4d9-bf8d9983e4e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.176056338028172,
      "responseMin": 6,
      "responseMax": 444,
      "responseSd": 31.84995617565571,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693701267958,
      "completed": 1693701283136
    },
    "executions": [
      {
        "id": "6f255e51-8aa1-443f-a4b5-3090fd20da5d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "00bbc23a-5b23-48b9-b9e8-51d202a27614",
          "httpRequestId": "5838eb76-cc87-49fc-a2fc-2e7a977aab19"
        },
        "item": {
          "id": "6f255e51-8aa1-443f-a4b5-3090fd20da5d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a0d5bfac-f5d3-4c12-b8f2-7185d5b02efd",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "f83f43e5-4f3a-44bc-b1f9-2e1123d74b66",
        "cursor": {
          "ref": "30f4dbea-7fa2-4ebd-9c57-0d0791d93fe3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a7476479-3747-4695-a643-eff8b5a6ee0e"
        },
        "item": {
          "id": "f83f43e5-4f3a-44bc-b1f9-2e1123d74b66",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a445a2af-3a29-41d4-a25a-eee4384ecdca",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "3913cb31-76d1-425e-9feb-d3800b0dc339",
        "cursor": {
          "ref": "0f6a71fc-2156-4140-9b4a-5673d973453b",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a20a52f0-7382-4ce6-88ae-cd4d913cd290"
        },
        "item": {
          "id": "3913cb31-76d1-425e-9feb-d3800b0dc339",
          "name": "did_json"
        },
        "response": {
          "id": "213299fa-a3d2-4f4c-a0b2-5e1f81268646",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d947ea7f-b63f-4df8-90b8-619a208044bc",
        "cursor": {
          "ref": "9167d313-ef31-4c50-ac02-1cab6e558e64",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "063267ca-c5ef-4980-a1ac-5081b1e1bd50"
        },
        "item": {
          "id": "d947ea7f-b63f-4df8-90b8-619a208044bc",
          "name": "did:invalid"
        },
        "response": {
          "id": "804b715d-5f70-4a75-aa50-7303024e7414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d947ea7f-b63f-4df8-90b8-619a208044bc",
        "cursor": {
          "ref": "9167d313-ef31-4c50-ac02-1cab6e558e64",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "063267ca-c5ef-4980-a1ac-5081b1e1bd50"
        },
        "item": {
          "id": "d947ea7f-b63f-4df8-90b8-619a208044bc",
          "name": "did:invalid"
        },
        "response": {
          "id": "804b715d-5f70-4a75-aa50-7303024e7414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da287d9-42f0-4ef7-ab03-23b3e398eaac",
        "cursor": {
          "ref": "47576719-4d95-4132-a966-730664db9682",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e406d342-3a63-454b-b339-4fb547d59f06"
        },
        "item": {
          "id": "7da287d9-42f0-4ef7-ab03-23b3e398eaac",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5930b888-d585-4584-8178-c6bcbf918276",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8794e11d-27ad-404c-a76b-f17f804308b8",
        "cursor": {
          "ref": "f9e198ce-2793-415c-9ee5-490b02960f44",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d5d3ae7e-2d8e-4c55-87dd-3c78816355e3"
        },
        "item": {
          "id": "8794e11d-27ad-404c-a76b-f17f804308b8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e6cfcdb8-1da5-4055-9a67-bff8decea272",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374c83c5-f88c-482a-b70c-c94a725a5195",
        "cursor": {
          "ref": "0e481d2e-a3f6-418c-8292-4423f2ac1dd1",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "515e67a2-b125-4aa1-b5de-cbb8e0c4d404"
        },
        "item": {
          "id": "374c83c5-f88c-482a-b70c-c94a725a5195",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cc7344d7-4e54-47a1-bdb5-588e764348b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fd2627-0b9a-4c2e-97d9-146f5c24693d",
        "cursor": {
          "ref": "3afb26b4-681a-4e14-a9bf-4534fbcfa68d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c08332c3-6a38-4efe-aabe-65f5b7b6bc24"
        },
        "item": {
          "id": "e8fd2627-0b9a-4c2e-97d9-146f5c24693d",
          "name": "identifiers"
        },
        "response": {
          "id": "a5566fab-1b0c-4684-b281-6d1e5793ee2f",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8ce6ef-1715-44b6-96b0-46fb3dd8eda0",
        "cursor": {
          "ref": "51ad112e-2d83-4ad5-a2f7-2c929ffcc328",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c36ee605-383e-49ee-98d4-04536304e6df"
        },
        "item": {
          "id": "8d8ce6ef-1715-44b6-96b0-46fb3dd8eda0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45f56207-0a8f-4865-9edb-78a3a9102213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2b65f7-7805-4a1c-8c5f-6494d6b46a11",
        "cursor": {
          "ref": "d77126b2-67c8-4695-bb27-5775f51c4a21",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "679d0903-8733-4ec3-bb13-27a2016fe080"
        },
        "item": {
          "id": "8a2b65f7-7805-4a1c-8c5f-6494d6b46a11",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6ffe1ee2-15a8-420e-91fa-caf9f4b7bc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec3a6dd-81be-4bc0-a351-01df4051964a",
        "cursor": {
          "ref": "58af3e0a-d335-4195-bfd6-c1cb3d587449",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eef52d32-380a-4e2a-aa6a-3fce34759fe4"
        },
        "item": {
          "id": "dec3a6dd-81be-4bc0-a351-01df4051964a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6d237ee4-d50d-41ce-8296-752ec4918504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771a2359-0242-4cb9-9ffa-4c6145f92c26",
        "cursor": {
          "ref": "71cdc034-82c1-4344-ab07-df6978541b86",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "edb94d7e-8a6a-43a4-acff-064f328981e8"
        },
        "item": {
          "id": "771a2359-0242-4cb9-9ffa-4c6145f92c26",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1cf4d421-2069-4f45-8e43-a4ec006965ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f39076-6541-4475-b4ba-fa8e5f682acc",
        "cursor": {
          "ref": "0795a446-2901-4ab3-ad1f-02ce28b3d2a7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d0c01056-3d6d-4300-9a69-99dd70d5f262"
        },
        "item": {
          "id": "b2f39076-6541-4475-b4ba-fa8e5f682acc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ad6442c1-42d1-4276-8a36-9fc9fd71a9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e3d755-03da-4273-a9d5-1b0371d96b3b",
        "cursor": {
          "ref": "85002703-cd3a-4a0d-b28c-5d7e9e1e74ef",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8d9389da-b76b-4fa6-aa7f-9c24fc37c6de"
        },
        "item": {
          "id": "16e3d755-03da-4273-a9d5-1b0371d96b3b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aa508592-e719-4ded-a2cc-3146d67e79ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9386cc0-80d3-4bf4-9bfd-6a4eee7a6cc2",
        "cursor": {
          "ref": "e38cc0c0-84a2-423e-878e-bc81a69e2c5c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "69c8ee39-7406-4a82-931f-5397149b8f90"
        },
        "item": {
          "id": "d9386cc0-80d3-4bf4-9bfd-6a4eee7a6cc2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "15d251e4-5538-4e29-b45b-579a020c3e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9a6a11-074e-45b7-a824-b8fd322779e8",
        "cursor": {
          "ref": "8bb37445-3939-453c-b257-1dbacf32140a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4325e30f-ff20-466e-997f-7857cbe6b78d"
        },
        "item": {
          "id": "bb9a6a11-074e-45b7-a824-b8fd322779e8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "efc2be5a-fa59-4105-9d5a-d9d18e3b14a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e97c80d-7dab-47e5-bcf8-05f929be8c57",
        "cursor": {
          "ref": "42da7742-d302-4991-86d0-14f60a24a4ee",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0f3c74db-fb7f-416f-afa4-d2488773d66b"
        },
        "item": {
          "id": "3e97c80d-7dab-47e5-bcf8-05f929be8c57",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9f110f5d-ed59-446b-ba2e-e2aa4d6e28f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69d50a6-a94f-449f-9852-53b1cefde478",
        "cursor": {
          "ref": "a094ee34-5717-4f77-bc93-859f9bcfe671",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2b97975b-b535-4874-ba1f-e24b1bc7d44b"
        },
        "item": {
          "id": "f69d50a6-a94f-449f-9852-53b1cefde478",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a721d420-147d-45f4-9472-cb171f191826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3792702-77a8-4b54-abbf-dfd07a9341e2",
        "cursor": {
          "ref": "1f6a1078-83ae-4913-bd34-3f9f3fda2d81",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "30513856-5a83-4f70-a421-57931f67434c"
        },
        "item": {
          "id": "a3792702-77a8-4b54-abbf-dfd07a9341e2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3d55e64b-24b0-4f1d-9db4-df2c0f8dd4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f70239d-7d9f-4b67-aad7-29beeab2dcf9",
        "cursor": {
          "ref": "81d63217-6d12-42d8-a9cb-925ad5f72c34",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b5a1d33f-1a72-42d8-8218-98862b8c089c"
        },
        "item": {
          "id": "9f70239d-7d9f-4b67-aad7-29beeab2dcf9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "89549321-5bd7-4482-8616-4b3fa6d411b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13aed2d7-8c8e-4edb-8185-17c726062a26",
        "cursor": {
          "ref": "68dda0b7-7f26-4fa6-9a13-aba1c8665084",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "27845db5-a1dd-4069-8d0b-a638e80dbe6d"
        },
        "item": {
          "id": "13aed2d7-8c8e-4edb-8185-17c726062a26",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a7e761d8-e239-45c5-bc1a-1c455c78e0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6085a3b-b5fc-4c9c-a4b6-69970e8d9942",
        "cursor": {
          "ref": "a0d95caf-84de-4de4-97bb-9bbe1eb8c0f5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5d8e50b2-c75f-447e-b5cd-68a576325422"
        },
        "item": {
          "id": "d6085a3b-b5fc-4c9c-a4b6-69970e8d9942",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "554d0d90-11d2-4a50-8044-00ba28e59b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca45b5c1-1265-4aaa-a9fb-342b42940567",
        "cursor": {
          "ref": "cd29fcca-730f-4ff0-9d6e-d003a926c25f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "77617d6c-5a2b-4ce9-a614-f4925d3c8433"
        },
        "item": {
          "id": "ca45b5c1-1265-4aaa-a9fb-342b42940567",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7de1e762-bdff-4100-bada-a84c0205c724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30aa1b7-4034-4645-ad8a-ff0fb7ac1248",
        "cursor": {
          "ref": "22911831-e6f0-4dba-9afa-5ac71ae240fc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d72e02d3-8c92-4275-ae18-e9d72926a5fe"
        },
        "item": {
          "id": "d30aa1b7-4034-4645-ad8a-ff0fb7ac1248",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "96c3f54b-cc96-4ff6-9b6f-72159c7f07a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572ca71f-3318-4fd7-9369-98e3d2ae2e44",
        "cursor": {
          "ref": "ad45e866-d18b-4c4a-a520-3a68a7a91c16",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "611f2432-f2e2-466c-8837-03efb53146e0"
        },
        "item": {
          "id": "572ca71f-3318-4fd7-9369-98e3d2ae2e44",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a3d2a5a2-3814-4e4d-88da-6e414c9e995e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699d91c6-2b3e-40c7-bb5f-82ffac2dfa4e",
        "cursor": {
          "ref": "acf92e50-eb56-41e4-9216-bf11266e5231",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a200f4c6-f56f-4f43-bdee-ad972cf07837"
        },
        "item": {
          "id": "699d91c6-2b3e-40c7-bb5f-82ffac2dfa4e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6d54dba5-51d7-4f1d-9ac4-c03f3bb88774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b12aed-df52-4003-9dda-b9ddc31e1ac1",
        "cursor": {
          "ref": "2d097fe6-13a9-451f-accd-b6ee474265b7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "39176860-75d8-4874-b56b-c8d07c8952af"
        },
        "item": {
          "id": "12b12aed-df52-4003-9dda-b9ddc31e1ac1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "77785432-0d86-408c-9b50-598933efd27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03033c57-9ff1-4204-a53e-e0e5e92470d8",
        "cursor": {
          "ref": "01b6610d-2c10-4d6b-a72d-e4c7114c8f23",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "efe45513-ebca-4283-984f-b6bd5c547ad0"
        },
        "item": {
          "id": "03033c57-9ff1-4204-a53e-e0e5e92470d8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "45696ba0-ff19-4877-81d2-e5f1f44696e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0457e8ef-b3c5-4a6e-b92a-fab5f3946d96",
        "cursor": {
          "ref": "3ef3a07d-7afd-4616-9e64-22f259942b7a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a7e00e70-d340-42ba-b36c-05485cf50220"
        },
        "item": {
          "id": "0457e8ef-b3c5-4a6e-b92a-fab5f3946d96",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "407714af-b835-4538-ab62-bb08661dfbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ec4a46-63e1-4391-a6d5-73ab85b2afc8",
        "cursor": {
          "ref": "9dbd9bd7-d2d4-4d54-a85a-713a2a996d9a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5931b270-d58c-4e9b-9e8e-316310b53e99"
        },
        "item": {
          "id": "52ec4a46-63e1-4391-a6d5-73ab85b2afc8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1ece9e91-1a03-46ed-8319-064a8307b182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1db6172-1cbf-412e-866f-cf8848ae9e98",
        "cursor": {
          "ref": "680f3e5c-1ac6-4b75-b54f-c6fa5081452f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5182eb0e-c180-400d-b525-bc329927ff0c"
        },
        "item": {
          "id": "a1db6172-1cbf-412e-866f-cf8848ae9e98",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "974ecf6a-d28a-46f6-bdda-995811fd4955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fcef0a-a57f-4a24-8418-5c3d6a83ec11",
        "cursor": {
          "ref": "8ae8d44b-2802-4d12-870c-b1a8ed6e1cf3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f71a2c1d-78b2-48c1-b70b-ba73b3dab861"
        },
        "item": {
          "id": "89fcef0a-a57f-4a24-8418-5c3d6a83ec11",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2b1ba087-b76e-4b81-a627-aeaa07801fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef183b8-d6bf-4127-97bc-abce26499cc0",
        "cursor": {
          "ref": "acd51efa-c7be-40a5-96ec-e9af4728f48b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "34a721c6-23b0-4e7b-8a9a-368defe20aaf"
        },
        "item": {
          "id": "0ef183b8-d6bf-4127-97bc-abce26499cc0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e160adb9-a667-4c49-9409-70b0e5e68645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07214db7-dd6a-43bc-b6e8-0afe1eb1d97f",
        "cursor": {
          "ref": "f2f5ef38-1d42-4235-af91-1a0f59a5ae98",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8a4e4c2d-c154-49f3-8f49-40511c32c038"
        },
        "item": {
          "id": "07214db7-dd6a-43bc-b6e8-0afe1eb1d97f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "eb84574e-63e5-4728-9476-642f9c92cca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78071fd1-8465-44c7-b906-6af181c260a6",
        "cursor": {
          "ref": "872874aa-f717-42c9-b6c8-3a0739dffd00",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2207d0f6-29d1-4743-bfd3-e99c7a81eff9"
        },
        "item": {
          "id": "78071fd1-8465-44c7-b906-6af181c260a6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0d38527c-4601-49d1-8955-5c589e2750d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6c0307-4798-45ea-adc1-181bddbba107",
        "cursor": {
          "ref": "42004fda-b126-4edd-8e68-1f4e75014610",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7ac94175-df4b-4443-8a80-0be97176a2c9"
        },
        "item": {
          "id": "5c6c0307-4798-45ea-adc1-181bddbba107",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "02535bef-afd7-49a8-8c92-07eb4b9908b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e908f1-716c-42cf-a51f-8cee5efed1b8",
        "cursor": {
          "ref": "3cc95c74-a03e-452f-a330-88a0ccc1067d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5d8344e1-16f8-4b56-9dc7-5fa55343ec6d"
        },
        "item": {
          "id": "05e908f1-716c-42cf-a51f-8cee5efed1b8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d3167037-86dd-426e-ab5b-1167925d2c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d59edb6-0e92-4bbe-90fb-db5dbba18637",
        "cursor": {
          "ref": "bcd39272-687b-43e7-9c9b-42461ca642e3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f2953573-9506-4b50-9ba4-bb275bd7f90d"
        },
        "item": {
          "id": "9d59edb6-0e92-4bbe-90fb-db5dbba18637",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fae5f6e2-e56b-49aa-8504-c1e553a2e0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee3ebfb-8cfe-40b2-a2d6-9ca87446fc35",
        "cursor": {
          "ref": "f0ecbd0e-aaa2-42f0-a132-bcd06d174071",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fb8455e6-be66-4c91-8f5f-57e10ccff9df"
        },
        "item": {
          "id": "aee3ebfb-8cfe-40b2-a2d6-9ca87446fc35",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a9e7b661-fbcf-44aa-96a6-33ee032af370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7fbf38-95d3-48db-b122-47bb0bc01768",
        "cursor": {
          "ref": "3a612e62-be08-42f0-b1e8-a21ea943187d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3ffb6105-a822-4484-984e-a5e4020de8ab"
        },
        "item": {
          "id": "8d7fbf38-95d3-48db-b122-47bb0bc01768",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4dc20e97-be95-4ced-bb89-ffb0b4369bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e953e3aa-0af5-45f2-9914-27409a3d0f62",
        "cursor": {
          "ref": "9e1d94dd-dcb5-485f-a23c-41b45f3586f3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fe8add20-b08f-4546-b1dc-b6e25ad6ae06"
        },
        "item": {
          "id": "e953e3aa-0af5-45f2-9914-27409a3d0f62",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7b6c13d0-6f25-4ee4-97b0-d625807df6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbd1803-1bc7-43ba-9954-9536a5c6a274",
        "cursor": {
          "ref": "fc37b164-6542-47e2-a228-36a594f52edb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dbba6f37-c01c-459a-9e9c-73f5c5b0c8d7"
        },
        "item": {
          "id": "cbbd1803-1bc7-43ba-9954-9536a5c6a274",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4140f568-ca8b-4484-a31c-d41ee5f647ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dc36dc-8562-42a0-a917-8fcf95dd2e95",
        "cursor": {
          "ref": "2f66d60c-eba9-470e-8d15-5c63b9d4c37f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9e7e34c4-a495-488c-a3d9-0a8ab407302c"
        },
        "item": {
          "id": "d3dc36dc-8562-42a0-a917-8fcf95dd2e95",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0a542863-e08e-4cf4-9310-384bedb0b504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c34c653-6322-48d7-89fd-86ec15bc6c5a",
        "cursor": {
          "ref": "9e765733-8da9-488e-8230-f5e46f5313f0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2090a05e-def2-4971-8a09-8d127b33a61e"
        },
        "item": {
          "id": "1c34c653-6322-48d7-89fd-86ec15bc6c5a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "96d3882d-76e5-408c-bf16-e52755846c5a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac89506-f4c9-4eaa-b67b-1050221ff441",
        "cursor": {
          "ref": "a9bd15cd-d522-48f9-9adc-00d966d393d1",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d71454f8-d0af-48ff-89f4-c79f55c32d79"
        },
        "item": {
          "id": "1ac89506-f4c9-4eaa-b67b-1050221ff441",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6803d73f-6c8c-4ad0-bf65-2145bdbe88fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb45a78-b9c7-4fc4-8bb1-14e306af119e",
        "cursor": {
          "ref": "77b973b0-6ade-4cb7-98d1-3391a192f4b6",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "77a38e27-32f7-407a-9ad6-5a27cc2ebfca"
        },
        "item": {
          "id": "9bb45a78-b9c7-4fc4-8bb1-14e306af119e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1dfef526-de5d-48bb-b425-d51987ee4622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ae5d79-332e-4b2c-b9f0-c27e37e606aa",
        "cursor": {
          "ref": "99e1dc51-339f-4035-ab4b-73118f238510",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a3947558-a7fc-4c60-947e-757eab308fb6"
        },
        "item": {
          "id": "78ae5d79-332e-4b2c-b9f0-c27e37e606aa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4f1cda31-772d-4c75-8f86-30d335580ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b00098-4d0b-4376-a2db-12b885a17b40",
        "cursor": {
          "ref": "a2ab561a-52b2-4205-a3fe-c2d95761f1d1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6b52d352-7923-44df-98aa-13ab6c6b234a"
        },
        "item": {
          "id": "a9b00098-4d0b-4376-a2db-12b885a17b40",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "29284051-9b7b-429d-9478-2ead1ddcf163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca212015-5d95-4f78-9c19-b8da7ec8ea37",
        "cursor": {
          "ref": "2b077ca7-077e-44d0-98a9-588bddfd0b41",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f07e2c9-5708-47d5-8ba3-417c1183a6ed"
        },
        "item": {
          "id": "ca212015-5d95-4f78-9c19-b8da7ec8ea37",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b90f0b55-fe1f-4ef4-b8de-4b459cf7a1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a4a75a-d6a6-44f9-a0f4-8bbe32f8ac97",
        "cursor": {
          "ref": "8908fd52-cb51-42b0-8d1b-ac82bf3a0968",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b4c87468-274b-4752-aac3-5df4efc1b4bb"
        },
        "item": {
          "id": "c4a4a75a-d6a6-44f9-a0f4-8bbe32f8ac97",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6f9d8345-1b95-4aa4-bba4-04f2a2376959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18777520-5296-4f04-959b-dee6fa807a1a",
        "cursor": {
          "ref": "63214b05-2262-41c1-9404-bc88a13e8df0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ac91a8c3-edf2-4519-a39c-20b7726d7e75"
        },
        "item": {
          "id": "18777520-5296-4f04-959b-dee6fa807a1a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2836a42a-b88c-4aab-b3d5-0ff2be98d628",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc4cdc4-6d11-4294-b6e1-8da548b1b36d",
        "cursor": {
          "ref": "3e9b2ee8-73be-4ceb-940a-952cbca577df",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0e4277f8-079e-4a17-b697-7f39f96a9cd6"
        },
        "item": {
          "id": "4cc4cdc4-6d11-4294-b6e1-8da548b1b36d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "19b38391-ba22-47d8-a75a-a33eb3779bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8041efb-5b7a-4c2e-aca0-8bb789ccf275",
        "cursor": {
          "ref": "7fe6cbed-29d2-4cf5-b667-7825092d5b61",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f4d64350-232d-4cd0-ba97-d8bbb81940ad"
        },
        "item": {
          "id": "a8041efb-5b7a-4c2e-aca0-8bb789ccf275",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c332ceb3-5c7b-42f2-b597-87d55968f7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ab36d9-1b4d-4252-b811-ddb3f67143f8",
        "cursor": {
          "ref": "6384111c-955b-45c7-bb86-db2438c1d4f9",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f2ac804b-09ad-431d-9d7c-cd071d3a154d"
        },
        "item": {
          "id": "21ab36d9-1b4d-4252-b811-ddb3f67143f8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "382f01a2-2e29-43b9-bac6-198e93c8e50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105d6fa3-0dcb-4cf2-9005-a831250a37a0",
        "cursor": {
          "ref": "57ede568-fbf9-4831-8dd6-1c4cdb4a1baf",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f219c34a-04ea-4428-b96e-18d6ed4ccc4f"
        },
        "item": {
          "id": "105d6fa3-0dcb-4cf2-9005-a831250a37a0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e0ba3ee1-fc7e-4a5a-9f63-a9bfbc92106f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c28cfd2-e10c-4d32-a3e7-dedf74851226",
        "cursor": {
          "ref": "637b4f99-1e01-4c7b-82c1-c04d2f0a94e0",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c85212e3-f887-40ce-8c62-f4d0d700e939"
        },
        "item": {
          "id": "6c28cfd2-e10c-4d32-a3e7-dedf74851226",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6bf0ce3e-1339-456c-8b2c-23450fd3184f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4792ef-8272-4ba6-9e9c-f003dd4cd661",
        "cursor": {
          "ref": "82f91844-9cdf-4bb2-b7ff-e392b3219a1a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c1269674-5400-485a-b522-e53035f7d993"
        },
        "item": {
          "id": "9d4792ef-8272-4ba6-9e9c-f003dd4cd661",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f174f44d-a0e2-4748-b2a1-75b81e2ced7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61464073-257b-4145-9fef-a43c1c9d51a4",
        "cursor": {
          "ref": "563a58e6-a13c-42bc-a33a-c13d32f2afc0",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4e52a2e9-b6c3-45f4-a156-2788198f0ba3"
        },
        "item": {
          "id": "61464073-257b-4145-9fef-a43c1c9d51a4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9518ea04-357d-407b-9ece-6cb58d963ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e52cc62-2a60-42f4-b4ee-8b4514a00940",
        "cursor": {
          "ref": "36f4db7f-8010-4fc4-a1b8-7948207973ac",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "21cb500f-e51a-4f68-bb7f-556a183365ce"
        },
        "item": {
          "id": "0e52cc62-2a60-42f4-b4ee-8b4514a00940",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33f53614-5354-4277-be43-f957a4cbc4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1057ee-546b-4920-957c-aa90ec72b9a2",
        "cursor": {
          "ref": "34fda7a7-0c57-4732-9b01-b91c959d2267",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fde674c6-221c-4821-9e44-970522f37258"
        },
        "item": {
          "id": "9c1057ee-546b-4920-957c-aa90ec72b9a2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "593c3f08-f0a3-4f5f-be72-123ab8615997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab34551-4a7e-4d24-9979-2d85624a759a",
        "cursor": {
          "ref": "2f61e295-bb33-4446-b63a-5490101db424",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "24f53527-ec7e-4592-be92-9b8cb04568fe"
        },
        "item": {
          "id": "cab34551-4a7e-4d24-9979-2d85624a759a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e0304f90-97d6-4a85-8fee-f75d03fa049d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d02504-a98d-4fd5-9100-d06c4c9b6264",
        "cursor": {
          "ref": "d54b39e1-96d5-4d60-abc7-e2b5047ffe6c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "af2f5cdc-2a81-4845-ab4c-cb3444bad699"
        },
        "item": {
          "id": "32d02504-a98d-4fd5-9100-d06c4c9b6264",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "54afc7f1-b3f2-4368-9c5c-194a1e47ab1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9d9513-6cba-4628-8812-347846d2394d",
        "cursor": {
          "ref": "0876c3eb-cb6e-4727-8c1a-1e48ef69429d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "93fa0a1f-4ddc-4001-a12f-602faa0309a9"
        },
        "item": {
          "id": "da9d9513-6cba-4628-8812-347846d2394d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "787b027c-daa0-48db-9fa2-ed6a5cd27a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38c1038-b3a6-4037-b15c-5d5c0ff59371",
        "cursor": {
          "ref": "aa018ebd-3c1a-4a5f-8103-783f34c17e26",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "800cc41a-02e4-4538-9911-80ff48211448"
        },
        "item": {
          "id": "f38c1038-b3a6-4037-b15c-5d5c0ff59371",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6792a6dd-e949-4e2b-bbe2-753018268a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600b1632-9623-415c-ae4b-98c406585003",
        "cursor": {
          "ref": "7b00fdb6-ddc6-489d-a962-901e356fc18f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0d623f43-f54e-4db5-9d69-9b1f4b7f5b17"
        },
        "item": {
          "id": "600b1632-9623-415c-ae4b-98c406585003",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8fdae8d1-397f-47d6-b823-232567e2c054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f965c79-c6de-4d51-abfb-202d837c8adf",
        "cursor": {
          "ref": "5b382165-3da5-4cdc-b162-970994051eae",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "267a92c7-9ed2-4472-b94d-332ec7af17d6"
        },
        "item": {
          "id": "8f965c79-c6de-4d51-abfb-202d837c8adf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3cd671e0-8dd2-4769-b0db-c5c89c1ce20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48504f7-290f-493b-9f7a-7b10c2aced20",
        "cursor": {
          "ref": "600c6d38-93be-4005-bc20-8029dafedd7e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a0271719-ee7e-4a51-bc40-c5cb563ed384"
        },
        "item": {
          "id": "c48504f7-290f-493b-9f7a-7b10c2aced20",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1206fa2e-8b61-4783-9d4b-1eadeda6adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a02d3e-16d2-471a-b0c7-c11711a75d4a",
        "cursor": {
          "ref": "93b14e57-a7b0-4289-8a48-c5bc1de559a7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a734c781-0951-4dfb-bdb2-fe8a56ceefb2"
        },
        "item": {
          "id": "84a02d3e-16d2-471a-b0c7-c11711a75d4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9bffc65f-50be-4c35-9102-48dea37e4c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65fbeae-56e1-43d5-a6e4-d1d451225789",
        "cursor": {
          "ref": "d3fa3686-42bd-4b3b-9cee-9e85996b24f6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "210d081d-d6ce-42eb-a987-d07c693125ed"
        },
        "item": {
          "id": "d65fbeae-56e1-43d5-a6e4-d1d451225789",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "610a31d5-edf7-455f-baf6-65f4332f4890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f0c4d6-c9a8-494c-bc65-957aa88210cd",
        "cursor": {
          "ref": "353aa874-62ec-48be-9090-dcf26864c305",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b1c3252b-7622-44c3-8c6e-5e3a0eb977bb"
        },
        "item": {
          "id": "14f0c4d6-c9a8-494c-bc65-957aa88210cd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4e904fbb-8986-4955-b5f9-a12d5c0a4b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad3d6c5-c8a4-4926-8ed8-7d235d91f120",
        "cursor": {
          "ref": "9c743433-f96f-4e80-abec-693a98f5e831",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "247cd727-25bb-4a9d-bb20-8676bf6aeff9"
        },
        "item": {
          "id": "cad3d6c5-c8a4-4926-8ed8-7d235d91f120",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b8945716-936f-4f04-b4c6-562613554432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0470146d-4cad-44c7-baee-d95e6617ced8",
        "cursor": {
          "ref": "42a91bf6-3f33-44d5-96c4-2f89a7e5de26",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bcb4f315-a62a-4df9-b15b-4f1f4bb774db"
        },
        "item": {
          "id": "0470146d-4cad-44c7-baee-d95e6617ced8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "60133db6-3d08-41ef-a202-b609c44bbbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec817171-d69d-4c54-8cd6-1256f379c80f",
        "cursor": {
          "ref": "af2a9958-7744-4cd8-97a5-fee328b49e29",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bdaf5020-ec0a-4732-93d9-cc5d4c54b7af"
        },
        "item": {
          "id": "ec817171-d69d-4c54-8cd6-1256f379c80f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "84d05630-a650-44bb-9eb5-19a71bb3e362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e41c775-dff9-4feb-9c17-f287f5e1a93e",
        "cursor": {
          "ref": "c1be01a8-58a1-4b5a-99a1-fae468d57845",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "96c5cb39-e099-4a84-9b33-f6b195874e53"
        },
        "item": {
          "id": "7e41c775-dff9-4feb-9c17-f287f5e1a93e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "443fb37f-eba1-4192-885a-a119ef29f995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d420128b-0eb4-4640-a63b-e854b23195ba",
        "cursor": {
          "ref": "962ec94d-e597-405b-b3fe-bbfb07c4a54d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "24a3bd45-11c6-4ee8-aaaa-a4772d32e90e"
        },
        "item": {
          "id": "d420128b-0eb4-4640-a63b-e854b23195ba",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e106bb97-118d-4c04-81e4-e6f8c9555c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a0d32e-6224-44db-b744-3b497f8f0cfc",
        "cursor": {
          "ref": "352e3254-02de-4bde-8c32-5868abb58050",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "44dbf0a0-b505-4161-8675-a00a7ac29661"
        },
        "item": {
          "id": "31a0d32e-6224-44db-b744-3b497f8f0cfc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0e2d7a04-feaf-4a24-8ebd-9a398500b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b57d17-19c5-48c7-a517-fb8d36302950",
        "cursor": {
          "ref": "51b6675a-4f70-4b47-a506-f3d8edc589d2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3239f37e-5446-41d1-b24b-aedd723b5b24"
        },
        "item": {
          "id": "23b57d17-19c5-48c7-a517-fb8d36302950",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "baac9186-52ba-414f-8c1b-579a6e4d0067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810ccf15-b389-42bf-ad7a-a126d7cf7a22",
        "cursor": {
          "ref": "da4ec7b4-1106-4fa3-a0b9-ec568c0f39e3",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ecf09075-03ff-4820-8f73-639ed0797f4f"
        },
        "item": {
          "id": "810ccf15-b389-42bf-ad7a-a126d7cf7a22",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "654092ff-cc77-419e-9501-138055c6bcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37618b26-11e0-484e-a224-fb710b25de19",
        "cursor": {
          "ref": "3408cac1-1f49-4550-bdad-cf992dd406d6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d6c723ba-2080-479b-ac6f-e4ed76252730"
        },
        "item": {
          "id": "37618b26-11e0-484e-a224-fb710b25de19",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e19f6af0-65af-4a67-be21-5dfdfc871a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a44cc0-1e9a-4f5b-be58-fc406a66851a",
        "cursor": {
          "ref": "8bc543d8-7676-498e-9cfc-bd93c9609a4b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b5a1a7ad-4bd4-4e3e-b0d3-fbf452ff1680"
        },
        "item": {
          "id": "17a44cc0-1e9a-4f5b-be58-fc406a66851a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1524f70c-ba5b-47ee-988f-a732110625fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92624014-4018-45f5-b072-6cc962b15b03",
        "cursor": {
          "ref": "032e7baf-b658-434d-9147-a4cc79f68b1e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6325faf6-dc0b-4376-bd4c-8a7d027245f3"
        },
        "item": {
          "id": "92624014-4018-45f5-b072-6cc962b15b03",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fafb934f-7cf1-48fa-b5b7-f09b9db7c129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573514ef-da42-494d-8978-b51a26ce1c3b",
        "cursor": {
          "ref": "8a9c0e25-c6b8-44b9-88ed-3d8c617056c2",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a7a37755-99cf-45a6-bf41-b8427471c729"
        },
        "item": {
          "id": "573514ef-da42-494d-8978-b51a26ce1c3b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "27c5ea86-3c33-4d12-8a3d-4472b37d0f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fd5228-e048-4b0f-97be-cb79d476f728",
        "cursor": {
          "ref": "e95f5112-4e0f-4a22-ba3f-a8979ca74f8b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "70e6f824-19ff-4bf0-a029-87e7263f3c2c"
        },
        "item": {
          "id": "09fd5228-e048-4b0f-97be-cb79d476f728",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b1abf896-e240-4e48-898b-733e96320bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1831f2e-45ed-4eab-80bd-2e6477bcdf8d",
        "cursor": {
          "ref": "4c660e39-0e80-4c5c-b837-5d2ec7639235",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e1df44b1-e22a-4770-a6ec-fd7e458717b0"
        },
        "item": {
          "id": "c1831f2e-45ed-4eab-80bd-2e6477bcdf8d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "09c6cc2e-b4e3-4043-a831-bcc76c3471b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c0e41c-4497-4e2a-8ec6-35f29eed1b36",
        "cursor": {
          "ref": "abeda13b-aeec-4608-b572-135c2aead8a0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0dfba9cb-f2e3-4291-82eb-ad86d23f254a"
        },
        "item": {
          "id": "36c0e41c-4497-4e2a-8ec6-35f29eed1b36",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "301dbc98-2363-4a29-83fd-1ead99e69507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1ba964-cd04-4318-89a3-00b3e040c87b",
        "cursor": {
          "ref": "73455769-6341-4bf0-9d8d-1cc86d68dadd",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b28e6865-b1eb-4f97-b841-12d04c4980c6"
        },
        "item": {
          "id": "dd1ba964-cd04-4318-89a3-00b3e040c87b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c589ee78-98e7-48c1-993a-b6d017b6f019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0f3dab-34e5-4c6f-9e25-b9b2aad1581b",
        "cursor": {
          "ref": "2cf35fdd-a40f-4b34-a3f0-c88e6b0b1fc7",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "170a09d4-7cbb-48d0-9147-00af030791b0"
        },
        "item": {
          "id": "dd0f3dab-34e5-4c6f-9e25-b9b2aad1581b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c8c644a8-877f-49d0-942f-78069d103990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d00c68-91d9-4ed3-b708-76365a453e86",
        "cursor": {
          "ref": "7f78fe59-9d56-4353-bf21-c25d24874cac",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ed0a83ed-e88d-4e39-819f-599825594770"
        },
        "item": {
          "id": "e0d00c68-91d9-4ed3-b708-76365a453e86",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "983c81bb-44db-4dc4-89ef-d1ae3b4f075c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d582649f-abc9-41dc-82d0-c9e00da4e517",
        "cursor": {
          "ref": "1c0549a6-3f1f-4acd-a199-b4775a01c2a4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "538bc19b-005e-4d67-b2fb-edc18379dade"
        },
        "item": {
          "id": "d582649f-abc9-41dc-82d0-c9e00da4e517",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e68f573b-f21e-44e2-b984-4e7e857f430d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926ea6f6-df57-4a3a-827f-0f9335dc94d1",
        "cursor": {
          "ref": "311f9b62-0b0d-4d99-a888-264333666ffc",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b20dd4f0-71ca-4f82-87a4-24e9766b3772"
        },
        "item": {
          "id": "926ea6f6-df57-4a3a-827f-0f9335dc94d1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6834553c-3a02-4219-9108-a55f5c6a69b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e60df90-6af5-4a7a-9c31-d4af4d2273a1",
        "cursor": {
          "ref": "b19846a3-46eb-4644-9db8-ff1381200533",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b0fadfa0-b42f-4512-b850-44e63efb3911"
        },
        "item": {
          "id": "1e60df90-6af5-4a7a-9c31-d4af4d2273a1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "54b9a10d-17df-4709-9043-96d569bb5a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc0be05-2935-4a96-a36f-e1417dcdb51e",
        "cursor": {
          "ref": "f75f7f0c-79b8-4101-888e-d2b4b9515d89",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fb9f2f06-a5b6-48c6-a851-a6d287e045c1"
        },
        "item": {
          "id": "adc0be05-2935-4a96-a36f-e1417dcdb51e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e9d79783-4e7e-4041-bc62-a00d4f816df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36275cb1-1a9b-4a70-9ea2-233b8abcf03e",
        "cursor": {
          "ref": "749dee5a-1eaa-44c9-a39d-568b1eec77f4",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7bf34893-abe0-4dc4-9ba8-748b754cfd20"
        },
        "item": {
          "id": "36275cb1-1a9b-4a70-9ea2-233b8abcf03e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "35d71f8f-f330-4a1a-ac62-5c7c36014bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349b3280-7658-48e0-9377-6497fcebc9fc",
        "cursor": {
          "ref": "0f125001-f97e-4622-b253-7848b703d7c1",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7bf61c6f-d2d5-47e9-b5c4-ba57b60c8366"
        },
        "item": {
          "id": "349b3280-7658-48e0-9377-6497fcebc9fc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "de4c6dbe-945c-433c-a376-ad45a6ec844f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ad9d6f-9a94-41e2-867e-65760f4ea2d1",
        "cursor": {
          "ref": "4acfe384-09da-42c2-bf9b-c3174ad9d0c3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8c8eb02d-9bb8-4bc0-ab3a-cee87fdccb86"
        },
        "item": {
          "id": "d8ad9d6f-9a94-41e2-867e-65760f4ea2d1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0a2ac26d-7c8f-4a9a-b213-c9016c7cb5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de05f9ce-bb5f-4c15-985e-d78840ebd6eb",
        "cursor": {
          "ref": "e0e3469c-f8bd-43ce-8af7-85593af608bd",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "84513a06-f7f5-4856-85f5-4a3d3f8644fe"
        },
        "item": {
          "id": "de05f9ce-bb5f-4c15-985e-d78840ebd6eb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "15f8486b-8ad8-43c7-bca3-0ff407cc14f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c60d408-cc5c-4147-8b05-244ef30f117f",
        "cursor": {
          "ref": "abb4fe6c-3b6c-485a-8f4c-2a7f07653334",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5a95ccb4-7e9c-4270-88e5-247c26f0f575"
        },
        "item": {
          "id": "0c60d408-cc5c-4147-8b05-244ef30f117f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4e06c11d-2fe2-445b-87f5-bbf9038c1646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26af1fb5-5583-4e38-ae85-a2b4366fcc7b",
        "cursor": {
          "ref": "40c56f35-2320-4a8e-892a-cb3f10d040e7",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "440f63c6-d8d7-417c-ab6a-b99fb96ba213"
        },
        "item": {
          "id": "26af1fb5-5583-4e38-ae85-a2b4366fcc7b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "48f515e4-bc2a-45e5-ba57-9ca43700008e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60508680-53b2-429b-a675-9b872484368d",
        "cursor": {
          "ref": "664a4d14-5605-4ba9-a05e-57d51a36ffc4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "65e52e3d-b78c-4f24-9192-6fe4e018d298"
        },
        "item": {
          "id": "60508680-53b2-429b-a675-9b872484368d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "714d7322-2b71-449c-a321-5c640200614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4a22f7-3efa-411e-849a-e1e8f77de373",
        "cursor": {
          "ref": "9650c154-ff10-44b2-9848-287128de690d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "52090802-50dd-418a-8483-677a272c26e9"
        },
        "item": {
          "id": "0a4a22f7-3efa-411e-849a-e1e8f77de373",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8210cdaf-49b0-4530-b630-df7727973728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3468efc-59fa-47fb-aff3-c629078b5fd5",
        "cursor": {
          "ref": "dd4f5a28-e9db-438c-9e90-e3cd5a14122a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a3607d5f-5618-48f4-aa83-e3e879fd430c"
        },
        "item": {
          "id": "d3468efc-59fa-47fb-aff3-c629078b5fd5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "639069f9-bc20-4b7e-9c6a-a67efb074919",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 16,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7eaac0-25fb-4014-b4d6-27f95d7fd250",
        "cursor": {
          "ref": "5fd5767d-c089-4d71-b4ef-19b5546e3b31",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4483b1e8-93d9-43f9-9089-b09717c5cd29"
        },
        "item": {
          "id": "6a7eaac0-25fb-4014-b4d6-27f95d7fd250",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d7d31d10-ce79-49bb-ac07-398b73e4ab6e",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cb5b7a-d6b8-404f-9ac5-463c5404d36b",
        "cursor": {
          "ref": "dd2aca2e-1281-4850-8665-4efa5e72fdbb",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ceba8989-5590-4b84-80ce-2a3b94c86613"
        },
        "item": {
          "id": "69cb5b7a-d6b8-404f-9ac5-463c5404d36b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3ccdcd15-d98c-46c6-b815-2c24df611093",
          "status": "Created",
          "code": 201,
          "responseTime": 232,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "004190b9-2143-4a64-b171-b52df8636edd",
        "cursor": {
          "ref": "12d44728-7e04-45a0-997d-2bb457878ede",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "deb75ff5-3f23-49ac-be05-3ab98a54980f"
        },
        "item": {
          "id": "004190b9-2143-4a64-b171-b52df8636edd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a4fcecc0-359b-491b-bc7e-e1d4d8dafacb",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab8bab0-db27-4e87-ba1d-40199c06d760",
        "cursor": {
          "ref": "fd0c74d6-3cff-4fbf-8e8c-8ffa790a8401",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "845afb28-9e73-47fc-a4a8-6c655c9fa378"
        },
        "item": {
          "id": "bab8bab0-db27-4e87-ba1d-40199c06d760",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "46594ea1-b006-40c8-ab8f-1edf45442c56",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a037c2-7872-4116-be73-7c58bdfc3dbc",
        "cursor": {
          "ref": "270bad10-94e6-405b-b44e-feb5a37839cd",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c95203e3-db34-4479-86a2-bdd5d6afc850"
        },
        "item": {
          "id": "a2a037c2-7872-4116-be73-7c58bdfc3dbc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1466323d-08a9-4bd4-a209-436e44063dba",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfeab7d0-e20d-4b41-bd37-e132dc4389e7",
        "cursor": {
          "ref": "ebdf112f-6fa7-4c0e-bc7e-25fdab996df4",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cc9c781d-cfa4-440c-9973-d4ebe0956d9f"
        },
        "item": {
          "id": "cfeab7d0-e20d-4b41-bd37-e132dc4389e7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a218a375-dbf1-422d-ab50-a54d79fcdb34",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8beff8b-9de2-4f43-95b4-5b479d35b543",
        "cursor": {
          "ref": "044b7f21-5c4f-4222-8b19-a2069f1de1e8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c2830297-407a-4114-927e-71b1357e46d0"
        },
        "item": {
          "id": "f8beff8b-9de2-4f43-95b4-5b479d35b543",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c233097-beb8-43b0-9cd5-98cb1c1c5584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5121c509-0cf5-4df6-a76e-7d239b41ba62",
        "cursor": {
          "ref": "7c7eb42c-b6b6-4368-b884-01316e06b1d6",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ee7b99e2-3277-4f00-a143-e82ce32b8eea"
        },
        "item": {
          "id": "5121c509-0cf5-4df6-a76e-7d239b41ba62",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "00f9532c-d3c7-46a2-8160-ce938bf10eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9e5ac6-a3f3-4c30-9c20-3d2ddf831d38",
        "cursor": {
          "ref": "8cb2b582-ca59-4c58-85a0-17db0eef4074",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "461fe2a0-dce8-4fe9-866a-d47e19142cf1"
        },
        "item": {
          "id": "eb9e5ac6-a3f3-4c30-9c20-3d2ddf831d38",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "caa1875c-1e74-4cae-a7a0-54167770eba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9835280-10f3-4b1a-a2c0-ba7007e792c5",
        "cursor": {
          "ref": "15430a8d-6c2e-4c46-8f43-bd71773d926c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9fe0fed0-f753-4e47-9991-6ddee6990f86"
        },
        "item": {
          "id": "d9835280-10f3-4b1a-a2c0-ba7007e792c5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c9924611-5952-466b-b669-a40dc086e1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be63ce94-e139-4c88-8891-d256e3841e53",
        "cursor": {
          "ref": "acb3af5f-0e2e-4712-9f6b-4724e29b66cc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4eed2569-d3b8-4c98-8787-e731cc60ad91"
        },
        "item": {
          "id": "be63ce94-e139-4c88-8891-d256e3841e53",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e3a1b44a-001d-45af-a239-067ca54136a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88f3b79-8c97-453e-93ce-3766d7b9c60f",
        "cursor": {
          "ref": "106ed9d9-7752-4e60-ad2d-67dfb59d8a4a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "317a8004-41b8-44f8-aae1-f805dd97737d"
        },
        "item": {
          "id": "a88f3b79-8c97-453e-93ce-3766d7b9c60f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d5111012-46fa-4303-94a7-79a358ea7374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8813fe-da1a-44f1-8d70-76387942de29",
        "cursor": {
          "ref": "fc236cff-f4e6-4343-8fc9-d3d766bf526c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "47b06ed9-326b-4dde-9e98-fba5a2075dbd"
        },
        "item": {
          "id": "5e8813fe-da1a-44f1-8d70-76387942de29",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "15b13147-946c-439e-8376-3e3fa7011fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dd9049-fe6a-4579-a317-96f906eb9202",
        "cursor": {
          "ref": "4f50ff09-0fe4-4cf4-be3d-0b5dc3eb8cd8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "50e55ece-832a-456c-ba03-e74d486d89d2"
        },
        "item": {
          "id": "33dd9049-fe6a-4579-a317-96f906eb9202",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4d5ecc6a-0e8a-4ebe-a174-529b064807a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00063cf3-f1be-4d68-8f2e-71fbc241bc40",
        "cursor": {
          "ref": "82e93b4a-6389-47ba-8117-f6432902485d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "46a1264a-049a-4dde-81e2-df3feaf7cedf"
        },
        "item": {
          "id": "00063cf3-f1be-4d68-8f2e-71fbc241bc40",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "55b92cfa-9537-472c-b1d4-dc8790c700b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399e2d9c-2708-4a2f-bf40-1184c58602f4",
        "cursor": {
          "ref": "3fbd4575-87d5-4beb-9bb6-b4b580002114",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b161da5e-b96e-4412-b873-39e8b604dc41"
        },
        "item": {
          "id": "399e2d9c-2708-4a2f-bf40-1184c58602f4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6466be1f-39ff-4138-937c-c4f91d316c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309fa617-10ae-4e83-b836-3b83481a76ee",
        "cursor": {
          "ref": "78f8f244-a072-4f13-9c43-f9e7362660f8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "22adf837-1a1f-431d-8801-58f71f5ce641"
        },
        "item": {
          "id": "309fa617-10ae-4e83-b836-3b83481a76ee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "db4144cf-0c86-4a9c-9add-78301e5a7708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80672897-dffb-4283-84d8-803a5e41856a",
        "cursor": {
          "ref": "f14ce2d9-d499-466e-8d59-2f9600e846ff",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6e012e16-c3dd-4de6-87cb-6f550236b2ca"
        },
        "item": {
          "id": "80672897-dffb-4283-84d8-803a5e41856a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e2295cf3-12b9-4f28-99ba-0dc75c9f1567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd20f7e1-0fbf-4e62-8290-30a8411c33a3",
        "cursor": {
          "ref": "785e4265-27ba-4bcc-a6fb-c6fd8a27e8c9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b6e5e84d-ea76-4e7a-99f1-436cf36e2f95"
        },
        "item": {
          "id": "fd20f7e1-0fbf-4e62-8290-30a8411c33a3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fbc9a2d5-ed99-4e7a-b275-4721eb375524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620e9172-5845-4a03-b920-091f7b9b8053",
        "cursor": {
          "ref": "ab6af8f1-5c52-42c8-b8b5-450b83d29744",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83da0881-e0b0-4192-a15a-6a4deda48352"
        },
        "item": {
          "id": "620e9172-5845-4a03-b920-091f7b9b8053",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4018f3ba-f324-47d5-a478-0a50e96696bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d16a993-51c3-4c50-8a70-c7fafa867ba4",
        "cursor": {
          "ref": "472ed9fa-9180-4572-90c0-7e39647b9965",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "58bbbddc-f4f4-40e5-b8d7-eea3673dd5b4"
        },
        "item": {
          "id": "0d16a993-51c3-4c50-8a70-c7fafa867ba4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4dc1d5b0-6d63-4f46-a141-40317cd47ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff8576a-3cff-4e5e-add2-391743c06d1d",
        "cursor": {
          "ref": "dfc70a30-438e-42c8-8b30-a46dfb4b98c6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3b5996ff-59ac-499b-988d-342d12aacafb"
        },
        "item": {
          "id": "4ff8576a-3cff-4e5e-add2-391743c06d1d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d4989d61-c99b-4f9d-8ca8-6f05f90c609c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce70fc8-e3bc-434a-95f2-e42e5411e1e6",
        "cursor": {
          "ref": "92c7dfb5-ad63-4075-9e00-648d97092f82",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6b70ca70-4055-47bd-9b13-ef013024ddd1"
        },
        "item": {
          "id": "dce70fc8-e3bc-434a-95f2-e42e5411e1e6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1d58e6f1-b4f3-4a5c-b38e-1b44634feb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60492dc-2006-4fc2-8647-ed58b04b23a8",
        "cursor": {
          "ref": "10aead97-a7f1-48c8-9729-ac1f1d43573d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cd9cd749-f28b-4dc6-b074-003621d2fd9b"
        },
        "item": {
          "id": "e60492dc-2006-4fc2-8647-ed58b04b23a8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ffa84c04-06e8-4755-b560-9f5efbb534b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1052dde9-55b9-4332-9377-12bb3d9fc1ea",
        "cursor": {
          "ref": "78fb532a-185f-4e2a-9deb-1168ee3d2007",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b1791093-34da-4058-a3d5-7105f054efa8"
        },
        "item": {
          "id": "1052dde9-55b9-4332-9377-12bb3d9fc1ea",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "84076fd6-2e85-4f1e-9b5e-63e675bfcd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4435ac-e2c9-4f90-a60d-6d864c005dca",
        "cursor": {
          "ref": "18c06a74-51a3-42ad-82cf-8cf1a1659bc3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "69229f09-2484-41d7-8484-19a7341a030f"
        },
        "item": {
          "id": "bd4435ac-e2c9-4f90-a60d-6d864c005dca",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b0962257-5877-4163-9ff1-9ac00789dbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de637bd-9a80-450c-b492-0ad229fef4ec",
        "cursor": {
          "ref": "c1647297-4edc-4bd3-98a8-8f5ee3ed4745",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1db72ca7-51a5-4f24-be07-8bddcf89278f"
        },
        "item": {
          "id": "7de637bd-9a80-450c-b492-0ad229fef4ec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d17c7615-c890-42f8-afec-18a559360fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27522688-39ea-489f-aa66-c9ca13fbb929",
        "cursor": {
          "ref": "ecd59d8d-c6ac-4cc6-b5b6-0f9f00e64ba4",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "104d1257-9c6b-429b-ab49-9f8812021a08"
        },
        "item": {
          "id": "27522688-39ea-489f-aa66-c9ca13fbb929",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "23f8170a-0a45-4083-b30b-20857ac3846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28c135c-afec-4406-9816-9b7816993872",
        "cursor": {
          "ref": "a8e6d75b-558c-46a1-8199-66b3d9839722",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ed361c71-2e85-4a63-9614-03c25f8c8c1a"
        },
        "item": {
          "id": "f28c135c-afec-4406-9816-9b7816993872",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "91c25a8b-ebe4-4e17-bc7c-dafefccff814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340fe91c-ba56-447c-94f5-94d722687006",
        "cursor": {
          "ref": "3b4e4124-003d-45e1-90d3-83d8b0a7aafa",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "90ec77f1-3804-4a29-bbc0-5bc787c5a222"
        },
        "item": {
          "id": "340fe91c-ba56-447c-94f5-94d722687006",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b7740fcb-4de5-47f0-82ca-090fc3548a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbd5618-faec-4169-9a9a-971bc4838e5a",
        "cursor": {
          "ref": "76f06500-cd19-4279-a6ad-9b7887106535",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c383018d-d185-4d77-b235-b901f21a3b33"
        },
        "item": {
          "id": "0dbd5618-faec-4169-9a9a-971bc4838e5a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "37e0e37e-ab19-4ca7-9f68-ee48192252fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d5ad12-3a75-4a4c-ad87-7dd947ae1b42",
        "cursor": {
          "ref": "492ac9a3-7a70-4eef-88f0-f6c232cc8bdd",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "424a5983-1b4a-4f0d-9ed7-11938e85a5d8"
        },
        "item": {
          "id": "f0d5ad12-3a75-4a4c-ad87-7dd947ae1b42",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dd7647fb-8db0-4baf-8b3b-ed7ef0d57270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa632efd-aa3e-4880-a2e7-5e2850fe25d7",
        "cursor": {
          "ref": "24fd5e30-3146-491a-a02e-27d0d95faade",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "197b3e1f-d377-4618-9886-1431da1c2dd3"
        },
        "item": {
          "id": "fa632efd-aa3e-4880-a2e7-5e2850fe25d7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f9522e81-1c2e-449a-8e95-255dc616c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c958352-4fdc-43fe-8f32-3c6a575d10ef",
        "cursor": {
          "ref": "b713bae5-7eb4-4db8-a1c1-e91ddf10295c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "057a2de2-9af5-4ede-b691-2425643b76cf"
        },
        "item": {
          "id": "6c958352-4fdc-43fe-8f32-3c6a575d10ef",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ee8a1f69-b61b-45e9-bb02-df6ed36e8f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b499ead0-76c0-498d-a259-2cc5a59e9b77",
        "cursor": {
          "ref": "334b1cf6-46d8-4c72-baf9-031e91a9fed5",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8e074c18-f24b-4014-9b01-9a88bd5ccfd1"
        },
        "item": {
          "id": "b499ead0-76c0-498d-a259-2cc5a59e9b77",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "84d7f0d8-31ea-4893-b8ac-02a456e85877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b63e81-9c3f-42d4-9eef-87b77e38c4eb",
        "cursor": {
          "ref": "9d70629a-07a3-4ea5-841b-c20e2a37c513",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4a87c08e-20e6-4e66-8400-f48beae4ce81"
        },
        "item": {
          "id": "08b63e81-9c3f-42d4-9eef-87b77e38c4eb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b54a9580-b224-449b-9258-8b74e0a97a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0a5d2d-3d5e-4753-8ea5-333862bb67da",
        "cursor": {
          "ref": "e689d9bf-3c27-4636-9ac3-4f95487d5f17",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5998ba24-3a4b-4baf-a534-260379bbdfca"
        },
        "item": {
          "id": "4f0a5d2d-3d5e-4753-8ea5-333862bb67da",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6e9acfaa-9aa4-4090-8abc-c5ce2864e6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c250d18a-e177-45af-af1c-b1ddf2e60734",
        "cursor": {
          "ref": "16e42257-7b92-43f7-b167-bb6f3f8ef182",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "276d00a8-6fb9-4706-a69e-4b28c05c081d"
        },
        "item": {
          "id": "c250d18a-e177-45af-af1c-b1ddf2e60734",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8e60d60a-17b9-4d36-b58f-697b3ab794d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0598c3-9c69-41a2-a82a-122112b5a1e5",
        "cursor": {
          "ref": "bc5d954b-9b26-4beb-b67f-e74b1129daac",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fdf2a267-b9c4-47c0-ae35-684831f6b60c"
        },
        "item": {
          "id": "dc0598c3-9c69-41a2-a82a-122112b5a1e5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bbc54786-f3ff-4dd8-95f4-62e71d0ff2f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1444f9-a62f-41cd-b3eb-cffdefe2546b",
        "cursor": {
          "ref": "24c1827d-fecb-4cc7-8696-e7dfb4c2edfc",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aa784bcf-1d9f-4d96-88e2-993f8ec6f063"
        },
        "item": {
          "id": "8f1444f9-a62f-41cd-b3eb-cffdefe2546b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3744fa81-c294-4823-b062-9250e8a8316a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0451ae0e-ebe0-4b9a-9e24-17371a2f5fc9",
        "cursor": {
          "ref": "b4d800c5-9524-4022-a2ae-26479e9ecafb",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b614cf16-7c3b-4acc-b7ef-0cf0c02efd1f"
        },
        "item": {
          "id": "0451ae0e-ebe0-4b9a-9e24-17371a2f5fc9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "765648c4-2b8b-4c32-8686-cb1b084f4a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8314cd7c-6bd0-4f95-a577-3e225d1cb68d",
        "cursor": {
          "ref": "68dfad98-0a3b-4c28-bdb4-2d5e4e0f6430",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9b4d5483-0020-41ed-ac24-85e947c30761"
        },
        "item": {
          "id": "8314cd7c-6bd0-4f95-a577-3e225d1cb68d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9fa0adeb-27c6-408c-9872-ee4e85e2f5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4885a0-f028-4691-a372-6ee0ede47704",
        "cursor": {
          "ref": "f99d386a-23b2-4f6b-a806-e416daf22ef8",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a432166e-bd85-4c70-8d25-3b9d22d793b6"
        },
        "item": {
          "id": "0d4885a0-f028-4691-a372-6ee0ede47704",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4c666d67-ae37-4b74-ac2b-59923b8ced15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fed5fc-513a-46e2-abce-8f68e35e1cf6",
        "cursor": {
          "ref": "d69d7eb7-3e2b-4786-aac6-081638d9f32c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "185b7628-9cac-4aa3-b9f2-538a4964527b"
        },
        "item": {
          "id": "b1fed5fc-513a-46e2-abce-8f68e35e1cf6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "616f90d2-0eda-44f0-b575-d3671f1222ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9ec482-062e-4bf8-8c70-2480b92c8fe6",
        "cursor": {
          "ref": "906ce28d-2c52-473b-9ec2-3bb0274f20e9",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2d53c3ed-7332-4612-84e7-26ce786e89c8"
        },
        "item": {
          "id": "ac9ec482-062e-4bf8-8c70-2480b92c8fe6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "69d4f9e8-8265-4209-ab8a-98f276e78acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d78b988-4d7e-4d20-b0fd-4314de7d7082",
        "cursor": {
          "ref": "dde03e97-f1e0-4ecb-b95d-906350a63689",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "571e9caf-3d02-43a6-816c-630a589ee758"
        },
        "item": {
          "id": "6d78b988-4d7e-4d20-b0fd-4314de7d7082",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7d2e039e-1d17-46b0-bf1c-3fe66a9afdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cc28b5-0320-4794-bd75-7d2831f1766c",
        "cursor": {
          "ref": "64f66072-e099-43b1-ad4b-9a801e757f66",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f200a5cd-8940-488c-8a1f-310bec29ff34"
        },
        "item": {
          "id": "e1cc28b5-0320-4794-bd75-7d2831f1766c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4b3af61a-b12b-4917-8142-13af5bc899a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b367ed0-1e44-4ff2-adff-ef36cebe5bf8",
        "cursor": {
          "ref": "fd64b812-8043-45b0-b335-37a96f7c7f90",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2739afc3-e7f8-4ad9-ae83-3d95ba2be2d5"
        },
        "item": {
          "id": "2b367ed0-1e44-4ff2-adff-ef36cebe5bf8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fb93987d-aabe-4742-9427-6c34ebe1913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5de2f03-5ca8-488e-be2f-00a19f61a9fe",
        "cursor": {
          "ref": "d1df4b72-cf4c-4ed3-a515-f6cc35c1ed29",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6feae575-d8d2-49ad-accf-895000a3b9d2"
        },
        "item": {
          "id": "b5de2f03-5ca8-488e-be2f-00a19f61a9fe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a68449a2-9ef1-4007-95e2-47a70f4e391c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d45490-2f0a-4970-971c-552c3e4a1fa3",
        "cursor": {
          "ref": "75689a6d-7b52-4776-91dd-0495c1585bca",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0b1e22e2-142e-47c6-8377-47eaa2376f61"
        },
        "item": {
          "id": "b6d45490-2f0a-4970-971c-552c3e4a1fa3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2389f587-45dd-4491-9023-2adb4c8873e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c4babf-126d-4d40-a28a-96dcb936d3df",
        "cursor": {
          "ref": "abc63036-fc6b-4e4a-a6f9-833572e8e2fd",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "de72bba6-8da7-4f65-8f37-03b5e9f61336"
        },
        "item": {
          "id": "16c4babf-126d-4d40-a28a-96dcb936d3df",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "800f0bb3-ef79-40b3-84c8-8abd9399aab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8728ad5-cc6c-4564-8bee-78885b94ff8c",
        "cursor": {
          "ref": "cb1d79b6-2070-44be-be07-badabe4ed3c8",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0673df3d-0087-478b-bd76-7b78a2ec785c"
        },
        "item": {
          "id": "b8728ad5-cc6c-4564-8bee-78885b94ff8c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d455ea68-8f1e-4c31-a780-ec454281ac43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ea9c93-77dc-49b4-9942-5f5009a20ec4",
        "cursor": {
          "ref": "8a38908b-57b5-49fc-a21e-04c61b65f8f6",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ccbd519a-b903-4338-ba2d-9014ceb7326b"
        },
        "item": {
          "id": "c6ea9c93-77dc-49b4-9942-5f5009a20ec4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b49c7851-0c8f-4fb7-8c94-98debd19e72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620e733d-39ca-4c80-8334-c8fa7bf1cd0f",
        "cursor": {
          "ref": "bace15ab-4785-4771-9a0b-ec10ac104541",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7d1ff487-c971-4ae6-a349-7c28fa9927c1"
        },
        "item": {
          "id": "620e733d-39ca-4c80-8334-c8fa7bf1cd0f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "093afd15-d217-4813-8312-97cac466092a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8459b679-604e-42fb-8aea-5bbfe47564e9",
        "cursor": {
          "ref": "a50a57c1-cd04-4f86-9cad-6385442f039d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "59bc19cc-9aca-49e9-a2b5-0dd6d75089e7"
        },
        "item": {
          "id": "8459b679-604e-42fb-8aea-5bbfe47564e9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a450f6ec-5eb0-4eba-8df7-4d14088a1500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62760c91-e1ec-4840-b7ee-dcc7e062bb11",
        "cursor": {
          "ref": "eaca5dc4-45c5-420e-826e-45f3edfb0a54",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "49afb6f0-3e33-4357-bc6c-b709b78b9d23"
        },
        "item": {
          "id": "62760c91-e1ec-4840-b7ee-dcc7e062bb11",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0a015fea-9744-4d98-abf1-5677c770565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caef8110-d479-4e74-befd-091e1c14e1dd",
        "cursor": {
          "ref": "e0b83e52-f30e-4152-a896-780ff4bca29e",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d01547d9-1f91-42f1-8acc-3e73b06e1c18"
        },
        "item": {
          "id": "caef8110-d479-4e74-befd-091e1c14e1dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2523f8d9-9cf8-4e5f-b11c-8a9a3e34213b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397a7e19-e9e6-4f7b-a193-b0b88c86fcc6",
        "cursor": {
          "ref": "25dbdf8b-49d0-4966-9e10-d4f79642cd49",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "108b9f78-c14f-4da7-a74e-7042530f6496"
        },
        "item": {
          "id": "397a7e19-e9e6-4f7b-a193-b0b88c86fcc6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a702ce03-10e9-4a11-b3e0-7bc35b03c0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f34206-d3c6-4dfa-8a48-63463b815140",
        "cursor": {
          "ref": "be264693-9da2-4b3a-8a39-ab82cc9fa905",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c91f519a-fdef-4d87-8e63-473b0f973853"
        },
        "item": {
          "id": "c8f34206-d3c6-4dfa-8a48-63463b815140",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "98313d02-8c75-4e5d-b279-32f57e481ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f01bd9c-2b7a-4da9-aa15-0077fd243ca7",
        "cursor": {
          "ref": "7a0078e5-4a5f-4fed-9ac6-e4e4731cc589",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c7d61666-242d-40c7-bd9e-9fa91b1f0ee8"
        },
        "item": {
          "id": "8f01bd9c-2b7a-4da9-aa15-0077fd243ca7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7f96abbe-bf87-4889-b5c3-c4d73686ca3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466c97cb-e6ef-4317-b8a2-0f739c9cc2f6",
        "cursor": {
          "ref": "9fd6b864-1d54-4a30-ac9c-6d976031c35c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "634381ee-2ea4-4fa3-8ded-89f532d3479e"
        },
        "item": {
          "id": "466c97cb-e6ef-4317-b8a2-0f739c9cc2f6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7691c5e0-9327-4253-b63a-ab639b37d272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87abefd4-0c2b-459e-8cc9-73dbeaab3de0",
        "cursor": {
          "ref": "ccbea273-07c0-4b66-be5f-d0fe290a812a",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8877f8b3-e5d5-40da-b3b4-baf1370d6afa"
        },
        "item": {
          "id": "87abefd4-0c2b-459e-8cc9-73dbeaab3de0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f5a42793-117d-4f42-86db-a29c6001bb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f84507-51df-413c-b83c-86df32cca1bc",
        "cursor": {
          "ref": "297d01b7-3fb3-4717-b62c-dd55cce7d2f8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa5649a4-dd4f-454d-8f0f-b37a65594455"
        },
        "item": {
          "id": "87f84507-51df-413c-b83c-86df32cca1bc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ed0b812c-3c24-4d5d-997a-d1d7314f4b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f618b2aa-4212-4205-a3a0-777156ec608a",
        "cursor": {
          "ref": "c372444b-6c50-4171-8554-4d75a21cf995",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7490942f-e147-434b-b0e7-3cdaa2812980"
        },
        "item": {
          "id": "f618b2aa-4212-4205-a3a0-777156ec608a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "af085509-1106-4e59-9ff3-61f794ffb337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f922e0c6-58ff-4421-adbc-ffbd4ad68ea6",
        "cursor": {
          "ref": "293e0c5d-2d23-44b8-ad2b-e2f2c82f652b",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d8bc906f-0783-448d-917f-3c91924afd01"
        },
        "item": {
          "id": "f922e0c6-58ff-4421-adbc-ffbd4ad68ea6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2da648c7-4eb0-475c-9dd0-c26eeb500d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9023c0ac-0f57-40c0-a3af-703476088354",
        "cursor": {
          "ref": "567d6886-d52d-47c7-87b4-5bcc80a22ffe",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e4530a71-b3f8-4076-bcb9-a8b1e8ebac36"
        },
        "item": {
          "id": "9023c0ac-0f57-40c0-a3af-703476088354",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "104c78ee-8ffe-4db4-a217-00f04787b3a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98ca9e9-85b0-44e1-8363-1e5c8ad360a4",
        "cursor": {
          "ref": "64ef423d-87f4-4c81-b2c6-f7128617f610",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "18a4b889-2276-449e-bb16-3760af688c62"
        },
        "item": {
          "id": "b98ca9e9-85b0-44e1-8363-1e5c8ad360a4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3e91fb06-34c7-47f6-8c1e-c276fb0e12cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8275f9d-6c7d-4213-8548-478b67e7c1f2",
        "cursor": {
          "ref": "3c92ecbb-d030-497e-9d89-c687796f0305",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b00d4133-33da-4c33-b4c4-a284850c49e0"
        },
        "item": {
          "id": "f8275f9d-6c7d-4213-8548-478b67e7c1f2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f572a01-ac87-4ef1-b1aa-678316fff790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31ed771-045c-4280-b59d-08726fb477fa",
        "cursor": {
          "ref": "9e95a7c1-3de0-4cd9-8487-2efd08a63fdf",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "03d10eea-ec18-43ae-8b2e-fa85275b6be7"
        },
        "item": {
          "id": "e31ed771-045c-4280-b59d-08726fb477fa",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d25d0e6c-cc69-42bc-b4d4-c73e637dc0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fd7c8a-1eb4-4cbb-b403-3bbb3c4a85fa",
        "cursor": {
          "ref": "e165ee3a-0df6-447d-8908-2a5c26157daf",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "218c6f97-55d3-4586-91d7-877c602f7748"
        },
        "item": {
          "id": "96fd7c8a-1eb4-4cbb-b403-3bbb3c4a85fa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1119f1c3-149b-45cf-ad24-1dffba612415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021cd04c-8c4c-4dc9-9c0d-5292c5e53606",
        "cursor": {
          "ref": "070096af-8828-49d3-9b46-3844b2014d7d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe83df78-29c9-4bce-82be-4106e6b1f60b"
        },
        "item": {
          "id": "021cd04c-8c4c-4dc9-9c0d-5292c5e53606",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8e9ce36e-799b-4b14-8f3b-0c8a8f43acdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb7c458-4334-4195-b982-586832b1c196",
        "cursor": {
          "ref": "74f32b98-9c5c-4a15-b82a-213bddeff95e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "522b1d01-a76f-4ecd-9dfa-e09d2a8247b1"
        },
        "item": {
          "id": "9cb7c458-4334-4195-b982-586832b1c196",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "223a40e4-e9ef-40ec-84d9-834450921b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c627ec8-277a-43fb-ad18-7f15e649d675",
        "cursor": {
          "ref": "3157f1f4-ffbc-4ce8-9559-52447cde5864",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "40a0474a-aaac-4ba7-801f-dca3524db845"
        },
        "item": {
          "id": "6c627ec8-277a-43fb-ad18-7f15e649d675",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ca90891c-11ca-48ab-8231-a31a28328672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdd7ac3-2e84-4fd4-b81f-0a6210eaad48",
        "cursor": {
          "ref": "9e42f396-8980-43d5-9849-657f39c04747",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "70a59d00-ba50-4099-8f83-c15ceecb02ef"
        },
        "item": {
          "id": "dfdd7ac3-2e84-4fd4-b81f-0a6210eaad48",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bb7e78df-78a3-414b-8940-a99ae6bc710a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1045c8b4-da28-4ee3-9fad-0d92ef9db7f8",
        "cursor": {
          "ref": "1d25a1fb-25da-446e-9ca5-6d5fb2842717",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "482805a8-0a95-483f-908b-4e9ad2662731"
        },
        "item": {
          "id": "1045c8b4-da28-4ee3-9fad-0d92ef9db7f8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e2f87e58-363f-4c45-807d-bbddc3eb861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88d7831-9426-4fe9-904a-cdc88f9a3ce2",
        "cursor": {
          "ref": "80b02577-7299-47e2-9061-1d2d0258f58e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "80790f17-32bc-43b4-8ded-602d44fb69ca"
        },
        "item": {
          "id": "e88d7831-9426-4fe9-904a-cdc88f9a3ce2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db5e0fd0-bc71-47e0-9edd-1f1866780638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a38e1a-0cb2-4d62-913a-a1e146bbc8e3",
        "cursor": {
          "ref": "779de73d-21b2-4b57-9def-7db8ce4f5307",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e01af0eb-c2ad-48c7-9e47-11e8362f6a74"
        },
        "item": {
          "id": "60a38e1a-0cb2-4d62-913a-a1e146bbc8e3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0c465447-4b61-4d1f-a868-2148ed99ae36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59e2ed2-e5e9-449c-af65-6ae72dce4a24",
        "cursor": {
          "ref": "d340911a-51a1-4c1b-ab2a-240a28260d35",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d3b704b5-117d-415f-9f25-4f36ae774236"
        },
        "item": {
          "id": "d59e2ed2-e5e9-449c-af65-6ae72dce4a24",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c2975e82-bb36-4a5f-9760-1486c7cce7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3974b661-8ea3-4e3c-bdf9-6c10ba554af5",
        "cursor": {
          "ref": "7b56d7b4-9dd1-4457-8ae3-58c5d84e270f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1f33ebad-0c28-49f8-939f-1ada1faf27fc"
        },
        "item": {
          "id": "3974b661-8ea3-4e3c-bdf9-6c10ba554af5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d5852e92-e0d4-455a-9570-1160b4c76692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b37576-dac1-4510-a6c2-b70967f70f59",
        "cursor": {
          "ref": "5230a196-0110-4059-991b-065f425abf64",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1a2bc60e-a8c4-4d5d-be9d-8cf767ff6433"
        },
        "item": {
          "id": "14b37576-dac1-4510-a6c2-b70967f70f59",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a6eee85f-4ab4-4bd3-9982-e8f6088e8c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c818d8be-f9d2-44b7-aa73-3a513e9d02c7",
        "cursor": {
          "ref": "58a39ae1-9453-421a-b8ba-888b3ea2126f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b437d906-f4ab-49e4-9262-e1f1097006e9"
        },
        "item": {
          "id": "c818d8be-f9d2-44b7-aa73-3a513e9d02c7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e2b6acae-3f0a-4429-9105-aa5c6b1b2d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421e38cc-6c61-48e2-be72-15972dac4cfa",
        "cursor": {
          "ref": "b74d52d1-2ac1-4a41-b4fd-3eafb9496048",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "35e5d711-4b26-4921-8435-7456db046753"
        },
        "item": {
          "id": "421e38cc-6c61-48e2-be72-15972dac4cfa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "41607d6c-d55e-47bc-bf85-0e03d344349f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad135dd2-5aa6-40aa-b47c-72f0617ece87",
        "cursor": {
          "ref": "cd8541ff-b57c-457a-8b58-e063a721ddb8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a1c1745f-9ebf-4ee8-bdc5-6e9acfd21a36"
        },
        "item": {
          "id": "ad135dd2-5aa6-40aa-b47c-72f0617ece87",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0963e718-9629-493b-b671-67b64ecf51c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17715c8f-917d-4cae-aecc-aa61657a420c",
        "cursor": {
          "ref": "733646a3-e1f4-43fd-b1ba-d80f08e64a0d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f54d1763-4e45-4e4a-b0e7-5485043ff241"
        },
        "item": {
          "id": "17715c8f-917d-4cae-aecc-aa61657a420c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0a54e97c-8d10-4c7e-b818-40a81d684bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae42b261-bdff-415b-a479-74dde7a15bbb",
        "cursor": {
          "ref": "db3ad16c-11fb-47bf-a942-68890df9521e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6d4b414a-69b9-47fc-ba12-f43b9ec21fe2"
        },
        "item": {
          "id": "ae42b261-bdff-415b-a479-74dde7a15bbb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2e7f1a4b-1fca-4592-8402-2b00d5d8ea73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf1159d-e244-4a8a-b250-e3bd43a54297",
        "cursor": {
          "ref": "cff03e61-2c2f-47ee-9310-6aca6197a146",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4f9e2b52-9a14-4d95-848b-2a57cf4a0702"
        },
        "item": {
          "id": "6cf1159d-e244-4a8a-b250-e3bd43a54297",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "72f67677-142e-4048-918f-d0215ae0233c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02e1da2-0050-4c3f-b18c-2d60fb94a2cd",
        "cursor": {
          "ref": "80be7288-bd3e-48c2-b1e0-5459d86bf081",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bca66de2-54b5-48ad-bbcd-8f642bb5c07f"
        },
        "item": {
          "id": "d02e1da2-0050-4c3f-b18c-2d60fb94a2cd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d56eeff9-e700-4a28-a702-09cac83a03d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4bd459-8e4a-421f-a78e-109cb8f7c285",
        "cursor": {
          "ref": "b6ccda8a-e77b-483e-91d7-a3acfc13057b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3fd1831e-7a2d-4ab4-9c32-c7eb721ff8e9"
        },
        "item": {
          "id": "1b4bd459-8e4a-421f-a78e-109cb8f7c285",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "14648215-06d3-4f85-8ee9-9356a644f4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41320136-e1a7-4a5d-8aa3-05ade91ec32a",
        "cursor": {
          "ref": "f2549b95-aa64-4478-9819-565d67ee70e7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e4ef2288-1935-40be-a8ca-ee1cb552482e"
        },
        "item": {
          "id": "41320136-e1a7-4a5d-8aa3-05ade91ec32a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6c93f2cc-af70-420c-9272-1aaecfc5af44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a779c5b-8250-40e5-972c-158946d70820",
        "cursor": {
          "ref": "5e2f0aaa-eb0f-4d47-9086-b223c111d863",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ae1d2551-aa88-4168-b582-07eafd9a5b9e"
        },
        "item": {
          "id": "0a779c5b-8250-40e5-972c-158946d70820",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "400590b0-7730-4f51-a814-b89058805113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bce456-6f0d-4a37-83e5-2f30451974a3",
        "cursor": {
          "ref": "2059ed46-1ada-46fd-82c8-765a80214c9f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "92c88e27-65aa-4662-a2d6-ccda314c3fd2"
        },
        "item": {
          "id": "98bce456-6f0d-4a37-83e5-2f30451974a3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6cff5ffb-f0d9-45b0-a7e8-4e2be05e176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8924974-944a-4866-bd62-dfbba9e3312d",
        "cursor": {
          "ref": "c8052d5b-3efe-4343-9bf2-43689aa53f43",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1b336e33-3b85-4054-a5e6-d32ab6dc6b31"
        },
        "item": {
          "id": "d8924974-944a-4866-bd62-dfbba9e3312d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bc87b1ed-d3cf-4cdb-8080-dae06be72af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0baf95-dea2-48d5-a7b4-90251b6f919c",
        "cursor": {
          "ref": "a03054db-fd68-47e1-a7be-5b8c0cc2478d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ac1e51b0-bc13-42d1-a242-1baf5629e7cd"
        },
        "item": {
          "id": "dd0baf95-dea2-48d5-a7b4-90251b6f919c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a65815f2-7783-49c4-ae76-b082b80a5715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7440f185-2262-456b-a407-9f858d48d7b1",
        "cursor": {
          "ref": "6d3a80ae-a45c-46f6-ba05-ddf089778050",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "97a1b4f7-142c-4fa4-b0d5-f99edf3cf36f"
        },
        "item": {
          "id": "7440f185-2262-456b-a407-9f858d48d7b1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7bf70ca7-7599-40bf-baf1-13b99ccda072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc829fe-2a16-4db5-82cb-9d75b0f5f786",
        "cursor": {
          "ref": "9ed0d561-fc97-40a1-871f-a737f0f4c028",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e12d1aa3-6106-474b-bee9-701f4390d442"
        },
        "item": {
          "id": "acc829fe-2a16-4db5-82cb-9d75b0f5f786",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f409e98d-73db-4a68-ad6b-53d869b3818e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ee2cf3-5eb1-4678-ac18-a998ae5fdd9e",
        "cursor": {
          "ref": "669f470f-518e-4405-8161-0932c00244c9",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f21e817a-de72-4965-bd3f-1dd9d854b8ae"
        },
        "item": {
          "id": "30ee2cf3-5eb1-4678-ac18-a998ae5fdd9e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "864d5b14-8fc8-4745-ba32-d6ab101448d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c01d724-165a-4809-8cc6-b9a5eff6c8fe",
        "cursor": {
          "ref": "f79a252a-1f45-438b-a9a3-b1a3a28f3fee",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "378ec0f2-b553-473d-a97e-80c19beeb5d3"
        },
        "item": {
          "id": "3c01d724-165a-4809-8cc6-b9a5eff6c8fe",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "38959d09-0ed4-46e1-b292-9f71a896e0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96a5f58-4bcf-428f-9e38-1d7a0633691f",
        "cursor": {
          "ref": "2a813db9-91c1-4c97-9f7d-468472e744b5",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1f23a454-a71e-435e-9b12-35a05de2c8eb"
        },
        "item": {
          "id": "a96a5f58-4bcf-428f-9e38-1d7a0633691f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c9400a8b-1977-44db-a553-d4c0850cbf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8510e5b9-8962-4466-8d79-dfd078300bff",
        "cursor": {
          "ref": "6385ec70-5850-49ab-a2b9-12f91aae533a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9933d5de-2ae7-437f-b5f5-684e79fa6219"
        },
        "item": {
          "id": "8510e5b9-8962-4466-8d79-dfd078300bff",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fad860b0-533c-4a2b-8561-c70aec727d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f660d2eb-1d7d-402a-b5b1-10a096c9302e",
        "cursor": {
          "ref": "14ff146a-6d7c-45ca-8c1d-7baf74ff0284",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fe93ba5f-45ab-466f-8c75-106209589855"
        },
        "item": {
          "id": "f660d2eb-1d7d-402a-b5b1-10a096c9302e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ee4493bc-ab03-4920-bb84-e1fda65518a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6804c11-464f-463c-81da-ee8e2b9cc15b",
        "cursor": {
          "ref": "0e5f1eab-c580-4516-9022-3b2ba0717e2b",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1e575c50-fc9a-427e-97db-a9256ebd05cc"
        },
        "item": {
          "id": "b6804c11-464f-463c-81da-ee8e2b9cc15b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "539f936b-108e-47a3-8b0b-71aa579cca3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d01e91d-e1ed-4789-9289-e9e3a7f9705b",
        "cursor": {
          "ref": "6cd1fa3c-f15e-4a05-b7a2-1028b2a061fd",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8edad2dd-6761-42fe-80a3-21edc4c3090f"
        },
        "item": {
          "id": "2d01e91d-e1ed-4789-9289-e9e3a7f9705b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "11fbef8c-8159-400e-a651-3454aaf1e75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794075d2-03a2-40db-a70c-e4e332226aa7",
        "cursor": {
          "ref": "1d2237be-cada-4d4e-90f7-8171d414150b",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "501892b3-a0eb-42b1-ac7a-5d3050214bc7"
        },
        "item": {
          "id": "794075d2-03a2-40db-a70c-e4e332226aa7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "00241c91-6f14-49f7-ba01-d1e92d500598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab172df-74da-444c-813d-5b5c108bf44d",
        "cursor": {
          "ref": "3cdef1d5-6c17-403b-9c9c-b637a9bc01fc",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0e5902bb-3c6d-4b74-873e-5ebb8e8bf6da"
        },
        "item": {
          "id": "5ab172df-74da-444c-813d-5b5c108bf44d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1e10547c-731e-4d2b-b51e-cae8386f0943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369332bd-a937-4ce8-a009-6b1190d33774",
        "cursor": {
          "ref": "aab076df-7849-4ab6-a249-e8afb6cb9e4b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ae06ef4c-b372-44ad-919b-fe293ebcb9a0"
        },
        "item": {
          "id": "369332bd-a937-4ce8-a009-6b1190d33774",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "05d99160-1c3c-4b56-9598-c55607a71d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5441fa-653e-4599-812c-093a70d1963f",
        "cursor": {
          "ref": "c1b64be5-5ef6-440f-a788-625ada1f86bb",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "25c6ce76-4186-45bd-84bf-47a4e8d5e1bc"
        },
        "item": {
          "id": "3a5441fa-653e-4599-812c-093a70d1963f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f7f8d8e5-becc-47ea-9cda-23a852f176b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa0dedc-9260-4ce9-9dce-4800f80486c8",
        "cursor": {
          "ref": "1f64d60d-a6e3-4d3c-b2a2-4310ed7f50cc",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "89f1c566-8bcf-4962-974e-903bb7bff3d3"
        },
        "item": {
          "id": "1aa0dedc-9260-4ce9-9dce-4800f80486c8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9046db37-b6dd-4252-87c7-68f087d75b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2015752-a071-4f84-888d-d00374c944fa",
        "cursor": {
          "ref": "81759741-0118-469c-acbd-3aa09aa2858a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "375b930a-729b-4d90-a82d-3ebd3aa4d708"
        },
        "item": {
          "id": "a2015752-a071-4f84-888d-d00374c944fa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "11e2d25b-f97f-47ef-9b72-cc0784bd0a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082bca2e-65a9-4a8e-81e0-680cf3c5a912",
        "cursor": {
          "ref": "492fed1c-e24c-4d8c-bb24-607e2d7305ad",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "47a5933e-b2a4-4f1f-88a6-6889598d011b"
        },
        "item": {
          "id": "082bca2e-65a9-4a8e-81e0-680cf3c5a912",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7cb0aa1f-99c4-4865-9a56-74bacf6225a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b265da-ef46-4b84-8898-7d540ba7dbd6",
        "cursor": {
          "ref": "d225213d-d2df-4cea-ac5d-0d7cfe285b8b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "239b63a9-9e90-4e8d-8826-3a252e901a25"
        },
        "item": {
          "id": "21b265da-ef46-4b84-8898-7d540ba7dbd6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "27992011-8bec-4d2d-b972-78462aed6c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43209f8-2a4c-4e85-afd5-4acea210b79a",
        "cursor": {
          "ref": "65f85fc0-d435-4fff-9bf9-e84604f810f0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3537f528-176d-4268-9acc-56c2fdcbebad"
        },
        "item": {
          "id": "a43209f8-2a4c-4e85-afd5-4acea210b79a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c6ad7813-c914-419f-aa8f-702fce9a0b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11dc0d1d-5542-408c-8584-bbcc7e54a01f",
        "cursor": {
          "ref": "400cbd05-1171-4598-aeb5-38f22960f373",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f94fd28c-9a97-46e3-b943-68d70cd2e2fc"
        },
        "item": {
          "id": "11dc0d1d-5542-408c-8584-bbcc7e54a01f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dcb8eb73-2290-4334-ba7c-0eb2386db511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0376f798-9be1-49ec-9400-2b953b2585d1",
        "cursor": {
          "ref": "0353c26c-6a6d-4847-83e0-27962d3cc723",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "771334b8-be8a-4cac-9684-5d4e10486fad"
        },
        "item": {
          "id": "0376f798-9be1-49ec-9400-2b953b2585d1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "23930ee7-13cb-4b49-8bf0-1a420689fc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d625cadb-8e79-41d8-92c4-d37e35639a8a",
        "cursor": {
          "ref": "f2058c68-343f-4e11-81ae-139da96d67f2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e82f6468-0e3e-48e6-a8e8-b61b238cebf1"
        },
        "item": {
          "id": "d625cadb-8e79-41d8-92c4-d37e35639a8a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9d49083b-552c-4765-bcbf-5874e22c118d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38058043-6d73-45df-8f12-8d7de2355786",
        "cursor": {
          "ref": "32cf4254-504d-417d-bae5-cfbeacee518c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fff3b40f-f1ec-4c9f-907f-5ee143d56964"
        },
        "item": {
          "id": "38058043-6d73-45df-8f12-8d7de2355786",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b9b15db6-2f3a-4f47-a5b8-ce62619722ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eb43dd-1a8d-4741-ba4c-9b518d43b6c7",
        "cursor": {
          "ref": "ffe2af1b-9163-4adc-84bc-47b18fe3f0ff",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7b3df27b-e858-4ccb-9c86-4ce6bcdca939"
        },
        "item": {
          "id": "26eb43dd-1a8d-4741-ba4c-9b518d43b6c7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8ce9622-c80a-4b08-aafc-ef9575b27054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a635f836-8193-48df-bb9a-00a8b6a96721",
        "cursor": {
          "ref": "b74fe4e6-1ce9-4fa1-8b51-c399c5f2ca90",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "993b0657-b9e7-4ca0-9487-7e27a4a1b00d"
        },
        "item": {
          "id": "a635f836-8193-48df-bb9a-00a8b6a96721",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "88848ba5-c0cd-4d3f-8c52-7c69a0598c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9459724b-fe44-485e-bf22-576dcf301f47",
        "cursor": {
          "ref": "30acd598-f710-4255-8a38-a7eafcac0efe",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f6e83830-53a5-4c86-b5a5-779d45c25fc5"
        },
        "item": {
          "id": "9459724b-fe44-485e-bf22-576dcf301f47",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c6ac3925-de23-4eb7-b1c6-85deaa90e096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f6037f-ea4f-4a37-b8ac-191530c64c67",
        "cursor": {
          "ref": "0ac6a38e-8e8f-45d8-9e67-85b0f72833a6",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5e6e7bae-e0b5-4ac5-b3e5-60f58054c7ae"
        },
        "item": {
          "id": "e2f6037f-ea4f-4a37-b8ac-191530c64c67",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "793502aa-3884-4eef-b07c-b131526f48a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76578c72-223f-4f57-ae6e-284674ac9441",
        "cursor": {
          "ref": "fc0396c4-a648-40a9-ae92-fec075fda551",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7f509221-0a3c-43df-bd5b-daa4033c1fc6"
        },
        "item": {
          "id": "76578c72-223f-4f57-ae6e-284674ac9441",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "28115c8c-a1d5-48a0-8bc0-9cbf9f425632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdf528d-c217-48fe-a687-d8265a07cf33",
        "cursor": {
          "ref": "26022734-4f75-4911-8361-a71333f1389f",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cde587d5-c784-4ab5-9c9a-e7c5b49eb856"
        },
        "item": {
          "id": "6cdf528d-c217-48fe-a687-d8265a07cf33",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a6dccb4f-5733-4ce7-af58-4f5bced5603d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee2dc42-ee68-4351-8287-322670c9ddf8",
        "cursor": {
          "ref": "fe2b9b9e-d4b3-4930-b3e6-75ef8a17cccf",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e350ef56-98ab-4e40-921b-ab2f49fd2e54"
        },
        "item": {
          "id": "8ee2dc42-ee68-4351-8287-322670c9ddf8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b313992f-ddd0-4066-b0b4-a83f4c3020a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5496464c-02b8-4825-a9c6-c7ea7aaea959",
        "cursor": {
          "ref": "fbb15fca-81ac-46ea-b29f-c1b2bfd1f3f4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "edc20453-0bd0-4cf3-97ab-65d3b2a1413c"
        },
        "item": {
          "id": "5496464c-02b8-4825-a9c6-c7ea7aaea959",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bcf80bd4-ef83-44f0-8639-12478fa932d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898e82ae-bdc9-452c-b4bd-67990eb9af73",
        "cursor": {
          "ref": "8cfbb871-b037-4643-b60b-f7c9cfa8f42f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "744ea57a-85d7-4377-8902-385229080219"
        },
        "item": {
          "id": "898e82ae-bdc9-452c-b4bd-67990eb9af73",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "75727294-b696-4207-8209-738f68038061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc3a988-c4cb-438e-88a8-7023b68d18f6",
        "cursor": {
          "ref": "b100c7c7-3a7e-46c9-afbd-791f349b6f37",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6c3388bc-c2f7-488a-bcf1-ae6d12ef7df3"
        },
        "item": {
          "id": "9dc3a988-c4cb-438e-88a8-7023b68d18f6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7c389124-126f-4b36-9bd0-6c094441d1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365a780f-8b68-4ae9-9ba5-c85e7c5c1b5a",
        "cursor": {
          "ref": "0f54d483-3679-42d6-9445-5fc87207a445",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7a80377d-84be-4a66-9a6b-79990a45adb6"
        },
        "item": {
          "id": "365a780f-8b68-4ae9-9ba5-c85e7c5c1b5a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4ce89e3e-ac5e-42fd-9acb-a109faf3a24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c285fcd8-4c12-4824-aa38-043b828bd186",
        "cursor": {
          "ref": "2d884f94-74f0-4668-8646-0e7dd912e611",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "140bc16a-7fde-453c-8453-e6a4d3ed8b95"
        },
        "item": {
          "id": "c285fcd8-4c12-4824-aa38-043b828bd186",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "78b62772-3e90-472f-9c5f-f9990d4f851a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcac7cb5-717d-4822-8f3e-d16d64f9e9a6",
        "cursor": {
          "ref": "29897e85-e13a-47a6-8931-cc6a267c3628",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f361c914-ac88-481c-b2a9-0bd6f67ad04d"
        },
        "item": {
          "id": "bcac7cb5-717d-4822-8f3e-d16d64f9e9a6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c262137b-a2d3-46c2-99cb-8a2e41991d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3091446b-d86b-4992-984c-209d61725dfe",
        "cursor": {
          "ref": "5dd9a00f-9763-4d4f-abab-13a123d743fc",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "86b991b3-d7c1-446e-8e0d-6228e7cad780"
        },
        "item": {
          "id": "3091446b-d86b-4992-984c-209d61725dfe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "20b8cda2-fa5f-4acb-8ef1-b9e98b9bf071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e235e-db92-477b-8b3e-c4b74458c392",
        "cursor": {
          "ref": "8647d1a2-78e5-4c92-8e47-8e6d93a9250f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6930fbcf-b2a6-4538-888c-556a25562486"
        },
        "item": {
          "id": "888e235e-db92-477b-8b3e-c4b74458c392",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "39250720-4071-4ce3-afa7-6ed9759f8ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb1c25c-199e-4b8e-8a39-275538f8c54f",
        "cursor": {
          "ref": "2a42a580-90f8-4afb-a15a-79fb2346dbda",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "309f8cf8-ead3-460e-97b0-5d44ab2b6038"
        },
        "item": {
          "id": "ecb1c25c-199e-4b8e-8a39-275538f8c54f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c93c2ccc-a1e7-4cf1-8302-73ead7b3f9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2130a574-af32-4a8b-8883-7358630ed677",
        "cursor": {
          "ref": "bfadbec6-763c-4d7a-bea7-d830f927af59",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b13d3234-4c15-402d-9b39-5073d60866f4"
        },
        "item": {
          "id": "2130a574-af32-4a8b-8883-7358630ed677",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a73ecd50-e43c-48c0-a9af-e2544a889fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ed9650-fc9c-4136-9649-2309e50bafd8",
        "cursor": {
          "ref": "a0274b1f-5ac0-47b9-80f8-3a5980b8e0c1",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "086b7b0b-4b8c-43a7-8b45-30be7dbe06e0"
        },
        "item": {
          "id": "e4ed9650-fc9c-4136-9649-2309e50bafd8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "65fccd8a-ec93-4574-9953-d5791b2ddfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ea0890-bf62-493a-bc1a-f293441e87b8",
        "cursor": {
          "ref": "bffee151-c54f-4674-8447-2bcf3920411c",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "40863570-bec2-44db-bb74-c3b74a548835"
        },
        "item": {
          "id": "89ea0890-bf62-493a-bc1a-f293441e87b8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a43e8092-00b2-4552-bc9d-884360351196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5c4b4a-30ae-4842-a2fb-91809f9a9a41",
        "cursor": {
          "ref": "22152378-820e-4b6a-b867-b3c61cb5914d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "625a17b9-8776-431e-9326-37488b8618df"
        },
        "item": {
          "id": "ac5c4b4a-30ae-4842-a2fb-91809f9a9a41",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2695cffa-95e4-4a33-a453-7163241ad69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb967477-85bb-4c23-aaf8-a08cd33d72c6",
        "cursor": {
          "ref": "9d79e29b-eaa8-4f8a-9382-a851067e018f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dc0c5eef-c804-46f9-961c-6abf34951218"
        },
        "item": {
          "id": "eb967477-85bb-4c23-aaf8-a08cd33d72c6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "397f02c5-bbaf-41d5-aeca-247072b1f794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b23628-4803-4de1-b68c-78ed0e80c9f1",
        "cursor": {
          "ref": "916c2d3c-7f7c-4e5a-a3bf-536d6c7f4f3d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8f79b689-9851-43a7-af4c-f6f53a2934d3"
        },
        "item": {
          "id": "d7b23628-4803-4de1-b68c-78ed0e80c9f1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "082aad91-566f-4268-a919-0a6506bd7d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e800d094-39a1-4d91-baa2-06c498e0b4dc",
        "cursor": {
          "ref": "9ad1358c-3fd6-4b49-bf8d-2074e494bde2",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1818ddc3-ac02-47c4-89fd-699f911f0273"
        },
        "item": {
          "id": "e800d094-39a1-4d91-baa2-06c498e0b4dc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4f6e1c50-2729-48ac-af49-13573786a20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b67a09c-e974-4d96-bbf8-5afbb2b61c5e",
        "cursor": {
          "ref": "10f1aa58-64c7-4e5a-ae57-8e4f5e4e8367",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "27c83986-b079-47c8-87ca-6b4e3394607b"
        },
        "item": {
          "id": "1b67a09c-e974-4d96-bbf8-5afbb2b61c5e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6e590637-32d1-4066-a2ae-8eafcd6249b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d9c3b3-75b8-4932-9a98-f6fa4a9e9bdb",
        "cursor": {
          "ref": "a792ca30-f360-47dc-93f4-2a83a40383ba",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "86bfe131-c0bf-48da-9dc0-7061d77ab0ef"
        },
        "item": {
          "id": "01d9c3b3-75b8-4932-9a98-f6fa4a9e9bdb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6f01d3fd-5eed-44ce-bc24-419b02b2fe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1016c3b2-ffe8-46b4-aae0-292bbe9a5091",
        "cursor": {
          "ref": "d1c7c432-129c-4c18-a80d-3fb4cc7fd484",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "15f7bb0e-f950-4615-b712-8dd5fbbd4f2c"
        },
        "item": {
          "id": "1016c3b2-ffe8-46b4-aae0-292bbe9a5091",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "af4710d7-f7d9-4ac3-b4e2-9b4e23b2179d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7754d32a-9fec-48c8-8667-bd9c44176d9e",
        "cursor": {
          "ref": "99ec6f60-53d9-498e-bb53-4af18e3557ef",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "452d2180-5f51-446f-9736-3b3a9c6f9910"
        },
        "item": {
          "id": "7754d32a-9fec-48c8-8667-bd9c44176d9e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4d0d9c68-3fa7-473f-b1e5-33a38aee792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa80bc27-50db-4b3c-a3b2-8d29d9a67f32",
        "cursor": {
          "ref": "0bf9f3df-7fc0-451c-a0fb-420082c54904",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a84b4994-92e8-49f4-81f5-d82c2e30a5f2"
        },
        "item": {
          "id": "fa80bc27-50db-4b3c-a3b2-8d29d9a67f32",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "08d47a36-ea11-4583-b272-ad8d9b7055be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229e3851-bbbe-4644-baff-80f3234fb5c0",
        "cursor": {
          "ref": "22d6a9f6-d4b9-4a67-95cd-25baf44f7bef",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dfd6b9a8-2181-44c7-b519-992b6b324bf7"
        },
        "item": {
          "id": "229e3851-bbbe-4644-baff-80f3234fb5c0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "14b65ecd-c47d-41ad-b6e4-e0dad097f9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1365dfb0-d8d8-4f66-ad16-759d9f129568",
        "cursor": {
          "ref": "7be5fe0e-5274-40ad-abb2-0dc44bd9b1b8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "18ff9e3c-2b69-4417-a2f3-85d9c2bf47cb"
        },
        "item": {
          "id": "1365dfb0-d8d8-4f66-ad16-759d9f129568",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e78a9f85-776e-4a97-ae5a-395b80d19dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f759be-1130-4a31-8ed0-dde445bc6dc8",
        "cursor": {
          "ref": "563d8516-8e09-4955-a9ee-c8a87563eccc",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "80cb6abe-43b1-4b84-9d31-3fac044ae92a"
        },
        "item": {
          "id": "23f759be-1130-4a31-8ed0-dde445bc6dc8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "25a1c861-54e3-401d-930b-c51626995fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dd2115-70b9-40ba-a112-b3e3d9ad70b6",
        "cursor": {
          "ref": "095da423-1ba8-40cb-a34d-4609bd14db40",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c2c3c919-22dd-4545-96e9-2f0a196166f3"
        },
        "item": {
          "id": "c5dd2115-70b9-40ba-a112-b3e3d9ad70b6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "10edf136-bb1c-4c30-88b3-e2bcd9ba7980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90868b3a-4e64-4f0b-83d5-b79f80d39b8a",
        "cursor": {
          "ref": "0e3a9e7f-f3af-4114-99e1-a6b239eddd02",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0007342e-bded-4d5b-a155-7a6f14f4b50e"
        },
        "item": {
          "id": "90868b3a-4e64-4f0b-83d5-b79f80d39b8a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "28769a54-c7bf-4867-9d5d-6f8344ac89dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1eb4c0-5dd2-431f-92ba-1f872466dc51",
        "cursor": {
          "ref": "cd9b7c39-d6f0-47b4-bf94-f8c927c299b4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "86430838-63ec-45b4-8c96-ee6125ab9187"
        },
        "item": {
          "id": "8c1eb4c0-5dd2-431f-92ba-1f872466dc51",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1aa4b198-7103-41ca-8923-5e0ce8fb6d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aeb57b-5169-4c66-88e8-fe4b70655d68",
        "cursor": {
          "ref": "35ea33d5-e2b4-486f-8fb0-34208c72b09f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d6c0e638-5d94-4e01-88f1-e21a6a217bab"
        },
        "item": {
          "id": "44aeb57b-5169-4c66-88e8-fe4b70655d68",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "04be6746-bb3f-4bac-8e73-94b149c3a2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbfcfd3-6049-46da-8bbd-e3ecd9a11790",
        "cursor": {
          "ref": "d6de3fce-b501-484b-a8e4-5a67adc32013",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "470cb2c6-47a7-47a9-adf9-21ef681f5fad"
        },
        "item": {
          "id": "5fbfcfd3-6049-46da-8bbd-e3ecd9a11790",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e75c577a-1b66-4f5f-90a0-58231ef49334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016f2dc6-1ead-454c-be04-7c225cb6b4ab",
        "cursor": {
          "ref": "cca43dc7-997a-4b37-a4dc-db3e530bb96b",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "79aaefb1-3a25-4a91-af1a-9a6adab6f14c"
        },
        "item": {
          "id": "016f2dc6-1ead-454c-be04-7c225cb6b4ab",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "af217d6c-6bc9-4cf4-b95b-173b93c37ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fed9f3-750c-449d-ac6a-463cd2e9aebc",
        "cursor": {
          "ref": "4e9df112-ebc1-42d5-bf41-983c0a9f6e8e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "90590752-942b-4179-96c3-c5a64d862927"
        },
        "item": {
          "id": "f1fed9f3-750c-449d-ac6a-463cd2e9aebc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a51d0daa-a430-4429-8d16-e5f58ae4f5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a53db1-7936-4fb8-a40b-d55fc38b7294",
        "cursor": {
          "ref": "9651663f-a7a8-425a-9857-1a907dcd59ad",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "39a34fb6-c6db-4bd9-9a41-fcf052bfd810"
        },
        "item": {
          "id": "46a53db1-7936-4fb8-a40b-d55fc38b7294",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d10ad5bf-b814-4394-b0bd-9ec2d63caa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f7808d-c4cc-407b-862d-1acf72b2c878",
        "cursor": {
          "ref": "96cbb844-3eac-47be-8854-547122f9f92e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "390dba64-b733-43cc-8a8b-bc8987fbd1c8"
        },
        "item": {
          "id": "e7f7808d-c4cc-407b-862d-1acf72b2c878",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d363cd70-eeb9-406b-8b0b-700c4672850a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52310ee7-5bf8-4156-9e6f-72e0e1bbb3df",
        "cursor": {
          "ref": "c0cc6a50-de5d-4ee1-9d28-348a8b13252d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "124957f3-8b0f-49b8-a16d-b4f951f5cb59"
        },
        "item": {
          "id": "52310ee7-5bf8-4156-9e6f-72e0e1bbb3df",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8cbfc48c-7a09-47bb-a5dc-a353238a96a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beee5e1-ad66-49ac-aebc-51b8e6d7c4b0",
        "cursor": {
          "ref": "9ce34d5b-6024-44e3-abaa-2ecf675dffef",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "11516277-2174-4f7b-9d4e-12d9f60e203c"
        },
        "item": {
          "id": "5beee5e1-ad66-49ac-aebc-51b8e6d7c4b0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "653c8621-9920-4df0-98e0-ebde83903a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28d66c1-3b77-4a82-821e-d518d5e7fe54",
        "cursor": {
          "ref": "c747125f-73dd-42db-b3ba-7b23bff31b0a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "26de3a10-0deb-4da7-9532-0bab8f1ea424"
        },
        "item": {
          "id": "a28d66c1-3b77-4a82-821e-d518d5e7fe54",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "898b930d-69fe-4a6a-a29a-4304cca92025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be32dd57-ace5-4de5-a7ae-99981e40f92b",
        "cursor": {
          "ref": "2348e63d-2577-483b-ad4e-9178cd6e504b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "99dfffd3-f6ea-443a-9d04-ad0ae9a2f4b0"
        },
        "item": {
          "id": "be32dd57-ace5-4de5-a7ae-99981e40f92b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6c256ce8-806d-4316-9358-7698bfd3cde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f9d110-d915-4e74-98d5-e7e9e4755e1b",
        "cursor": {
          "ref": "e1a62cf3-eefe-4d00-a7b3-747845bb6b42",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "243aa556-f57a-4641-ac03-c07b3511261f"
        },
        "item": {
          "id": "36f9d110-d915-4e74-98d5-e7e9e4755e1b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ec92bf43-7065-4fdb-893e-89c5775ff60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d83fc9e-9418-47ea-bccd-0dd27a9c11f4",
        "cursor": {
          "ref": "de321943-a420-4af2-ac92-81ffc5c0b345",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2f2915c4-0f1b-4f2c-9059-a89457047a13"
        },
        "item": {
          "id": "9d83fc9e-9418-47ea-bccd-0dd27a9c11f4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "433fe0cf-b83a-4b5e-b933-4350c8075eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30955bf-e549-45f1-a24c-1b4fa1e14444",
        "cursor": {
          "ref": "19c4125a-b252-4e48-98ce-5984f51c482f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "411a65e7-16bf-4c86-bef9-4661bde91f10"
        },
        "item": {
          "id": "f30955bf-e549-45f1-a24c-1b4fa1e14444",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3e20b8f8-e9fe-45c6-84b4-9cf3eb32aa37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322ddcaa-bcab-4418-bc6c-53e545e75b78",
        "cursor": {
          "ref": "09f21f03-0fc4-4d2d-813f-5fad4eb28fe4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e69e0f85-43aa-445a-83f6-5350c8870902"
        },
        "item": {
          "id": "322ddcaa-bcab-4418-bc6c-53e545e75b78",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0f0b0111-86b6-429a-ba11-bd7b00e3905f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2e48b4-5735-4517-9b64-a9fc18501e95",
        "cursor": {
          "ref": "413becf3-5e9f-4219-8d02-4466f3e1b793",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a3e83378-6be5-446a-a558-8ff4441f4462"
        },
        "item": {
          "id": "af2e48b4-5735-4517-9b64-a9fc18501e95",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "02a9db84-de70-4dff-9d3d-30a406c9b544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9530162-106e-4e1d-94ec-f1207a104e9f",
        "cursor": {
          "ref": "9bbf71fd-aac7-45d8-81ac-a3fb6e558689",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d9051704-40ce-430a-8c36-d262628227a7"
        },
        "item": {
          "id": "b9530162-106e-4e1d-94ec-f1207a104e9f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a924771e-cfd9-45b1-a739-5952e8470566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3beb02f-451a-423b-8bec-9418f3692dd8",
        "cursor": {
          "ref": "3856d99b-1a5d-42ea-9122-2b63b7230831",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "faea5716-0d9a-4416-9291-3f341dc669d6"
        },
        "item": {
          "id": "e3beb02f-451a-423b-8bec-9418f3692dd8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "838947d2-a0e9-48d3-a255-1da21c716fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8693c75f-c1fc-4303-ab84-90e228962904",
        "cursor": {
          "ref": "fde51fa1-1bf7-4a8a-aefc-cbea2d82baef",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "315b9918-2fdc-403d-88c5-aac9f99707d5"
        },
        "item": {
          "id": "8693c75f-c1fc-4303-ab84-90e228962904",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "83e94e59-f478-42c4-ad9e-92faf2c3d1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307af1ed-79f3-44f9-ba8a-73a0dee65ca2",
        "cursor": {
          "ref": "6572809c-b222-4121-a52e-2cf42c08d281",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dea58177-eb44-424d-a87c-17e1fcaa7bfe"
        },
        "item": {
          "id": "307af1ed-79f3-44f9-ba8a-73a0dee65ca2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "31b91e67-4f36-4ebd-8bc1-bf17405c5b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cefa2e7-47d0-4715-a3b5-58f5a50f7039",
        "cursor": {
          "ref": "2a4b2b2f-2527-4545-a848-177d15154813",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bff8fff8-4636-4a50-9f16-4a3a8e7fb329"
        },
        "item": {
          "id": "7cefa2e7-47d0-4715-a3b5-58f5a50f7039",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3121ddd9-5524-4c25-bc11-e4c33f43ddbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75306d63-1b13-428d-9bea-2f6691f2ac5f",
        "cursor": {
          "ref": "e2ba87ea-4d23-463f-ace1-a06971d77e5a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "976872ec-e7da-4388-835f-684b8833dcb4"
        },
        "item": {
          "id": "75306d63-1b13-428d-9bea-2f6691f2ac5f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7c741ae6-129c-4d90-9bfd-9a3022fbc8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0713555-c789-412e-802b-8e8d0184721f",
        "cursor": {
          "ref": "0558f52a-fe05-42cd-aea9-d366a684d84f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c46ad5a6-a69c-4764-9f40-052f9a55b64d"
        },
        "item": {
          "id": "d0713555-c789-412e-802b-8e8d0184721f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c1dc7124-7f2c-4eb5-b3c8-a676b36623c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c965b5d7-9436-4ab7-828a-8bc2549571c1",
        "cursor": {
          "ref": "7cb823a7-d189-4801-84ab-5b4dcd454a79",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b6306cbc-9338-4ef0-b552-f0394a8d0726"
        },
        "item": {
          "id": "c965b5d7-9436-4ab7-828a-8bc2549571c1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d187b52-1a6e-4412-aee8-e7a15897d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86306d73-d4e4-4a95-801a-62d9857c2596",
        "cursor": {
          "ref": "28fd9582-74ce-4666-989a-85d1ec6536c1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e0fe65c6-e6b3-40b0-845e-e0fd2fb95d66"
        },
        "item": {
          "id": "86306d73-d4e4-4a95-801a-62d9857c2596",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "105aa1cb-1a7e-416a-9f77-d6db98597f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b3bc7b-c60f-404a-b51d-778dc8d1759e",
        "cursor": {
          "ref": "7e5d4fe0-a0de-4a15-9152-4be781c47068",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f683b04a-1319-4f09-91f5-a3b31729b4ff"
        },
        "item": {
          "id": "d8b3bc7b-c60f-404a-b51d-778dc8d1759e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7a34963b-97be-47f3-b639-87823dd1958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a05b890-5ced-49d8-a735-a58d94dcf6c0",
        "cursor": {
          "ref": "8ff07000-b37e-453d-8cba-6e611f87a08a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "040f0409-de5a-46c4-b88c-c300b3124d92"
        },
        "item": {
          "id": "5a05b890-5ced-49d8-a735-a58d94dcf6c0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cae09bff-c990-409a-89f4-6c9c7c136064",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111e077e-b237-49d7-bf9d-bef40627d102",
        "cursor": {
          "ref": "c22919c2-5d9e-40a0-97fc-21d7876f6925",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dd37803c-6716-4de1-994d-85731dd784bf"
        },
        "item": {
          "id": "111e077e-b237-49d7-bf9d-bef40627d102",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "91083404-1732-4758-8099-6f893ac61984",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fa4b53-a6c3-4263-be75-1fec806910f1",
        "cursor": {
          "ref": "53f6e111-1e17-489e-814a-4d7859e05e9f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2df28f67-871b-4163-a1d8-6c949b8709a6"
        },
        "item": {
          "id": "36fa4b53-a6c3-4263-be75-1fec806910f1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8ce7e2a4-2160-47af-946d-f0fbf3555132",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38653d36-8312-4613-9f8c-f095b67c1a89",
        "cursor": {
          "ref": "6187d281-b441-4781-b544-611aef935673",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "947de25b-39d8-4483-9842-4ecf5fc47e22"
        },
        "item": {
          "id": "38653d36-8312-4613-9f8c-f095b67c1a89",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1eb3abf2-ee5b-4132-a28f-ff36214b6a6e",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61dfb26-38a1-4689-b0b0-d75dab4c89df",
        "cursor": {
          "ref": "38d2e71d-a9c6-43e4-8bcf-e01837b2314e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0f8f290d-fd7f-4b3c-ad1f-26d03559406f"
        },
        "item": {
          "id": "e61dfb26-38a1-4689-b0b0-d75dab4c89df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ee09ea59-693d-46d6-b4b4-c8f959038121",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61dfb26-38a1-4689-b0b0-d75dab4c89df",
        "cursor": {
          "ref": "38d2e71d-a9c6-43e4-8bcf-e01837b2314e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0f8f290d-fd7f-4b3c-ad1f-26d03559406f"
        },
        "item": {
          "id": "e61dfb26-38a1-4689-b0b0-d75dab4c89df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ee09ea59-693d-46d6-b4b4-c8f959038121",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33890358-788e-468d-aa85-18d4f00067a3",
        "cursor": {
          "ref": "8b500164-6723-43eb-882d-9c7e50321e86",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "eb7c5251-2b1c-4027-9926-69df20f3819f"
        },
        "item": {
          "id": "33890358-788e-468d-aa85-18d4f00067a3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d4eccb04-892b-4b24-b2e6-2f91077341ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4240049-f691-4125-90d0-2491c2b2faea",
        "cursor": {
          "ref": "caf1fdd4-61ae-41f7-90ae-361a14c36200",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "30374449-3f77-4013-aeb4-011b86a0125e"
        },
        "item": {
          "id": "d4240049-f691-4125-90d0-2491c2b2faea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4ce8178c-2d01-4150-9fca-58eb89a8b770",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}