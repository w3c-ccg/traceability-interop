{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d8098333-ef6d-4828-b94d-3247763b7e5a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5387524c-b4d6-4f18-8519-8cf266b29a78",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de63a86e-8871-4332-8168-2b25fef5af37",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e19dba45-850e-49e7-bfcb-6a178b11607f"
                }
              }
            ]
          },
          {
            "id": "fd3d1f9d-6eca-48d7-94c4-0c3d9536170a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d91e473-4053-4771-9001-afa9114fea7c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc2b2400-9de0-4eac-89d0-76d33e9c9f43"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "47d2449a-db47-49ae-9e2b-7a8d61731a20",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "38178e3b-b2f3-45ed-8b91-12c6eac1f390",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aa27bb7-63bb-481b-a04e-613221e1f7a1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67a7c9b1-3663-48b3-b1ed-323136c07690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b793f32-09f9-46d7-a3a3-0a0adf3b3b72"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5dd24fdf-e1cd-4982-93b0-233e04105323",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d716408-c114-4838-9643-157859923eac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "845cc451-0dbb-4323-be9c-7dbae49fe1b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e0d29e7-12ff-42a4-b619-a62ce9051cca"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ef20141-b7b8-4c75-9953-2a9ac2df7047",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "eb360ba8-b3b5-44fd-9877-99fff782c4ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41b68802-342f-4ad1-9844-eea8101488be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de6a8214-b339-4f57-bcc5-56b6ba6204ff"
            }
          }
        ]
      },
      {
        "id": "1d4ac956-40d9-498f-b33d-0976487d27be",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1a8fb9d8-c4fa-41c5-bca5-5ea88c6d3dc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c23f312-66cc-406b-8aa2-92fcf454ff21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17443a82-159f-4380-9fe0-2f2b6f44c3a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6350aafa-1516-4638-9f68-c87500b0aaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "850af314-20ab-4753-bb81-1c4a88c4858a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10bd2d6-41cd-40e5-acb4-027248f5334c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25b2450-e362-4cd6-ad2e-51fbb29fcb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adcd613a-42e5-401e-90e2-6c3e70f077a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412b1f6f-1467-44fd-9f58-940c935a0df6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44adf022-b4d4-4193-a854-0045cd6e7147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a091134a-04de-4a9a-a82c-8e382147c3f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21c95b90-62ce-4d39-8588-772189b69f3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7addfcee-dd34-4602-8a23-7e38cbbb326b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c197c00d-1cf7-4516-8617-aa2d0f4d7b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e953fe56-ec5e-470a-8f57-67d46730612a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99cdc22-abbd-4617-b334-9d491d3762b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d4a06c-9945-4bb8-a20a-0d7c1306441a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d5b972-a9c1-4689-aaac-19f76e45ab64",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a162a20-5b8f-44cb-8cd1-f5e1d5845f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1fc261a-ed16-4dc4-ae53-e87c15150954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf8bdc1-30e4-47db-a4a1-5159ba5dab47",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "9065431a-b036-4012-8fbd-cf1e642b9362"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "485fd6b1-9334-4e94-9441-80241f5485a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d257d9e0-602c-42c4-a62d-b84693fd1d5e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "866143ea-b542-4514-b462-90b76c708512",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2e141ff2-25b4-4e80-92a9-0d358ecff867"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b88b374-2e6e-485e-b06e-0807a0acabfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d4040ddd-ab85-41d3-adbc-c26b68d5b659"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66979a47-f5d2-4d7b-be63-96c5e7be9572",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcc5ab85-4a23-42e3-aa3f-0d586c832570"
            }
          }
        ]
      },
      {
        "id": "182f323a-f3b0-48b8-b8d9-d48774c70841",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c5cc845f-af0d-4049-a326-b1b36fb186e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af01ed22-c14e-4a92-a977-415802466453",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7c345bb4-4aa3-409a-b020-fc219ace5b9d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da17221-68c6-4d6e-ae23-104a4e5dead0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e094d3fe-d0f8-45b6-a70c-fea2ed5d1612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc980f9b-bf01-4668-b456-4ac96812b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9462174-4235-4321-8587-42910278e48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc31ff29-9b0c-48c6-b30b-3165ee33dbcd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e36a97-6298-4bf1-9d4f-bd5680d2656c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084de3db-b88f-404e-984d-b29b63fa08c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6a5a18-a45c-4d2f-9dd7-58abbc173bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "612a7f09-bfda-4992-80d3-10bbcb23cafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe287038-0f71-41fd-8ab0-1fd8e8da0d28",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8b5714-a94b-4b7c-bd32-ed824f663474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751d0e3d-0e5e-4c13-80ed-5ef50702fd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb72149-7a2b-48a7-b061-0a1dcc6c285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "339e5a1c-ecb1-4b57-bb9a-9106583f81fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43524149-219b-4ec0-a525-9ff7406a10a3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf759ad-7c34-4048-a6d7-fc226db9f822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920f929f-106b-4dca-a9c1-35a3f276a5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8a3f6e-a980-4b31-9de4-321cb3db98a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4124908f-d21b-43c3-90df-65b67aea4162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9f26b5-a276-487c-a854-7be5f9f81c5b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ed14ae-9153-4d48-a72d-109125aa2089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f527782-2946-4759-b029-9832c6a64534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230603e5-f322-4b84-81cd-d88c78e79444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68f59a20-6a39-43d8-9f2b-6394c91e5440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdfacd0-e306-4d87-a2ef-d40cb5124928",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5b31c3-7b20-4763-9ecf-9ffdab290524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d214b2a-e792-4fb1-aa6a-f60ebf2e17c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49876948-c6f8-431b-b13e-eac1f89f94a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24ef019e-a78c-4514-8edf-304cd668877f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11729fcc-39cd-4b04-be59-31a511b948a5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e0437e-0e55-4cb4-b689-a56cc160aed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb58896-5b29-47e9-b500-32f4b1c2d1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0630f51-966d-449d-a111-14a6e15212c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63fc8427-eaeb-4ed5-b252-517194ed19ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08bd05c-b8de-4896-b0c4-b7ed09892fa4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db186d3e-3f5b-41fb-a32d-e9ea4b4b2c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22ba75f-dd1e-4d47-bcc3-9053235d0734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ed7db9-21ec-4f2b-ab4c-94d41683696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "065549f0-61fb-4af8-8792-f2bf87c51758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943accc3-59a5-4b2e-b62d-b17fc89b5729",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cf914a-a96e-4f2a-a595-bc07aeeaa3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47341b9a-85fe-4fd6-82ad-c7f61b79323e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e84d1d-e427-488f-b5cb-51d94df26ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af846508-aa36-42f1-b273-fad54251d485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c809e36f-0fb0-4b1b-a51d-f229096b197d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f486f5-b053-4bc8-a6ea-4edeace2633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d476e9b-1d88-41d1-98fe-0ea48b045f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883ee412-17c4-4195-accf-e157b68df622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64717eb1-8899-40a6-bddc-4d470ec14771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a32b9d-f5a2-4ec5-b400-aae240af6f76",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ba960-6870-469b-bcf1-71a6e51f2b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bca545-b785-4b40-8f5c-94483d6635f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b9ca41-922b-431b-9f09-f1f3ee73695f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f8b4d58-b2ea-415a-8233-e0ee7fc8ef8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b28d9a-0d67-47d5-9242-8a670f3386a3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f1923f-ec0a-4ece-a5ed-d644732c5ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cd9718-3e3b-4ca1-8f60-2f84915f5132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4647c1-8c64-42ce-a293-0a6751ebce68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "200f49a6-065a-4017-9ca3-b762d6ab6448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6df995-886d-4e70-9214-5b0de3f86be1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415f19f6-5765-4013-be60-7b9699679811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3595bc4a-c1a8-4f94-a07f-0dd92536d2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844ce6fe-7a81-447c-ae3d-3a2d7ff443db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c27303a4-e18b-4667-98b6-49783e473da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43399260-6e74-4c0e-bc5c-7aabdb217200",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82b930f-c490-4423-8903-530abf635ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3996aa9-f63a-4e0b-b739-46d41da74adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aacb2e-1258-4fc7-9429-c0727d0724b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "701fb6d7-2966-4b36-9ff8-5bf93a736c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ae2d68-3683-45da-877b-2d613bec33e3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac193974-1afe-434c-bb5b-38d6969843e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328d57ea-ca95-4583-9b87-2f215b04e9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed97dce-55d2-46ee-8931-7fd226a561a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e438fcb-0323-46e3-9a65-5590a01325f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b5aa0b-abbc-46d0-a2e2-f1b2133be287",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c273014-1af5-4e8c-9165-9bc1e6e7358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3aed60c-29a1-415b-a81c-741d2c48f9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c039c46-2e1c-4f58-a15d-07e073824681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d224e35a-c57e-4ea0-a8d6-ed43561fc0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee76998-5820-435b-bb29-affab5c1d07f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc5a75c-da46-4758-b6c3-d0415388b321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08de0ac7-3c39-4e50-91ec-8153aad7e451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdc229d-75c5-448d-85e8-58d4266d174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa4d930f-f74b-4bd3-b786-ca595fdf4600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6bd275-634e-423d-877b-85e0f03fc9cd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6364f825-6272-49a9-b520-0561c9d49012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed0dd83-cddf-4bfb-bb5a-65fb9d3c988f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c95f87-b66f-47d0-8e0a-be3818bff37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "19bd4426-e812-422f-b613-537e14e57bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7e8798-c414-44d1-943b-036226487ca9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a08be5d-8cb6-4f36-a0da-feb3a958b445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4169fe-deb0-4c77-bb18-2690708abda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c094b6-b5db-497a-8a27-1f6148401718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d3bd33-8b2d-48df-b4c7-298811891247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05cacbc-67a6-4fa1-81aa-77705ae041d8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a9457c-65c8-4abd-96fa-35510eed06dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee964ef-eb2e-49f8-9d27-5acb337d3f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217a5134-449b-43ee-8a61-6c46906992d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3988f0-5c38-4258-afdd-aae756746ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0724874d-ab39-4567-ab6b-023d3cada507",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d9895c-78c9-4e8f-8826-6e4cad4bbf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8177d7-48f4-4ea9-a576-2289ec29fdaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aec4dc4-243b-478e-9140-01729f4ac281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3498147-b1d6-4a7e-9068-5be34f5e44a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dd597a-8517-49a3-a20e-85cff722f999",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f730c3b5-cbaf-41ea-a211-3dbcb03f43e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe14c85-27c3-4ffc-8d45-2a006132add3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a677f60-92cc-49a2-9db0-1f4ef50118cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5fab66-ed32-44f8-9ae5-9ebccc672bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d7c03c-8f1a-43f1-a3fb-0d88059ab433",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c69c1-9155-4b8f-95df-14489436186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bee0508-524c-4f73-b51e-a2d76ccb0f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b434b16-f2d1-4aca-8895-89c28053c825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccabdfa-c980-4cfb-845d-a1e987f16cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26673c1-af83-4975-8733-8f500b33e891",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce763ad0-3c0c-49c0-a4cc-0295c7279bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f820b86b-6663-45d3-bef4-e1ce16a34a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8e044a-bd7c-4f59-9c1f-d1b65eea6022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed192906-a718-4057-8eba-39531ec62a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f09e0f-ed5f-4788-b41c-ec450bdbb95d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135a3a0f-0f48-4581-87bc-515045138010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d101799c-4d77-4b15-bcde-54dd76734b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9528b89b-3103-401a-b645-e88c6d050869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6ccc77-7f58-4041-a122-cfe41f611b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621ee684-813c-4eac-9587-e731f1ab1c5f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554e6444-8be5-4bb8-8de0-9698f16b3a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3820d17-883e-4636-835d-4508689d17fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcc3110-02c1-4161-9594-085920f9fca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f53de4db-b110-44bb-b0ab-3730bf6ed93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758d165a-2882-41a0-b77f-e46ddffd80cc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f9e0c2-5071-4afd-87ef-8c92b7f43840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92543c1-a09d-43a6-b7f7-a306f181628a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffcc190-42e6-47b6-aade-17f0334e6c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c926283-03da-48ea-a278-9128f1195ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba82da2-316f-4557-8d4a-812990526a47",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0934f8e6-7778-4161-b3d8-4ae0956630a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5688f439-8ed4-43e5-82d4-80daa15aab31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6516c4ad-68c2-4bce-9da0-fee22ba5b3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac087b15-4b5a-4907-822d-131d0e36616c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d4e7ff-1aae-4770-9407-b857095c6a3b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9fe7e0-5764-4195-afa2-65ab25551b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe04db66-ae6f-4ec3-b4a5-8a2910315645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd4676a-b268-4490-b63e-611adbbfbcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84f6f16f-b59e-49bd-a219-670f3fc37040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6395ff-9b89-4277-ba9c-de1127d52480",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51138af1-ac50-4df0-988e-2f4549c386de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051d1fe1-15a7-4e86-9c64-c79b9097ac01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfebdd1-8175-4590-a5ba-86a08026347f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a70ab3d-1bec-47a5-b3ee-67d0cf218a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e794e7ee-3789-4f22-8640-7e88ac1db016",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afff4ec-ff5c-485f-a8e5-3f5159fd6822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37427ac-567d-447d-af5d-7350c4d0956a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7758c6a1-94e5-425c-98d3-418d7b0c9693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94908cc8-5c8e-4676-a42f-5c780f1658a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e068fc-fb16-412c-a7b1-0ec678c7d323",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32afe8af-7fa8-4a9f-bc42-c8653d108d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f889d517-5e58-48ee-82af-ab3173a9c7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5501682d-b656-4c17-a19e-9071384140eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4e1660-c471-476c-8a4a-2fc43f26e3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aef615b-49e2-4e36-919a-435c334dea8b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3407ac89-a4b7-4dc6-95cb-001cade08c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a560f895-e90c-4046-b728-53a8d983400e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62635357-67cd-42cc-930a-bb5734969099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49b9a9d4-3b11-4889-a4cb-64d666228a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d95deb-783f-4d80-9c7d-f253b0165545",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0391ce4b-ef7b-4b48-87ab-b2c23a3aac61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbd415c-ed3d-4c92-a0b6-f687b0182296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc63cd5-a081-4a54-a240-5ef63509c159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "835b5fbe-9cf3-48f8-8046-bceabd282f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125e2e1f-7fc3-43c4-8d7c-71e227fac256",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84a2933-5390-41dc-a98e-ae29c36dade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c2b2d3-b31c-45e7-90c6-c9ddfb4f1426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a16042-9911-4bb8-b8f3-21652f2b1f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b34b5a42-00a0-4ca1-b4b0-eb430e670828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db2430-8e10-414d-8930-257aedd44693",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653fe779-0e5f-4547-a1f6-64f78679a46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3b7fe1f-f381-49e9-91ec-e593c9a32a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2caa8a-fb5e-40aa-ae85-31dcfd7c254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecee362-ec71-40f8-a7d2-14002c391e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633b2783-62f7-4d05-965e-53012917f49e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6995c48e-b66a-43f0-89a4-1334a4efdc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa41cd0-7934-4ebe-bacf-b3a1a0ea9820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c420a9e6-731e-4056-a08b-b4cdd86e0c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88a5bc21-de1b-41b6-b879-15766e6c5e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0473f44d-6410-496f-bcd1-f373d001ab8b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c358019-c83a-47d7-92e2-df8989277315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d493bd92-2182-4a50-9cf4-809a8a47d650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17c3976-ab67-4069-9dd7-a7026785da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f36295-07fd-439f-864a-781ca05319d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126179b8-696d-42ae-a885-453bca934210",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e94c863-7839-4119-94b1-65d0b709921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237d097b-3e50-49dc-8b82-64cc28c65e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec73dcaa-8927-4af1-af86-7a12ffeacc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "50e435b6-da34-450d-aae5-6e230384485c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b719c3-603b-41c0-adf2-dc9ac819c03c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc49519e-bf40-455f-a32c-3f885665b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214728aa-abe5-4acb-a2f5-eba044e69a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c07ee28-bd12-4dab-8118-547b04be2f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2d6e63-ae91-4dbb-b7ce-9d5b46db16f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f6cb4c-eb26-4b98-821d-17d48c84bfb9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba897f9f-63bc-43bb-85c6-ca56ea8366d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee61646-693a-4dfb-944c-f5a3078eb9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a622d8b1-d4bb-4da1-aa10-c9a7d5893c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2ffed5-1971-481a-992f-b630c7ffa0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad872d2-4509-4ca6-be50-7f51d957e216",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babc4838-cd1d-4bef-94d5-d39652a335e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d8cbdf-0be7-47ba-8818-0416b709e6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fde0df4-f506-4a85-853c-15afbb61e300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "052f0a87-c5fe-4ff1-ba43-a885dcb3a54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50f9cf9-d738-4bf5-bd04-39c2ee6458c9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3233c9-148a-490a-aa4a-89b66143e3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4030babf-dea5-49c3-867c-5e3395e9d618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb4fda9-4ced-4668-a9f0-6372dfd74a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "459d99e2-eb30-46f6-a1fd-eab7ef009fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ead907-47b6-4c7b-b6cc-4106240acf18",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbba1db3-1df0-4693-b68a-caafa53954a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ecdddf-056b-4575-9754-2b5caafb41ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e75bf4-f627-4644-8aa9-d1fd89984fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e729f9a-794d-47ab-8dbb-22ee5db2c6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d8ad1a-1796-4133-9e4b-e7542d706262",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65100867-5b12-4151-bc8f-ac1e5b810f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d9e9c4-d883-495c-921d-4593e0e65587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264d36b3-ac09-4e38-b3a5-dc592b054b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df149ee4-ccec-427c-b627-7da2819d284c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a60bad2-26e0-46f7-b153-b7fa5ba94297",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecdc335-a762-4516-a4e7-ded458cfc5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cedd9ee-76c1-43dc-a3f2-d1fcf8f85573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55115ad-3224-401b-bee7-6ace8a6375da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b82ba83-e503-41ef-af7a-a9b3d18294cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd146206-0891-45bf-b746-cb612406265d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76abec9e-b570-4371-81fc-4b15015bc21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ee11a4-bf2f-4624-900f-159e8a43a80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303bc397-f8dd-4029-bda5-9c9e4b0dad9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a29cb4e2-87c1-46f8-9bdf-b72aa2b5ca30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86014bd1-3b9b-45bd-bc8d-f355b30cec0c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9a1f9a-3f90-4675-9002-544069723a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fd176a-63b3-4d93-ba6c-dcf4c4cab2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff476c0-bbd5-47e4-b001-0f158abb8a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32aff3f1-43a0-42c6-bfb4-faf50b631b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c794b81c-b694-4e17-8a90-82df3f1abefb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ba2859-505c-41f4-9128-778f379e111d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da6c196-56aa-4aa6-a163-edb7ad322672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f55f6f-9b10-427e-b5f0-92d948a47378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "468342bb-7ff2-43b7-891c-ef134452c22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926fc537-d114-4d68-910b-37bada447c07",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ae3cde-1ae5-4fb5-af9c-185c07460a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca6a4c2-9b8d-4b08-a418-a0cc0b0d229a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1197885-3818-48e2-96fc-ec4893103678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cde685b0-58e6-4a0e-ae85-6cb77e6a7a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1d1669-7510-4843-81d6-956ca8be193d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc461c25-6c36-4f77-8179-03e63e1a980d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95232b5-671e-4c51-8908-a5ccee908c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbb5ba6-7026-4e0f-907f-3d518d803b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f773e791-e55f-4eac-acf2-e40eac424efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e271e2-20b7-439e-b42c-94aa46ebec02",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e9554b-3dc5-4490-a829-e6a1891581d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb50568e-fb40-4240-bfd5-098e44906895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b394ee3d-bca6-4fbb-9e45-4d76630f824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "832f3c59-0f08-419c-a4a3-73da73bf136c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eb5269-68ab-42b0-832c-8de54892a994",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa245cb-233c-4b34-b3cb-d9a085f57f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafe3917-ea87-4601-a864-5507a919d977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3aed054-e995-4a6d-8665-482724280617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9380c3d-d60e-4b1d-878b-d9e839669df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2864e1cd-f544-43d6-9c41-cf2e4007c7b5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04e2f85-ef69-4726-898a-36595f06f94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e3fb7c-7452-4c6f-b7be-fa01d36bee55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21481248-6ea8-4f2a-a777-ba28d3625cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "536cb4af-1f64-46cf-938a-8e4784134a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde2af3e-df6b-49d0-ab8a-3b0a13253e01",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f1f91d-6f59-4f8c-aa06-c940314078eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bf9a30-27b6-4e00-8aea-d008bff6214b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338f78fe-4de5-4d4e-a273-7682e656d2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eacb9ac6-4dde-4f0f-9918-cc567dae7d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b726e713-73da-4c08-83ab-9806105fe9f9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add6a75d-3559-4065-b7b3-49f6a73a6592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab1939a-43f9-4dbf-838e-5aa4e1fd9217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40b880c-b28a-4224-9660-6af9e7794835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "345fc3c0-5c19-4a65-98e6-2efc13f7bf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9233cb94-5f02-49ed-8eaf-f7f32dbcd921",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a83bdf2-4221-43a9-a5d9-2b0575bba25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7577fb4-6313-4b5e-947b-05d8190c96e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea8fd43-a964-4a42-9e59-ea1f2d23aa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a51d9171-707c-4535-ab8f-8f3fa1e38f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d4a7a0-b23d-4fef-a4d4-a7f79871f6ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27be176a-c313-405e-a55b-3ac4f6e46edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b43af0-722d-48e1-8959-f784553b2a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6cd007-4706-40bd-ba0a-c4e47973e8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab533037-5d8a-4e2a-87f2-9f6ec39b1480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e05146-cfcc-4f2e-a4e3-03db8985a55a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ab6157-e429-43b6-bbfc-a59ceb8f4f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6980f2c-d693-40da-a9c8-9fc72fd4b7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487c61f5-0809-494e-867f-b14cb92ab3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b501ae10-3cf2-4b7a-b535-3d98fb3d80e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0f6af8-e45a-4702-acdb-17b7e9d05ca6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91972af0-e8ef-4202-8e06-54baadf42ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6be1670-2512-4dbb-af77-154d9780c9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfb654c-3f83-489e-a0b1-6741281053a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f93ac79c-51db-42c0-acef-06f6e12d54af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9639706c-42a5-4a22-92ea-18d945fc7bf3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790b1d71-5787-472d-a8ab-771256be176d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d73087e-4c10-4b4b-b30c-a073abac19ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6418d7d-d84d-4321-8af2-3c200ba77d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "79e5a43e-2c3c-4868-9caa-ed3a3b5bdb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7616d46-b4f1-4565-9df9-d65f402d1e55",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb48829-4025-4f3f-9537-ec92ddc84074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35dd395-1934-4847-9a4b-d1c98c6f1a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b356cb-bca3-4b91-8e36-25b5358aa9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cc597c-1393-4184-a6f9-46af46179674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dd93c4-11b5-45d3-b12c-bc32d230d1a8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213240bb-e93a-4140-815d-636b9028375e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e191c6b8-0e3d-4be2-8706-aad5cc0b6874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5600d1ff-ec2b-4eca-bf1c-e9add54d1e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d035f57-93d5-47db-aa8a-80403ac566e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b9c3f3-8d3c-499b-8dd0-ec513fc67eea",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fac289a-eec5-49f0-bf24-a22a746a2b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bf7fdf-664b-4ee6-a204-5450671b28a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa01743c-7e71-44fa-b551-93169d8807c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c88aca-aa58-460e-8a4c-42d50c9286f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5c0d87-1295-49c9-be5e-8d80565cef63",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba49d355-7386-47fc-bd79-723404b4f8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e60b9d-6f6f-430d-afad-a7ca73b6e7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2e99ba-3b36-412c-9eac-345560eeaa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b185582-60f9-4ba3-a017-1bca3f5a8c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1090df59-2f5c-45ac-ba94-b96f2bad5d59",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269cf483-16f7-4a95-ad6f-4639fbabe87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40f36a6-5f47-44fe-ac29-89bf132b0182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e72965-4339-49d6-a9bb-2a9d9e683dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e620b1-3688-4467-b037-2abf1384b753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02fb58f-73a0-4c67-81d6-65e1d4336ec9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20f3c5b-4fbd-4673-ba21-54e1a958ca54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91d2d27-630a-4800-a662-c24d52b47d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113a66aa-9d79-49b9-8224-a76fe26d0fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "812ca9b9-ccc4-41d1-b437-ca48c1d9fe32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c442ff6-7bd7-4586-a813-1de4b8a3f171",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9083f63-5c6d-4048-b06b-aa2913d11694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78190d5-f2ff-49db-8cb1-2543d5c1b4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295fec43-7db8-48cf-b8b6-2cc1b7a40bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca852daf-e87a-479f-a211-89ff69a1356e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17cbc2d-f84b-4286-95dd-eda30ef203a9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fa7c78-a57c-40a6-b491-1c0374f3bbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fd543e-aa54-441d-968b-1f90ec63f31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049801e0-79ac-470f-a32c-d6b963a502c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5d6e2c-935b-4d55-98d7-2dc05328402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2859bc-b564-4506-a2b4-e8dd3e00fb41",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ad5f85-4092-4dd3-9d65-3bc993e0de23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6549b6-77c3-4b95-bbe2-18f330d40f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60807e77-1099-4926-a3e9-14851e1d9987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2206d05c-47cc-46ce-8696-9d05762a7136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9637554f-5941-4768-87fe-91f97686f359",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c079b74-3a15-40cd-9e2d-76c6285273b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80877521-d442-4a44-ab67-0c60c05798c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6e900f-fb03-4037-a4ed-ec7622b83bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "329f8ad8-97f3-4f82-9a87-24d1fc0d8c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cafa1c-38b6-4eba-955b-8a618d45bfd1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39c7d65-5fa6-4b6d-adf4-92a12e4b37cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de6e64f-47c6-4301-8759-af0a9c8a19ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e042963-7213-42ea-a63f-31991891f3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66954a21-fbb3-49e5-9163-f3e05a28d0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26f49b8-cb31-40f8-87d5-1f164757e0fe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc3d7be-c8c7-4327-8b7d-52065f2da172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70bab45-352d-4973-bb8c-c3465cf9fcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29225dea-f6b6-4972-a79e-d041d1957a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16e587c9-c542-4e6c-a2e4-2b98b9aa8729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1ae11d-4054-4e9c-8985-9cb1cdf297cc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbff99f1-3699-4286-a54a-1de43f7a07b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf141a66-e99d-4d88-920a-773b3ea455f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cdb069-2a60-4aac-8151-a5164d693a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b24f50ab-8d1e-4f38-b99f-645fabfdfc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b612d26-0afd-4bab-8116-28aa59c63a12",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bd2f4c-bddd-4675-a2da-7f0b8bb060b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a87327a-c5d1-4309-be1f-139e3d5101e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500ea794-a95b-43f4-81ff-f5d4e75de981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76ca15e-9804-4c03-b450-02b614efe9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cdc672-6135-4475-b281-90c422752959",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b95647f-af04-4d3b-9dca-a08d16639497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79bccee-4880-4923-b3b2-f3c98e43a2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e9daa1-66e5-4e79-8d03-22d4b6a4c686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe959db-2fdb-4c04-a7a9-f593dd13ffde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e463f37-88fc-4316-a9c0-e274e97f5129",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8df7df-e528-4516-a9b5-1c4f82031c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfa3bc5-8b09-4538-9d80-dd61528118d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7c2e93-ce91-4882-9f82-39a7d70eb108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4254f9a9-08e9-49a0-a432-032365ef4c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76ffce5-af97-40e4-b32a-9d81f8058456",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7217cc9-50d5-47a9-a5a0-14c4d9de0799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e155f0c-095c-4cb7-83c0-ef96d8c6539c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658f7e28-a4e1-4cb3-8130-7126532b73c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1cf172-55ca-4ecc-8f73-134789d92cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f522296-6626-4841-ae92-a048eff3b73a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d58ecdf-362d-44cf-86e7-57dfa6dae6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbb2add-64af-4d7b-aba2-fbee3bb7de12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e69273e-2515-4bb4-8215-806da8e115e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca361ab8-c3dc-46c5-ba1e-4d53446bbab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e7e611-31ee-4318-913e-a0e574c4693d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bce6ad-0cb5-4073-b5c7-5b260640996e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8df4e51-80cd-4a9b-95bc-5a29aa56f9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8363b60f-7af9-4dee-90bd-82bf4f0d16c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0eaeae-3e9d-4b49-bd4d-7236308b5e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd218852-793c-4a46-bed8-f0c85c189098",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4829764-7db2-4ada-8644-8c9648208ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa94b0f6-8ddb-4264-8196-fd03931450f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a39305-1a72-4b76-a1e4-58f7de6f0413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "04b3b0b3-cf9b-46ae-972f-e627cb8ede82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e34a0b-6662-4e8c-b36c-1fd744f47701",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e4c99c-7582-422c-8e8c-0e15ff7e42ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902dbf59-9a3c-49db-a842-db91317efc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b8d573-7dd4-43d8-8e78-a9c5d1b318d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4adf3a54-e28a-4957-bcf7-89a49a9f4669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c89dc01-77bf-4655-bedc-0a37676f95ef",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb1db75-5e63-49f9-93c6-d03d1f59f642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30da6cc-869c-4b38-9202-5fdc6afeed07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04926378-34d3-4eb9-a8b4-faf2b3d042c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "205ca991-98e6-483c-8aae-bc048c093d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ab5049-cae6-4c07-8aab-82d2b77977f9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c49480-a329-428c-a502-241dbd6bb387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ef5450-343c-4b74-9f4c-6a6bd0a7ca23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b5c244-d853-4866-85c3-6f53a6cc5861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09329a2f-8533-4e16-a0aa-3e484820e9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2715d279-0bba-45a1-b585-6b7539b17223",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd23a6-3349-4c21-bcec-f448e17dcdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab2cec3-7ef9-4edb-9d99-4effcb49a392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9d925e-e55c-4e5c-bc6c-8c0b587839f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52bd97e6-087c-4751-9f9e-5eecc4d8501f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d229a953-6639-4fe8-b957-8a5aaa408166",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748ed96c-faec-4f30-a8b9-fc46bb185d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e72680-cb2a-4481-a291-5f7f08580096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7ed7f0-38c9-4c21-9678-ce03799c19f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb80f30-af7f-4304-8d32-3c5edfde52ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6c2ac0-4d4b-4d5e-af20-36a0b92229dd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d90aeb5-1054-4f6b-9082-666d80dda89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7a7ed5-d2d9-4652-b24d-956aae6f4122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa455110-9472-485c-8d67-120f245df529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d54ee15b-ddf9-4ed9-9bcf-2732bb94fe2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1955213f-54d8-4eb1-9fd3-c29b7a72075c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45135e3c-d26a-405f-b90e-84826dcce912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef22c6d5-3a59-4132-bc3f-c4abf71ed7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7b19c5-6e82-45df-b293-b7e9464b3b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3e71fa-00d4-4ff4-a6f8-1baa6693bf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4803ec4d-0867-400a-be1f-50b380d83df5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfcc9fe-4c04-4879-bdf3-5aee0bc21db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ed913c-9b43-4c28-91be-881a959f9bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669452ea-d255-4b81-b921-a30edaa1fe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e65761a-b03b-452c-8444-5800feab5656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8085eda-121c-434f-a52d-e34716970082",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62961246-3bd9-40c3-ac28-8316a79c9192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96bf3db-8ebd-4246-b5ac-fc8bc9fba6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38014177-eff1-4645-9b90-7f9441153590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "505e2c45-5393-43e7-a74b-fb7c80e80e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16303f97-b777-424e-9a6f-a319cfe52703",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858582ee-1522-4cd7-952b-d1fc8a62811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b166803-6a6a-4316-bd22-e90028d8ecca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d615ef7-bdd0-4d37-963e-f09526126a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d052d4ff-7757-4eb1-99e0-0b65ffade7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125c6da3-ab0a-465f-9860-b065f7b5139c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fae6ff-b688-4aa6-8b64-07c3aab2ca1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9bc92402-ad07-46c6-931b-b022df641705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb8326e-9213-4ab1-83db-cc80f35bd31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "791d0d8b-b79e-4556-8a9f-8af9153cc823"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c6b9309-a89d-4860-931a-e4a8186a0c02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed02c5f5-d2c1-45da-b2c8-5ed50959fe75",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ed5c4a-5dbd-4c15-9dfd-f9433b1ac4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cb2e094-c62b-49ed-b519-3f83ad728582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855ae8fb-e049-45bb-b209-687fc66950a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b914b7e-8724-4095-89ca-e0a1131a69c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf5b887-536e-4593-93cd-33724d3d2a3d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb3acea-ad50-4cc0-ac5b-52ae01d6e40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cbe48d7-e77c-41c9-b33f-cc8380702993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71ac623-029e-4a0a-9946-11c48fcdae36",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b6519fa-1788-4dab-b7ab-7d13b5096fa9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9aedbad4-1c34-4ef5-8cb4-35f330f17900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5376ddb-1e8f-485d-b5b6-2589f165cc7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fad4d904-2857-4ce8-8c65-467351ecea02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dd4b4c5-a274-4ac3-bec4-5f7f4b79d0ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1ac9d1d-562e-48c7-9ae6-2387ea5ecc9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b3151e8-8fd4-46a7-9ebb-d96408df5765"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06acbb38-c843-465d-bd44-e47451dad03e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e47ac0b-9944-4fd5-b8b5-769bbbf99536"
                }
              }
            ]
          },
          {
            "id": "b599f719-8a10-4afc-a811-b871c77a30ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d313389-448e-4665-a492-112534296f8c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b73207c0-baf3-43b8-b706-f39684904fe1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9896ea93-2059-45bc-8c5d-507ec4ca4de3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6a75c80-5842-403b-bccb-d060f7ef0a9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "81ed0718-856a-4312-931d-70fb4069ce00"
                    }
                  }
                ]
              },
              {
                "id": "a2f2503c-a0d9-40ea-9d5d-6370da2dda7c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2f92a5a-c691-41ac-ab51-74711d468901",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "852e6be5-b81a-4755-9471-2475b6173ce2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66add4a6-7e51-4551-a1b3-de09657e81bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1247e07-2e78-431f-881e-9a90d77b3217"
                    }
                  }
                ]
              },
              {
                "id": "a58b716b-2b73-41d4-a275-4ec1014a6c5f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f01303c1-6ee6-4704-9fb8-abe433e05b4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14cc07a9-3ab8-4ea9-bd03-8b99f7e3bb14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebcdef6d-4695-4cb6-a470-73c74b89c209",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2363139b-d669-4e65-9614-69a1abc78a24"
                    }
                  }
                ]
              },
              {
                "id": "52040de3-17ff-42a6-a1ab-c7891c35c152",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8986a7c-8a1f-48e7-8490-3b2cd32a6aac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb646933-cb30-4fb3-a136-ebd970b17858"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9f2431b-ffbb-46d8-a876-96c478d370b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a681c275-b4e3-42a4-94db-9f05d32b898f"
                    }
                  }
                ]
              },
              {
                "id": "e876de51-8ca3-4680-8366-f09435340668",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "881021b8-a3d3-4654-97fe-ecc4dbf04977",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9bcb961-c377-4924-981e-034cc0fc8280"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a159c3e-f024-4b0e-935f-4caafeace34a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ec95d961-5f67-4bc5-ab57-a303dbab190f"
                    }
                  }
                ]
              },
              {
                "id": "af3a8e32-d994-410b-ad43-88d5a84513f9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b87acc4-e14c-486e-94d9-b5b43b64b6d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f864673f-35c5-4f6d-bfc3-99c32a9ff2cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a64882f9-2eba-470a-b2d2-03183a3876d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "47029b6d-73b1-4e4e-8657-a56d5edafdb8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b468014-780a-4739-9fd5-502b44498f11",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2d77960-f269-48fd-b263-3197171b50b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b8223cc-3cf5-49a0-90bd-79456a8ef507",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7887541e-1bd8-41b3-ae4c-8a49bc9a6290"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64148672-52fc-45fe-b3a0-c0f0b1f2d6c2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7ebe6b40-818c-419b-bd99-15331f84fbaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cc4784a-db91-4e53-a3a0-0901abaa70af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c95378f6-9a24-46d1-a5ac-ecc667682b06"
            }
          }
        ]
      },
      {
        "id": "40ce8085-b436-48f9-9d21-ee9fec2a4caf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "21226900-8752-4661-b1b4-882286393088",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d8609e8-ffbe-423b-95d8-586318412ec1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7e9f9e8-e232-450c-a870-a66657ef2046",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a898aa2d-1753-4610-b87a-b7ae82953b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c78b7b6-8901-4b0a-a53e-d2757cbb9134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6fd1cc-89b2-4e58-94a0-f4ff3cb3c67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7bb83f-6261-4c21-aa7f-6e05a2e0cc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9006f0-108d-4702-ac68-ec41a210133e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11352abd-db43-4514-9af6-06f5ad9ace4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7305810a-5f8d-404f-9756-123556b91bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7e3d5d-e90a-482b-bcd0-4c582647a650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7299e1e2-3e95-4339-a99e-59bb52235ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e8334c-f11d-448c-9057-472123a2aebd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a87abb-c582-4182-8188-ec4513f8eb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4c6d84-ca05-4c57-9004-3fab49fd7634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1567c1-9d27-4742-95cb-aae9d8e90ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a99f6de5-7d9f-4c5f-8b91-bcf25e9635e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bab8e1-5431-4258-b899-59afa5989843",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c396d6-7ee2-4e56-8663-edec9725bced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05eefccd-f7b1-4c6b-a388-30fb5ba29920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dbfc92-805e-45a4-9fa7-150e461a1304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a75ea5a-8dda-496a-ba5f-85ceb99a125a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5288b6-e738-40f7-8449-75acc20c4148",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a4f0d4-6a81-4300-abaf-88ac94c747e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac28cf20-a24b-4a9e-bbe8-9fea5e59de99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a24ff7d-a448-482c-8aef-93837d33db7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79b886a2-62d6-4121-90b3-4e1b378de19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196ac116-40f2-4160-aaed-38f536cdc5dc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3440d26-1fab-4dc6-a246-96c655b016a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b61f8b-9fd8-42ae-aad5-43b1511a8e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14da68df-786b-4998-abca-64bff2df514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a07f0a-490e-41f5-b102-29cc49bafe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61827f85-8ea4-4a83-97d6-d8eacf12ddb3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09129b9-2907-4942-b0f7-42207b813765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94113535-dbaa-4042-8638-b6db160e5ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd70788-65b4-4493-99d6-83da4a155d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc55b2b1-f950-41e7-81d5-cb949392a872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd878cb-0ec7-4a64-8cc9-2bc93b9c7b47",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072ccf7f-57a0-4d02-8bfe-558329d1586f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3042a0-3e42-4723-801a-c1ce5f288030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d09358-7926-4c95-a271-be977e71f935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "171943e3-a8e3-4cd8-993e-01770cb17040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9c7a6e-fd98-4f52-b579-00dbbc03e214",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af3f7ec-2556-4ac0-b25f-ba483c62b4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0f197d-c959-4620-9e58-f19fa393943f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64ed4a8-3077-4acb-808c-d3bea206f2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "705a5d81-26c8-4691-afba-2df0dcf72b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1ae1d1-efbd-492a-af26-0734fe14c7de",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd576b3-c4f1-4978-b39b-dd0a50c97660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1dedfd-2383-4d3c-b31d-ae26165d82a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e204ce04-171b-409d-bdc0-be2b0534585f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea06ccd3-774f-4546-8a61-4334851d5668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3b2f21-bd0d-4035-8a40-64cef74512d1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8ecf78-fdb6-4f5a-867f-e941a4c601cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea250a1-241a-4f91-9daf-9f9b567a5ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3206742-3e38-48ce-b462-c315b4a5333e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3f542110-d035-4379-8a32-6e448f733bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4664f3ec-723a-4177-b644-db57390bb533",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623f7b07-3920-4bc9-bd42-bf8c8e3d80bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec540d1-e81f-4bed-84b5-ad7aaf49c0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b2488c-9f1a-4921-8b73-96b35fdae9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51975fb5-bba9-4d5c-9649-d93c1b8dc4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0377a8f0-a807-408b-9c94-8c0a4cabd475",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bfe219-0fb3-47d6-876b-2fd521edb746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abb6cc8-8ad9-475b-983b-a18e37febb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d646882-e19d-491f-8950-07d6ba9c45a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d522ba-b3a8-447b-8f76-7aab3d2bc719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633ab6d6-4176-4bb5-8813-5d42fbb4e919",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c74be9-4161-4872-ae57-653f8fc6e583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad57475-c3ea-4fb1-9c5f-d077b9fd141c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207d2e35-8bca-4b0d-a61e-cd267d36e330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "427eb563-bc69-4c19-9176-ea4a147db586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4068d00-515b-4028-8fcc-d5dc9eeb9662",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4f47c9-0a31-456b-b661-b2b36068ca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b2f6bf-e17d-45d7-881b-f68a669a5d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1770bf-193c-4f2a-9ecb-403c9c038206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18a9ba6-48dc-46d6-ba47-f4f2d7ac8f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dda750d-de14-427e-923d-1fdacd17cf2b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179ebc62-532a-49b1-9b50-e4520f32435e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e162fca-6567-4584-a92a-97ab7b37a669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb509a4-63dd-409c-b6af-544ff918eef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7605c8-6b0a-4a7c-bd07-9850dc324e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38bf426-0850-4486-94d6-336356cdb066",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d71c05-eeac-43f8-9d28-61d0edb6d4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bced63-41f6-4a9a-a4be-7f4f21681b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c711eb8-b6c9-4dca-9f91-2c520e5aafe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35de7e2-e817-4c2c-8a52-a1917cbec459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d48a39a-1bba-4497-a1e1-277537ac93fc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7014b5f4-5c9b-46b8-9e22-6527c703e71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f08f085-2a2d-44df-a2b8-655e4ae14166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95377af-b7b4-4b4b-992c-920afdbd2977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5800ebb-c5a6-4d98-bf93-fb4b06bd8e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8c4dfc-5410-414a-a46f-895feb0e05bb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7264a45-5c01-44be-a152-7fed2a19d300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d469fb4-5324-4d64-b115-ee0c91531a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e3d40f-ccf3-4605-ac52-ab299abe7e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84cc5c6e-b54f-4dc8-9de5-e18e7c2b8fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602f4969-96a9-421d-910a-4232c248cea1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbe8e9f-0911-47f2-a9ce-119c4fbad32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499dbaf4-43f8-4be2-b845-df230557125d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb56bd7-36bb-45fd-8b64-17656b014368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d23649-c28e-4968-838a-22a1b1b474fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8514134-6da0-4e79-a976-4f5c4ca342f4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05f22cc-4b50-4c3b-af2b-b2380415e8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7ba059-08e9-4c4f-94c9-ee90ce0a9657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8a6ff2-82c8-4d6a-8f3e-710906f14cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e89f3f-bf75-4e36-a8b6-f5540477026e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e904af6-5c60-47e5-ada1-4f0ce7c127b0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e11fd4-b895-48a6-8a81-015a006e772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53266a9b-dbf2-4dbb-9446-cc1295580969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d59ebfb-b117-4b37-ae57-ae05a9fc0b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e611b730-1881-42ad-93cd-9bd0929cffed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239172f2-4f3b-47f0-8df9-7dc850c42133",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa84e511-c2fc-4764-aaef-fe918095d4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3404db-c273-4647-b71e-96f42f026610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9378eb25-ff21-48b6-a0fb-d84f164f24c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a417e6-3b6d-41fd-bbaf-ceb921e7300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7da61b5-ea76-4307-be16-1b31625045eb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a060df9c-1883-47f3-bdbe-a871473353ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e973d9c2-cf71-4c0a-88c6-6416222d947d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef71b81-df43-4b8b-a555-0906af7ef30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8639d87f-be92-4a8a-9795-e05f927c2334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63161ada-fa78-4c9b-9ef9-be4c86471c83",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02466230-f228-4372-9db5-5a46fbf81ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f574de33-ab75-45ee-90de-9de1a7aaff2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e46b90-35f8-437d-8955-37b028b397f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb6b527-b9a1-4b22-b63b-6f19aba388c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00da535-4b7d-4b7b-b688-d2d26688401b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b25f05f-4586-4bd4-ac1a-8a5d80710f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec68a6aa-0f48-4e55-a8ae-7a769c08e2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e801d2-8502-4810-a19a-329bda4c678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f49b8e92-9f15-48a0-b0f1-f1583a7d5132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e501aa9d-63a6-4fc3-b619-01594b68cfb4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e973eb-1b02-4a2e-8204-1f580e93866f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e54aa51-13d1-4bd3-bfc0-d93c88358d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13216dbe-7c42-46cd-ab3e-5bc9cef821a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ca29a9-5147-4975-a9bd-7ee39868602a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6171cf20-8aff-494d-aad9-59b1b097406a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb25b38e-02dc-4ff8-9851-1c459f1ea4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca4aa92-a9ac-46f6-96bc-60794d881d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f8fbcb-8ec0-4e6d-9842-a4b8f63418b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89e671d8-aebe-4dca-a6ba-41397621bd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4a292d-37c7-43d2-8335-6fc6b557f30f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fe51e0-2a00-40ba-b85c-1c0fe2300d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139888e8-8cb6-4562-b4bb-73e549e9c4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66af1a38-1aab-4ee5-9cc2-80de2f2b470b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc3eec2-18ed-4775-9c3c-972b31a84c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b5bb6c-4487-4c81-8cdf-602ab6efb7d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84749bd2-ed7a-4a30-b4fe-ac11470ce1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa32e27-d08a-4203-8083-1cebe7148510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bf091a-49af-45cc-97c4-b99a6ae2b4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1019ab4-9a85-4bbc-89d2-2dd96711f3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0938fb-9904-48bb-84f3-53aed1376b69",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632bc5e2-cea5-45f1-a661-efa11375d606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7330bdad-d608-4b62-8b2a-b0b109b0b5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9721f5-0f4b-49d1-bb9f-868fb4b1e089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc08b5b-7138-44d6-a78a-e49585cb0fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a585594b-c402-4e23-8317-86d799087759",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c72320d-1771-4f38-ac21-cd1211d025d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cfa01d-82cb-40c1-b7bc-f7da1f2e4173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa2acf7-74de-4976-b0f6-544f22aa61eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f418d8-b572-4c0a-b87a-2742a491234f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4928536-5cfd-4b88-9f13-58cdef6d93fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13871403-a52f-4b9a-a1f0-b5b8017af3b1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd48021-bf98-4168-be5b-b06c69da6aed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "713d6a6f-8a2a-4de6-a48d-a04ca1e97c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c587f9e-e753-49c5-a4c9-851bb55015c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b81cc8cd-c308-4332-b2d5-71b98d932fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773cc2bf-b848-4906-aac0-7044d09a0bdd",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95004b1-0219-4089-a90d-ef86a3b04568",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff918df3-d069-4baf-947a-1065b70f7f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12952109-c9cd-4f49-afef-31bcbeff4aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "634374f7-ae25-4188-8378-b6a660afba4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb9f4cf7-866a-4412-950c-f538189caeea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2886f03-dd09-4c96-b85c-ed3b1b94d51d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b30d42f-7fe7-4142-8b0c-2150a54ceb60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53cc2e31-45ae-4aad-82f2-4bb4942ee1c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71a8a2a0-d191-4c6d-b54c-006ff074758f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "da2d0538-7f2f-4914-b647-f17d6682cb82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c97463d2-458f-469a-875e-e73120f90046",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adbd124e-ab47-4487-a055-3875c322be7d"
            }
          }
        ]
      },
      {
        "id": "6613cc04-07ee-4f2d-81a2-c816cbe01766",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7cc59ab6-f00b-48f8-83fe-4cea136f6abe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d7014a4-f808-465b-8de4-e0fa02bc87c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "873aa02b-469b-4cf3-a90d-9b492b586a83",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a8717a-1baa-4679-b136-8ed843bacda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb34c54-ec99-4d6d-9271-7ab7f54e3e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb48b18d-6fe2-46f3-af19-5f946ff1e7b8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e1ba5b-b3cf-4c80-9b21-32bc5f9728af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8434bb8-0b25-4fed-9e02-62f4bad381e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cf61df-f6b7-4266-a52b-2b45cd2daeb9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646d44b6-23bf-4c61-a12e-3fa7416765d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4174bd-bafe-47fc-92dc-00e993e7ba89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821496ea-e6d2-45d3-912e-1a016a4907e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9814d7ea-3481-4681-8e57-cc3996529d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b0a26c-1863-4a76-a905-dd4152d54477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d899af1-a912-4d14-b502-9ccb392bc499",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb0a0ea-8a3e-4e27-b9e6-2fe79ee2c6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a676c8f6-8e2b-4d3e-b1c2-4a0983606144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067137f9-6300-4866-aaa0-41170cbedcde",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e74e56-539b-43a0-905d-c4e1e158ec70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595567cc-ec52-49ea-9a76-005a6a89b74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db018414-d0ea-48cf-bd8c-df7311cd3564",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7faea0c6-7061-448a-b5d7-1adf442b1793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe22447-be7a-42f9-8d18-c0088f150a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484a507f-721e-4f05-b992-a1ac42574654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e74afe4-cd7b-4aca-929a-4de819d4d577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4714f8-ab06-42a7-a903-da1f3100f1c2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe786b9-060a-41c1-a151-12a891a6f615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "577d2f54-3212-47ed-b8d7-f0ab788b7bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99eac12-aa4a-4f40-9cf3-53791b6ff847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487fe39a-265f-405b-95a2-eb912bc8c81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1470cf-0be9-441e-8ea1-af49145649d9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b6ead9-29db-4b21-a80e-c974f5857f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca2c049-6ada-444c-b6f8-a023909efb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efedd74e-1891-4547-9ce2-e533ba74924e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934469cb-b7b5-44fa-a036-d0adce7d30e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029f05ec-317a-4ca6-8e61-d07719fa474c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc077e58-a35b-47a5-a437-d6e269d6f2f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687c2163-c8e8-42f7-98c1-fd6219b10653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f88f42-f339-4146-bf8f-cb386f09505e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7217ba-aadb-4f17-be60-c9a4f21dccb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5a77bf-07f7-41c2-9083-4c46217b76d9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a890959-6c7b-4b8f-be14-700c058a2e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc541f1a-867b-4a6d-8ef0-362b9a5054f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1269d2-f6a3-4fd2-bd89-53a1a1cbaafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c711e6a9-1226-4f34-9ff3-aa500cf3439f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bb0940-fafa-4fbb-94b6-30774b6557fc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ecef18-69d8-4dac-a3ac-73ab5f8a563a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3626dab-066d-4af3-817d-d70321e2d983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17234135-30f8-4ca1-8d5b-2dc352b5b256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2250dd8d-fdd1-42c1-8211-5339b2b16aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8275c90-2984-457d-978a-472144099413",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ada7b7-efe7-469a-826a-3fea7d5a75e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adec9352-c2be-4f24-a16d-085e681e1830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef381622-b1f3-4719-96f3-f17232c7fc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22d72f1-26f7-4f6c-998d-66ea4e1a06a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4800ef-259b-41ca-8dea-7ff28f96c748",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604022ec-53bc-4910-bdfe-9ff615591c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8724f26f-c3de-470e-8f8f-2e1c049911bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b89504-997f-47d3-b15f-f44a086f2a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926295ca-9d4d-4c21-96e4-838ed1c363bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee880d3-b3ec-4843-893b-096de146e3f1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f82360-4386-495b-a701-bbd428b4a153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5777f00-0f07-43cd-9ca8-6f4ee9ce9bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27407de-4a49-44d6-aaa8-bdb6eb58c670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256ec6ba-6ec6-407f-9386-6bf6936a9fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f802053-fe57-4d16-83c3-f810c9f677a3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3957157-03af-4529-87ae-86844b8b8a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f2898e-a239-4f92-9e06-c5d727bd43a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377c4769-8244-4014-b018-b8a00a4d58e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fcd688-1460-4e09-b508-432543250c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a6c6cc-cebd-4f72-93cd-efb31f32ca75",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6ee7b3-9d43-402e-b151-4deb63023769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaf415c-fc3a-42d0-9fcb-c96f3d0b5408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289efbb7-1a5b-4ae6-8204-127ac2298a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3961d0ed-2d1a-493f-a3ff-4600b3b7f543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab3890e-682d-44bb-b14d-4614302a0370",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1135e415-3031-4ff2-9698-65dd7ccc39f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df5c0cb-a292-4427-87c3-5a4169e9f1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8016fd03-22b5-491a-aa63-160a610174d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6809080a-496c-45e3-bba9-dbcd86ab04db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25af58a-6036-42cd-8f06-afe5a109bff9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42fb23e-7599-4053-a296-92d92e875ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bc108e-ee66-42e2-9870-5322ad48f3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c4121d-9f6f-494b-a9c3-135d94125c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a785ab9-60bb-4c53-af5c-9922094a9a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6e162e-3267-4dd2-8277-8ca9fe41cd1d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aee140e-3d73-49ea-b5ac-f94ee10596ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805486b6-175a-4b87-bf2a-7222d97c2b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8c09fb-19ba-47a8-bdba-2b1327c7ddf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4ef0d7-b822-4825-8882-b1b7ddbc5185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0591eaa1-979a-40c4-98c8-b40d9085560d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72187bde-acea-462a-8f06-75eff0459ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8722a875-9b3b-4775-af62-cffa5ac6e94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6394d0b8-a32a-42e0-91b5-96112dcf2cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db7c5f5-e3e7-4206-a049-370aef663b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fe3043-dc51-4f55-a386-54f2b578fdea",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c529c33e-1b44-4c0e-9196-d1e929fd84cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673354fd-0a4b-4b47-af2d-9f615fa5d4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b1dfe-756d-4f93-a609-dfd475c04df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fce3fe-7f66-4726-8da0-9670dc378fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5092e9-81c7-4250-aecb-7696aa249ac0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5651687-4582-49d1-b92c-3e4a3e2e5cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be64c5b0-0f0d-4e36-8528-fe4c765d1a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce58de19-b230-4889-9bef-22a3eebfe028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae4ccf6-e4f7-402d-9362-60271b5689c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11d52f2-9db4-40f7-b12c-799c6c4004a9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76fa239-957e-4df0-a530-713d3367e818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e96ed14-dc3f-4d3c-a4dc-8128937392f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0991430-ca24-459f-9b62-b86954bff148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5dc167-176c-4a2e-abba-65ae5ceb099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715df598-1a58-49c8-a042-d9db92613f2d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edbd28c-8de6-4479-9c65-299699d798bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5401c53c-bce0-4dc6-a749-e5b154f51dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e686f4a-88d4-44f7-89c6-436f84941db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1b24a2-852b-4d87-b430-51f73ae9e607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50abbe61-f705-4a8d-8505-a544e1a09c34",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5355e62-a7a8-4105-aa38-b2ba17a5fdce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95154e12-1b38-4c20-a5fe-c314f84b84f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3b445c-9ee6-4a56-9d84-705687d17209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5744964-407a-48f9-90b1-57f916c4150b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b35d01-3ba8-4f93-8b18-a42f779c2e4b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d7d68f-2084-4384-bda9-49cd33e4f516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdcc15a6-cc44-4acf-87f2-c0d016bc4b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad60d91-0921-4be6-a07b-27946121d940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817cfc86-e9fe-4faa-a0bb-65f7e79e2117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e3491f-b31b-41a6-980e-933831476718",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5803dbd-ceba-4161-a741-88fa915807f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558ba6f3-b409-4487-889d-ce44279ff78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d2114e-141c-4b59-b372-f04f64baeaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15b5a2e-96fc-411d-9981-e6f5184f8cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f89bf4-5d75-435a-b1fc-10a0801fb673",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1722a3-15ef-44ee-a11a-225764958ca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927e1e47-05b6-4932-9d4b-abb92cc051a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1827452-141d-4cca-8c23-05697c4e898c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db8f274-7707-45cc-910a-4f784beb47d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9dbba4-6379-449e-97bf-631f6e207d02",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3e4bc7-602d-4d00-b532-89b4f085e9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85420cd2-714a-4366-9613-3300dadd1d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b91fc7-2036-40fc-aa2a-1270f5fcf1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5afbde0-c12b-4853-bed2-d64f01d6f655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be467c44-59eb-4615-8fee-8fcb9959d171",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6287ad87-4c82-47d3-9ba2-41045628a73e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e1a5d1-3194-492a-9d22-efd87e0ef29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83967335-6f18-4494-935c-20216ffb0d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72139182-5177-49c0-9239-b0b41edccd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee93392-53b1-4f3f-a160-143721e9d208",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b0786d-8e66-4dbb-80a5-9f69d884ecc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08533ff-f13e-448e-8ae5-de767aa780f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b0dd8f-86c6-4fd8-857d-47a1ed4336ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35f6177-2fbd-406e-a9a8-1460e3fc4ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f622191-e9ae-4f6b-9dc1-fc64be3ed4e8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87493c60-c5fd-453a-be4a-06e27b1f754e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5253b1f-6ef4-4bad-a363-ba4479c39932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f025fd4f-a62d-4954-bfef-94c5410553ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca07a84f-600b-40cb-a465-8549d7a0b740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5fb3f9-736c-4213-81e0-d092571a3d62",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1a9beb-0038-4b7b-9d3e-622b5f79810a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945c620c-9fd0-4cdd-97c9-78e043c41adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bf4133-aad8-4cb4-9579-02cead6018b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c28a80-e61e-4bce-a253-30a58146581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244e9dcf-331a-4726-99b2-caa737639bbc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e04e05-31c3-4734-84ad-d8b70bd3f933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59313818-0276-48b0-8216-b02b9eebc795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6be1712-8223-485b-8e79-2abcc87c0972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621b237e-203a-470a-b581-43a07751d36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88502df2-0772-4801-8cfd-5c76d6e6cd79",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e05484-7127-4825-80b2-d5c17cdac0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4f393c-8d7d-4db6-be6a-a210b5ebb13d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf21b2c-a429-4cc6-904e-995512492217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2bffce-0970-40f1-a6e1-98baddeeded5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688437bd-f63c-471d-91fa-5b9964724367",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9d47fe-9b7f-454c-9e2d-90d796d4e306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355108fc-a20b-4554-a044-176297d69e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cbdd9d-fb81-479e-9f33-d9c76f7a0fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5ded3d-6a29-4932-ac3f-27f31c2bd2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87408357-29ad-4024-beb9-3c8e8ededfc4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346612d8-4a28-4f3a-80d3-3ab055b98195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5baf8e15-ca68-4a03-90e0-1290bd2c391e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9182ae86-016b-4b0c-a4e6-f03391b7b52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9484a76e-d476-455f-ae94-22009cc6062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a415f2dc-5420-488c-98f9-88d7202d5820",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072f4f19-f4f7-4c01-bdf8-24af0612bd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33cda33-270e-4e44-b8b6-fc224b47497e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05a5dbe-2d56-45d6-9395-8b77a2acfcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e00270c-7dd2-49df-bf2a-dbd1d832aa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b347c79-5d82-46b2-901b-9ba9693cb6b7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbda0f5-01f1-4d16-a087-c6779fc3b911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc1eca9-b90a-40ff-a50c-113c338ce484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92c2daa-4d6d-470b-bede-b52d8b82599c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c546790-f738-40e1-946a-b6bf6b8da0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2e64ac-8b2c-4ffc-8839-d8988a627483",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e186f-f8eb-455b-93a2-e10ed9f9cbb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016c1147-d85c-42cd-8a08-a989de59b709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fb4eb6-1a43-4023-a48f-40b5fc0717f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9471b4b9-57c6-4e68-a8cb-b38f6577c87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c2fd29-c9c4-4722-8054-3132ff61e01e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c2111a-e6f9-4e29-a28e-2be7a32999bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cec4b9-074b-45fe-b17c-80363634ca56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424f5e49-956b-4faf-a207-5682b285a8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3833f51d-2bbf-4f51-ad77-644ce259b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c2402c-989c-498e-b818-fc75bba4aa6b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5a6f08-9716-4a8e-86db-cd4ab1297c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e18eaf-0698-401a-a624-bb9ac538a538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1401a420-2c23-4c65-ae2a-af553f0f40a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfc945f-6011-439e-b5ae-1141889c94ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e25dcb9-d4fe-4ca7-a7a2-eb3a51430000",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7327fa38-5d06-40eb-afd4-af418c23b84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e883dd21-8462-498d-b161-571fbe55a4c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfa9bc3-80e9-4cf4-8c30-dba91d3e2d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6208dd-48ef-4cf4-9061-dcfbb2196893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56ee7ba-a0cc-4c6b-a111-ff97e1893938",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914cedce-c0fd-488e-82c0-72aeae39fc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25731e1e-13d4-4c99-906f-f8b8c5951eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb34abe-a719-449f-b78a-e8dfac9329fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b3cf5e-b0e7-4cad-89f4-542198abec5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ce5f53-05a7-4556-9b99-354d1010583f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049a47d2-aafa-4ab5-8d8a-f913a7798a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c71eea-3d7c-474b-8170-7187bfd36649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b9b657-319e-47f8-810c-330580ae476e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2214b2d-8f3a-4e62-a11f-c034941cd808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dad92e-fdb7-4bac-8572-1142f343e6a9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f290e9-94eb-4a87-95b6-b0384003f3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba897c1-48a8-4c0a-bb72-8c4e1d2df657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cd3119-0d5a-4535-a93a-0dc7ceed69a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8c2e2a-dfc1-4ee2-9ad8-67e4a0a60cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aa4d18-b363-4ea8-8f22-a062511c235e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22456a4a-5dc9-474b-835a-79241f8e8f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4361787d-4da2-431a-9547-cfb0e1b07d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acca1d72-ca02-4c74-abee-7767b0fe0fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f479e72a-85b4-42cd-8063-89429dfc046c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecabf34a-9c45-4ecd-a403-9290825802a4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909e1529-a74d-4bab-b7f4-6da2062b850d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12757107-615a-4e7c-bfe9-2317525bf577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6408a9-5a51-4c37-8852-6af491bc5af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f71b43-220a-41ae-8555-175c1c76802e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a523242-0ee4-4b41-95d3-b30d606913b6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53ca03f-1626-4477-b3c7-84f81a58d39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c972f16f-70ba-401f-8b7f-5e21cc257252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e9f8a4-ff46-46e5-88c0-ddf645f059f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0735a39-6d12-4b12-b517-1920a479afe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965037ba-564e-4645-a092-e3d131447b0e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66feafd9-9f58-4bcc-9160-d9a2982c9dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74375964-fedd-4d6d-bec6-8ea108feb555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d05288-43e4-40aa-af30-4d13e0b6189f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f528ffef-68c7-41e5-82ec-b3ccc1e82312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec816950-22a9-466b-a0bd-ee1703367b0b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ddc621-b76a-4675-b936-88f1f8f81593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9d5b13-c2a2-4449-88cd-b6e8d89dd0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e07c53-8cc0-4eb4-929c-c2283f1cd543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a3242a-11ce-4943-a5fa-5d5d4f63f91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592a94a6-f977-43d7-8f54-d4f782425285",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec46d28-3426-4310-9b0c-1f365f6d8375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6684cd1-0f52-4f7a-b661-b3f59025c76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64edff4e-6377-4968-903f-edfe550621d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7bd8de6-66d2-4133-8f19-7a204a24e368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01700c68-a65d-4c71-b055-065e822b0d55",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477026cc-e417-408f-b556-49f25fa3938a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6260db-a37e-4dd8-962e-3d9ae07d5223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ac42c5-1b68-41b0-ab37-c0ca8dc9a5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6c97d2-7bb2-44d9-93e4-4f902cee27e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2132def-394e-4d54-a30a-d6a07d201d7a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04452c79-0a78-4c13-a6bb-c73bc3a9c7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f44bcc-9d85-4dc3-aca7-bf9d1b5633cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5456762-1d73-4a70-81a1-d9a5cbe9cbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e35abcb-1e36-4944-8d00-189d2336a6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee3e8ed-838b-44e4-8e8b-fbd34b4aaaee",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96709f1e-ed77-4fa2-8c26-4446a9866a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8a2d4d-9136-405f-b4fc-71ec2a19dc03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e617c6a-b989-4f97-81ed-a4901f3b1f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2cc725-dcb3-4e23-9281-2c98a22ee22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442e6ca3-bbe8-40a0-9a15-5987ac131a26",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b5adfe-d992-4ba1-ac61-da055cabb098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b22354a-2808-4e53-b5fb-b628b96a9b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "117b9cc7-141e-4a21-bf2b-2c7b9acb9afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a8d577-8fcd-44c5-8952-cd3179743243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161c5417-169a-4575-b147-fdbeb4b37693",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7eba9e-e0bb-41c6-afe6-001b21095548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a371fb6d-2300-41c9-8fe5-3037e704ba7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6330aa08-42bb-4bbf-8e95-ef979a381cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241b286b-8546-4496-b35e-626d38e07d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea285506-fcd6-476b-bb84-f53c7199f400",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2771deb-b56d-47ee-b5e0-a904770a6a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95dd3aa-e826-4528-b7e7-879715a760eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130d49cb-0f2c-49fb-9fc9-4737265e821f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8d33ab-3671-4b65-9810-3a38c93bc306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa73f58-e506-47ec-8d0f-1c05159a6132",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68748b3f-036b-4cc9-9219-8501558e5559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e69ab0-ae07-4398-8d6c-c78cf91486a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62a4b04-01c0-42ae-8e5f-b21a47119e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768b0302-855d-44f4-944f-1468c1f0cf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8802a133-74b3-4ce5-b2be-abf2a5f7afa6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a55b4a-9a52-46c6-bd8e-82eea0c00594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0e48fc-f200-443a-878d-867803f45aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1648333-4270-41fc-a24b-9cd990154c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636b5cec-8b50-4f4b-afea-fb700737b2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da42d27e-962a-4125-a4f1-faeff2d0a80a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b55a4c1-0dbf-48fe-a034-03f3d502b656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327074c5-b460-4a4c-a963-66185ccfa674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c48fe56-6864-44f9-8235-e1855dac0b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720f782c-0268-4c6b-8bbc-4f5acbbf4c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da3b9d8-5ef1-4723-9fd0-5f78a4dfa30d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd81611-b379-4156-a57c-daf2897b4f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd1a219-2c8b-45e9-93b0-3d987e27797f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52702d2-0a93-47a0-b062-d54ffeb27b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de5fc98-8aa5-4f53-a630-8138d078d69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de531cfb-b972-4587-a065-c2dda08415bf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d066be-3347-4177-b135-dcf46ac8db95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9af8b567-fa6b-4b99-b562-2a88a1cf2606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d067790a-14a7-47c2-ad31-284b988aa3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a372ec-8c6c-437e-a031-3f0833234195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dba1bb-1fe3-4306-a3f3-1f26d240c4dd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd438877-14a5-4f61-b0b3-7867ca977df2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b3f052-a823-4010-a447-067ec07a118a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c67a812-4094-421a-a1d5-39be363ce31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fda840e-2e91-4aec-865c-d64fa59b8bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae5ec1a-b8ac-4a8e-8ee1-bad2c67e4066",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328eef9d-1984-4614-af02-207cf57e0f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "738215a6-de9c-4613-9a4d-f6b1bd2c0407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6fd2eb-ab8f-4c25-b7f3-611cb56ef82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcaaac50-ab7e-4838-a641-9119a44f4e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0871ffae-e551-40cc-8aa9-ec856a369604",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b8d521-6c71-47b5-b12d-162fc843c3ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8142cba2-aef0-4a14-8e6d-92e9e0c4549f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c192bc70-d718-4e65-8edf-38d7936646f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9a6312-0a99-445a-a8b3-547c9fd454b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326b8b1a-5fbf-42fe-afc7-289210fc3995",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbb49f3-4b60-4c52-9894-1243d385ea38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "320f2589-c5d5-4a4a-a3b6-935d977d9f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa98cba-a7fd-4a09-871a-e5e907b1a1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783d40c8-9f40-4fec-8e9f-e8f79e8c9613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aa8f75-9f0b-4c94-a778-6cdebe325666",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eaa37c-ad24-4f04-b1a7-5333092bdcd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb34736b-8312-470b-abbc-ce04d075d4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16f050e-e1a9-4633-b9c8-99bd0d680827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee25d5c9-f96f-44bf-866a-a8cd3ee493e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50d4e2b-2b18-49b0-b366-4cd250728b45",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bee4ecc-d7e8-4a2c-895d-08c12e64b21f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05cd0fd9-5a1f-4f4c-9210-e4d64d07636c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf3fb57-2ec7-4df4-8910-abb129ec1822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6393c10e-0e75-448f-a1c6-daef1ac032ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840357eb-0f17-4262-9923-c314fd517276",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe1c755-d7f5-4327-bb4c-e9fcb62471bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24150f23-1e32-43fd-b695-77b662d86c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de8d0d0-302c-4aa4-b957-0b5410d7daa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21779426-6732-4be5-a507-c4b14cce667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840d4b4e-1f5c-411a-9877-e8cf744a5327",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd263b6-f269-4a46-a180-b6373cea54bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8063b26e-dc3f-49f5-be75-7577e58e9e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79a69fa-0974-4641-9b0f-1266f34401e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e47568f-2277-4eac-870e-020a204966f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76947ee8-e470-43f1-8dc3-cd8be022589b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cce7da-7c20-4631-bdfb-3907265ab657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc679253-377b-460d-8a25-d7b9ea354db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e414446-c4e4-4e39-9b11-33c8d8442a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c72835b-cdb0-44a8-a58f-b5ec59be0ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b13f12-f109-4ccf-9b76-3ae6434896c0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0be60ec-24d5-4108-b363-ecaa4a8e5151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984f132a-c198-4656-bef8-161c739d9029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aa94c2-7f60-4fde-b4d8-685eb5fff22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e471a5b7-02b3-48b7-a9fd-21a1ae751035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ef0d01-a844-4966-ad68-d47c44f68d69",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dde5eed-3cef-4994-af02-cfdb9dbb6434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "448368d1-7e9a-4f19-b4bf-5331abed553f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6e2464-374e-4195-ba8f-b525ae7da837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fab72fe-cdff-4a45-81d3-cd2b2befe7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b627c5-9c31-4de3-ac32-d10d3bc58596",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1761c96-0851-4583-8483-1fd8b27be931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24abccb-3d5d-4882-8c16-19b7782ab044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec24d2-b344-4628-8466-6fa694865cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9726ef7-86e0-4711-aa11-943965e6d3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b38e95-7574-4ff2-b7dd-7c733b22941c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e399dc9-c348-476d-b025-d7a12a9c3960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8503f0-2d3d-4f18-89b3-3e1909ca0cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b788f35-b206-4c0a-8ddb-814d3813798e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c76f2f-7d00-49d9-a926-e385d9e7002c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f6d977-6bf1-4e67-8114-0d70118f26f0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b57050-4ffb-405b-aaba-d3095afe126c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68271f7-58ae-4e77-82b4-178d2cc3b6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde7f423-3900-426c-9b84-1dcdd180213a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ba1cde-f1b0-4c5f-8b6b-043db399bc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af42e5e-0c61-437d-93ce-8330c980b917",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4508d70d-b4ab-4896-9840-710892f24ed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9f9e9a-ae7c-440c-845e-603f5f7b615e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f35d5e1-24d6-4789-8d28-5be2ca080c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a983a3b2-fb40-432f-acbd-18b22427633b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea39ced-560a-4d06-b1cd-7531eaaddeab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f064a5-5c12-42c5-82d3-ce0adc370643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb788e54-eb35-48f4-b02c-983360e9341a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8cfd46-35de-4c73-a986-d1eff0467608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c747d90-d670-40e2-b3b9-7d239e910314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9242d631-dae4-406f-8f53-2f88977df820",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ba3d5a-99fc-4ed1-bb39-c89946381c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37376b6a-bbc8-4e6a-b519-069123699f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e86adef-8e61-4b42-8ca2-4cc04f175d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95722007-446f-41a2-b136-7e6ca5ee67d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a925a062-76f4-4411-b324-897a320aa8c4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c54bf52-0b70-40ec-9a71-f820d7d062a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f98404d0-b622-4ef0-9087-d9cad1704b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf216558-5ee0-451c-9e91-0cc542cbc6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea0663f-a30a-47b1-a5db-4938cab5452f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73af16d9-1d02-4e7d-abfe-242654af4fd0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac893f49-8927-4aaf-ab48-8fe1e212295c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426b836a-c36f-4a9a-ad85-7245a70b3115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ca9d08-5889-4243-bd74-1a8c3fe7f5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c85640c-5bb6-4ee8-84df-f3eb0d0cec87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248a0ca5-f68b-461d-8dd4-43d81545c580",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806fc552-f87c-4c1f-95dc-724032b5333e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd079b26-4d4e-482e-9fd5-e11dbe3feb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5562a529-fbbe-4e1f-b871-840dc11e21e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b98265-270c-4e76-ab14-5fbf8732d75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38938d4-2f13-44ec-b80c-1f8b45fc465d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fa88a0-8f33-48de-8106-e6383650bba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25919632-7fc8-4c83-bfd9-e6f528e8b902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9983d37-43ed-4ff5-8a30-37ed8c6d7411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac533ae2-9b2d-4c21-8627-090a183928c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6891ae3-0acd-4d50-a014-7b32ab8e88c3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ea48c2-13be-4e62-9e5e-53024dd7c74b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb550f71-6021-4389-b236-ffb463e13496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fa0b11-4e9e-44c6-9103-fd77561b931a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307523b5-1ca7-486b-ab95-09925f5340ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a695d581-f8d4-4d46-bd07-a2862fef88d6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50efa48-d4a4-4e12-a6c6-8a318ae40ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9351a9eb-f7dc-4875-95ce-40c8161414f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5863bf58-2e76-4707-ba6c-67b1b6c1443e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfad7215-a305-4ca1-836e-af23a021dd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533a96ad-d74c-4c27-9e0e-585e0b6b52d4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556b1b1c-465a-43ef-8e6a-11e4a2585dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fea28db-bd0a-4771-8071-5905214d2211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf8901d-5764-4418-ab38-293d5263e149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589fd8ec-02dd-4d25-9b80-dc4c4f3134ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2eac7d5-f74b-4b4c-8b1b-07fa7d71ea5c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bcc439-d1c2-47b9-a28e-9ad3898e60a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed4f937-a3ee-4d55-8806-b6c258826cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9c0f52-3d30-47df-a707-08640583c269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa1b234-7852-497d-aa0d-17c1bb392aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b171eb70-ccaf-465e-baa1-ef164ac17972",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ce8889-1714-4abb-a322-f2d04be9f74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a2f111-ac21-464f-9e56-c4eb8cd33cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fa4423-7c34-41f0-8e0a-03163c97bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63e2f83-6cd8-409e-91bc-1cbf998418fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ce6449-7287-4b54-885d-6e7e595897ec",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e341a3-a043-461e-af44-c330190e8223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91878577-c6d1-4c97-b6a9-0d9377003063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8de8adc-c937-4de0-892e-1ed281af1069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a1f05d-2ed9-4c10-b3d0-c77c4d74c492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba61839-bc83-4dc4-8d39-d9552fa64893",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a068818-fe35-4249-9d61-c164cf332245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e735ee-90ed-4b80-a317-2cbbe8bf09d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e7646-7d0a-4a83-9f82-0c74a7af1a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1872f599-ecdc-4f23-8ab4-0be6e691fd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32ac622-1853-4977-9ee6-2f9f36487a2c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b86423-6620-44cd-bea5-5dcc0ff7a816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da513be1-2161-49cd-a58e-140147396a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d650beb8-4f33-448e-96ab-86e63fe44092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28866d73-8b19-4ac0-afbc-20034061ae58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38be9628-4913-4b9b-99d7-79f1f0e9a560",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66c0961-30c9-4d6b-ac53-721d9ff20f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f31939-eeac-4f40-bd7c-5f400173d26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ac19dc-85c7-4494-9e84-3753d309428b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd535cd-0b8f-4df0-a13b-6966b193a3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b274161-6e6c-40c4-948f-2eefa1ff9a87",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61beb939-729c-45b0-9642-c0a00cbef985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c374223-549e-4565-861e-6bc64af82e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e1ed81-311b-4061-8a3a-29977c40903e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77630892-2e46-4a42-9cb9-857b9a98427c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119d5fc7-a26e-484c-8a4f-6069bd8c59b8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063c9c5d-9ca5-4b57-a905-2318d78d2633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "281519c6-3e6e-42cc-be22-debaf48229d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7027e201-26bb-4bec-932b-486cb423a631",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c503a38-7b8e-4cb2-aef2-fb11768a4c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57355c0-d690-4521-ab50-c2565d39332e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c741bb05-6b27-4a9d-b9fe-74d33f9d381b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99df04db-07e0-42fd-9fdf-799deea49830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622723c4-009b-4659-9fe6-bfb94af82166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5900b1-e711-4c02-b10d-4b97c5763e75"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cdcb8b6-aa1c-4c3a-b1e4-100f8db3214c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6f84ed0-747e-4be1-a5f7-f1a788876801"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "867a0520-6f90-41d6-b1c8-845ae53f719d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed28844c-0eac-4192-a243-2f6fcfd05df0"
                    }
                  }
                ]
              },
              {
                "id": "a1c95b1e-1832-4196-9a20-440ea0b8ef69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e1d7825-ef4b-4ad1-8dfe-0fb4f26486ae",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e9bde4-5219-4d6b-bdc3-3ed40878fced",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c5236f20-1e9b-4eda-8f04-cfb6a4f849b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31bb9c0-608b-49c1-af24-f3e420b8f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b463d226-d8f0-4524-a9f9-47fdd199873a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac068d-478e-4ffd-adf8-7d0a09e222e5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a67299d-f3cd-45b2-9c1c-0b99c137c050",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "69741a6c-5a37-4d83-8012-4806975d832b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c78644-5b01-4c93-ac31-748d3e8e03c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f73b26b-6595-48ed-9e7f-ce755969c223"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee86667a-ea1b-4889-8a85-aeca191f4e1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e601b430-0c52-4552-a70c-44031f5aeec6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b4358e1-5e83-4fb8-9bf4-dd802080afb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cda42c81-c487-4b5c-9c70-72acd10c1ce1"
                    }
                  }
                ]
              },
              {
                "id": "017f50f0-38e1-4cc9-a43b-41290d69e59e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ec42f34a-7d9b-40c5-9edf-5475f743b5a4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9112cd-1d75-4530-b7d6-6b65deb9c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "035b68b6-d789-4073-a0db-47d977039cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445cc789-4ae6-430f-a318-403e61227e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385ac3d5-8302-4dda-986e-37026bf9a11e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3878af93-640f-4c21-a26f-b975710a5af7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05f72cbb-9757-47a1-82ef-4184e070f84c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cde95907-13f4-48d5-a26e-a36d07a6e783",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "28b1390f-845d-4d46-8fd7-29fda83beadc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8a6b300-3507-4cd6-a986-65a4083cbfce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c60aeec-e156-4833-a356-6498660ccaa8"
                    }
                  }
                ]
              },
              {
                "id": "290a0399-e3c6-4b6f-abbe-822ebd24db05",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb86b171-ae8c-4441-af2e-f05c5d999c67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0478ced5-c63e-471a-893d-076be4491778"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29a0427a-4ab1-4363-8c8b-469ecb8ea4a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fea3fa7d-17da-4286-9483-a06af2997e80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "682c032f-fd84-4158-a0a3-af2d5dbfd223",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0ab408e9-81a5-4f64-8aaf-3bf320c02941"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aff4d28a-b5a7-4942-a269-f56cbf4f27fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c8a295b-a6f4-455a-bebb-4268fcc28863"
            }
          }
        ]
      },
      {
        "id": "43ad9033-bd8c-4816-9c17-f8f370a665a5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "439faf93-0750-41b5-b81e-4f4570b22bc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c25fe2f9-d3e2-40ea-adf1-adadedc7febb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c87662b-edd6-4556-8bb8-ca2babf33b18",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b558e04-d127-4a66-9dd5-25a16d5c5c2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cf076fbe-514e-4a5d-8e90-c138d79bf0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2075aa-9aa7-427b-86a1-19aafb25523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2527d623-f148-43ce-b3bb-12feb4b11b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a068c3-aef8-47d1-b468-ccfb47e54236",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b610bf-4758-4320-8ff4-42778bc0bd98",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cf25f22c-e6b1-44ce-b029-2159fba55373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ebd9f1-868c-4a17-a6b7-d54b834e32fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e21dba25-c2d6-4234-b33f-ccb702d518e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fe23226-e062-4c26-b176-d4b5f19ebc87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccbc81a6-f8a7-4f34-9bb1-c7e0a593d0d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf8f5415-edac-4051-9164-1bc20f934898",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fba242d-a5ff-4fc1-9128-0fd9244220f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "424b73a9-eac5-4b47-94a2-2d7ee64e6af8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "acc106dd-5544-4c73-a5c3-4e1755241635"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cda74bc-5433-417e-b02a-df175ce4c20b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1c5ce31-e590-4b8b-abf8-f37ba407fb47"
            }
          }
        ]
      },
      {
        "id": "a0c56c10-36ec-4ce7-9e58-f58041adf077",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "55c7a956-f9bb-4578-8e0f-767803444074",
            "name": "Negative Testing",
            "item": [
              {
                "id": "287c2493-c17b-4b51-8506-bc802e1e846a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2405746d-e926-4372-ae6a-eae600e91d83",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f99ddb-ca38-43d3-82c3-40f2ed743119",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47b7b905-f960-48c1-9e4b-34b2f03b2881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052ed8c7-d717-4f0f-b369-267685f01fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "681c4cea-37f0-49fa-b753-77bc88ab7cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64f95f0-52d0-4de1-bf66-6e891f0b129a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d176ad-9395-43aa-aebd-aad34d8374a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c134caed-9e03-4a59-ae8d-285577f7db8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2132c7-9c21-45f2-87e6-e567afb4d636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa0b90d7-c5e3-4ebe-852d-23955652352f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79bfd42d-af4a-498e-93c1-09cab5d6cfff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffbebf8f-8ad6-4a22-9e8c-e10bb1018924"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69dc9349-f6d6-44c9-b447-fb951c4198f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "975a292f-574d-4a86-ad51-ae1e55e3cdb0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ec9ac80-5f7f-4522-bea1-edd308e9ac7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f172d15-ae25-4e55-903d-074273eae55d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bd0f6e9-d6e5-414f-abcd-eef43b58118e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71a3403a-141e-4d6d-b920-ff6cc9841fb5"
            }
          }
        ]
      },
      {
        "id": "35ab0b67-025b-4869-a7d9-cc0a9c6bb050",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c1f9022d-f81a-4973-835a-09118826ab8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c257fa7-2df7-4f38-8ea6-c9352982055a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06c5b17e-2bfa-4ec5-9b0c-8720217ea9c4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f59abc-3a06-4bae-a2f8-c73a672891be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b4975f4-329b-434d-954f-d24d6baf117b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6401c124-69f0-4db1-99dc-93a45cde14b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66f8d5cb-97b0-45a6-bc6d-444dad9e2169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3c8d48-e1f2-4c85-8d8b-464cb62a38c3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce79ac4-e6d5-49f5-9c43-489af9586d96",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "633b7909-fc37-4ac2-89b4-2f68df4453dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3df23d-224d-43fb-9aee-9db0ff6e5a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a0ef9bf-ebce-4483-9a7c-d3df6f550161"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4706ce19-1ba4-40db-baef-900603ac9768",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0150fffa-6822-4817-aad5-46cdeb0a3bab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a01cc2e9-980e-4ba3-b5b2-156770b1ba12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e96d4f63-b837-4f08-96ed-3a74fd839aa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26157a31-d927-49fa-ba09-858a81054dee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7816b19a-334f-44bd-805b-4b67a3b31883"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df423d7f-2191-4ef4-9d8f-46dd469cdbae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d526a6a7-5246-4cc7-a0f5-84ed1990556e"
            }
          }
        ]
      },
      {
        "id": "9849bf09-16b6-4766-aa1e-7f3b1e56dc5e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "491097b2-7638-4a98-aa4a-08f49892309b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bd1ad0e-3c2a-4c9a-9932-e159a65451d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "75871f04-21e5-4670-9c20-c94ed4cfa1ce",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ffd3d42-9111-4beb-a5e0-546479e3078a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c60b6b2-0b46-4013-a024-aa3e03709721",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.52307692307692,
      "responseMin": 3,
      "responseMax": 503,
      "responseSd": 46.8969763474421,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683506170681,
      "completed": 1683506185026
    },
    "executions": [
      {
        "id": "5387524c-b4d6-4f18-8519-8cf266b29a78",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6eb22bdf-655f-4dc2-af61-4a9413208397",
          "httpRequestId": "58f5b957-a898-4b51-a6f6-162acd01c372"
        },
        "item": {
          "id": "5387524c-b4d6-4f18-8519-8cf266b29a78",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f07c5363-5d59-420b-9e77-d44e626b9c83",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "fd3d1f9d-6eca-48d7-94c4-0c3d9536170a",
        "cursor": {
          "ref": "7e3e23d8-5e73-4d7d-97d9-69bda462a1fd",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8876a1d6-1b15-4a5d-913d-0f0b17f59d88"
        },
        "item": {
          "id": "fd3d1f9d-6eca-48d7-94c4-0c3d9536170a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3c0ddb4d-e3f9-43d5-bd3a-76efcb3ddac8",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "3aa27bb7-63bb-481b-a04e-613221e1f7a1",
        "cursor": {
          "ref": "09bf93eb-a8c1-480d-892c-dfbff62da034",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eb8cd9c3-3aaf-48db-9822-f40bd1df83ba"
        },
        "item": {
          "id": "3aa27bb7-63bb-481b-a04e-613221e1f7a1",
          "name": "did_json"
        },
        "response": {
          "id": "4eb75f41-3c0a-45a8-9b9b-5e662c075333",
          "status": "OK",
          "code": 200,
          "responseTime": 203,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17443a82-159f-4380-9fe0-2f2b6f44c3a3",
        "cursor": {
          "ref": "b102a87b-7ee7-41bc-ab48-d7e0b2d1cfac",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f4384195-d7ae-42c8-8286-61b5b8a606b6"
        },
        "item": {
          "id": "17443a82-159f-4380-9fe0-2f2b6f44c3a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5460c23-dd34-4bb0-8b67-170b06074e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17443a82-159f-4380-9fe0-2f2b6f44c3a3",
        "cursor": {
          "ref": "b102a87b-7ee7-41bc-ab48-d7e0b2d1cfac",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f4384195-d7ae-42c8-8286-61b5b8a606b6"
        },
        "item": {
          "id": "17443a82-159f-4380-9fe0-2f2b6f44c3a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5460c23-dd34-4bb0-8b67-170b06074e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10bd2d6-41cd-40e5-acb4-027248f5334c",
        "cursor": {
          "ref": "4fa5c4c2-a248-4d7d-b090-58f4e3cde57a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e75160da-384c-4d22-a590-cad0ff0fbbce"
        },
        "item": {
          "id": "b10bd2d6-41cd-40e5-acb4-027248f5334c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d94ed0c6-da65-44d8-826b-e804aa3cd3a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412b1f6f-1467-44fd-9f58-940c935a0df6",
        "cursor": {
          "ref": "1595a7d5-e77c-433e-bc0d-477ad84f1240",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5da7fd99-eb14-408d-b6a8-b02c32b4e8d5"
        },
        "item": {
          "id": "412b1f6f-1467-44fd-9f58-940c935a0df6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98d583d3-2fa1-4c71-8324-4a6521293046",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7addfcee-dd34-4602-8a23-7e38cbbb326b",
        "cursor": {
          "ref": "c3cd4ae0-6220-4174-b764-270a64e084ee",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0e588e09-cfcf-40a2-8dc2-7b885667de32"
        },
        "item": {
          "id": "7addfcee-dd34-4602-8a23-7e38cbbb326b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "45c7d807-4dbe-44a5-b51f-3b265839a681",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d5b972-a9c1-4689-aaac-19f76e45ab64",
        "cursor": {
          "ref": "32b29728-0b77-4b19-88c1-3e8d474b7049",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f549eb33-27d0-42d6-be1a-9ea0fbd0afc3"
        },
        "item": {
          "id": "57d5b972-a9c1-4689-aaac-19f76e45ab64",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "252be53d-ca4c-4b01-a629-ad0b2461d467",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d5b972-a9c1-4689-aaac-19f76e45ab64",
        "cursor": {
          "ref": "32b29728-0b77-4b19-88c1-3e8d474b7049",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f549eb33-27d0-42d6-be1a-9ea0fbd0afc3"
        },
        "item": {
          "id": "57d5b972-a9c1-4689-aaac-19f76e45ab64",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "252be53d-ca4c-4b01-a629-ad0b2461d467",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d257d9e0-602c-42c4-a62d-b84693fd1d5e",
        "cursor": {
          "ref": "74bb8894-e0b9-451c-9cd5-461692d1d7f5",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8583efed-c057-46b1-972a-f245e935da0b"
        },
        "item": {
          "id": "d257d9e0-602c-42c4-a62d-b84693fd1d5e",
          "name": "identifiers"
        },
        "response": {
          "id": "f2e9fef2-2127-4b82-8097-8a718a2ad99c",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c345bb4-4aa3-409a-b020-fc219ace5b9d",
        "cursor": {
          "ref": "996069a7-8a85-4e59-935c-5b5163380152",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3fb2556d-9756-4b02-b320-b4a34f7a89e9"
        },
        "item": {
          "id": "7c345bb4-4aa3-409a-b020-fc219ace5b9d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b6a938f-15e1-44bc-b07d-3c82efb3c3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c345bb4-4aa3-409a-b020-fc219ace5b9d",
        "cursor": {
          "ref": "996069a7-8a85-4e59-935c-5b5163380152",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3fb2556d-9756-4b02-b320-b4a34f7a89e9"
        },
        "item": {
          "id": "7c345bb4-4aa3-409a-b020-fc219ace5b9d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b6a938f-15e1-44bc-b07d-3c82efb3c3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc31ff29-9b0c-48c6-b30b-3165ee33dbcd",
        "cursor": {
          "ref": "5c3ee235-7df9-441e-bdb0-a96b556f38f2",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f38792f8-f560-4029-a0b6-872c38f39510"
        },
        "item": {
          "id": "dc31ff29-9b0c-48c6-b30b-3165ee33dbcd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6f06d79e-7696-4e57-9630-f8f4b6cdff36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe287038-0f71-41fd-8ab0-1fd8e8da0d28",
        "cursor": {
          "ref": "385159d6-6ea7-46ba-85c1-f625828e8ae0",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "aa9f471b-b68d-4d5d-b055-2dfc1116b6a0"
        },
        "item": {
          "id": "fe287038-0f71-41fd-8ab0-1fd8e8da0d28",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df49622f-5846-4cba-8e4f-d222d248010e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43524149-219b-4ec0-a525-9ff7406a10a3",
        "cursor": {
          "ref": "b1c171e6-df3f-470c-bfa6-12912159e557",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "290375ad-6383-498c-99e6-9afbaad2ccc3"
        },
        "item": {
          "id": "43524149-219b-4ec0-a525-9ff7406a10a3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "413db9db-feca-44b4-96a4-99ce4d4e3ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9f26b5-a276-487c-a854-7be5f9f81c5b",
        "cursor": {
          "ref": "2b85fed3-9d4b-4569-b069-4a6c4d732f84",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "091f85eb-ff14-47b3-9b50-91e70fd1be73"
        },
        "item": {
          "id": "1b9f26b5-a276-487c-a854-7be5f9f81c5b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "47d143f3-15b2-4e1e-90b7-f608fb1013e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdfacd0-e306-4d87-a2ef-d40cb5124928",
        "cursor": {
          "ref": "cf2ce074-ad50-4562-ac5f-f005fadaf805",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "323e7d87-ca14-4621-91f2-2ec01f4bc1e5"
        },
        "item": {
          "id": "5cdfacd0-e306-4d87-a2ef-d40cb5124928",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "50ec2c9e-5820-44f1-b9c7-68adfdc7e210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11729fcc-39cd-4b04-be59-31a511b948a5",
        "cursor": {
          "ref": "3869144d-2d9b-4ce4-bc14-6f9068d52b5e",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "84972b85-bd21-46f7-8c9b-c45b6a654a82"
        },
        "item": {
          "id": "11729fcc-39cd-4b04-be59-31a511b948a5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a100ae44-27c4-44ba-9153-982052a4c6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08bd05c-b8de-4896-b0c4-b7ed09892fa4",
        "cursor": {
          "ref": "9463cf1b-2cc5-4dee-a54f-72a16d7fe825",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d246b134-3e0b-4cc4-89e9-07af7a3c9fb6"
        },
        "item": {
          "id": "c08bd05c-b8de-4896-b0c4-b7ed09892fa4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "43cb391c-33d3-4c3c-8739-af7a309f8137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943accc3-59a5-4b2e-b62d-b17fc89b5729",
        "cursor": {
          "ref": "d8ec2625-e571-4a80-a365-c56d8dc36dd6",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "589c0f02-47e8-4df1-86d2-602300f37b93"
        },
        "item": {
          "id": "943accc3-59a5-4b2e-b62d-b17fc89b5729",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3274d2fa-c9d3-41b6-87e7-146cedbf79f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c809e36f-0fb0-4b1b-a51d-f229096b197d",
        "cursor": {
          "ref": "0fb86a21-55c0-4e15-b5ec-d141cfc0fd1b",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c6e64052-d31f-4ea9-85cc-9320e65df202"
        },
        "item": {
          "id": "c809e36f-0fb0-4b1b-a51d-f229096b197d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "caba5d3f-d454-4eef-b34f-9bca2e0629eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a32b9d-f5a2-4ec5-b400-aae240af6f76",
        "cursor": {
          "ref": "457c8bb6-e15b-4c24-8e71-5ac62f1cb740",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4feded51-8c2a-46fc-9c1c-20e9138cd624"
        },
        "item": {
          "id": "03a32b9d-f5a2-4ec5-b400-aae240af6f76",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "eb375dd5-ce44-4368-b7ef-c1aec59d5718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b28d9a-0d67-47d5-9242-8a670f3386a3",
        "cursor": {
          "ref": "8c0b0581-1c88-4a92-837b-b22a349510ee",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0ef130ca-47f8-4166-94f7-09fbf073e3d3"
        },
        "item": {
          "id": "b8b28d9a-0d67-47d5-9242-8a670f3386a3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "047e1eb7-affe-431a-adf3-25f9c787b260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6df995-886d-4e70-9214-5b0de3f86be1",
        "cursor": {
          "ref": "d6815ecf-ec16-44f5-a607-c609032a6836",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5c4a72c8-5840-4305-a611-85fe5d8b493f"
        },
        "item": {
          "id": "de6df995-886d-4e70-9214-5b0de3f86be1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "52abfaad-7f71-4116-b108-295bc5180f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43399260-6e74-4c0e-bc5c-7aabdb217200",
        "cursor": {
          "ref": "2a5d07ba-6f49-4c7f-8c0d-1f15dd9b6556",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1f9ed55a-6598-429b-b76d-bcfc2d5e245f"
        },
        "item": {
          "id": "43399260-6e74-4c0e-bc5c-7aabdb217200",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8d1d3966-8243-432c-9e3d-35993fe199ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ae2d68-3683-45da-877b-2d613bec33e3",
        "cursor": {
          "ref": "1ce47b0d-52ff-455e-b1c2-45896c5359d8",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ebce3149-c50b-4f53-95cc-548a76b6a3ff"
        },
        "item": {
          "id": "d9ae2d68-3683-45da-877b-2d613bec33e3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d35f3d68-ef9a-41a5-9039-5967808c717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b5aa0b-abbc-46d0-a2e2-f1b2133be287",
        "cursor": {
          "ref": "de60dee7-f500-489a-81e4-3f7b306c860d",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4e69009e-9b1f-42bd-8c31-ef32aee10705"
        },
        "item": {
          "id": "32b5aa0b-abbc-46d0-a2e2-f1b2133be287",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "83be8fa5-5f0e-417e-b92e-fb240da8aa69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee76998-5820-435b-bb29-affab5c1d07f",
        "cursor": {
          "ref": "e3f1ec6a-fad2-43a4-8cbe-c1e389cfdb3c",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "32770f8e-538e-4cde-b1a5-31084c484851"
        },
        "item": {
          "id": "7ee76998-5820-435b-bb29-affab5c1d07f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "919a940e-eb6a-4079-a3ce-e23706c49def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6bd275-634e-423d-877b-85e0f03fc9cd",
        "cursor": {
          "ref": "ce3774df-a243-4623-bf7d-d67881785faa",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b01b1780-4bc9-4b0b-ab9f-2f65980fe7cc"
        },
        "item": {
          "id": "aa6bd275-634e-423d-877b-85e0f03fc9cd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f3ec204b-cdcd-4a3d-adfd-8a1ed5b5ca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7e8798-c414-44d1-943b-036226487ca9",
        "cursor": {
          "ref": "26a13b98-258e-4b81-afb3-9cd71b97d917",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "503819fc-a121-4b50-adbb-e6f3cbd927a2"
        },
        "item": {
          "id": "bd7e8798-c414-44d1-943b-036226487ca9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c02c35a6-0547-4fe1-ae69-d014803258bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05cacbc-67a6-4fa1-81aa-77705ae041d8",
        "cursor": {
          "ref": "5cdf6f15-76c3-47f5-9774-5a4e930adfc7",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fb847202-1d97-4f66-b039-84e7409270e8"
        },
        "item": {
          "id": "e05cacbc-67a6-4fa1-81aa-77705ae041d8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "00938ab1-7dd8-41d9-b808-a255df667ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0724874d-ab39-4567-ab6b-023d3cada507",
        "cursor": {
          "ref": "11f7a6d7-976e-413a-b0f5-5bd13b8b5c58",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b995a83b-9bd3-47d0-9e0b-805a18d57db4"
        },
        "item": {
          "id": "0724874d-ab39-4567-ab6b-023d3cada507",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "12c547fa-4b84-4060-a9dd-fc08be9c5970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dd597a-8517-49a3-a20e-85cff722f999",
        "cursor": {
          "ref": "12646b0a-5860-4db5-ad6f-f52a3b0db6b9",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9fff5951-fefd-47c9-9374-e3f9f30c1cca"
        },
        "item": {
          "id": "24dd597a-8517-49a3-a20e-85cff722f999",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cdc3bf11-2c42-4721-a3c3-0860a1589021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d7c03c-8f1a-43f1-a3fb-0d88059ab433",
        "cursor": {
          "ref": "f2801b3e-eec7-411a-a2fd-7336c307a983",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1a3e32de-1c5e-4b51-b626-89837f76efbd"
        },
        "item": {
          "id": "11d7c03c-8f1a-43f1-a3fb-0d88059ab433",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "40d9d18c-4878-4b65-a2c7-3fe84463fd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26673c1-af83-4975-8733-8f500b33e891",
        "cursor": {
          "ref": "7c917d4f-05dd-43e6-a702-e5dfce6a9796",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "822bd804-8d61-4d9d-8fae-bd66bc14057d"
        },
        "item": {
          "id": "e26673c1-af83-4975-8733-8f500b33e891",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "52ec5fd7-89e9-434a-aeb9-68466e2fe4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f09e0f-ed5f-4788-b41c-ec450bdbb95d",
        "cursor": {
          "ref": "22fc9f15-8a79-4565-a236-f74a5686e665",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ef1477f8-41a6-48e5-9a0d-b492b33e30d4"
        },
        "item": {
          "id": "f4f09e0f-ed5f-4788-b41c-ec450bdbb95d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aafde5f1-06b3-4698-842b-c79a79d2367b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621ee684-813c-4eac-9587-e731f1ab1c5f",
        "cursor": {
          "ref": "ea76d322-8382-4b50-a16e-c8852614ce78",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4dbe3e5a-e295-4d23-ae2d-9dac330cbd76"
        },
        "item": {
          "id": "621ee684-813c-4eac-9587-e731f1ab1c5f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7b492377-9bf9-45ea-bc86-a6bf878d5589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758d165a-2882-41a0-b77f-e46ddffd80cc",
        "cursor": {
          "ref": "e8336e78-6f75-4048-992a-3245d95f13dd",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a55068e3-d23d-46f8-9637-c71869766c22"
        },
        "item": {
          "id": "758d165a-2882-41a0-b77f-e46ddffd80cc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d43f6da2-8138-4721-944f-480096cf228a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba82da2-316f-4557-8d4a-812990526a47",
        "cursor": {
          "ref": "a6da6719-ae48-418f-b1c0-c52285e9ddb7",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ee28ad73-1695-4e29-848a-f478c6e07baf"
        },
        "item": {
          "id": "fba82da2-316f-4557-8d4a-812990526a47",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f386bd4d-09e2-40ff-8aff-65993b6f6fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d4e7ff-1aae-4770-9407-b857095c6a3b",
        "cursor": {
          "ref": "d1a9200a-b244-47a0-8c93-4c7443aa83c8",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b6b36202-cbcb-4223-8a74-e72d6c14054f"
        },
        "item": {
          "id": "e6d4e7ff-1aae-4770-9407-b857095c6a3b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d45de015-6257-4e6e-8d93-893367426bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6395ff-9b89-4277-ba9c-de1127d52480",
        "cursor": {
          "ref": "6645f789-7dad-40a4-b0ff-2f206272985f",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "faf3d440-919c-4c7b-ae74-afc3b72da356"
        },
        "item": {
          "id": "0d6395ff-9b89-4277-ba9c-de1127d52480",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8af971a7-78ae-4af8-b29c-56d87fdb5b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e794e7ee-3789-4f22-8640-7e88ac1db016",
        "cursor": {
          "ref": "0b734f33-230b-45d9-ab2d-1bc13fa560dd",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b8e29fed-f6f2-4989-87d1-2b872924e6cf"
        },
        "item": {
          "id": "e794e7ee-3789-4f22-8640-7e88ac1db016",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f374ef76-2e32-4a87-bd9f-0a154efa156f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e068fc-fb16-412c-a7b1-0ec678c7d323",
        "cursor": {
          "ref": "6c13d942-359a-4660-8cc5-0e73d8dd6298",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b2c9d3e7-b079-4c09-8481-fd60204e2b66"
        },
        "item": {
          "id": "90e068fc-fb16-412c-a7b1-0ec678c7d323",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f50fe945-d859-46d1-a956-48d2ecd19f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aef615b-49e2-4e36-919a-435c334dea8b",
        "cursor": {
          "ref": "1f3c4971-b73d-4ecc-8d63-3c8c1cb40318",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d0729f23-fff5-4ccd-b957-7787e64adba5"
        },
        "item": {
          "id": "3aef615b-49e2-4e36-919a-435c334dea8b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "241036c0-e9f2-441a-855e-1cdd5cb0cd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d95deb-783f-4d80-9c7d-f253b0165545",
        "cursor": {
          "ref": "adab500d-f245-452c-9b44-ff5f1334bd00",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5f17122c-e098-455d-8056-3050bc559e68"
        },
        "item": {
          "id": "14d95deb-783f-4d80-9c7d-f253b0165545",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3d4db670-9a8f-4f27-b355-b65e12a6f45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125e2e1f-7fc3-43c4-8d7c-71e227fac256",
        "cursor": {
          "ref": "82a9b298-fc16-4b78-8e53-27b2a632539b",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "aca370a0-3611-478b-80d0-5db5d6a4c7b5"
        },
        "item": {
          "id": "125e2e1f-7fc3-43c4-8d7c-71e227fac256",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c5cd062b-f286-406a-8965-2f2ad7ab659d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db2430-8e10-414d-8930-257aedd44693",
        "cursor": {
          "ref": "d8528024-56ca-4679-864f-b06d719cda58",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c9e77ea1-8171-41ec-89ef-153c8dfb3585"
        },
        "item": {
          "id": "75db2430-8e10-414d-8930-257aedd44693",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "24164ab9-ab77-4ac8-9511-0363d4132259",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 16,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633b2783-62f7-4d05-965e-53012917f49e",
        "cursor": {
          "ref": "901acdb0-4559-49a0-b7bc-a5f0d4fedddc",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b5d1d026-dbef-4d55-a5d5-88a5c7b3f039"
        },
        "item": {
          "id": "633b2783-62f7-4d05-965e-53012917f49e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9559c5bf-793c-471b-8772-873601ce6273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0473f44d-6410-496f-bcd1-f373d001ab8b",
        "cursor": {
          "ref": "73423b8a-fbd3-48a5-b144-3b57842ecf80",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "edad69d2-d5a8-48e7-bebd-815d40d70278"
        },
        "item": {
          "id": "0473f44d-6410-496f-bcd1-f373d001ab8b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "94b37ffb-c61c-4b41-aa2b-76f73fb15283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126179b8-696d-42ae-a885-453bca934210",
        "cursor": {
          "ref": "0df4a683-f280-4a30-a6f0-5fa649932302",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "631981c9-d13c-41fc-98e4-bf527113d3e5"
        },
        "item": {
          "id": "126179b8-696d-42ae-a885-453bca934210",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e38fdc26-0fff-4930-9ec8-3c2050ea5cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b719c3-603b-41c0-adf2-dc9ac819c03c",
        "cursor": {
          "ref": "ccf4b33e-b5b4-4e04-81c7-96fb0b9ae8df",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "86915581-ddde-47b3-8849-6054b36daea4"
        },
        "item": {
          "id": "b5b719c3-603b-41c0-adf2-dc9ac819c03c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f1dbcc5d-0d12-4a66-8dce-0f0a0d1ff2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f6cb4c-eb26-4b98-821d-17d48c84bfb9",
        "cursor": {
          "ref": "3081fe93-54b7-445c-b161-2037986b957b",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c0d96dc4-fb64-4c02-abf1-134acbdde61f"
        },
        "item": {
          "id": "03f6cb4c-eb26-4b98-821d-17d48c84bfb9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "05b61b1c-3f4a-41d8-892c-dc75d6550051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad872d2-4509-4ca6-be50-7f51d957e216",
        "cursor": {
          "ref": "c002361e-c696-454f-859b-32292187d8b2",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0c6b15c4-5039-4f5f-9d7b-90c03248588e"
        },
        "item": {
          "id": "3ad872d2-4509-4ca6-be50-7f51d957e216",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6cf61fd5-4bc9-4d64-9492-662b4c8ec73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50f9cf9-d738-4bf5-bd04-39c2ee6458c9",
        "cursor": {
          "ref": "62a9b7ac-3992-4661-9468-7a4406eb0854",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8b956a41-253d-4581-90d8-73b8238cb91b"
        },
        "item": {
          "id": "b50f9cf9-d738-4bf5-bd04-39c2ee6458c9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fe0b0b73-7221-4ae2-91e9-bad58432b7be",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ead907-47b6-4c7b-b6cc-4106240acf18",
        "cursor": {
          "ref": "fd8f6033-259d-4bc4-9bc8-3ba3c49c2029",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9dddfaf6-0afe-4c3f-a28d-fce6289b6436"
        },
        "item": {
          "id": "55ead907-47b6-4c7b-b6cc-4106240acf18",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f66f77cb-fe61-407d-a0bb-bfb583bd13cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d8ad1a-1796-4133-9e4b-e7542d706262",
        "cursor": {
          "ref": "2d17c3a8-51d8-4923-a9d3-6b9130b746ab",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "14236108-ea34-4bbe-b105-18d380b9a228"
        },
        "item": {
          "id": "d1d8ad1a-1796-4133-9e4b-e7542d706262",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e88aad42-3088-4a83-b30c-feab80f0b8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a60bad2-26e0-46f7-b153-b7fa5ba94297",
        "cursor": {
          "ref": "c21993e7-359f-47c8-b0f5-bad730f628f8",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e400dc9d-2cec-4ca6-a8ff-26b35a066f49"
        },
        "item": {
          "id": "0a60bad2-26e0-46f7-b153-b7fa5ba94297",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "05504a45-3207-412f-b658-430e8ee3b8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd146206-0891-45bf-b746-cb612406265d",
        "cursor": {
          "ref": "c75345c9-7029-4e0b-b25d-9eef591ea82b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2e47fd8e-60f0-4663-9fac-465e7b519c28"
        },
        "item": {
          "id": "bd146206-0891-45bf-b746-cb612406265d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a74acba-e754-45de-858c-56dd472be69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86014bd1-3b9b-45bd-bc8d-f355b30cec0c",
        "cursor": {
          "ref": "c3cf3e50-e4db-40ef-9a7e-b44a750d2b90",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "625269e9-f852-4838-b659-df84569be6a4"
        },
        "item": {
          "id": "86014bd1-3b9b-45bd-bc8d-f355b30cec0c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9b1206a7-aba0-4c7b-8a77-ddd3e4405bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c794b81c-b694-4e17-8a90-82df3f1abefb",
        "cursor": {
          "ref": "4bff9b28-84a8-4ff6-817a-2c186c9afe28",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2ef71d21-5ec7-413d-98e6-3b04e4b72e34"
        },
        "item": {
          "id": "c794b81c-b694-4e17-8a90-82df3f1abefb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5b892e04-abeb-4494-83c0-3a6a0a2d6229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926fc537-d114-4d68-910b-37bada447c07",
        "cursor": {
          "ref": "8b2267eb-636b-41e8-b6b3-7d1b89af200b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "32efcc16-d502-4255-a7f6-76db6cbf5d67"
        },
        "item": {
          "id": "926fc537-d114-4d68-910b-37bada447c07",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d63d57c3-7a0f-4733-8432-cd74753a5608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1d1669-7510-4843-81d6-956ca8be193d",
        "cursor": {
          "ref": "30adb062-7df8-4326-8c6d-d028d0dfc3cb",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e58fd3d6-d7dc-41e6-abe3-a8cf718e6e03"
        },
        "item": {
          "id": "ce1d1669-7510-4843-81d6-956ca8be193d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ec0d1013-b8b7-4545-aff0-42506bd14d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e271e2-20b7-439e-b42c-94aa46ebec02",
        "cursor": {
          "ref": "102ac89f-d745-4479-891c-64871e127822",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1394b535-e6b1-4325-b3d7-e64eca4fbd6e"
        },
        "item": {
          "id": "84e271e2-20b7-439e-b42c-94aa46ebec02",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "526bcf24-fc85-4190-87ca-f5d1ffce5ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eb5269-68ab-42b0-832c-8de54892a994",
        "cursor": {
          "ref": "e7a1865a-3f68-4ed1-9d1c-4b3dab76a009",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "255e958b-1518-4ba8-bce7-c22a399f99d6"
        },
        "item": {
          "id": "30eb5269-68ab-42b0-832c-8de54892a994",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d54ded3e-807b-4a41-aba5-cb5d1700e7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2864e1cd-f544-43d6-9c41-cf2e4007c7b5",
        "cursor": {
          "ref": "acbcee60-2611-4360-8d4a-7adeb51f1f03",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "234d5ecf-df3f-4693-8f68-32e65dc63b7b"
        },
        "item": {
          "id": "2864e1cd-f544-43d6-9c41-cf2e4007c7b5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "145b6977-e5ab-4c06-ad57-158fef8a5028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde2af3e-df6b-49d0-ab8a-3b0a13253e01",
        "cursor": {
          "ref": "0da33fa1-f56c-491f-9735-4606ee5fb5bd",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a46f2fab-6146-44b6-91cb-fabe991ef8d8"
        },
        "item": {
          "id": "fde2af3e-df6b-49d0-ab8a-3b0a13253e01",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dcbf9350-b8d0-47f5-b416-e5cb86b49d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b726e713-73da-4c08-83ab-9806105fe9f9",
        "cursor": {
          "ref": "c96d6614-c966-4cb3-abc3-f52670d4d972",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "046fbebf-9730-439e-8841-b60fd5b88863"
        },
        "item": {
          "id": "b726e713-73da-4c08-83ab-9806105fe9f9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "66c27f5a-50ad-4d7e-976e-b747fd8811c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9233cb94-5f02-49ed-8eaf-f7f32dbcd921",
        "cursor": {
          "ref": "b0ace045-7b6f-4b17-a4ba-0dc0f96a31f6",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "727bcbd2-7c46-45ba-83da-09580a88a114"
        },
        "item": {
          "id": "9233cb94-5f02-49ed-8eaf-f7f32dbcd921",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e4f616c7-810b-46f9-a850-2fa2e340144b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d4a7a0-b23d-4fef-a4d4-a7f79871f6ba",
        "cursor": {
          "ref": "1a42df51-32b8-4391-a271-f468278a5f9a",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "66adcf0f-4c91-45b8-9464-cd85915e3b38"
        },
        "item": {
          "id": "77d4a7a0-b23d-4fef-a4d4-a7f79871f6ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "290cc250-1942-4841-8f2c-a6f2660ff707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e05146-cfcc-4f2e-a4e3-03db8985a55a",
        "cursor": {
          "ref": "51998cfa-6f97-4f3d-bacb-595d4b01bdc1",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c3edbe88-eda3-4088-a981-0f079f97bba5"
        },
        "item": {
          "id": "81e05146-cfcc-4f2e-a4e3-03db8985a55a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "89072002-e381-4827-91ce-a595979f2aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0f6af8-e45a-4702-acdb-17b7e9d05ca6",
        "cursor": {
          "ref": "32c70836-f23a-40c4-8edb-70850c45d528",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "986973f7-bead-4d67-9e96-8bf738fcf72a"
        },
        "item": {
          "id": "2e0f6af8-e45a-4702-acdb-17b7e9d05ca6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7e20f15a-1407-4f4a-a611-a769b8555941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9639706c-42a5-4a22-92ea-18d945fc7bf3",
        "cursor": {
          "ref": "e0fef586-163b-44e1-9ede-e908453b996a",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3944c852-653d-498c-a9ee-28cba9af5762"
        },
        "item": {
          "id": "9639706c-42a5-4a22-92ea-18d945fc7bf3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2388dda9-19b4-4065-aa13-99158a1fa3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7616d46-b4f1-4565-9df9-d65f402d1e55",
        "cursor": {
          "ref": "133a8f64-0896-4456-b1da-0cdecca7e666",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d9d1cc5a-6ba4-4ef7-88c6-b9c880a64110"
        },
        "item": {
          "id": "d7616d46-b4f1-4565-9df9-d65f402d1e55",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fe81eb43-8994-4a7c-9e78-0c21b53a9b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dd93c4-11b5-45d3-b12c-bc32d230d1a8",
        "cursor": {
          "ref": "eda7a0a4-50d4-46b0-9839-461ae7737326",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fe7322a0-b357-47a8-be63-a3d5ba026165"
        },
        "item": {
          "id": "f8dd93c4-11b5-45d3-b12c-bc32d230d1a8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "37b8b8de-0b0c-4e2b-a0bf-12ff0b792e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b9c3f3-8d3c-499b-8dd0-ec513fc67eea",
        "cursor": {
          "ref": "86c51394-aecf-460f-8ab9-7cdd5dd0e23b",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7f1a77ec-afaa-4ad5-8737-0c8361ffb2b5"
        },
        "item": {
          "id": "73b9c3f3-8d3c-499b-8dd0-ec513fc67eea",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "be68f5ab-e859-451a-b02c-c6d8a0dcfff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5c0d87-1295-49c9-be5e-8d80565cef63",
        "cursor": {
          "ref": "8bfb0bea-f3f5-4e28-aef1-36fb4c21b0e2",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0f418727-738c-4404-946a-fb21c8ea40aa"
        },
        "item": {
          "id": "7d5c0d87-1295-49c9-be5e-8d80565cef63",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "997fecb8-8f66-4a09-80ea-34c588a9b4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1090df59-2f5c-45ac-ba94-b96f2bad5d59",
        "cursor": {
          "ref": "78fbe37b-e22e-4ba7-9ed4-4048d83af11d",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "62fa316d-7a77-4939-b8ce-4ad2920e806b"
        },
        "item": {
          "id": "1090df59-2f5c-45ac-ba94-b96f2bad5d59",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d9862d68-2332-4f02-b6c7-e8e471ccf2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02fb58f-73a0-4c67-81d6-65e1d4336ec9",
        "cursor": {
          "ref": "298ce464-278e-4cf6-8f34-5724f1ced3db",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5401c06b-e426-4ad4-a548-5688a585c84a"
        },
        "item": {
          "id": "a02fb58f-73a0-4c67-81d6-65e1d4336ec9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "35d04c24-a995-4e17-a93a-e25fe352ab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c442ff6-7bd7-4586-a813-1de4b8a3f171",
        "cursor": {
          "ref": "bda90bcb-1446-4b23-8a05-b641d93d46c3",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bd3132d0-1ce6-41f2-bc55-f5c0f12f92c1"
        },
        "item": {
          "id": "4c442ff6-7bd7-4586-a813-1de4b8a3f171",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8ae2f31e-018d-456b-ab49-21ab524a7fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17cbc2d-f84b-4286-95dd-eda30ef203a9",
        "cursor": {
          "ref": "5a406ff8-bde2-4899-9da2-3a705a803bfb",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f72946c0-712d-46a9-a647-2be628598ea3"
        },
        "item": {
          "id": "b17cbc2d-f84b-4286-95dd-eda30ef203a9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c12f209a-6434-4b49-8f51-54601e5a7928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2859bc-b564-4506-a2b4-e8dd3e00fb41",
        "cursor": {
          "ref": "f07150aa-f848-4f63-ac9f-17e82dde49de",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f11bd69f-dd11-44fe-adc0-b3c147077bff"
        },
        "item": {
          "id": "cb2859bc-b564-4506-a2b4-e8dd3e00fb41",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0337686a-33d6-4c97-9a55-20ca17714c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9637554f-5941-4768-87fe-91f97686f359",
        "cursor": {
          "ref": "93322e44-2a0f-4a89-917d-90ddc61c4137",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4cee3d56-3954-413e-8c1f-0138d0833284"
        },
        "item": {
          "id": "9637554f-5941-4768-87fe-91f97686f359",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "76fd1ad2-6b8c-46c6-b215-f24d7ff22ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cafa1c-38b6-4eba-955b-8a618d45bfd1",
        "cursor": {
          "ref": "d5da94bd-0af3-4f1c-a7f1-e6d656d1a00f",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "78870c20-7082-4697-8a8d-d319c90a1c46"
        },
        "item": {
          "id": "69cafa1c-38b6-4eba-955b-8a618d45bfd1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0a1158fd-03f4-4e9a-b4bd-bb3d315eee4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26f49b8-cb31-40f8-87d5-1f164757e0fe",
        "cursor": {
          "ref": "926e04cb-99f5-4d53-8582-475787679aa0",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e5e91af3-6ddd-4dfb-a2db-53d33b0175e3"
        },
        "item": {
          "id": "b26f49b8-cb31-40f8-87d5-1f164757e0fe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6f0851d3-caec-451d-b963-f2553481ee53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1ae11d-4054-4e9c-8985-9cb1cdf297cc",
        "cursor": {
          "ref": "0fc286e7-3cfa-4a2a-8318-3bd0f547e54e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d549e442-fc95-48f0-ab8a-bfa0444ffefd"
        },
        "item": {
          "id": "bb1ae11d-4054-4e9c-8985-9cb1cdf297cc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c2cf8d64-0d99-4b9b-8a2d-7d5c1c8e6a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b612d26-0afd-4bab-8116-28aa59c63a12",
        "cursor": {
          "ref": "878b7a19-6312-44ee-a3c2-2922d5de0203",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9b9541bc-0366-422b-94d8-525ce60eba59"
        },
        "item": {
          "id": "8b612d26-0afd-4bab-8116-28aa59c63a12",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e3ade3a7-8f8c-4912-b011-e2763e4a7b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cdc672-6135-4475-b281-90c422752959",
        "cursor": {
          "ref": "0dcdf1e1-c173-4bb9-8d37-1e385c4f8613",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b96d54d0-4b85-4d27-863a-7736943c2350"
        },
        "item": {
          "id": "f3cdc672-6135-4475-b281-90c422752959",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dc05b166-2d4c-4e3d-bffb-0bb52ddf67a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e463f37-88fc-4316-a9c0-e274e97f5129",
        "cursor": {
          "ref": "6d3126ee-553d-46e3-8f95-811c7e147345",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "503ca5fa-825f-4b93-ab50-c930492be65e"
        },
        "item": {
          "id": "8e463f37-88fc-4316-a9c0-e274e97f5129",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fa707709-7ed7-456d-85bc-5dc638550157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76ffce5-af97-40e4-b32a-9d81f8058456",
        "cursor": {
          "ref": "c9ab8097-4662-4b04-a4cc-f8cc61c614d3",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a51ff740-911f-40ec-a7bb-61b83bb62b64"
        },
        "item": {
          "id": "b76ffce5-af97-40e4-b32a-9d81f8058456",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bb678fb3-0d41-44c5-b00f-f1166317d266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f522296-6626-4841-ae92-a048eff3b73a",
        "cursor": {
          "ref": "75372d83-42f0-474f-acb4-7875ab44a83e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dbf363c1-7c47-4901-afb9-6e6347dd6a75"
        },
        "item": {
          "id": "7f522296-6626-4841-ae92-a048eff3b73a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ae194a59-f790-4c1a-a036-f1d2e9a51ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e7e611-31ee-4318-913e-a0e574c4693d",
        "cursor": {
          "ref": "aa4feded-4d9f-4652-90be-a46d16ceac14",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d9745fd4-4764-49d9-ba8f-2703fe4f4797"
        },
        "item": {
          "id": "50e7e611-31ee-4318-913e-a0e574c4693d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0a947788-0242-4204-88dd-b36adc0c27e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd218852-793c-4a46-bed8-f0c85c189098",
        "cursor": {
          "ref": "ac27e0fb-ce17-49d7-9d3a-162dd2a5c0b0",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "72dd07bf-9e90-4fe1-bc9a-75b61fcb6151"
        },
        "item": {
          "id": "dd218852-793c-4a46-bed8-f0c85c189098",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e4bddd65-d7fc-4232-8741-476a47db50bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e34a0b-6662-4e8c-b36c-1fd744f47701",
        "cursor": {
          "ref": "49be3aae-0cdc-4444-b576-5dd34f6e3503",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d13e64a1-40e5-49a0-80e9-f179d38bdb38"
        },
        "item": {
          "id": "34e34a0b-6662-4e8c-b36c-1fd744f47701",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7dd6315f-ccef-4100-ba12-197650eea9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c89dc01-77bf-4655-bedc-0a37676f95ef",
        "cursor": {
          "ref": "e8114e8c-bf1c-49d4-a7c2-669c4c808f89",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ad5f89d9-d9cc-4cb8-8443-d0709b0ef2d1"
        },
        "item": {
          "id": "6c89dc01-77bf-4655-bedc-0a37676f95ef",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c336a343-7405-4dd3-99b2-cc3e2c958542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab5049-cae6-4c07-8aab-82d2b77977f9",
        "cursor": {
          "ref": "f8549b73-a96e-4eb0-852c-ccdf89f04376",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be51d394-9332-4406-994d-68403c61c8e1"
        },
        "item": {
          "id": "82ab5049-cae6-4c07-8aab-82d2b77977f9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "114f2011-690f-41de-9896-d4b7f6f59fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2715d279-0bba-45a1-b585-6b7539b17223",
        "cursor": {
          "ref": "e94a6764-98a6-4b51-8721-641eed8ed621",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cbd15cb7-dd04-443d-91b9-410516f867c6"
        },
        "item": {
          "id": "2715d279-0bba-45a1-b585-6b7539b17223",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4fca0993-bb3f-4841-bfa8-77d650557d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d229a953-6639-4fe8-b957-8a5aaa408166",
        "cursor": {
          "ref": "c0780e64-5910-4485-8321-0dddfd0d5930",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b7bb746b-8269-4d25-a7b2-ce5a7f643b77"
        },
        "item": {
          "id": "d229a953-6639-4fe8-b957-8a5aaa408166",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "876025ff-e941-42a9-92b5-490693319be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6c2ac0-4d4b-4d5e-af20-36a0b92229dd",
        "cursor": {
          "ref": "572d56e3-2ada-4e5d-92dc-259c86d79080",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c03af494-f651-43ed-9402-1cd11604380a"
        },
        "item": {
          "id": "4a6c2ac0-4d4b-4d5e-af20-36a0b92229dd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3a05f0f7-9f9b-40b0-8b1c-878210e670fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1955213f-54d8-4eb1-9fd3-c29b7a72075c",
        "cursor": {
          "ref": "a4c7cc6c-7da3-4509-80b2-5f171aeb2cf8",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1e5b32ea-7875-4c95-8efc-699736f82255"
        },
        "item": {
          "id": "1955213f-54d8-4eb1-9fd3-c29b7a72075c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "75acf08e-651b-44bd-be8f-5d42f53d208d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4803ec4d-0867-400a-be1f-50b380d83df5",
        "cursor": {
          "ref": "39b80a15-eb1c-4145-9c58-64c7a1db8c27",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "168b9911-cbd4-4dc5-9b8e-ca4db1d548dd"
        },
        "item": {
          "id": "4803ec4d-0867-400a-be1f-50b380d83df5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "aa1f082a-8b61-4236-9140-281a18b1e6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8085eda-121c-434f-a52d-e34716970082",
        "cursor": {
          "ref": "d7064e00-37a1-4a3b-8c28-4ea3b7e528b5",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ce56bf8d-740a-4f28-8d44-e2bcc6029cb1"
        },
        "item": {
          "id": "b8085eda-121c-434f-a52d-e34716970082",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a8f91ba8-bad7-4075-8464-26d82a5eb7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16303f97-b777-424e-9a6f-a319cfe52703",
        "cursor": {
          "ref": "d87e70a1-7e31-4313-8389-b233baaf0ef5",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "afecdef4-91a6-4ad2-983e-9ca7dbbe9de3"
        },
        "item": {
          "id": "16303f97-b777-424e-9a6f-a319cfe52703",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "41049862-780f-4aca-9b57-9bf30e80f556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125c6da3-ab0a-465f-9860-b065f7b5139c",
        "cursor": {
          "ref": "5fe01ede-5f73-44ef-b19e-f271b2e608a2",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b4891751-5dae-42cf-984a-9f25bb81b798"
        },
        "item": {
          "id": "125c6da3-ab0a-465f-9860-b065f7b5139c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "de5551a3-8bf9-47c3-9956-3b43233ca89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed02c5f5-d2c1-45da-b2c8-5ed50959fe75",
        "cursor": {
          "ref": "ac13e769-7af5-4bf2-aea8-5777a5973b6f",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "14a70ea7-efe2-410b-9028-34e976e2076c"
        },
        "item": {
          "id": "ed02c5f5-d2c1-45da-b2c8-5ed50959fe75",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9997cbef-8eb2-46e2-bf08-74cbbf2c6f82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf5b887-536e-4593-93cd-33724d3d2a3d",
        "cursor": {
          "ref": "a520cfdf-9bf6-4911-8d54-a4dc752cf97f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "52238a36-7357-46bd-b76c-89afcc4894ab"
        },
        "item": {
          "id": "ccf5b887-536e-4593-93cd-33724d3d2a3d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "64c2b8e6-17f2-41c3-9294-73a83263b2b0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d313389-448e-4665-a492-112534296f8c",
        "cursor": {
          "ref": "36135ed9-c020-4654-b984-c1a1327de1af",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "caef6dbf-9526-4be2-9034-d8a25d792a0c"
        },
        "item": {
          "id": "5d313389-448e-4665-a492-112534296f8c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1f5c5c91-e6a0-4e3e-b500-cbca26498ffd",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f2503c-a0d9-40ea-9d5d-6370da2dda7c",
        "cursor": {
          "ref": "f4b20ea8-8f61-4cc1-8a4c-c84a2f56962d",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b298593c-da91-49bd-9ee2-223d1362771e"
        },
        "item": {
          "id": "a2f2503c-a0d9-40ea-9d5d-6370da2dda7c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d9f171b6-ebd1-4858-a9fe-191fd4cb4d9b",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58b716b-2b73-41d4-a275-4ec1014a6c5f",
        "cursor": {
          "ref": "ea3dd7f5-b70e-4a5f-ad7a-a46f40c5ae2f",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "10ec2bd1-e96d-47ef-a78e-103fbbb509d6"
        },
        "item": {
          "id": "a58b716b-2b73-41d4-a275-4ec1014a6c5f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cabe817e-f78a-46c4-acf7-04a3d8b4506c",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "52040de3-17ff-42a6-a1ab-c7891c35c152",
        "cursor": {
          "ref": "c316ee4c-604a-4b19-894a-4034e830e9fd",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2fb12661-d759-4c89-b33b-2f674f965e60"
        },
        "item": {
          "id": "52040de3-17ff-42a6-a1ab-c7891c35c152",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4dc3d324-6da2-4edf-8718-025cd82fdd7d",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e876de51-8ca3-4680-8366-f09435340668",
        "cursor": {
          "ref": "981bf514-2436-4463-99b1-a909338b89b2",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "19946acf-60d3-4d71-a4e3-0484bda1e856"
        },
        "item": {
          "id": "e876de51-8ca3-4680-8366-f09435340668",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "be6e4413-439f-468b-bf85-ce652b305346",
          "status": "Created",
          "code": 201,
          "responseTime": 20,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3a8e32-d994-410b-ad43-88d5a84513f9",
        "cursor": {
          "ref": "73856fda-4080-4699-9d6e-def9828bcbfc",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "304c2043-cd4e-4a35-b69f-13a3a85b3093"
        },
        "item": {
          "id": "af3a8e32-d994-410b-ad43-88d5a84513f9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3207900a-0d41-4ecf-8f9e-fa6b70fef4af",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e9f9e8-e232-450c-a870-a66657ef2046",
        "cursor": {
          "ref": "bc61c9a9-1ec4-4bb2-b2a8-dc5dd9854149",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c23103c0-d257-4ec8-95be-e2a33e5e16e6"
        },
        "item": {
          "id": "c7e9f9e8-e232-450c-a870-a66657ef2046",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ffac716d-099d-42ab-a1f8-eb9a8b31ffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e9f9e8-e232-450c-a870-a66657ef2046",
        "cursor": {
          "ref": "bc61c9a9-1ec4-4bb2-b2a8-dc5dd9854149",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c23103c0-d257-4ec8-95be-e2a33e5e16e6"
        },
        "item": {
          "id": "c7e9f9e8-e232-450c-a870-a66657ef2046",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ffac716d-099d-42ab-a1f8-eb9a8b31ffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9006f0-108d-4702-ac68-ec41a210133e",
        "cursor": {
          "ref": "1ade4bd3-09de-45ed-bac6-339566fdc332",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "36340e71-68e7-43be-b4af-348db3014bcd"
        },
        "item": {
          "id": "ab9006f0-108d-4702-ac68-ec41a210133e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f2ccd097-df7f-4fdf-a4b3-db008d4e014f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e8334c-f11d-448c-9057-472123a2aebd",
        "cursor": {
          "ref": "e29e9080-f8ad-4ec1-a3f5-7592be8e1fd3",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "53ffe7bb-86b9-46f1-96dc-94d4dc68879f"
        },
        "item": {
          "id": "f4e8334c-f11d-448c-9057-472123a2aebd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ef65e7d1-accc-448a-b166-4f3f8e64b6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bab8e1-5431-4258-b899-59afa5989843",
        "cursor": {
          "ref": "88c0fa6a-7a78-4128-8838-ce979dcece46",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ddfadf4d-0fa9-4537-8de0-a60d8c03776a"
        },
        "item": {
          "id": "88bab8e1-5431-4258-b899-59afa5989843",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3082b5ce-6549-4ff6-bc5c-1bd33c0457db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5288b6-e738-40f7-8449-75acc20c4148",
        "cursor": {
          "ref": "62d74ed7-cdac-40cf-b202-b998191204c0",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7bea2dd5-429b-4c8a-9d76-463df9f131a0"
        },
        "item": {
          "id": "4d5288b6-e738-40f7-8449-75acc20c4148",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "acfac28c-f3cd-475c-bfe7-8e0a22930b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196ac116-40f2-4160-aaed-38f536cdc5dc",
        "cursor": {
          "ref": "488c0648-9f86-41ba-afc7-d03902825015",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b19c25b5-731f-4e34-b888-3ae98d42296a"
        },
        "item": {
          "id": "196ac116-40f2-4160-aaed-38f536cdc5dc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eec2ffe9-6f44-47fc-9c87-014e6325ec0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61827f85-8ea4-4a83-97d6-d8eacf12ddb3",
        "cursor": {
          "ref": "c9a0f2a6-ebc5-42d3-87da-6af81a64403c",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c2964178-81b1-4a8b-affd-857de3de8948"
        },
        "item": {
          "id": "61827f85-8ea4-4a83-97d6-d8eacf12ddb3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "198fb1d7-3559-407d-826d-c9335f4a9456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd878cb-0ec7-4a64-8cc9-2bc93b9c7b47",
        "cursor": {
          "ref": "4c3a9c29-8d17-415b-a8b0-e816e1ef641f",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fb21bf6d-122b-40da-bef2-84d5f89b1367"
        },
        "item": {
          "id": "3fd878cb-0ec7-4a64-8cc9-2bc93b9c7b47",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a22bb26a-bce7-41cf-9605-425772346a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9c7a6e-fd98-4f52-b579-00dbbc03e214",
        "cursor": {
          "ref": "84dacd3e-0c9f-4b01-8ed5-a95191f43eae",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "afbba5be-814f-43c8-bde5-4eec214d2d75"
        },
        "item": {
          "id": "9e9c7a6e-fd98-4f52-b579-00dbbc03e214",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "16a8d09f-0f80-4b25-aed1-25d38663632a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1ae1d1-efbd-492a-af26-0734fe14c7de",
        "cursor": {
          "ref": "922b4123-928c-42e9-a0e0-850a831af6b8",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d4413cdf-9dab-4bdd-8c3a-e0f401e5b90b"
        },
        "item": {
          "id": "de1ae1d1-efbd-492a-af26-0734fe14c7de",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "468bf0bc-3d22-4a83-b5cf-24c60b1838c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3b2f21-bd0d-4035-8a40-64cef74512d1",
        "cursor": {
          "ref": "e3905585-5261-4af9-8f9e-b3e05278659f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "79edd6bf-fd64-4526-83ed-b40a03ab3b35"
        },
        "item": {
          "id": "ba3b2f21-bd0d-4035-8a40-64cef74512d1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "045bae33-9767-470f-9ffe-7ab560882b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4664f3ec-723a-4177-b644-db57390bb533",
        "cursor": {
          "ref": "78eecb7f-8e8d-48dd-8c2d-0b0c2dbaa8ff",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3275cc73-49ef-4513-bc02-7284bac4c019"
        },
        "item": {
          "id": "4664f3ec-723a-4177-b644-db57390bb533",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b4df7330-e4bd-49f4-af60-494554e30b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0377a8f0-a807-408b-9c94-8c0a4cabd475",
        "cursor": {
          "ref": "f2420957-91ee-4e9e-ae1c-0522fee532b0",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e1f4211c-d883-4ebf-83c7-f8916a6c1353"
        },
        "item": {
          "id": "0377a8f0-a807-408b-9c94-8c0a4cabd475",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "48f44f34-2bef-44af-9737-b804b768ce69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633ab6d6-4176-4bb5-8813-5d42fbb4e919",
        "cursor": {
          "ref": "6d259f7c-a894-4130-bf3d-177e7689008a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "25f82208-b26f-4620-a2b6-5ef342a44574"
        },
        "item": {
          "id": "633ab6d6-4176-4bb5-8813-5d42fbb4e919",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e332ac5c-ab7f-4381-831d-5934ce3df436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4068d00-515b-4028-8fcc-d5dc9eeb9662",
        "cursor": {
          "ref": "9a4b3aa3-fe2a-4fe2-91d9-cbd8d83c91a8",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f9ba6b81-3a47-4d95-9627-32afca4bd0cc"
        },
        "item": {
          "id": "c4068d00-515b-4028-8fcc-d5dc9eeb9662",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0d662ccc-bdb1-4989-a484-82198e280c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dda750d-de14-427e-923d-1fdacd17cf2b",
        "cursor": {
          "ref": "e7887816-f0e1-4946-b4de-9c014df46813",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e4a44c84-e1d5-409f-ab1c-ede829b39538"
        },
        "item": {
          "id": "8dda750d-de14-427e-923d-1fdacd17cf2b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9fe254da-cd0a-4136-9e2e-97fd377f9e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38bf426-0850-4486-94d6-336356cdb066",
        "cursor": {
          "ref": "53cff1d3-6549-4d0b-b6f8-18fa861e4257",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4ab8e5df-83c8-4482-87bd-2309524804c8"
        },
        "item": {
          "id": "d38bf426-0850-4486-94d6-336356cdb066",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "47f064c3-c114-46af-aada-5088152c0ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d48a39a-1bba-4497-a1e1-277537ac93fc",
        "cursor": {
          "ref": "9063ccb5-75a9-4d7f-b1af-f6c4fea714ab",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e8e88e3e-a3d2-4c7e-900d-1dd8b096d98d"
        },
        "item": {
          "id": "6d48a39a-1bba-4497-a1e1-277537ac93fc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7acbd846-a709-4d49-94f9-b7d3f10c943f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8c4dfc-5410-414a-a46f-895feb0e05bb",
        "cursor": {
          "ref": "cffb54aa-5a2b-4c1a-a696-30eed6fec26e",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1fe00af5-d7e5-4d3d-be30-09698eb79329"
        },
        "item": {
          "id": "dd8c4dfc-5410-414a-a46f-895feb0e05bb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e06efde9-57cd-4e9c-afea-aac8bf718e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f4969-96a9-421d-910a-4232c248cea1",
        "cursor": {
          "ref": "b96240e1-22c1-4d31-811f-7563e313d40d",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ddc8496e-f8b7-469f-9704-738c98e2d0d3"
        },
        "item": {
          "id": "602f4969-96a9-421d-910a-4232c248cea1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dddcb9cf-bbba-43e8-b7a4-3fe4f677ebd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8514134-6da0-4e79-a976-4f5c4ca342f4",
        "cursor": {
          "ref": "383fb8a0-8ecc-43f8-a381-0e6833bb8f7f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1ae5a1d9-ada8-4b48-9055-d04ce202cc5e"
        },
        "item": {
          "id": "b8514134-6da0-4e79-a976-4f5c4ca342f4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c099322f-00e0-415e-bfc9-62fe3f1de90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e904af6-5c60-47e5-ada1-4f0ce7c127b0",
        "cursor": {
          "ref": "cb955b06-a769-4376-8fad-d79f88339067",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c9352b76-61db-4b82-91ea-c56d4adbb165"
        },
        "item": {
          "id": "2e904af6-5c60-47e5-ada1-4f0ce7c127b0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "78dcb4b4-0c70-4beb-bffb-b27b06468424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239172f2-4f3b-47f0-8df9-7dc850c42133",
        "cursor": {
          "ref": "fdc165a2-c2f7-4c91-958d-bdbbc5e51436",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "02a0b617-cc3d-497c-8ea9-b85126de78e5"
        },
        "item": {
          "id": "239172f2-4f3b-47f0-8df9-7dc850c42133",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "709a123c-ea48-4152-b92c-3fd13e7b221b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7da61b5-ea76-4307-be16-1b31625045eb",
        "cursor": {
          "ref": "e4b8ed04-d80c-40d4-9d12-bd698eef339f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aeea863c-0348-4f29-9c22-a71523812644"
        },
        "item": {
          "id": "b7da61b5-ea76-4307-be16-1b31625045eb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c80a881c-05f0-44f9-9bce-c275a32512d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63161ada-fa78-4c9b-9ef9-be4c86471c83",
        "cursor": {
          "ref": "1a262653-05d0-4d0f-b590-af381f1c8857",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c22ee0a9-8d45-410f-a36d-fee3aa33e9f4"
        },
        "item": {
          "id": "63161ada-fa78-4c9b-9ef9-be4c86471c83",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b18c556f-330f-433b-81bb-e3080d91322a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00da535-4b7d-4b7b-b688-d2d26688401b",
        "cursor": {
          "ref": "6c2338d3-7203-4bf6-a97c-a895f29f477d",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8a2387bf-d3a0-46a0-ad29-4b5b0b6a30f1"
        },
        "item": {
          "id": "e00da535-4b7d-4b7b-b688-d2d26688401b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "76cb2206-d256-4a51-9fc0-99f2accf0407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e501aa9d-63a6-4fc3-b619-01594b68cfb4",
        "cursor": {
          "ref": "2bc70e0a-7792-4cf4-abac-6b70c3bec6dd",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bfb274f1-4ba9-4a09-997a-46e5b0b846e4"
        },
        "item": {
          "id": "e501aa9d-63a6-4fc3-b619-01594b68cfb4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bb6f2549-5b43-439e-93cf-540825660ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6171cf20-8aff-494d-aad9-59b1b097406a",
        "cursor": {
          "ref": "3fdecf6b-1891-40cc-bcb9-24d48f9b81f7",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "20bc8dc5-ea57-43d6-9f17-4f2e16e05e09"
        },
        "item": {
          "id": "6171cf20-8aff-494d-aad9-59b1b097406a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f3f2a55f-77cb-4da6-a96f-4e20d1f0e0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4a292d-37c7-43d2-8335-6fc6b557f30f",
        "cursor": {
          "ref": "4542e8fa-bbc9-4817-8af1-63a716c28015",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9f283ebe-d83c-480c-a417-47429bc1873c"
        },
        "item": {
          "id": "bc4a292d-37c7-43d2-8335-6fc6b557f30f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0b38b689-ffb1-4e0f-8812-dc7b8e9d6af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b5bb6c-4487-4c81-8cdf-602ab6efb7d8",
        "cursor": {
          "ref": "ad487d24-7e08-418f-a9e8-f3d912a093a9",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c2c6d785-20e5-45b0-8c43-6b3c2398b32f"
        },
        "item": {
          "id": "d6b5bb6c-4487-4c81-8cdf-602ab6efb7d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "26e577ac-9020-4051-b3dd-be1298c0e1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0938fb-9904-48bb-84f3-53aed1376b69",
        "cursor": {
          "ref": "f712ca76-7359-4006-be65-4262da4a87f2",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7ed045c1-61e2-4b36-be20-9b30c81a05d7"
        },
        "item": {
          "id": "0e0938fb-9904-48bb-84f3-53aed1376b69",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "78ca9f23-d4c2-4c68-b849-06bbedf91dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a585594b-c402-4e23-8317-86d799087759",
        "cursor": {
          "ref": "3f19b33d-f7a6-437a-8448-ac88097eb725",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1808d11f-f9b9-48d2-9efb-5991c1b34562"
        },
        "item": {
          "id": "a585594b-c402-4e23-8317-86d799087759",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "812bc9a0-366b-4949-8dfd-30565c2f3c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13871403-a52f-4b9a-a1f0-b5b8017af3b1",
        "cursor": {
          "ref": "4cc8b908-4d56-4110-a9b0-1f0b3bf2af7a",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "515fff61-5827-4501-bf63-4a4ac9c07e17"
        },
        "item": {
          "id": "13871403-a52f-4b9a-a1f0-b5b8017af3b1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bf446a74-6d69-447b-91f8-64fd0f05006f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773cc2bf-b848-4906-aac0-7044d09a0bdd",
        "cursor": {
          "ref": "4beee4c6-8541-4ea4-bcba-ae2afb48e340",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f0c3f809-d253-4423-bc68-cf7d8711a8fa"
        },
        "item": {
          "id": "773cc2bf-b848-4906-aac0-7044d09a0bdd",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "fee47c6b-809c-4a9f-a64a-ee2cdcf78cf8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873aa02b-469b-4cf3-a90d-9b492b586a83",
        "cursor": {
          "ref": "146f1f4f-8709-4be3-bc53-04c939776a1c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b35b8c9-1bda-4696-937e-6283c729de31"
        },
        "item": {
          "id": "873aa02b-469b-4cf3-a90d-9b492b586a83",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cdc6abb1-2ddf-41fa-a0e7-ecafc8e669c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873aa02b-469b-4cf3-a90d-9b492b586a83",
        "cursor": {
          "ref": "146f1f4f-8709-4be3-bc53-04c939776a1c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b35b8c9-1bda-4696-937e-6283c729de31"
        },
        "item": {
          "id": "873aa02b-469b-4cf3-a90d-9b492b586a83",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cdc6abb1-2ddf-41fa-a0e7-ecafc8e669c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb48b18d-6fe2-46f3-af19-5f946ff1e7b8",
        "cursor": {
          "ref": "c848ef48-74c6-463f-89a2-851535516783",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "257f68ca-f403-4c75-b2d2-d4fb5f3d5c7f"
        },
        "item": {
          "id": "bb48b18d-6fe2-46f3-af19-5f946ff1e7b8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2c5485c7-3c0d-400a-ad52-7419f743f048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cf61df-f6b7-4266-a52b-2b45cd2daeb9",
        "cursor": {
          "ref": "fb92db0a-8ccf-4997-8b77-6726120b02f0",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "10034e30-c07b-4149-9012-d48ebeb4b7f7"
        },
        "item": {
          "id": "d2cf61df-f6b7-4266-a52b-2b45cd2daeb9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a4d84009-ca0b-41ef-b004-d9ee0a5bbb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821496ea-e6d2-45d3-912e-1a016a4907e9",
        "cursor": {
          "ref": "b31df359-5e24-447e-b846-0943eb56c2e4",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ca4e5bfe-eae3-4f90-a8f1-a430b91c9c1f"
        },
        "item": {
          "id": "821496ea-e6d2-45d3-912e-1a016a4907e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "746622f1-9761-4b11-ad9d-69cb2edb35f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d899af1-a912-4d14-b502-9ccb392bc499",
        "cursor": {
          "ref": "ec701bb9-4085-44f7-aa56-66df9daeee79",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7a371798-16f2-4903-9af6-6ea1145bbf68"
        },
        "item": {
          "id": "1d899af1-a912-4d14-b502-9ccb392bc499",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b8aeaae3-cc31-4975-9ae0-9742242d951a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067137f9-6300-4866-aaa0-41170cbedcde",
        "cursor": {
          "ref": "e2c13495-837a-4757-b687-3379555fe35a",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "64600d7c-4605-412c-a77d-adf18b4f104e"
        },
        "item": {
          "id": "067137f9-6300-4866-aaa0-41170cbedcde",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9ea5da17-9943-4029-88ac-43105478d6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db018414-d0ea-48cf-bd8c-df7311cd3564",
        "cursor": {
          "ref": "ea375051-0754-41c6-8a94-b594d5306795",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "994d02b8-46d7-41ba-9d34-95ca70fc46aa"
        },
        "item": {
          "id": "db018414-d0ea-48cf-bd8c-df7311cd3564",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7035dcd8-e476-4bf3-b3a5-fedb8576164c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4714f8-ab06-42a7-a903-da1f3100f1c2",
        "cursor": {
          "ref": "56ca67e2-c740-42c0-ae71-85c7a56124f2",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c5220b0b-cefb-44d8-8052-c0bbff814da4"
        },
        "item": {
          "id": "fe4714f8-ab06-42a7-a903-da1f3100f1c2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3119b20f-7ca3-4ebd-8d4d-c0f2602d8d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1470cf-0be9-441e-8ea1-af49145649d9",
        "cursor": {
          "ref": "df27a45a-65bd-4c7d-af54-756df0dcc556",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0ec7581b-b5f4-4086-adc8-8e4c4b285f5f"
        },
        "item": {
          "id": "9f1470cf-0be9-441e-8ea1-af49145649d9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dbdd76fe-43bb-48b3-9995-e8a780b76a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029f05ec-317a-4ca6-8e61-d07719fa474c",
        "cursor": {
          "ref": "6ea79ddf-4144-47f3-b50a-6cff7c5face2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "80a4fb85-cd04-467f-a484-a89897153a4e"
        },
        "item": {
          "id": "029f05ec-317a-4ca6-8e61-d07719fa474c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fed1e149-66dd-4d6a-a0f2-77d75874d14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5a77bf-07f7-41c2-9083-4c46217b76d9",
        "cursor": {
          "ref": "9f423bb4-dc7f-4068-9e7a-b616a4c134d5",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a5a7349e-7c39-4066-95d2-718b64e847ee"
        },
        "item": {
          "id": "6a5a77bf-07f7-41c2-9083-4c46217b76d9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "42a3293d-61e7-4109-8447-190381998a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bb0940-fafa-4fbb-94b6-30774b6557fc",
        "cursor": {
          "ref": "fc4f0056-b5d8-4de5-85b2-909dd03bb546",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "75e3edb8-6343-4705-80ca-0b3523f06482"
        },
        "item": {
          "id": "26bb0940-fafa-4fbb-94b6-30774b6557fc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a5f50504-4dd4-4a38-a309-0543eac5506c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8275c90-2984-457d-978a-472144099413",
        "cursor": {
          "ref": "80fc4210-ed96-4c4d-a480-1a38922586ae",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1fe35c07-23dd-49f8-9448-e60f5723d4ae"
        },
        "item": {
          "id": "d8275c90-2984-457d-978a-472144099413",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "25d28bdb-a763-4d70-adcc-41a52eec1752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4800ef-259b-41ca-8dea-7ff28f96c748",
        "cursor": {
          "ref": "79f38124-c5cb-46d2-b0db-a519aaf24876",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a928ffec-0df7-42e3-a66e-5f40b6eae125"
        },
        "item": {
          "id": "8a4800ef-259b-41ca-8dea-7ff28f96c748",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0a004532-e310-4fd3-afbe-ab9b22b41ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee880d3-b3ec-4843-893b-096de146e3f1",
        "cursor": {
          "ref": "a2b44054-68ba-452e-bc87-393defb46081",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b15faf7a-95c2-4269-a166-812974693a7d"
        },
        "item": {
          "id": "5ee880d3-b3ec-4843-893b-096de146e3f1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "73358128-9876-481f-9d76-c157ec78a4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f802053-fe57-4d16-83c3-f810c9f677a3",
        "cursor": {
          "ref": "63a1a9c6-2a50-4f8b-961d-f5b5ed24ade3",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f07ca30b-89d0-45e1-86a9-6536e557bf41"
        },
        "item": {
          "id": "7f802053-fe57-4d16-83c3-f810c9f677a3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ec842353-d275-4e8e-9bbd-5a6cfdf0f531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a6c6cc-cebd-4f72-93cd-efb31f32ca75",
        "cursor": {
          "ref": "7e33cd2f-1c86-4ed6-b9f3-7af43c817c93",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "12495205-eabf-48db-94c8-6acec2912afd"
        },
        "item": {
          "id": "b8a6c6cc-cebd-4f72-93cd-efb31f32ca75",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bd676475-d116-4268-891e-3159bff091fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab3890e-682d-44bb-b14d-4614302a0370",
        "cursor": {
          "ref": "854329d5-c0ee-4d77-97be-6544766166a6",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5a1d7f9e-a998-483c-9d7a-fcc9e00967c9"
        },
        "item": {
          "id": "dab3890e-682d-44bb-b14d-4614302a0370",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "927ed6f5-5543-454c-b538-9ca0493b237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25af58a-6036-42cd-8f06-afe5a109bff9",
        "cursor": {
          "ref": "8da40fba-83f3-458d-a986-f642bfa85248",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ee869c29-b594-4b8f-89bb-e1c625057f99"
        },
        "item": {
          "id": "d25af58a-6036-42cd-8f06-afe5a109bff9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fd6267ba-136b-4df2-896b-faa290caf235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6e162e-3267-4dd2-8277-8ca9fe41cd1d",
        "cursor": {
          "ref": "e10ae931-2b57-41fc-ad74-650c154902b2",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "07c1c649-d0d9-4a91-9770-590c3b6c34bf"
        },
        "item": {
          "id": "ea6e162e-3267-4dd2-8277-8ca9fe41cd1d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "164d04f1-e916-417a-98d8-8af4f339ee3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0591eaa1-979a-40c4-98c8-b40d9085560d",
        "cursor": {
          "ref": "ad81c84e-129e-468f-aa8b-4e3c9da84488",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3e4e5ae5-e1c0-4a38-9b67-d6bdb5281192"
        },
        "item": {
          "id": "0591eaa1-979a-40c4-98c8-b40d9085560d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b4d06535-eeb9-4d1e-a36a-fbc861977ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fe3043-dc51-4f55-a386-54f2b578fdea",
        "cursor": {
          "ref": "a67fe93e-8479-4e50-9758-b43001d3ce3f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "78831372-41b5-4a50-a8d7-40b521e120a9"
        },
        "item": {
          "id": "84fe3043-dc51-4f55-a386-54f2b578fdea",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a8399530-c04a-4220-8c60-35b8148bbd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5092e9-81c7-4250-aecb-7696aa249ac0",
        "cursor": {
          "ref": "a8ba6621-5896-4f23-a1b9-04fbbd535db2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7da32561-7196-4096-a5eb-ae0bc7d8188a"
        },
        "item": {
          "id": "ea5092e9-81c7-4250-aecb-7696aa249ac0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "caa4bc2e-4168-4a5a-9cf5-14b4727107bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11d52f2-9db4-40f7-b12c-799c6c4004a9",
        "cursor": {
          "ref": "cdcab92a-3dd7-4a30-98c9-c6f9f181018f",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "21690b7b-dccb-49df-8276-4f56f4868cdd"
        },
        "item": {
          "id": "a11d52f2-9db4-40f7-b12c-799c6c4004a9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f97906a8-b9b0-4d7b-856a-7c168edc8772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715df598-1a58-49c8-a042-d9db92613f2d",
        "cursor": {
          "ref": "d44c5511-dbc4-4eaa-b83d-afa4f6a0896e",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ed7c220a-0e7a-4a30-959f-29d9d5e77918"
        },
        "item": {
          "id": "715df598-1a58-49c8-a042-d9db92613f2d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1d62ef31-01a4-49b3-818a-7b5d34815526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50abbe61-f705-4a8d-8505-a544e1a09c34",
        "cursor": {
          "ref": "8c08ebc1-b497-4b36-8dd6-e63464cc7a5b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "befa7aa1-c9ae-4bf5-ab0a-227b7d6c7227"
        },
        "item": {
          "id": "50abbe61-f705-4a8d-8505-a544e1a09c34",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3fd61420-e735-4b8e-951a-f783a976701e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b35d01-3ba8-4f93-8b18-a42f779c2e4b",
        "cursor": {
          "ref": "e94fa9ed-5eab-40b3-8768-ceca710c1805",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "66df3e33-6a27-46a8-a01d-4e3b5177523f"
        },
        "item": {
          "id": "c1b35d01-3ba8-4f93-8b18-a42f779c2e4b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6eac2de5-c43a-4beb-9dba-c659a3688529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e3491f-b31b-41a6-980e-933831476718",
        "cursor": {
          "ref": "aba1ea92-75d2-4400-abe7-627c919a4342",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "70e1331a-891b-4624-acd6-b3d98229184e"
        },
        "item": {
          "id": "f4e3491f-b31b-41a6-980e-933831476718",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fc6447fc-6044-41fb-94ce-b95de836bc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f89bf4-5d75-435a-b1fc-10a0801fb673",
        "cursor": {
          "ref": "602d35b6-8360-4cc7-be7e-add0517473b0",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9738fc2e-5d9a-4bad-9f76-19ab9a7cccf4"
        },
        "item": {
          "id": "71f89bf4-5d75-435a-b1fc-10a0801fb673",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a45c68ae-8b11-4302-ada4-5bba63274f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9dbba4-6379-449e-97bf-631f6e207d02",
        "cursor": {
          "ref": "37f51f90-b146-43e7-8d0d-c51030945c38",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "673aff4c-e24a-4fab-9892-1e6647df62fe"
        },
        "item": {
          "id": "3c9dbba4-6379-449e-97bf-631f6e207d02",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8fa9a2a4-00ea-4352-ae99-789a2de6da6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be467c44-59eb-4615-8fee-8fcb9959d171",
        "cursor": {
          "ref": "61242e98-65bf-4ec1-bc18-0a9a97638041",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9d20fde7-0938-4777-a368-0f49778d574a"
        },
        "item": {
          "id": "be467c44-59eb-4615-8fee-8fcb9959d171",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "04af8f47-c5a7-4f47-88b7-1b9a22f3fd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee93392-53b1-4f3f-a160-143721e9d208",
        "cursor": {
          "ref": "c61b072b-1419-4059-8978-07dce72c6cff",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8282271e-8e38-4383-96df-6f40e1cb1507"
        },
        "item": {
          "id": "4ee93392-53b1-4f3f-a160-143721e9d208",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ad56c43f-82cf-4bfb-980a-dc1cd61cef02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f622191-e9ae-4f6b-9dc1-fc64be3ed4e8",
        "cursor": {
          "ref": "18890982-5a1d-439c-949e-fa60dce785ba",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1806f66a-ab3f-4a87-be26-fc749db051d7"
        },
        "item": {
          "id": "8f622191-e9ae-4f6b-9dc1-fc64be3ed4e8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5b093d51-280a-4f65-80a3-db833248ff5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5fb3f9-736c-4213-81e0-d092571a3d62",
        "cursor": {
          "ref": "093994c1-e69f-49d0-98f4-44de2ccbb2d3",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1369ee60-434f-4996-8f7b-5a0cc155e797"
        },
        "item": {
          "id": "9a5fb3f9-736c-4213-81e0-d092571a3d62",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7a64778b-c58c-44b5-ae65-c0f2059f87a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244e9dcf-331a-4726-99b2-caa737639bbc",
        "cursor": {
          "ref": "2667621e-980a-41d7-bf3b-32b39b6df366",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "08dda219-e261-45fc-883d-e8252936109a"
        },
        "item": {
          "id": "244e9dcf-331a-4726-99b2-caa737639bbc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "801ebbf2-e7d8-4c7c-acdb-e9abbea9d722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88502df2-0772-4801-8cfd-5c76d6e6cd79",
        "cursor": {
          "ref": "9447cc2f-4aa6-4a37-ba0a-8eb30f1c9a23",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7f0aa397-2311-49dd-ab13-41ea9ce0599a"
        },
        "item": {
          "id": "88502df2-0772-4801-8cfd-5c76d6e6cd79",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "72e49d0e-977f-4522-8d90-d26389532ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688437bd-f63c-471d-91fa-5b9964724367",
        "cursor": {
          "ref": "89f1c530-6b7e-4a06-96b9-cd3e62be7cba",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7ffbe8d9-f890-459d-b254-23b384505b3f"
        },
        "item": {
          "id": "688437bd-f63c-471d-91fa-5b9964724367",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7be037ac-8ecd-4c0c-b624-02bae82995c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87408357-29ad-4024-beb9-3c8e8ededfc4",
        "cursor": {
          "ref": "de913a9a-141e-4be0-a0b4-7491a2a1c903",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9ae85d24-fa6e-48e9-88a6-3a84dd897a50"
        },
        "item": {
          "id": "87408357-29ad-4024-beb9-3c8e8ededfc4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "123f2872-6bae-49ce-8513-707b9a2b1ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a415f2dc-5420-488c-98f9-88d7202d5820",
        "cursor": {
          "ref": "21254501-a65b-4713-849a-3fec734c3963",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "87077ae9-9083-4fd5-a3c4-0e4ddc9b019e"
        },
        "item": {
          "id": "a415f2dc-5420-488c-98f9-88d7202d5820",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "13db3b79-ffa3-414f-b4c3-0fcf93c99a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b347c79-5d82-46b2-901b-9ba9693cb6b7",
        "cursor": {
          "ref": "d92a89f2-6f43-406b-b15a-17d18d82f2bb",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "db47be23-de0b-41cf-8035-0b52510ef52b"
        },
        "item": {
          "id": "7b347c79-5d82-46b2-901b-9ba9693cb6b7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1a643b5d-c025-4cfd-bc6a-15ca46f164fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2e64ac-8b2c-4ffc-8839-d8988a627483",
        "cursor": {
          "ref": "e4fa7895-6a5d-45ef-a3df-634cf9457ff9",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d4a76fd7-36d1-4342-a0a4-c920c97b8384"
        },
        "item": {
          "id": "5d2e64ac-8b2c-4ffc-8839-d8988a627483",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bbbbfb1a-33b6-4bc2-86e0-6379b453e619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c2fd29-c9c4-4722-8054-3132ff61e01e",
        "cursor": {
          "ref": "5d14e77f-4114-4f76-93f6-333c3d480488",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f8294c9b-1a9f-4c5d-8b08-a56077809c14"
        },
        "item": {
          "id": "f7c2fd29-c9c4-4722-8054-3132ff61e01e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3f93c4cb-8443-4c74-a8a3-539af893fe6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c2402c-989c-498e-b818-fc75bba4aa6b",
        "cursor": {
          "ref": "d5dbe26e-aa15-402a-89cc-145a6b9313a3",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3cb136c5-22bd-4748-b009-d75dc498a8b7"
        },
        "item": {
          "id": "a0c2402c-989c-498e-b818-fc75bba4aa6b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fd8e54e5-6fa0-4ef4-aef0-1a2e90876f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e25dcb9-d4fe-4ca7-a7a2-eb3a51430000",
        "cursor": {
          "ref": "942d7781-efbd-41bc-9be2-62ca0279dd89",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "20741382-6721-4dd0-951d-824f75e0fea6"
        },
        "item": {
          "id": "7e25dcb9-d4fe-4ca7-a7a2-eb3a51430000",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c880e337-d1ee-49d7-bc5d-691b5c82905e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56ee7ba-a0cc-4c6b-a111-ff97e1893938",
        "cursor": {
          "ref": "e6ed944f-3742-415e-92fd-f07a7d33bd9e",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a4e9083a-3a60-4d4c-9528-62862514ef6d"
        },
        "item": {
          "id": "e56ee7ba-a0cc-4c6b-a111-ff97e1893938",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "96a185e9-a960-48f1-b26c-87b91110c6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ce5f53-05a7-4556-9b99-354d1010583f",
        "cursor": {
          "ref": "af0cd3f7-2b9d-4a28-a8a1-2358166737fb",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "80ea99d8-2ae3-4c57-86b3-6d678a1d3574"
        },
        "item": {
          "id": "b1ce5f53-05a7-4556-9b99-354d1010583f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "019b8bd2-c9f4-4dc1-8232-4429ed5f32c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dad92e-fdb7-4bac-8572-1142f343e6a9",
        "cursor": {
          "ref": "a6228d10-dcd3-4850-b3b3-f45c88dfdc60",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a3ad294c-945d-4d89-af16-391cc4624721"
        },
        "item": {
          "id": "c2dad92e-fdb7-4bac-8572-1142f343e6a9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "86359843-9385-407d-8e91-1acb187d44cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aa4d18-b363-4ea8-8f22-a062511c235e",
        "cursor": {
          "ref": "fa9d5d78-ddfd-4376-97a3-8db66a15a77c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1d066b6e-44e3-4db5-8357-09ae99b80f89"
        },
        "item": {
          "id": "e4aa4d18-b363-4ea8-8f22-a062511c235e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b2e3cb37-35b1-465c-9e0d-21531a4a4173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecabf34a-9c45-4ecd-a403-9290825802a4",
        "cursor": {
          "ref": "1ff656eb-94c2-4e2b-ac0f-9a358c0e0d75",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f131f82e-6e15-41a0-a475-4db9ff0f454e"
        },
        "item": {
          "id": "ecabf34a-9c45-4ecd-a403-9290825802a4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7b30b047-0e97-4038-94d1-b216b72fd11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a523242-0ee4-4b41-95d3-b30d606913b6",
        "cursor": {
          "ref": "5180606b-ed70-47cd-b091-f0a737c53136",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "40020f46-e603-47bc-9051-81c09400999e"
        },
        "item": {
          "id": "4a523242-0ee4-4b41-95d3-b30d606913b6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "23218285-378c-4d14-b4c6-ff1f740fc946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965037ba-564e-4645-a092-e3d131447b0e",
        "cursor": {
          "ref": "6a477195-e6ad-4df2-8a16-d064090e0787",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ef70f8f9-a825-4fcf-841f-0fd4b3c08606"
        },
        "item": {
          "id": "965037ba-564e-4645-a092-e3d131447b0e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bb5ce78b-d54d-4dd7-91f6-dee8d2e19ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec816950-22a9-466b-a0bd-ee1703367b0b",
        "cursor": {
          "ref": "49c36f22-4fc4-4340-b3ff-f5dd418db3c0",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9ac5a008-a712-4546-8878-c7fe952b0136"
        },
        "item": {
          "id": "ec816950-22a9-466b-a0bd-ee1703367b0b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "eabd5a07-bc8b-4b84-acf2-9d6c0f23a6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592a94a6-f977-43d7-8f54-d4f782425285",
        "cursor": {
          "ref": "24622e81-98f7-4e1d-be7d-f1c13ff2f8f8",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d7e19a76-7bad-4e17-a881-7918697ebe8c"
        },
        "item": {
          "id": "592a94a6-f977-43d7-8f54-d4f782425285",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ce0f5a4-11d6-4a6b-8fd6-0b3eb1c0a378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01700c68-a65d-4c71-b055-065e822b0d55",
        "cursor": {
          "ref": "d223eb4a-0bcf-4e4a-b0a3-1c3911ba2759",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1598c381-4a6b-4c71-a0d8-6e53d9eea38b"
        },
        "item": {
          "id": "01700c68-a65d-4c71-b055-065e822b0d55",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "500ffd64-b91e-4ddf-a6b3-d6ed1febe068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2132def-394e-4d54-a30a-d6a07d201d7a",
        "cursor": {
          "ref": "ac92c42b-e1eb-4522-b87e-5001c719044f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "af620aa0-0c21-4d15-99ec-39a5ef9b287a"
        },
        "item": {
          "id": "f2132def-394e-4d54-a30a-d6a07d201d7a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b7da73bd-008d-49bb-a1c0-ba3d3c955a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee3e8ed-838b-44e4-8e8b-fbd34b4aaaee",
        "cursor": {
          "ref": "eea43a21-d62c-4a13-97d6-f166a29898c6",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "55cd2bc6-1cfe-46aa-9b9c-063928b40532"
        },
        "item": {
          "id": "aee3e8ed-838b-44e4-8e8b-fbd34b4aaaee",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "82246736-65cc-467a-930d-7e2b4639d8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442e6ca3-bbe8-40a0-9a15-5987ac131a26",
        "cursor": {
          "ref": "ca9bca1d-4c64-4b1e-b791-a88e693c489b",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "058d830a-90f5-4a6a-bd95-7e5a7b72b619"
        },
        "item": {
          "id": "442e6ca3-bbe8-40a0-9a15-5987ac131a26",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4ed1ba91-b79b-44d5-a551-286fc002ba39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161c5417-169a-4575-b147-fdbeb4b37693",
        "cursor": {
          "ref": "aeca1d0d-f946-4b71-9fd6-3c5b2509e2fe",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3c8eca71-3c05-48e0-a289-6be240e9df3d"
        },
        "item": {
          "id": "161c5417-169a-4575-b147-fdbeb4b37693",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "621a2984-654c-4356-86f4-2589b410f5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea285506-fcd6-476b-bb84-f53c7199f400",
        "cursor": {
          "ref": "f919eb09-c8ba-402b-9d89-521bc6a1954d",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "41e10dd0-740e-4eb6-8ded-93c4e2a16cff"
        },
        "item": {
          "id": "ea285506-fcd6-476b-bb84-f53c7199f400",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7926d294-b4b8-4c23-963e-30f6d35f8244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa73f58-e506-47ec-8d0f-1c05159a6132",
        "cursor": {
          "ref": "5941a084-9977-4edf-964d-b9787eabf916",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "edc35afb-35d9-4b98-9412-cb1b0e5ce897"
        },
        "item": {
          "id": "dfa73f58-e506-47ec-8d0f-1c05159a6132",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b0750041-489b-40a0-8362-caab1fd94f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8802a133-74b3-4ce5-b2be-abf2a5f7afa6",
        "cursor": {
          "ref": "7c2951d4-535b-4da0-8ac7-d3b05e165cff",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "76d380f1-608f-43f9-a723-ed9743f0b2f6"
        },
        "item": {
          "id": "8802a133-74b3-4ce5-b2be-abf2a5f7afa6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "46450dcb-29aa-4617-8125-d7715e177752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da42d27e-962a-4125-a4f1-faeff2d0a80a",
        "cursor": {
          "ref": "ab686a4c-f3b8-4b02-af7a-115a3d09a04e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dea7ed3a-f294-4f05-aadf-a2ed97928dbb"
        },
        "item": {
          "id": "da42d27e-962a-4125-a4f1-faeff2d0a80a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8cd9d831-0819-44fe-b24d-9f4d9887dac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da3b9d8-5ef1-4723-9fd0-5f78a4dfa30d",
        "cursor": {
          "ref": "4243fd10-dcc4-49d1-b74b-11db3495588b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0cc9f84e-a0ec-4b4a-9539-338270782620"
        },
        "item": {
          "id": "0da3b9d8-5ef1-4723-9fd0-5f78a4dfa30d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3df88461-65a1-469d-820e-9545cb5307e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de531cfb-b972-4587-a065-c2dda08415bf",
        "cursor": {
          "ref": "ffc31125-4e75-4a31-8520-331fc73fd96e",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4f6b0249-4a4c-451e-ac64-59a8c668cbac"
        },
        "item": {
          "id": "de531cfb-b972-4587-a065-c2dda08415bf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d655340f-edf9-4bfb-a37e-ac7647a34a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dba1bb-1fe3-4306-a3f3-1f26d240c4dd",
        "cursor": {
          "ref": "66df2709-e938-4efe-93ef-a4414cc490f6",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "be04f522-a723-48e0-a861-5a6dafd0a8de"
        },
        "item": {
          "id": "94dba1bb-1fe3-4306-a3f3-1f26d240c4dd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "26b25a76-5268-4254-82f8-cc7c42874af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae5ec1a-b8ac-4a8e-8ee1-bad2c67e4066",
        "cursor": {
          "ref": "ef52d1e6-57c5-44e6-a240-c8f4fa4be9d5",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e9395c45-029b-486f-bb47-2894b4d755ec"
        },
        "item": {
          "id": "7ae5ec1a-b8ac-4a8e-8ee1-bad2c67e4066",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "06f90826-e838-48a3-9add-1c75edd839a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0871ffae-e551-40cc-8aa9-ec856a369604",
        "cursor": {
          "ref": "ccbee3df-6357-43c7-a3f4-3c5a2b961fdd",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4905cbb7-8a2f-4083-b5a5-d0e5ab92dd70"
        },
        "item": {
          "id": "0871ffae-e551-40cc-8aa9-ec856a369604",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "37c5b6ab-4fca-440f-8db2-54cc160875d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326b8b1a-5fbf-42fe-afc7-289210fc3995",
        "cursor": {
          "ref": "657f29c4-bd10-4a8a-af63-205d454c1912",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4be67bf6-e58b-4c0c-b229-80acf371e43b"
        },
        "item": {
          "id": "326b8b1a-5fbf-42fe-afc7-289210fc3995",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1b775ada-e205-4a01-81e5-ce3a7e01cbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aa8f75-9f0b-4c94-a778-6cdebe325666",
        "cursor": {
          "ref": "fb1a7b22-ebbc-4aa9-89ed-9349f5bf1aac",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d73d467a-6b95-4a6c-95e8-8d8f37458449"
        },
        "item": {
          "id": "25aa8f75-9f0b-4c94-a778-6cdebe325666",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c5ca0f92-84df-407d-aee3-dada61923c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50d4e2b-2b18-49b0-b366-4cd250728b45",
        "cursor": {
          "ref": "72f2bffc-963b-48bd-9c0c-876411973d38",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "86c2fa22-0eac-46f7-a729-9a36a20c669c"
        },
        "item": {
          "id": "e50d4e2b-2b18-49b0-b366-4cd250728b45",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f7b6ae4e-6b8b-4d34-b70a-3709e77fe1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840357eb-0f17-4262-9923-c314fd517276",
        "cursor": {
          "ref": "dd5e47bf-4a0b-433a-b8cc-189247d1c3f8",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "84fcb72a-09a8-44ad-b73b-374c80b5fd20"
        },
        "item": {
          "id": "840357eb-0f17-4262-9923-c314fd517276",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8895254a-a253-41e2-8267-1999280f52ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840d4b4e-1f5c-411a-9877-e8cf744a5327",
        "cursor": {
          "ref": "707fbef0-bdff-4db2-b001-a3372fc2934e",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fa8438b7-8099-4f26-a5e7-e283012c4adb"
        },
        "item": {
          "id": "840d4b4e-1f5c-411a-9877-e8cf744a5327",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e4cd51a4-12bc-438b-abd9-aa2070c78059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76947ee8-e470-43f1-8dc3-cd8be022589b",
        "cursor": {
          "ref": "e0474388-29a1-4224-b491-a0a9e46a5fee",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4ae28de7-6de1-4877-9662-de860bdeee95"
        },
        "item": {
          "id": "76947ee8-e470-43f1-8dc3-cd8be022589b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "db8f9547-dcad-4d86-b60f-940471f5f90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b13f12-f109-4ccf-9b76-3ae6434896c0",
        "cursor": {
          "ref": "aff0e54d-6641-4c44-b892-3a135b300034",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c2b9a8db-1780-46b6-a0a5-51d0cc623475"
        },
        "item": {
          "id": "56b13f12-f109-4ccf-9b76-3ae6434896c0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "849d1550-568e-4018-8c5b-16bf8bcb6254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ef0d01-a844-4966-ad68-d47c44f68d69",
        "cursor": {
          "ref": "23c26ccd-4d2c-4588-9a28-ea7f7b45a2d5",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2c8a5d71-b676-42a1-8cc5-6fea1d70dd13"
        },
        "item": {
          "id": "f2ef0d01-a844-4966-ad68-d47c44f68d69",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "165325a8-8d11-4827-9bc6-dea4aeaf0622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b627c5-9c31-4de3-ac32-d10d3bc58596",
        "cursor": {
          "ref": "df2eb684-3b98-4b28-b3eb-c5da3c0254ce",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bbfe6195-f1f9-4f7a-b037-8451e9a6bf91"
        },
        "item": {
          "id": "e6b627c5-9c31-4de3-ac32-d10d3bc58596",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3a603d11-d707-490e-a606-5cc5504b9c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b38e95-7574-4ff2-b7dd-7c733b22941c",
        "cursor": {
          "ref": "b98b9676-642d-49a6-88fc-606a9d832d29",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "83d546a2-cb84-44be-b285-bacac398dbb7"
        },
        "item": {
          "id": "a3b38e95-7574-4ff2-b7dd-7c733b22941c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4c73c960-d8bc-48f3-8a40-545d8f357a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f6d977-6bf1-4e67-8114-0d70118f26f0",
        "cursor": {
          "ref": "4e88b667-b292-4fb2-8eec-1609df57d918",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1a07c1e8-be74-4f8e-83d9-c44b0481fdc0"
        },
        "item": {
          "id": "a5f6d977-6bf1-4e67-8114-0d70118f26f0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8d64f81c-28b2-485c-a0e2-32567981300f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af42e5e-0c61-437d-93ce-8330c980b917",
        "cursor": {
          "ref": "8cced4a0-cb24-498c-934c-a2cba1402bae",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b9180cc2-6893-410f-ab11-1bbdfee76dcc"
        },
        "item": {
          "id": "0af42e5e-0c61-437d-93ce-8330c980b917",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "00e4d08b-c048-457f-afd5-c1f3fa94a1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea39ced-560a-4d06-b1cd-7531eaaddeab",
        "cursor": {
          "ref": "d01130be-0cb5-4487-b2ec-3a3d7970a498",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e755c0c1-1497-4a09-ad3a-4e35a1ae93cb"
        },
        "item": {
          "id": "6ea39ced-560a-4d06-b1cd-7531eaaddeab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4e45ba99-9353-4678-816e-69aa59b0bae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9242d631-dae4-406f-8f53-2f88977df820",
        "cursor": {
          "ref": "92e14beb-25a1-400e-bc72-2a6a59dc57bd",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bac3d2e9-7ae6-422b-81a5-1386680d7c9c"
        },
        "item": {
          "id": "9242d631-dae4-406f-8f53-2f88977df820",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "46600376-1237-4641-826e-1a5f9a3d5525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a925a062-76f4-4411-b324-897a320aa8c4",
        "cursor": {
          "ref": "c3a10f97-1da4-4d58-ad3d-2dfa3a30c27b",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fa68e36e-98ea-4f15-989b-d9f3929b3a4e"
        },
        "item": {
          "id": "a925a062-76f4-4411-b324-897a320aa8c4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b010e582-33a4-4979-9ab5-d305882d37cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73af16d9-1d02-4e7d-abfe-242654af4fd0",
        "cursor": {
          "ref": "8a0f422a-f6e4-4af2-8b26-945c9d28e931",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5b45702b-6978-48af-80d8-79d41a024b48"
        },
        "item": {
          "id": "73af16d9-1d02-4e7d-abfe-242654af4fd0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bf1bddea-eace-4136-bdc8-1297952fe60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248a0ca5-f68b-461d-8dd4-43d81545c580",
        "cursor": {
          "ref": "fc5f1e06-626d-4e3c-aa47-4d37a8d2260b",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "194c9f8f-a18d-4cc4-843e-1b7dc8831a0a"
        },
        "item": {
          "id": "248a0ca5-f68b-461d-8dd4-43d81545c580",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "245c0262-f190-4de2-9936-09b807994a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38938d4-2f13-44ec-b80c-1f8b45fc465d",
        "cursor": {
          "ref": "ca722225-67ee-4c8f-ba11-4882b5633ef3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7323c9b6-9768-4c5d-81c8-60bd0584953f"
        },
        "item": {
          "id": "b38938d4-2f13-44ec-b80c-1f8b45fc465d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5c62633c-78ea-4e6f-948f-e4d41ae11b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6891ae3-0acd-4d50-a014-7b32ab8e88c3",
        "cursor": {
          "ref": "ff487d57-7f49-4642-857c-a76b7c1e21e1",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cefb28f1-7648-4afe-9c2c-1aa9d7c5720d"
        },
        "item": {
          "id": "b6891ae3-0acd-4d50-a014-7b32ab8e88c3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7587761f-140f-4765-bb13-cd0f30d7088b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a695d581-f8d4-4d46-bd07-a2862fef88d6",
        "cursor": {
          "ref": "db4ff33b-9d07-4510-8069-4b943dcbd225",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2288b3b0-2922-4355-a0fe-33f80e2abf62"
        },
        "item": {
          "id": "a695d581-f8d4-4d46-bd07-a2862fef88d6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8fc5807b-1b93-450b-ba5e-cdcebdd15248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533a96ad-d74c-4c27-9e0e-585e0b6b52d4",
        "cursor": {
          "ref": "b560f63c-8363-45d8-a721-bd4019face8a",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a8b0371a-e3c0-41e9-b95e-dc43ebc53406"
        },
        "item": {
          "id": "533a96ad-d74c-4c27-9e0e-585e0b6b52d4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6bd8bfed-0a36-4cec-8e56-175154b366c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2eac7d5-f74b-4b4c-8b1b-07fa7d71ea5c",
        "cursor": {
          "ref": "7dc1da00-d359-458f-b515-b393877335c6",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d9541b57-cf57-4127-bc4d-9cddd3a89b12"
        },
        "item": {
          "id": "f2eac7d5-f74b-4b4c-8b1b-07fa7d71ea5c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c8662781-18be-4ba0-8b41-742c63988ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171eb70-ccaf-465e-baa1-ef164ac17972",
        "cursor": {
          "ref": "033d51b3-5a91-4556-b204-38dcba4d0c39",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "385a2eac-4c50-4c81-aee6-feb9ebef6b04"
        },
        "item": {
          "id": "b171eb70-ccaf-465e-baa1-ef164ac17972",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c44af8f1-9e2c-462d-8a90-325c1bb1945b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ce6449-7287-4b54-885d-6e7e595897ec",
        "cursor": {
          "ref": "c919c893-b76b-4fb2-91f4-ab20ea577d7a",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8c92f1d6-b8bf-4ed5-8e20-f73763dae1a3"
        },
        "item": {
          "id": "f8ce6449-7287-4b54-885d-6e7e595897ec",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c0f49262-c7bf-4734-9761-7172a09045a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba61839-bc83-4dc4-8d39-d9552fa64893",
        "cursor": {
          "ref": "db597138-33a7-4874-9039-4e538b48502a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "eedb8c85-6295-4812-8c98-4aa058957699"
        },
        "item": {
          "id": "dba61839-bc83-4dc4-8d39-d9552fa64893",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7ef5fcb3-1b9a-48f3-96a0-d4b65096a84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32ac622-1853-4977-9ee6-2f9f36487a2c",
        "cursor": {
          "ref": "810818c2-2d81-4a6a-b5db-4dbbb4964b1d",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0287d45f-4682-4bc9-81ee-855abd7ca14f"
        },
        "item": {
          "id": "c32ac622-1853-4977-9ee6-2f9f36487a2c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4c399577-f1ee-44d6-9bfc-c4a928aa5759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38be9628-4913-4b9b-99d7-79f1f0e9a560",
        "cursor": {
          "ref": "3a9969cd-a266-476c-8e01-7e5573974417",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "175ab246-83f8-4f8e-9505-6ef6046207b3"
        },
        "item": {
          "id": "38be9628-4913-4b9b-99d7-79f1f0e9a560",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e7c02313-fd1d-427d-8471-22057387d99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b274161-6e6c-40c4-948f-2eefa1ff9a87",
        "cursor": {
          "ref": "423748e0-f06a-4625-bfd8-810fc174ee71",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "947dfdb7-7ac2-4750-b7fa-a5c5b00ed70a"
        },
        "item": {
          "id": "0b274161-6e6c-40c4-948f-2eefa1ff9a87",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "466b55e3-79e0-4137-94d3-fa007a63c829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d5fc7-a26e-484c-8a4f-6069bd8c59b8",
        "cursor": {
          "ref": "a531cd9d-bd2b-4fe1-a4b1-608c8712c761",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "22240911-98ba-4fa4-9e7e-6101439e3cc0"
        },
        "item": {
          "id": "119d5fc7-a26e-484c-8a4f-6069bd8c59b8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "41954a04-c08d-4472-a947-395337f6a1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57355c0-d690-4521-ab50-c2565d39332e",
        "cursor": {
          "ref": "ef2d66f5-0eb8-4772-af65-7a946215cc25",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0401d3c5-97d2-41be-8288-c15498c48e7f"
        },
        "item": {
          "id": "a57355c0-d690-4521-ab50-c2565d39332e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b43a29b2-8dc4-4a68-9289-cceb8bd48ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1d7825-ef4b-4ad1-8dfe-0fb4f26486ae",
        "cursor": {
          "ref": "291a7fc4-4af2-497a-ada6-12b6ae987296",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1b461c96-3e22-4e1e-af3c-b476584e5e8d"
        },
        "item": {
          "id": "5e1d7825-ef4b-4ad1-8dfe-0fb4f26486ae",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bdea880c-68b8-4ccd-8ba5-a2431a04494d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac068d-478e-4ffd-adf8-7d0a09e222e5",
        "cursor": {
          "ref": "0da928f8-415e-4ebf-9537-1bc012b1d1ac",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "145a269f-bf06-4e0f-afd2-cc14b5281a52"
        },
        "item": {
          "id": "2bac068d-478e-4ffd-adf8-7d0a09e222e5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7a2d13d5-d9d9-4cf9-b363-3a177fdd098b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec42f34a-7d9b-40c5-9edf-5475f743b5a4",
        "cursor": {
          "ref": "5121b359-cc86-4a89-9d4f-8e6c8039f02b",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9d194cf6-9ef0-4431-85a2-eff9dbd20c4f"
        },
        "item": {
          "id": "ec42f34a-7d9b-40c5-9edf-5475f743b5a4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1bc3c85c-9e04-4e81-942e-87f600d6e008",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f72cbb-9757-47a1-82ef-4184e070f84c",
        "cursor": {
          "ref": "c2111bba-c6b2-49f3-8dd8-ef94d50a786a",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4c8d54af-d9ad-48cf-9665-30443f2c8b33"
        },
        "item": {
          "id": "05f72cbb-9757-47a1-82ef-4184e070f84c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e0e06d49-f459-4aac-a0b9-2237a5338d5f",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "290a0399-e3c6-4b6f-abbe-822ebd24db05",
        "cursor": {
          "ref": "f0ac2935-518f-4d41-b259-d483692204ea",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f6a3543b-58c1-4716-873b-391653637a30"
        },
        "item": {
          "id": "290a0399-e3c6-4b6f-abbe-822ebd24db05",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c1f0c02d-5b10-4475-82a8-80cd76ea55b2",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c87662b-edd6-4556-8bb8-ca2babf33b18",
        "cursor": {
          "ref": "08d45486-9ec5-47d3-b60b-91983bcfd383",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "063ea8f6-208c-49ff-ad80-c6349e5defbe"
        },
        "item": {
          "id": "8c87662b-edd6-4556-8bb8-ca2babf33b18",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "620973f2-f7ea-40a5-9819-7070b315d6d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c87662b-edd6-4556-8bb8-ca2babf33b18",
        "cursor": {
          "ref": "08d45486-9ec5-47d3-b60b-91983bcfd383",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "063ea8f6-208c-49ff-ad80-c6349e5defbe"
        },
        "item": {
          "id": "8c87662b-edd6-4556-8bb8-ca2babf33b18",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "620973f2-f7ea-40a5-9819-7070b315d6d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c87662b-edd6-4556-8bb8-ca2babf33b18",
        "cursor": {
          "ref": "08d45486-9ec5-47d3-b60b-91983bcfd383",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "063ea8f6-208c-49ff-ad80-c6349e5defbe"
        },
        "item": {
          "id": "8c87662b-edd6-4556-8bb8-ca2babf33b18",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "620973f2-f7ea-40a5-9819-7070b315d6d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a068c3-aef8-47d1-b468-ccfb47e54236",
        "cursor": {
          "ref": "0f5e0575-1e06-4cd6-8a5f-ced13f77e653",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a0c255e8-0127-49da-af3b-53fe791c95e6"
        },
        "item": {
          "id": "33a068c3-aef8-47d1-b468-ccfb47e54236",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fe584f3c-63f4-47e0-9bcf-a810aedb6799",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2405746d-e926-4372-ae6a-eae600e91d83",
        "cursor": {
          "ref": "c0d4ef5f-2c97-43ae-b409-634e50ab73b5",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dfda9284-0ff6-447f-a1a6-119b0b5871f1"
        },
        "item": {
          "id": "2405746d-e926-4372-ae6a-eae600e91d83",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "77e40c61-0b3f-4ca5-a34b-b6231a80f0f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2405746d-e926-4372-ae6a-eae600e91d83",
        "cursor": {
          "ref": "c0d4ef5f-2c97-43ae-b409-634e50ab73b5",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dfda9284-0ff6-447f-a1a6-119b0b5871f1"
        },
        "item": {
          "id": "2405746d-e926-4372-ae6a-eae600e91d83",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "77e40c61-0b3f-4ca5-a34b-b6231a80f0f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64f95f0-52d0-4de1-bf66-6e891f0b129a",
        "cursor": {
          "ref": "85ad2783-4b46-40e3-8893-eef59e2bee3a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7eeb2f06-b738-492c-b838-40bb9b50ecc1"
        },
        "item": {
          "id": "f64f95f0-52d0-4de1-bf66-6e891f0b129a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "cba1ed8d-7f75-4843-b445-fef2f4e533cc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c5b17e-2bfa-4ec5-9b0c-8720217ea9c4",
        "cursor": {
          "ref": "f5b49342-d036-4d35-b890-14d2b37f8ef2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aea21aae-ce8b-4cf3-a014-2438f14bde30"
        },
        "item": {
          "id": "06c5b17e-2bfa-4ec5-9b0c-8720217ea9c4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "93ab44f3-07b3-47b8-b5ff-fb7eec7f6892",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c5b17e-2bfa-4ec5-9b0c-8720217ea9c4",
        "cursor": {
          "ref": "f5b49342-d036-4d35-b890-14d2b37f8ef2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aea21aae-ce8b-4cf3-a014-2438f14bde30"
        },
        "item": {
          "id": "06c5b17e-2bfa-4ec5-9b0c-8720217ea9c4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "93ab44f3-07b3-47b8-b5ff-fb7eec7f6892",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3c8d48-e1f2-4c85-8d8b-464cb62a38c3",
        "cursor": {
          "ref": "264f3827-917a-4835-9871-cf3a27304d56",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d3fafc8e-991a-410f-b094-06870dc58fb1"
        },
        "item": {
          "id": "1b3c8d48-e1f2-4c85-8d8b-464cb62a38c3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "1e347520-b732-4c0d-af0a-762e7f7cfb4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}