{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7caca16e-71d3-4e79-9edd-c076ae58d01d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "72b9e3d8-8acf-4da3-8a56-8aeefd9b752c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3716edb2-fe31-42fd-bcad-a49a5439a3c2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5c65f37-089f-49ab-96ea-10b67e534769"
                }
              }
            ]
          },
          {
            "id": "325dd26a-7483-4f1d-9496-83c8a8a26429",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5cb9ed14-1d51-4cbd-aab9-6dac80f3e7e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3628780f-7bee-4883-880f-dd6bd665dfd7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dce92ccc-c81c-42a9-9433-1f62e35a7516",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5d28cbda-b3eb-490d-91f6-aa7958df4bac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e931d65-f792-409a-ba0b-bc87e604e67a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae3657cf-8e4a-4166-b306-6b669f022f05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af5372b2-c6c3-4ad9-9ee7-3f10719c88cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a1b7802-b962-42a8-bf1a-25aa26cce731",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29bf2bb7-8ac1-4d19-8039-e2f1f5241838"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "502c2855-2b95-4f7a-abcf-b8d91f919396",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e6234c4-65a7-4f3a-8b4e-ead6c6f41163"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90e64316-24b1-4176-b682-0b4f94c1b672",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c6c98747-f41d-4853-b2b5-ab46c6eb6617"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fb89e00-07e7-42c1-9ece-9db81b1b76d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "618c27d1-2499-4714-ba08-1c95ea9a5193"
            }
          }
        ]
      },
      {
        "id": "de7f1c57-a6c8-4a7d-886e-7626707b4f31",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0045262a-64f2-48db-a877-2c809e686cbc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "358c581f-eb98-4962-b278-d9c412e1bdcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5526ac3a-8f7e-4d7b-bbd8-c7ee205a06be",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a035a4-020d-473c-9a4e-a1c50fa7b38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa85c135-7730-4ebb-bb8b-b220cad60b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d12c050-7222-4458-97e6-c19fec390572",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03f1ef0-52bc-4565-aad5-4f986e241181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f67c3fb-7faf-4a4b-b31f-b3fd270c0672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c447fb-bbc7-436c-ab69-055b062313fb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6b9dbe-82af-4797-adcf-51f84ce2632f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d1cca9f-f953-4211-957c-52c35f85a96a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e211653-117e-4aa4-a95b-d0822edcbd77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "743d8928-8591-49bb-9c7a-bb771a8fe9dd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c03b32e-e780-4cd4-8a68-fd6dc0563823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a793b00c-c503-4a99-b610-767cd4450055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d30c626-6e9d-4d5d-aa88-4fcc29722639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d695e4-1ad3-4264-92e9-17dfef4be9c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aaa8111b-170d-45ec-82c9-a837623d57cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd5e687a-00a2-421b-8777-b8987b61bb3a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e9b3d09-e0a4-402e-8634-b565a7ab53ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7285a908-caee-4674-ac1f-7d22af5a00ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8e05a97-b288-41e6-b037-92d5332e059f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3d373544-51ad-420d-bc96-34676aa43e49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8908f07-745f-4797-b3e7-86a5c305020d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a828bcd0-36e2-466f-961f-28c415c874a3"
            }
          }
        ]
      },
      {
        "id": "51d8bb65-b1c6-4c7f-b48a-11fbe459759f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1d68fffc-2536-4615-be9a-be10bb8d5192",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc44f64e-6973-4446-886b-74156a43aa40",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "feab8960-fb56-4bc8-98ef-5edbe68ecfa2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c616ee-ed3f-41ed-a7c3-0c403c869757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc7c7d3-98d0-4ee1-80e8-f4a75177db52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17727621-eb0e-470d-a422-0c84d1efae33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b218f7e4-2c37-4b2a-b225-073a50529ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cac7c16-21c6-45b7-b67a-5e9bad3abd2f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016692b5-d467-4ad9-ae75-6f338ab83431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01d35ab-01c3-405d-b975-ed98435ff623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58686bc4-45d0-4db5-aa18-026df3eaa046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa414de-d859-4eae-a8c7-41d9745a913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca019225-23bf-4bc4-a281-cc12c3e66047",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d831c8-eb60-48a9-bc7d-81668506c964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1547e0-6e0e-49f8-97ea-673bc9955ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fc185c-9c2c-4581-b1c6-438d2d0cc41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61c26bd9-9f59-4723-bb1f-4f374dd062b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c5b8a9-ec2c-4d22-bc42-bae027b62fe4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9915223e-805c-4956-9d03-3b7363d4d0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035c7e73-eee0-4f74-b457-73705799ee98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f3b9fd-c8fe-4154-ba09-2ed7d37e6ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97240a9a-2430-4f74-b958-792eae02c0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba7b85c-cdaa-448f-8826-6416f719bb0d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b073f8-4354-48cb-92dc-64779515d3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1694e0-63ad-403b-91da-8fc5962c0cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9639c0d6-8524-4da5-8abd-d4a4327cbfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6baff30c-b9ee-4344-a514-092ee672e778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2530fd35-43ae-4531-b87d-77345ce5437d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099286e1-988d-43b5-8179-cf4265763186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99261127-1598-476e-b733-0b1c01047465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c8f410-5210-415b-a20f-7f6839c0c994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab2d1af2-e104-4c4b-a471-946aca17f1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a1215b-a59d-4652-b606-f522e12ae495",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1d89b9-e54b-4c05-9733-b85f6223b9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d28448-7330-46a5-9622-fdc9625af43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68aa6582-b864-4632-a542-cb787f2f40b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff73ab1f-ed42-4f70-b2ab-71559a1c2912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bed757-feff-4017-8ff7-3db475c4ed24",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3e05d0-5e35-4773-a3d6-b83f3889d49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635d5a95-2caf-4f1e-b4d4-4d8dfccf3b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33df4d0c-5209-4167-80d3-435c3465203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d45565a-e8dc-41f1-9a02-9d8684ae584e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4e6b63-4ccc-40dc-9edd-0f25a8b45235",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a2f34b-f46d-4c71-bfee-e9dbe83c359d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b762574-e207-480a-9585-be6a229b0e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc1eb2c-9ea8-45d9-ad95-737ac6a1ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9242355-255d-43c6-815e-41f3f6183462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e8297f-d5e0-44ae-8291-12b9d734f15d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da4642a-1cfb-4afe-81c3-14f89802c1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0870c412-8f1d-4580-8e7b-a153968f1d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d7c932-42df-4bcd-9c58-860edd149f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac1d197-bfc3-4700-8c31-5fe2ae13ec24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd4f107-e7cc-4e04-a406-52edf7bc135a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2812d061-0186-4df7-9c26-92152c8314b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7e3973-7495-437e-9786-cfbd18bfa72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a10fce-b415-4a71-baa4-da3ac4e3ab18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32c33b0a-fce6-4419-989b-ffaccb73763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4409446f-bbf5-4d1b-a9f8-6799d19293d5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7200c2b3-2d02-4c8d-b8f9-9f9297b43931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3db18c-44d2-49af-b9c0-a556f1708c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9b31e9-e666-48f3-8b43-3621bd38e4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57a60de5-e27b-49cc-8880-9e988c6d42ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c53f24-2c8e-4b28-9565-e41fa7960e0d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ee6af1-6160-4975-9670-780237079b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bf77fd-b641-4a23-abac-1e990920393a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d604347c-2e76-41dc-8be3-f4229bd4718f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d49c8e4-c200-44f0-b262-32269cb8bc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ade299c-6c05-4f71-a901-686ff6d31f34",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebb86ff-0f2b-4303-b91b-c224d07ea6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e418a3-8f8e-4176-9458-7d14b91e869f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597176ea-e0e2-4974-a9fa-3275ac6b4864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c502268b-804d-4f4c-9228-514fdf0bafc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cc809e-288a-46e5-80a5-b3d9c1641454",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3529d260-b19f-4b89-86df-68510c9ff2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31730b6d-d547-4815-9d27-9d12589100e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e44f7b5-1115-4e13-972f-f31a93ae4f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1038a6f-f42c-4d67-944c-eb3ebfb44a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d88f9f5-cc9f-4d7a-9479-3f35fe3688b6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2adc65-dbc1-4ca1-acdc-8356e5cc8b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab9e016-37a0-4c7d-ab3e-475c32a03137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c33781-cb69-4eca-8c6e-6dd59b59698b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "196e3d61-90a1-4d91-8034-050182dcd90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e115827-4546-4b69-8b51-84dd3d4e3ad1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589dae2e-24c2-4a06-8f5a-243f34e00859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89c9822-1bc5-468c-9b63-b3f3730e8145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078b84fd-032d-4660-89e1-07f3ec37b727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17afdcae-28aa-4d50-90db-74c41cafb27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61419877-d52a-4e37-b9a9-e19be2b409b7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b63dfb6-abdf-41d4-86eb-bf58fcba6ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50315883-b717-44d0-82fb-3181b1184668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef76f99-1471-4ad2-b58d-afd901ed1b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c64fd59a-511b-4e5a-9f61-15f65a19904f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7622a4a-b7a8-4f38-85ab-b3dbdd5aef47",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7b3739-306b-4aaf-b910-7c4a0942f4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adda5581-ff63-4e59-8582-11d449e204c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fba8bc6-1585-45a1-9209-8b22677a14a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af110cf-9b8d-44d9-b9ab-5bd9047390cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f262279-c13c-4df2-b72a-11b4033776b8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52205671-cd79-44e6-ba54-7039a4e86b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fc7745-f6fe-4d94-bc2a-c30e5a3685a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d2170c-8fc5-4c09-a8e4-3287deac7fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a38a2f-e333-4c2a-8b47-cb1991fca295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8f0990-1312-4660-a29d-c49826d41bfe",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7708be-9771-4e9f-87cf-01d1e6dfb251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba867ab-a765-4b31-a95c-08fe9a242a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f961dfbe-72a5-4044-9524-69cb349e6a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddf685b-0420-4c5f-a1fb-12f31b026eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c75c3d3-0e3e-4ea6-8bdd-7836106bd63f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0326feaa-b5bf-4123-900b-4098d4b4c252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ebf7a6-a183-4e9b-a006-3fa6bcfd46ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7a1d2a-0511-4dc3-9b92-178b3dc3d209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89ec2b8c-bdbb-4ab7-bba2-fd1406517e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b4ca9f-d87c-4e09-9f05-b7914407cf4b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25790fb-e586-4bb3-ba1c-b5536c4b9770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07d2e31-0144-437a-afd0-e06644b1ca8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d06db1-e971-4376-a7ef-79892b1b2679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69517f37-9220-4743-9469-927e4e3021a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979c7f75-2fcf-4513-8d1f-acdd4e71eacf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75daf7b-49f4-4357-9ad5-ad411fe8e2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d94308-f7d5-465c-8c99-156c0ac2aa6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96de5c11-92a4-4b82-a3ba-fe31c6e54825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08573e9-180b-4513-af1c-b2fb17d8e4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cf2cac-35f1-48bc-95fe-03eaa667f008",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27ea233-91d8-4fc7-84af-b03d3fd3e42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1538194a-349d-4833-b17f-56ff3e83b703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d88527d-9c6a-4eee-8304-634b774fe0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "636223a6-3293-4b37-9355-4dae7a9ebc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae96b79c-7102-47c5-bff6-15a4f2e9aeb1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986a5da1-0d86-4a23-8e9a-3ff026263c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8ab64a-fae2-4ab4-99a3-6e4b284d0ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcd8e06-1fe2-4ee7-9954-6e678e41daeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dde40b56-2c46-4170-9393-92817088c353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771cc353-ff30-4c6d-8b13-2934dc49bec4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738fb5cb-dbfc-4bde-bcea-94e5c10a4195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5648ec1-18e3-43c1-8edf-667a7eb24882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76588d0-1933-4636-a396-bd4d59bcbff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfaa7bc-5076-4757-8aff-4a5caaa6cf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3d76b6-b4e4-4a66-b689-52a46456df5d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431105a3-e16c-4e8d-81e2-365a2dd5c37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201739cf-8380-44a7-a4ad-fb84ab8858eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba958d4-f31d-4deb-b796-51fe475e20ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7497415-0411-408a-b082-6fa9a7b5910a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf9cd98-fb21-40e1-9fe0-61b13300f4ce",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72ff052-290a-41f5-9d22-e974cbd32865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0df8f5-0e40-451a-9043-a2df1ec22ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8563f4e6-9ca4-4fe1-aa34-ebdb72a04cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83e9a861-761b-459d-81c2-d6a737fe1dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238e9be9-4e1a-4d0f-aa95-0f5a45dcf0a7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af70baa4-5fb3-4fc7-bc1e-68099970de4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89182b3e-3613-4935-afe3-719fc20c5a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe0ae83-0d8a-4d97-8fe9-b7e32665d4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cabcb01-0495-4503-86cf-b852ddc7374e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21153113-b626-4495-8c35-619cc2fd5cf9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cc44f9-f7db-45e5-bc40-b47c9855d75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b33c800-9bd3-4e88-b1d0-8d89dd02bf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da72144-b230-4c1a-9eb1-fe08e44f8e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db06552b-0914-44af-a015-3cf9d2f9ba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2190501-c77d-4cb3-959f-0c30e7ea8cd2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5007a8-cfb8-4b4a-b20c-bf5179f4f9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66f5d7a-8778-480b-aab1-51eb70ce1984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc0cec2-ee58-4b70-85c1-fe4ff43a7829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d962c2-8e82-4fd7-86f9-d0584dbf9106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5ddc7b-4c57-49f0-84c0-634346dc4f16",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac72b6a-214c-4f7d-b776-ea1598142d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a60ed6-3d90-434b-95fd-8427ce76ab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3070ee-5e4b-4f0e-87b2-478e3ae9958f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "845f1b18-d427-49a6-9281-91a9a2d962bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ea8923-088a-44ef-9088-509fe7f73399",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c95424-5257-4cb0-8a85-db8a5b970077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f0a9ec-9499-474b-baf6-04ecb5892215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5f5ee2-370a-4967-90b0-352180c24bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2742be-ad88-4529-a7d3-42ff33c02c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e2f4d6-6dcc-48ca-9812-52b72587d9fc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee778b7-b941-4362-a009-c1d94ec28433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4092a7-6b40-4143-b1f5-a23a82d93866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8689924-9596-482e-9fa4-32a7ee02bdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "de569b9f-77fd-4087-abcc-4e627459c06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ea2a21-7890-49ac-9c36-9f41ed8b1469",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbff23e5-e4b6-4519-950e-2431857b393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f70223e-c080-4328-9699-c2143a05df47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c860c6-16c6-4310-8e7c-0ff1ae4ac9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc26fe3-5b72-48a5-8651-774d0343f9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6dbf67-d82e-4b5e-bc8a-5492be63666d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a88bb5-1e25-40b3-a316-89edb15ab2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd63f1ec-30d3-4a6c-9168-ed07f7d180cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df8997b-df0d-452a-af55-8cd32c8235f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9943f18-8cb2-45eb-8a84-54a5c699bde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b94826-17a5-4ef3-a6e4-952529cf9052",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebcba5f-4a70-4fdb-b4b6-8a93e87e6029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8eadb21-ebd8-4327-8635-ab0b46100bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eded675-ba1a-4470-8fd4-d4ae29ac6184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1022465f-392c-43de-a893-6b744724d508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68162e93-2eff-43fa-b748-a7c5a6650aa8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab019ddb-ebc1-42c9-b2c3-f8c2613c323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b578bc4-ed63-4c78-bb65-17665936161d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bb0d36-6cea-43a6-962e-be6605ca3582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2c36ac-cc67-4491-9f53-b510abf4d7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91bc211-00c1-4dff-ae82-c1211621504d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a564213f-90e1-448f-b7b0-a445a5d158c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bebe0d-8bac-4d9e-83ff-85e8fb80b2d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d920f1f8-4596-481f-9a8c-cce34dfc8fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "053b63d2-cb8a-459c-a7df-955cc14991a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59534b8-3dfe-4a9c-be39-753d0411d590",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7485b6-d407-4110-9702-6ab5f69fc9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f64c468-8d03-47d7-a494-bf4a66a76cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cbf8ec-4b98-4de2-b986-d705aeba4deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "494a53c2-1717-4be8-a2b7-998c4c257d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a859ad1-ebc8-498a-a55a-273f62458852",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38028e7-6d7f-4772-81ae-e784f1c21c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564b2e46-f402-4c70-a95d-788c07cbf251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f614b2d-0c3a-42f5-9327-62eb4835890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18c93326-8080-4a68-9033-b5e016975d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9081c81d-995f-485f-bb2a-3dc8394bf2fb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ff7329-5987-43b8-b70f-2acc7f897bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ff4f57-48c6-411c-bf13-27cccc89e427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4969fc28-a596-42e5-8020-80545403f77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "14507a0d-e83b-40ae-b869-1ad477b34d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1371502-cd9c-45cc-88d8-02adc9c59495",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb46ee56-d3ef-4a55-8450-64c0ce6f6115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562318d6-71d9-4cbe-a849-55d41ade1cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39466bec-5f2b-4911-b5ba-b5b3c6e2c71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa248b38-dae5-44c2-85ff-5689f6fd7ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ccd348-2639-40f5-9b41-7988bd165534",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7eb0e07-4352-495b-90ec-77875ec6bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7c375e-166c-48f2-91d4-26f69a6b77b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad63ea1-9341-4368-b57a-bdf3c8f83c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5d49af-85a0-45f7-890c-82b2cb87c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554b6d2b-f67b-4097-b0e0-976ab58c06b0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5eaaef-497d-4c4d-9713-7cc992ceabaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a23b44c-b8e0-4d51-8f11-802dab4c25fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3a4928-eccc-4a23-b054-6b7d9870e988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9843826c-6737-4790-8163-b8db3e2fc764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77866cfd-1903-45fe-9d1b-50d87e5a2f47",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efad86c-9ea0-41b6-9232-ef81c3e6d658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce469fa-5082-4342-9bb6-5369a2714372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75436b0e-d990-4396-a266-45c321d423b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc41dc4-acdb-45b6-bed8-bfacb0e67871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9180d768-d44b-4391-a98f-5659da7750a5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1e62fb-e04f-450a-aab1-961821556482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7cf50b-7336-45c4-bfdc-34060e645056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79703a4c-b4cd-4bb4-9188-b2876f991635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3289e7-d341-4d04-bf01-a77fbd4eba13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fb90ab-47d3-49b5-b97a-1fbdd7002703",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e46428-39bc-4dd2-a71e-64981da30194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d26d39c-3f63-4dd4-b912-3489ae1e1f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57369a11-e161-4af7-8f13-5da8aef7e40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f77d1d32-62f0-4ba2-8e1c-6441ef00e51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a280004-9752-4ef0-b84f-fad8569ce77c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a08437-91e2-43c8-b0e7-8b88753f52bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91412a2a-3625-4a86-8110-c1c83344cfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd936812-cc73-4957-9b62-6c63a274e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4875b955-cb60-4388-a083-384cffb18db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce425a5-7502-42d8-8dee-44b9c5d8ac21",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0082e98-77cb-4a10-aba5-69b5358084d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb73077f-96e4-4805-a346-3e44172a0f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c6f2cc-a349-4469-8ad3-0ce72e7f77e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2df2b5a3-db53-45b9-9cc1-81de30f34e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599982f0-3595-4f1b-b2a7-4a9b0fe6ce7d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6055dc36-e06d-4b8c-82aa-e49a65ff2d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7663318-44e8-4735-8baf-69b9d1c991c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfc8655-81d1-47e3-bfb1-6c26d26b9ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54f8bbcd-c8a4-485b-9819-87eca3ea8495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d62858-be90-4a66-8657-d486feaef39f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd7f989-6260-440c-9861-32ab9836ffff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011330b0-5a53-45df-b113-52ac96883b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd136c4-0673-4e37-978d-b6403d6cfa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d497fdea-370d-4938-ab13-66902146021d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4cadbd-f25d-48cc-94a6-ad3ed0eeeed5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c9ebe-e868-4283-9ec6-2221b0a9a033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5ecd1d-095d-44f3-b4bf-602317b40a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e0e0a4-280c-4d81-aedc-3ec5270e6edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca8a52c-3905-4542-98b1-31d07def31c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca3c694-525f-47fe-8a3c-91a9edb54b8d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e943dba-a045-48d1-8d9f-0137fe5fcc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8644e1aa-eeef-4c92-9bcc-bdf55c94bccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3064cd0-e155-4f04-830a-6f205846ee75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ab4738-2218-46eb-9889-e94f6c516fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023d7178-9fb5-425e-a6b5-5b8ec8b5e600",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8cd3d7-ef52-4e71-9be0-1b6b710dd025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9965c8fa-9614-417f-9878-fee0a3de548c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1872cd4-3df2-4a7e-b3f8-7f6e4f61af65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "87ee8bf8-d683-4cc4-b16f-9bb5b6670393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073f3f4b-510e-4ee3-bcdc-448d0b5f0137",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbd3a29-df06-4fe8-b10e-edf2f3c8e6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7c8efb-3709-41c2-9fa1-6a4564a2ad74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9f55d3-adb9-4b6f-aeae-d45ee43cc2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8248bd0-6d80-4cbc-865d-9b52b99f5b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad37249-1956-4925-8d96-1c1403c0863e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6781e803-1488-42b7-8279-e5fb3f1c4418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0584ad12-a106-4128-8eb3-76c73af9aa26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c700e4-2bf6-46d8-ad5e-63a71f179755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "522736b5-367f-45ea-bd14-78c6877bff49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efd440e-d3ed-42a0-b3ea-382b7fe7e4a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287d7a1c-7370-48cc-aa07-037eb37c974a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6aba15-29d8-459f-b1ec-366dff5806a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549f9d3a-afda-46cd-86ca-104f9528e4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "debcbbce-c768-4d2b-a94c-e93d14aeb28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa4fb36-e8a5-4e08-bb64-0046bc09d292",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72167937-fe1b-4ab5-aad9-daa3640b5866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4943c224-f9d0-428a-ad96-beddf9906e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5048a9cb-aff7-49c6-bcd4-f34babdadc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "089f656e-947a-4199-963b-7c563405033d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fe90dc-35de-41af-9a65-8822a1c88e87",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07dd074-a4a1-4ebb-8c2e-4b6fb8dae33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33eb964-4abb-4e84-b21d-7eaffd32a640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ca9b4e-428c-42b8-9d21-74255e997d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d715940e-1c24-4393-a7cc-33986298bf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5378e269-59f2-4d56-af0f-4252284cd955",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec185a4f-40a0-4939-8da1-caed77680829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe74548-aa5a-405e-b450-7614049505c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c85e477-3106-43fb-886e-fa6a45b49c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e26c93a-543e-4023-9bd5-a133f3cecb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f0168c-6fa6-4ba2-bb79-729e04043ab5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abbc078-0cb6-413a-8cf4-0c809a231da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2412f2-c542-4cfc-b950-1d10809327d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343130b9-9e2c-4ed6-adcb-d45e7d2ada5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1df33a2-bfa0-4024-a914-a82f1af7401f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99cf0d8-840a-4ade-8928-70351689eafe",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62517552-a1e5-4e66-be21-08fea52b0102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd2a833-6f72-4f27-ae84-e352fd7010f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80ac383-1787-404b-866b-3204c871191f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf4a35c-7d2d-410a-9f0d-740759df72f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f282554-7ca0-492c-b06a-6f3eb43389e4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b726c6e-01be-4c4c-acd7-573f80a57c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e62a6c-1a02-4ad6-9789-553742689f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023ed6f7-9791-4dff-8a3d-be946d3be068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e1d3c5-e80a-49c2-97f4-082c127e988f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9020b9-5905-4c51-bd70-26cf7805cf90",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253fa439-ac28-48dc-9220-b15954dd495a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fe9a6f-ad18-4e6e-a8d1-1e7395503f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef40c7a-0809-4afc-835f-309da1272a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c05c01e9-68ce-428b-b91b-9829ccc46760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd3d8f4-97f0-499c-b732-9952b122177e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af547565-7ef2-495f-8256-1d0fc64ae489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801d660b-0bc4-4b9a-922d-f3a9a02a7480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db29cffd-3a91-4393-8465-d1aaad6815d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8ff397-55ed-4895-a413-52e13604920e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c001955-38c2-4359-b3ad-3e13781c6ba9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff96db3e-d62c-48bb-b265-266541584747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04adc0e-693d-473f-9c5d-d081d52e620a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd21809-446b-41a2-bdb2-c80292bb1ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "81bc70ba-8049-48a4-b2c0-e48b8d7abab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cc5fdf-08c1-4977-bbb3-20fb4acda895",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e57055-a79b-4b3d-bae3-4d4effb23e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba95470-0599-4634-9e64-2cae08076630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4984a95-8ba3-4df5-9b57-f22a39472a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc0e5ca-1d85-4e88-9338-e71a79b37505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e3b759-b884-4825-a8db-de3eefd77903",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ee2b71-dc2f-4144-862e-2f0f8e946736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202ee50d-3bc3-40e8-9704-f2058a5f0216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bce4ce9-ca2b-49e9-973d-d43310f02190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa44d19-b044-44c0-bf6b-2af7150caf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b32951-1969-4465-8590-330749224ec1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec725628-cb43-452e-9522-a3cd8b064721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a28b27-1986-4609-bb6d-480ae376d834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00c1d7c-3484-4375-8832-f8f977f3de79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "010a3614-7295-41c6-b0ad-1387ea53beea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd562bc-93ea-42b1-bab3-76f5407f6f03",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d9c3d0-44de-40ae-9d34-a7ae1638883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3e0a0e-e691-4a9e-bfb9-2acd2a5fdd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f46176-31c1-46d3-a968-d6b87854e12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabdbf4d-4e61-4b46-8a09-5ec7847beaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de7c998-c935-4985-a330-50ec60cf2061",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a83d6c3-58c2-4fea-8dde-d7f6d0883943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4440a2-af9c-493a-9b5c-025705b2de0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489bc682-46a4-4cee-b09a-6563dbac58cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b490252c-216d-4410-9bfb-ef677c26610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b994d1c7-d950-4f70-867f-a5ab653fdbe9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b26cc1-9423-4781-950b-30dbecbf47bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7163197d-90ac-400e-9507-7203916b9641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacfa79f-18ad-4410-8500-8935d4946a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49572cfc-61f4-4beb-a427-5a80e6ca37ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e11905-ca5b-4a93-b581-0b55a9d82dea",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583ead40-460a-4d20-b760-80271adccea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3994ad10-a58d-4b51-8d2a-23d9a12a69f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d085043-b168-4976-aaa1-71cc3a22a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c396c65-6c52-4854-8ec8-790ded1d073e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e05f3e1-cd11-4158-91e0-c41d994f6539",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3263d229-741b-486e-a094-5904a10c3fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba6ac0b-0e36-492f-94f3-12865ef113ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4fbcd2-9424-4f9c-91d2-aa0f15e6da6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb94ba4-5090-4f0b-bf45-7b91b3d26dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b506dd0-2480-4e30-ac67-383c2bb90e47",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67d05bc-a402-408b-8e74-4f8bbcf4f4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3675fef3-0bc8-48e3-b76b-5473cc8480bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb871aa5-ddef-42f0-9c43-c6c93e3c0147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8599d2-b2eb-4fc9-a48c-ecf9b2950ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5ba770-577b-4d06-9854-925a433a87e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f39b132-5e00-4742-8c2f-ea2c1623ca52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab196864-4706-4377-a656-63ccee6d4bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f190788c-ce3c-4a85-b209-7b752dbf5cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8e816f-5f34-48c8-8d39-8d9910eb232d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a50588f-4358-4266-9696-40854a3a8b10",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cf14cf-a234-4fd2-be90-b2e618259059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f882de87-c9fd-4506-aba1-e766338f6128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58261b99-9339-428a-aba1-f2ecf48d8128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2634ad-1c4f-4a57-9ca2-c08538cfc762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d1790c-76b2-41ac-b9be-7e53fc35ea58",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79324a6-7d0e-49cd-b9aa-e32292a91034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2daf30e-6594-40b5-9035-1fcf378b8e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f592672d-ac68-421d-82c9-edd8484e8cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "658d4afa-8834-4b3b-a984-5c3b4e8a1ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630251c8-acc4-4418-9775-1413eb6ae1d9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abddcc12-b32d-409a-9441-f9aeb88ce4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41e9d2a-ede5-4c8d-a0c3-58138fc9d3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01920e9c-7318-4a7f-af5b-602f3b078d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "278e51cc-a9d7-4be1-92b8-b52c9bf69890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368016af-84f8-4403-a223-3282f8ae8034",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3701ee04-fa1f-4410-a3a3-11d387582da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a307be84-f3c6-4567-8a39-827412aa0cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdbdf20-df0e-43a5-851d-b2102fc48b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f144914-6c6a-4e45-81fb-d9ee915ecc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ed417c-d798-4291-be5d-c92f930d9027",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57597d23-cb45-4176-8fc3-eccaec6ea196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3952ea31-7ef9-4731-b019-243c36911a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff18983c-1f8c-4e65-9069-009c974cc67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a94093ae-3178-471f-81fc-b20117b1a326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe440d4-ee3b-484a-aa94-63bd88de232e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375f7540-d602-4b63-8199-cc1609f50b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f73e6f-9d7e-47f3-835a-41557ce53736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c8c7da-18aa-42f3-bd9b-2999a2a8e7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2151754c-9b3a-41b9-8d4b-ddc0c859b9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704b5582-3252-4719-8f0a-b4365d1af685",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9febb916-5a4f-4f2a-9a09-92849f13c049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5802cb3b-6b4c-4d9b-97e5-be91f7dd45f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d02f51-c502-4741-a130-d9a12e2984c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c021d50-341c-442e-85c5-89634e1af448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de452d56-adbf-495a-9ae2-45d42dfd976a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633a0eea-2661-43e0-a918-d700e47099ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12718791-8923-4c51-91ea-a55c4ac46bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ef40e4-5dcb-4d33-81b4-fbaab8df9681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d13c8915-6dde-43da-90b8-a8cf6f25fb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544be0ee-2955-4c00-af6d-f00b9cfcf310",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77518266-1b46-4be1-9e53-5519b89b4e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e4ae76-6712-4100-b461-8f18240f268e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c88aef4-e863-474e-941e-cb8649f13731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "798d1344-9bfd-49f3-abe9-86c852e16aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3743e3e3-98ef-4894-977b-911eb4773c2d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e069d0b6-d71d-4e59-ab67-94495cddc207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239fa613-b0f1-4f2a-a471-52a7d940d1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57319779-6d49-4344-a3a9-8d6fd39ade6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e681c6a8-4253-4161-b1c4-55c4ba07edee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914b88bb-fb19-45fe-bda2-87f4eaf89ade",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cf6ff0-823d-44e2-aee1-13a59cb08073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d47e9eb-8dad-491c-986a-1b8dbf77bde9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5f9d22-2dec-4104-b37a-f02a5b553331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "408ca904-1b36-42a4-aa60-1602581f6664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf93d3a0-48c0-4bc1-94f0-2d3466e7178e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cede2558-7d35-4d51-955c-6566ce302f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd89ede-0193-4e3d-87ff-3fa7e0611bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e244e56-52f4-41e9-b0e5-50c39069ae65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "adfda5c7-1874-48a0-a98d-0f221da63cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9750dfe-828b-4848-8742-8e4285fdba12",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945c5d4d-2ac7-4cd6-a6f4-d81a2236f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbde604-b9db-4784-b478-98aba265b5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d0fd28-2539-4e83-8945-45c7bbae6788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2575758-828a-4d56-83a5-6225b49375d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517eb7bd-4906-48d3-9aa2-ead2e1020414",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98403191-121b-4703-aa9e-a69c29ec738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fd598d7e-c43f-43b0-b81b-bba6b7d5d24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60fc8b1-f809-45b6-8fdc-95f94c86abcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5666d4dc-7e57-4ff4-89c2-713c07b9198d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96b1bbe5-5520-40cf-bf96-e94480875083",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "256905d4-bd69-4436-8720-8df94c2db5a7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea8d9cb-68fd-4a9e-bf71-a78183c3a9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92c24821-78e2-4a53-b78a-ae9071a78820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c77d218-7b69-42ee-906e-6dc1828c3dd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e1a1c74-5608-48a6-bc7a-a8291c2c3c39"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dc10da3-45df-4ff3-b10a-0c7db34ba808",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5060ca4c-cdb0-4797-9f0f-1c38305240b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76b3fffb-2123-4779-ad81-c7ef7de15def",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "719fd04c-5c36-48d1-ab2b-4bd1e3457b47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20fa7a89-40f1-418b-8513-90dd15e79bdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98fce437-f911-41b5-b0e3-9cc729aa358a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78a2d165-209f-4658-a474-62bdb46cafce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3dfd9d48-3f3f-4f4a-8725-520b30b728c4"
                }
              }
            ]
          },
          {
            "id": "f390914b-1b92-4529-abd8-99ed6d454210",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2abb1bc2-58e5-427e-9d00-378313cf2f2b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a248a4a0-e51c-43be-b02d-48cbe2a15a96",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b43cb65-4f43-47ec-b1d7-130bfac342aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d83e5e8-136f-4189-8945-2a6866491369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e2e49b-373b-4f4c-aa6a-b235b9c30d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f75aac2-e0ad-4950-a6cd-170240213aec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3048bd86-ba74-4177-a45d-2a3f6d62498e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "167ecd95-3377-4161-bd59-3d53a0cfcfb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8234c2cd-2021-44f8-bee3-335bbc0a3f8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd259766-8dbc-4b81-bc53-edad54b78517",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd3cb438-3302-4b0f-ab10-0a69f2698fe9"
                    }
                  }
                ]
              },
              {
                "id": "358f4b7f-ed21-44d7-b2f2-79624dfaee27",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44e233f9-0982-49b6-9aa8-b123d239b4b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7330aa0d-19ff-4537-8de6-722d36f23263"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5a42bfc-1dd8-4538-9a7a-a378327a1ebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a02f4234-acf4-4a7e-9058-6a344008409b"
                    }
                  }
                ]
              },
              {
                "id": "54d71b22-c1f2-4b9d-96b4-e9b0f530d4c2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59363a59-b270-4be4-aab3-7f8b2b490ba5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0f6b4e4-71bb-49c3-b3cf-49666bfee0b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "935e6f4d-13a2-4910-a7f2-23ebabae619b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc5ff36b-cb97-4fdb-a426-2ed2d9e0853f"
                    }
                  }
                ]
              },
              {
                "id": "cfa96eaa-064b-4245-a086-710faee7f017",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66b5e152-8fed-4de1-9ea3-8dad309233dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53c3cb6f-f5ed-42ae-8918-972c1b06751f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43d07bdc-37b3-4163-a475-ce4512fc30b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7af17994-5401-4acc-a013-31209309161b"
                    }
                  }
                ]
              },
              {
                "id": "3f9e983e-2e91-44da-a783-0ade97e44df9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1038d76e-289b-4f0a-99f1-ac55cbd3b66f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4df43a2b-3aa7-4201-ab8b-23c660358e9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75486365-aaa6-4c28-9fc7-0d084f2a0a58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "995061f9-f08b-4d62-8d0a-9ae0f696ea7c"
                    }
                  }
                ]
              },
              {
                "id": "5ea5e634-924c-4320-aa47-2f42c78d052c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29846682-c9a5-4167-86f9-3fd76b99e9e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae840263-053c-4dd5-a9da-5007b531afc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78e292e4-77c7-487d-a403-7e1018a840f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "beba0c05-3685-4472-98ff-c3e74ae65ede"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07b3eb19-7940-4e27-8c88-878c13cc4856",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06c07309-a624-4ff4-ba9c-49fa79367c1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5c330f5-58fb-4345-bfe5-303e5ee73504",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3698ef96-982f-4330-bc62-9bc701c8eeb5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10e175d6-1acb-4f85-812e-9e6b940aa598",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1c594250-5235-4796-938a-02c8c8b9e713"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4bc0df9-1103-4815-ac42-d1df32d58c2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7a4771f-950a-4bd3-a864-b0657a4516d8"
            }
          }
        ]
      },
      {
        "id": "86129f5b-664e-4fe1-91a8-946bb2c9d70e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "209349cf-a35b-4f88-8379-db33bb078c4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed462931-be60-483b-b874-aba657e1ff07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f229fad7-86ec-4cc0-a81b-7ead903acf39",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d539e605-fc5c-4cb1-b3e3-4a68b6d52b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a59132-a417-40d4-b0a6-845300682437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a516f5b-7880-41fa-b6c2-208141b6b62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "320ac2dc-e84b-4715-bcf6-33ba9b25cdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45b704a-218b-4a7f-b739-e5d56e6e8273",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a616354b-bd5e-4e2b-bd2c-189f9d34089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b649de9-0d2a-4574-900b-345915b58ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb9e7f2-93d2-4ef5-b046-e3336ae65ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cb34e5-795d-4bbf-874d-c1dc0ce3edc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2833c0a4-95cb-4ec5-b73a-519ef484426f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82764cce-93bb-423a-97da-0d260933e464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3591b956-bbba-4159-96b7-344a89b1a11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be499d0-0d5d-4e4d-912e-b47ab9253a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc89972-37f3-4e01-a354-ea69b31f5edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b552e239-cda6-45ae-a9ea-750bb289137e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81972f1-ffc0-4aef-b770-e7a39d4dd779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf0da00-189f-4eae-8e16-56a80a5003cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a67b3f-c0ea-4c34-a955-bf37338bb280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aaca0df-d7a8-4dc9-afda-97bf4f0c5fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1929a8ae-d92f-4d20-82ea-209cd1707bfd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec52db0-546b-4739-b4ad-40b46891cf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e93f2e6-1433-413a-ad6c-3765fea8b2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb919a3-9481-48e0-a27a-ef4ae4db8321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3fba34-6a83-4136-b8b7-27962cb462d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c18012-5f5f-4915-99b9-139dca48494b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ea5d07-cc0b-4056-af74-d435a1eed571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8320678e-e696-4a56-b8ea-917f5b2b5295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe135b2b-0bae-42e8-b8e6-2e821eacc6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee302a5-42f9-43c7-bd45-5d94e835fad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc358e6-832a-438e-9a75-2cc2dc972a73",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108f8501-c664-4758-851d-8290cc5a2313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb9523e-e414-4b3b-ad79-6d917c11ef92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91851bdd-ca86-4059-8077-6f6410135fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ad7d79-f9c6-42b8-a3f2-9e5292d7481f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec66b16a-cb2d-44ee-ac90-36e66b8137b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd908835-1fcb-4191-9c6a-bca0b4432033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0628e958-53eb-4692-b4a5-19767594df39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd4a142-c6da-4cbb-9730-e3df563e9893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80c58235-dc7f-4e9f-a4d1-bff80925b8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f547b424-01e6-4996-9c69-88a6e5b42d33",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d514c5dc-cbf6-4ef3-93e3-f3d31a119770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1c7927-be99-4d35-85c2-a401cfc1a54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa978136-1b6a-4e40-ab07-16d04fc75896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8dade6-3fba-4aba-96a1-cf9e3b535a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091a4b83-37a6-42d0-b5d7-8962aa0cf9f6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46ea8c9-7805-4ca2-aa9b-10fb363852de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d49627-1a3b-41f1-b0df-b9bca93ebb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f609096d-97ff-454e-8785-2d49143eb79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b4c64e-768f-484a-803c-09bdc025ce76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c9f182-074d-4c69-a8da-42bf21d2cf88",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff4eb0e-a27c-4c49-9102-85467a0a0376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ff3e85-fb13-44e7-b2ac-3f7d04ab300b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7022f14b-64b3-4f8b-b236-42a11f0ee95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4366204c-e349-4786-a341-158c1a2e24fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8336eb-87f9-4521-af3a-416b7f28252e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1ed385-d14a-47c2-936e-753cda305359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2e41b3-2333-4fad-8f3a-2a0d3b2da820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0797f4a6-07b0-4079-9156-309cd2db0e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4285549b-18f7-4f53-86c8-542a8412f934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01408efc-46e2-4074-82ef-9154f29bb92d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107fd724-b6dc-4678-8075-7c386d9d7a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04998f40-bfa6-4c20-9d9c-eb6a8fdc2136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764cedcd-3064-420a-92c6-85a63ca5006c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa74666-255e-475a-ba01-67150ccbe7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015ac63d-49f2-47e5-b8ad-4767712b7120",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794edf34-9253-4d74-87ef-ca2995f2d8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3a9964-64f3-45f5-aa16-c6b8372d6c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501e36ac-0e3f-4d57-a028-f7e7d47ada33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7cb3b4-a7e0-489f-8b9d-72616ffb4e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deb021d-052e-4052-a599-5f17cf547bb9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0d8ed4-0081-4762-9394-8a8559883064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58256963-8839-40c9-9abc-97eff0d151ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2b6f49-6f9e-4352-9cc5-3ed3d1ba95bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffe2d60-023b-420f-bb27-ee8fdcc5bd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f1086c-f24e-4e3d-8a9a-59dea96407f7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdce5c9-0a27-476a-bd9f-642843e38d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7415e7c0-57be-4f65-b619-70f42564b7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fe9b6c-04e6-401e-826a-43f3775ca5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d47efa-f718-44e4-bbbd-3b5e145ded01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012267b3-27e8-4ffd-a91a-586b7511fa27",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d084c0-3f38-49ba-b417-1b01cc6afc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72005f98-bca7-4310-b358-fd7f99a8269f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391013cd-8473-422a-a0e2-fd2337961418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "507eaa8d-3cf6-4c38-a904-26a14f8d60d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1296390-c0dc-4468-92b8-7c3237903701",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa891675-019e-4036-a0de-a251a72644ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02748033-53e1-4789-99b7-961f63f83d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83e1cae-9bd1-489b-9c37-3ab4c8e1931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb8d4dc-73a8-42a3-a852-85136963a450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cae6bbe-4880-42b6-aabc-0f637a39fe31",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af4ffa2-8dab-444d-9b3a-09152bb522d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33472c64-8fe7-45ae-8dcc-25929004b574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62817c20-9fd3-42c3-81fd-6c21b1dd3793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9b3aa5-a235-41ea-9a12-850d1581eef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5404831-5dc2-4692-94a1-63d672e61f94",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3c537f-ac89-452d-b378-9bd6d7a84a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4bded2-834d-4daf-9bdf-9bc934936ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49608338-9e5d-49d5-a564-6be8cb81870d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f6aa68-33ae-49e7-8254-b376e6ca289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c32205-ce95-493e-af10-43f7215e6031",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712c46f0-0fe6-4e32-a05e-907b2c8f4084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c2045b-7ee4-4113-9ea2-c070e55014dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692834b7-d366-4527-aec3-56fd45464c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c7bded-caf8-4a3a-8da9-dc163fa31b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129a4b0d-82e4-44d5-9057-2b32b6cd8e14",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8709566d-9b48-4a8e-aa96-ce6e826b5790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf99baf1-f757-4627-9d6c-23b0406b5eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9e0ba3-061d-455d-9572-dba984bfa595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95f45fcb-36f0-4177-b8da-0b80fc4c607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eefefd5-f0ff-4805-8b0c-b0fe411a2a64",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893dc7ef-5318-491a-8d66-37d09216b530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cf8036-49eb-4f38-9f87-c79e6067b0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4ec3cc-fa72-453b-97ea-e01b9c905a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f410a2c0-2cb3-4706-886d-2c637aca9bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb84274-eedb-4817-bab6-1a1b9beae060",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04a3575-3b99-4b97-82cf-39255a45d0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba61a067-77b9-4ed9-a584-ae8b219a9b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42adf1b2-1a80-418a-b1da-6922fc134c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcd1f12-7d85-4261-962f-354a1ad39991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f3ea5f-1d46-4529-99fa-17884ddd01bf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809b9d11-8d27-483e-b40c-9dc56e3114c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f58e28-d84e-4cee-9019-dfd6293ce785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f88ace6-5fbb-4840-a3bc-452d71a50821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e322aae-dfb3-4f07-ada2-f9b52a754467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d79062a-49a8-4b5a-afec-1a84fefcc027",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d70fa3-5457-49ca-aa5e-4a2adfc5ffc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1952e0ba-9052-441e-917d-0f1809d2bb38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1375c11e-218d-406a-839e-f73419e61912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6578a041-1b96-40e2-8a4a-5f7b775ac4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caa9bbb-55e1-4c18-8f49-bd6ef879e0a0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63e6c5f-0c74-421b-a90c-42089eb96fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6c844d-3d48-49f7-be1e-75c92f49e582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f6d944-5413-40f3-a0ca-447242affe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcc47c6-5333-427f-aedf-0fbe7aa92d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcc81bb-2cae-4706-8905-324bea197b5f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff3a14c-3d77-4096-85a3-1855442f0c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84f5281-24c2-429c-ad10-d879c945ef68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5586b093-6788-4ca1-a0f8-5e79404bf403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72fab160-32fd-4b06-8dcd-2ea91019c430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5ce44c-67f1-43ea-b588-61c988b073be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbc7b9f-d44d-491d-b61b-e8359e00c296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4568bd-481e-47dc-ad7a-04b2e3aa78a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f8a1af-c74f-424e-8ad5-1af654a570e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a771bdb2-8e4e-4c12-b411-5a8714a74447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28ed199-67b0-4bfb-a0e9-7d0fe6f509e5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2f6ae4-3e91-47db-a5f2-6ec60e9af44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec394ee-956a-4b65-8ee3-8c3ca0a00941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e213709c-f815-446d-8c8f-f5794ae02fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11e935e-9441-4538-90ac-908495d3c3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d984042-03a9-4e09-a14e-87bc969c9d76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9477bd-6a1b-42bc-935a-7cdda52aae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a840417-3369-42df-b812-4c7f6801bc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fcc6df-39d0-4a40-9169-8c0fca2a69ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4560628-7cf9-4186-8ae9-db57db68c4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5a46cb-4031-41f5-9d48-b6b1231d9673",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e0bc9c-3ac3-4ce4-802a-eece20897136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abe8b7f-bbb0-44d3-96af-76ed73f60a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2d865b-44a5-44ca-aad1-56f824c81d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "345d2946-49de-47c1-a108-d249fd1c822a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8b53e53-de07-40e4-9fc8-4520dddc8370",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c910f9fd-acf0-4146-9594-dea70c0c77ff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba5d5a6-3da0-4b36-8d30-a61e81f6a34a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "22d71b87-2f5a-4545-953e-5d942c15aa90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc1dbd8-dca5-4ee1-b85d-17962c58cdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b84b0866-6a7b-446c-a0ae-af4db70dd006"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "113cd76c-c7a2-4791-aed0-512e1f6ed271",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f27427a5-6a03-43d4-9681-308dff816457"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28874852-eaf2-46b5-bbea-0e532c58447b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0478250-514a-49bd-8e87-d1adcfd0a4c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08443e3d-cb81-4e6e-8d21-ca5eea0c06fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c3354bb-2c4b-41d8-b761-20de5f434f8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39868458-940b-4fd0-921a-c60dae3ebaab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0ae7485-ba61-419c-9936-49770eb7de11"
            }
          }
        ]
      },
      {
        "id": "4962b72f-087f-451e-9b1b-1e2b97f4b5da",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "de233038-1872-4468-a464-db0025fbc1c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "193bb734-e0ac-46d0-b8a9-662fa1bcc425",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28dccdea-c12d-43b0-94c9-dc6ff8127398",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cfa39f-857e-4c32-927d-04472ec02a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fd625f-a0d9-4eea-b47c-ef125b51a79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b491212d-0b43-493b-a15b-6082ebe36852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f89d5fc-9668-4c4d-94e6-a20273d0ea4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19035ff-1c44-47ac-973d-01673889496d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f2e846-70ab-492e-9bd4-502c88b65a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5625f2-383e-4004-8af7-05d3497fae56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccdc49a-bbe2-44a8-8e49-8e619626fe56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "631ba1d7-6dc0-482d-8712-6cd6b79eb029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743bc2f9-8d0b-49e3-b504-641c348ece91",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38d2a47-36cf-4997-b9ab-661e6adde10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a65901e-d091-4ba3-b234-1aefd02dd3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97e2a3f-2485-4e56-96aa-bc23809f9c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aedea64-30af-4d3b-9f49-b46b0cd75678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d34f51d-374e-4a38-bf5e-4e0d84b80893",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06209c2d-b597-40d4-b794-d530c85fae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dc0c6b-c7f4-4d11-92ea-61e0bd8c13ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ea8ccc-e974-42af-a220-72d68b802a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e9b91f-b1ab-4422-a65e-777aff4c2386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6038917-1557-41ed-9adc-cca0363aee31",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d83079b-1ea6-462b-b862-88c8903ad8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f36fd2a-d41a-48bc-bad8-5ac470916edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca677003-655d-4444-bb80-43f6cd30a5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d4b95b-801d-451e-97df-342ba7e0fd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a899d7-4a81-4bc5-a10d-7bacc0460c4f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b53a2fd-8293-48da-b720-fb7c83090c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbcd478-e214-48b4-bed2-3419e84e2909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49669a3a-37cd-47c6-8072-e688d1c34ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a218b40d-8de8-4de9-b08f-8dd53e4ca719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbde9f04-6baf-4cab-8e8d-8863bfaeb38f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2198a715-622c-4547-8ff1-e1a05ed56417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e13cb6-6eb1-4338-b899-ab01a47e50f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82d847f-1c7b-47b3-9709-b8d7d74ed314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1eb901-77e5-46bd-9c82-234247515499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647c0b66-5f61-42b4-a428-5940046ebe6d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591c3103-a854-4c19-883a-40da87128ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2145ee9c-1888-43ae-b7ba-0964fa5fe0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb10d36b-5308-4c2d-a890-b0a216c2bef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f421de7-3046-47bd-97fb-14d59c718dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44d587e-c06e-4595-8dbd-3c855173d12e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95943c4-7d0b-414b-bac6-48109443ad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c770ec67-1560-4ab5-9dc7-e9c8a513f3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f71ed7-c074-4188-b21b-45213ce723d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca53e98c-7156-496d-a4c3-bbce17309b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b46799-e06e-405c-a6f8-af509a833a69",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98c17ba-6136-4539-804d-32844a5ceff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00094810-356a-4fb2-9f1f-dce3b3008c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447c3adc-51b1-4406-998b-1b82f9eb57cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2edc4c8c-c685-4949-8098-7104f58007c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ec4cea-af97-458f-bf6c-2fc4497e5b1a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9007a7b9-927c-48c5-9df7-4524aadbdd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a226553-db52-4ee0-b66c-47f43fe38e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44603865-9843-4562-92a3-c408786fd750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bba6119e-0539-4267-869c-a3621217416a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685d73dc-2dbf-43e1-9d9a-05b8e09dab9d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2a249e-6849-4b1b-b3a9-651d570b5667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a775c4-309d-443e-9d52-1747bff55d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754e5507-1b88-44a0-9a4d-e18205e4e2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "168b6475-dc7b-4f93-9b4b-5c75a7d2e7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa77c14b-21ba-449f-85fe-2a341337326d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86b4664-d927-4a4e-8212-b1b5048a201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db725d6e-fcf3-4149-bbbf-457ccf249c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696a74dc-b831-45d7-8685-6fe0942ff637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9daeab3-a78e-41ae-b675-cc9673005121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bf4088-e503-48ad-94fa-b9a2571eb4b9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314d2a16-8da6-4610-96fc-99fcf21aaabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c18fbae-e36d-4454-9e4d-a9dce572a707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae05cad2-a55b-49ff-ab41-ee82f1b971c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4524a8e-960c-410c-9d8d-ba22958dede3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0a79ad-22a3-427e-a5ca-0f4c9f325e8b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0addbb-6fa7-4526-a30c-6adbddde9284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580d32ce-7ef2-49b3-addc-fa22292093b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9ddce6-e2b4-41d3-a16b-13cd1de5ac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f7471a-aa54-4007-8e44-5d128bcc42ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d101b971-7c71-4ae1-966a-6e75b76a9381",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38ac34f-b328-4396-a2b7-1f7438b72b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f5db1b-2a25-43eb-8091-320bb2382304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f040b18f-ab1d-4476-b643-e9a052bf9f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcb0a92-0ae9-4292-8c09-5e6c5c24cba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ed3ea4-4b9c-462e-a4e6-cadf43c358c6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a2eaff-019e-4495-8f7e-b309a6345f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa41b159-c2ac-473f-ba7e-c3cc46af0b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d497c4f-6314-4053-b517-86159a227a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa0bd8d-2a65-459a-99d6-8654c7a252b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43178b3c-f2db-432c-90d1-452feba39f62",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c4c571-b9f8-47de-84d0-75cf8d925284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47b68a2-c883-4efa-86b8-ebcbe1e1e71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6101790d-1650-4c2d-9e64-d8def6688bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "340ac98a-8042-40f1-8611-8c66de2e8ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1815ff49-6dbc-4822-9b1b-9fc03f13200a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c5ff40-df97-40cd-b1ac-0c041fd6c5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41cf0c4-252f-4426-b99b-6170e5d1ba4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae239b43-86f0-4998-8777-a24f4d477b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a398c7-69fe-4c54-8656-223b94a4f4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef2e3ba-3dad-41b2-a033-ab1297ff988a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99acb773-f588-4323-8784-394a6768c9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3df913a-7b95-48b1-9cfd-420e38e57be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11199b9a-d624-431e-96e3-e64006dc3e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c30e7c68-2adb-4465-82bc-370645bde5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fde745-58f2-43e5-a270-5bacecdb61a6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843b7f75-daf4-49fc-ab45-93ffc6eaa0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0ae836-87c1-4940-849c-12486dee8cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baeeb2d-8eec-4638-b478-7a91a1842060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8064f9-32c4-44e4-a4fa-697a5189b368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d05eff-a8d3-4f24-a866-ee72820edeef",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe7d67c-26e7-444a-944c-64b7153115e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb871ba-b9a1-4868-af7d-e225d21ebfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad3e11-0367-4bf9-b974-f3cf62b36907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "917686b0-31ae-429f-b42c-a2a7886885b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1ec91f-cc44-4535-b9b7-584f5db02430",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c0fe3c-edcc-45d3-8853-8d799fcdc602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2773c920-e290-43bc-b638-0a229413105f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f5fe15-0211-4e4b-b0e3-7770f81408e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd29a16-8898-402c-aa69-505438c0f5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3948ce5-ce8c-4b06-b390-57f6ca4efdd4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9fad32-ef2f-4b11-ad2f-5bf3e3f4c689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aae634f-fb15-4ff3-ae85-153274ed721a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a138e929-5d28-4139-8165-d1c2034011d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af89f81-fcfd-4517-892b-037015f2140d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec338b0-76cc-431f-ae5e-f75daa15b195",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77084759-c66f-46de-b70d-ef68e6ea8936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b93096f-f189-49dc-b442-81e641a3e1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a5dfb4-724a-41f1-8850-b67e711ebf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a0bc00-42da-427c-9ee4-0b62eb7ca6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c580788d-ccf9-44bf-873d-58d7fff93dd7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6e88ce-e320-4dc7-9699-fb530de23aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f63ba5-35eb-4e52-b6dd-c36b2d0c65b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ac29dd-b8a9-4b3c-a2a8-813ddb52cce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6101508d-5042-45e7-850a-3166a919f72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843d5872-f0c7-4814-b376-738048fac787",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf837d9-f6a4-4e93-bab0-c4c54f93a04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cdbbbf-fb31-4fd3-9f61-1922fbb7c8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad991ee-7bf1-428a-a4d8-4b1c3158ab82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9666344-5fd4-4a57-999a-56e9c4526d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ea338f-4ada-4f3e-bb90-7eb9f4b3cffd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a767edee-3ebe-4f4d-bfce-8fb57da974c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6694e8-4de6-4686-b8c3-eead350c6ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8930ae05-d5e5-4518-b2da-2c544b94e9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "388ccc9b-5f12-4eaf-becf-0b273d57b192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad3ecd4-9892-471d-9070-a02948a7c94d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219df6dd-bb1c-4b7c-8f66-8f3345ccb2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f291e37f-c45c-4a1b-92e4-cd99821f02e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799234d3-2942-4f98-ae07-3bd04c295bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "313ecb85-3950-41b6-a3e6-34e34c866830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd48a2b-ce84-49c3-8655-6322934ce65d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffbc314-ab81-4122-b107-878f1be171a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2030e1c6-6ab5-4c24-bfd5-64e4365b61bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dc0a36-dd00-4e41-a05a-304ceb7661d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbc766b-78e9-43c4-b1ab-70a154aa1542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffd2fa0-c24e-4ef0-a4ef-bc34549cdfa7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea3f67f-5ba8-4588-96d9-761a95eb7ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6facb9-f519-44bf-bff9-6b4803103907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c874da-91e9-41ad-9540-09dede69884f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adb2411-6812-4da3-a23a-a2cc71377ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091984e3-642e-4b44-84e6-82c9f302d8bf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75e2ae1-9609-49b5-aa06-c8782f26233e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e373f95-e783-452e-9fd4-64b55bab8d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e972cc2f-ffe4-4588-8949-3fa8956db444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b47f3f-b0a2-4a7c-8b98-484433f96519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc5c7f1-8ed3-4c70-bb62-4590b91c1018",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a85fd1e-ed77-43e6-8090-c7781d78c179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2da152d-1c83-4ed4-9c82-efe1ae310796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb102e47-0de8-45cc-ae18-d6cb721f294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca54a5b7-d0e6-4f39-b13e-079d604a1d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d2bf31-62ec-4a4b-81d2-b9a12c9706be",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34c00f8-1537-407e-925f-c571887bacee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3998556-45bb-4bff-8675-dfedeff489f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae0b6b5-7238-4cf5-bb29-46af21b71cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20101e4a-c029-44f6-a02d-5313bd388cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cce952c-f1e4-4806-8205-47039d512f94",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd96e25-67f2-47ad-9511-493d3bdd2ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6448abd-98be-429c-8d63-21d454c2b4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1aeb28-1309-40f7-8aad-7fae3d5657eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71690cb8-abe3-4821-af2e-8cb0212a42ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e6ac5c-9b20-4f91-8c01-804a07d5cc8a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58562eca-160d-472c-a8fa-bc80052bd0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d49c68-6874-460a-a498-a3516db09f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ab3df4-2672-4a82-9383-8faef4f7e84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65fe7f9e-17af-498b-a239-5c6927691eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bd9ce1-ddad-4f5e-8df0-dd839235cc11",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d2ce66-9f39-4005-b67b-850cecfbe28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1751ea66-5a28-4de9-a9fd-30682c10da32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7c4307-618c-4044-9fcf-37db850f84e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b02dd9a-8df2-4a71-893b-e307a6dce7aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5bb4075d-fabd-4211-9924-942c4c7511a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d44cc2c6-f70e-4351-a844-01ef5e5b05af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bbd398-532b-40aa-ab92-3348ac116912",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9978f3f9-154b-4676-9c5d-c5d91f28e8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4506a5d4-f104-43cd-b56f-9aa635c291c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "151af746-881a-475f-9d13-21d7285308f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4c0c21f-332f-4fd5-84fa-06302dab555b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b6f34d6-b05f-486c-8d9b-4dfba0a49c0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a9bb69-02fc-4c06-a7b4-c89ed4a0aa71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "132424df-928c-4bbf-a0c5-a2335e56d0d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59cf641b-f3f1-419c-b40d-12e4539a6438",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b874792-965e-4531-bc60-7872cb8f0909"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc02579d-d303-4388-9c4d-a60c4ed81f45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe0545ac-5c43-49df-aba0-7a1fa17edd02"
            }
          }
        ]
      },
      {
        "id": "6823cb93-45fa-4664-9bbb-91eda7e07750",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "193e3ac1-bb42-4782-a7ad-3c5a91aa6d37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bcf0db8-5550-44c5-b280-88b05ff55558",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dd8bc9b-cd0e-4bf6-9428-8048f66404dd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b11421b-65ec-4bd5-b0b2-7bfa1c094bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25592d1e-deed-41ad-9bd5-94b1fad612ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85921e2-a847-4693-b6f6-ec8a2e2eb6dd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7975d5-a2a3-4256-bfb6-fb2f4c1b68cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c7beae-c8a2-417b-add7-19cc4095ba7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5ca4cb-819b-425e-8502-31a120053414",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e808a28f-f6d1-49fd-a412-0ca381d5b4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c3d5fa-7a20-4675-8d66-b6b990bd6d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cb663e-a65b-4ae3-8560-4c557c763f71",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1802719-ace4-4a6c-b564-f0882ed74341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da21b05-fa9c-41f7-802c-c08794d0cc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d654899a-af06-4db7-a813-3c58c541766a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0a9d80-ab89-4634-a7f9-c7199420665e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b97060-0685-4f61-9427-5b165245d7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c3ba3b-9bfa-416a-9e01-419e88dba3aa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e827710c-30e3-4b2a-895f-4748439bb366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27be32fe-df4e-40bb-be31-85a621611d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc5e6a3-f1a9-4af7-866a-fd96fc0a89c6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a66b1e-70aa-4783-a28a-9d6f68f81ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79937b96-8d6f-4466-9b2e-ad272ca31d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ed6d3e-254e-41c6-9a4d-8f26fd1f0e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab1b64a-a0cd-40a8-bbfa-67936184a65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec98a102-3a4c-4891-914f-d39e6678b1c2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75859719-2251-4b64-92ae-913a5cf37815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f387f065-171a-434f-91da-a7fb4f7b1824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f460c6-c3f8-4c82-8d62-713af754efb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ab910d-5fda-4be5-b6d5-e6f6e2c1059c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86895acb-92e6-4c55-aa92-fb8185066cbe",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4830b29-e993-4790-9603-50fadc4c395e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363980b5-9afd-41d0-962a-4c628575c081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81f6a67-c357-48a7-aa4b-697c5119e3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9eccc3-0ab4-4bed-8832-5a90948d3af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f3b0f5-97bc-495a-86db-c3da7b3f7ceb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ecf165-c474-4893-bed7-20d8799ec4ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70e9751-d709-4621-bd59-0acd96fa6f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a555c0ce-d0e5-4506-a469-60186d065049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68c7199-4d1d-4e2f-9d53-8b3a0c11d285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0f8b3b-d3cf-45b5-9494-597fe3bfc3e0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bcc960-8da9-49be-8090-8957d671517b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c23e6a-c1fc-408e-9089-cf0ec4179f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2617f13-4e50-4686-a4fa-73a149c7ef30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e608691-ea1a-4595-98da-c57102974ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556af563-693d-4e6b-95fc-4ae06a9f4b1e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba3654b-6653-4558-8b45-2b6ab3883332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6cf5c4-23ab-43de-8288-dcf46416a8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac560c4-f9e9-4e9d-b26d-e00d80e7c7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16625d4-8022-472d-8a51-57c92600aed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d234d93-0077-49f6-bf63-4637a71a7027",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db87b259-24ad-4404-8358-4ed2a85ab394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d047d5-2f57-44f1-8d6d-7efaa6771770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be57dab-c42c-4d27-8420-5851796db649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ce04bd-4376-4ad2-bf6a-d18d5f6c0fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806ba104-fe4b-44d9-8a1e-dd0eebf57a39",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cba3a4-cebd-4799-b670-d17849a2c020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04f4315e-4441-4e09-a072-638901ddbcca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3631f6b9-7191-475e-bf5b-65a15ac1b277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8251bf-ee41-4739-88b4-74a82ef6d4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd04997b-44e2-4292-a583-1647a9205b19",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c66da8-b6a7-4bb6-beb0-292410de3802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef0b34aa-c2c0-4845-acd9-0f37c63df2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f54dcd0-0e02-48dc-b862-121eaa930c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ef988c-3530-4cde-9637-4b43e3eac1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f6d9e-bff7-4ce2-b5c9-c516e673a8fc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021dd418-fa8d-429e-9e60-4b7de0ad1d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e988407d-33fc-46ae-8a4c-48f3a17a9ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc893d8-2734-4df9-893e-8e304d6aa986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca49e466-158a-4426-ac71-0fa281f74b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf572b5-7b87-43f4-afed-76d9acb1f909",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa35fa0-1291-418d-8055-ce88f6dcff19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008a7ee3-e035-40f1-8120-cf53f5575725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bbe9d0-531a-4a61-9ca4-a3e97579174f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2badf0-d066-44d9-aecd-8e9f6f1df88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebcc07f-cd91-4d91-baf5-d13aa0cfee5d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881c790a-a086-4ecc-9cbb-9b4eae016323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0789666-d101-431a-9377-bda4bf5f0cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c1be4-8c48-4f44-98a3-59e35ebdfec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b9e800-f369-45a1-8768-294879743309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e477f3-0d65-435e-94b2-b46c29901d2f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bbd82a-ee46-4161-9c8e-dcee16d90959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896b6fc5-ce6d-4e6b-86cb-2769c8b2ed96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bd7760-b3a9-4150-9d5c-3c0450737cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626f3569-c52f-471b-a1b5-5c281e008969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d61caa2-5b37-453b-ae3d-cbd7e49d1eb8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e37226-b9ef-4c5a-a4c7-604ccd82befa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a02fb1-7484-4cde-88de-389fbf4af80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4479d17f-a5c8-4a2a-b32d-04f05a2c0b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8734d1a9-7c4b-4d8f-9efa-3e1c09320f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2573af-6acf-4de7-9a13-eea627a253e6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eeacd90-410a-4af3-b8bf-56174a723598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294215f1-3941-4615-9135-b2f43c9dff63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff37c73-a72e-4409-9219-1d68627ef75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8646e6ae-2bfd-42dd-afd7-4be98bc60c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d04f181-463b-4ef6-aa87-45a6feb3de8d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a707d0-7424-4acd-b52e-413f86d5921f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f97453e-c8bd-400f-9298-a2bac765704a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693dccca-5b1c-4d53-9ed1-ac9808194fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31292c56-ab48-4240-b986-330af159efd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1208973f-b471-42e4-93d4-506dfb33fc77",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40a73b2-4690-4bc3-aaee-1252aab88e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3026ee6-d407-4539-9393-50d773d1d29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c48cf6-cbce-4640-87e7-c4a2fdaf5459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603a2852-35e1-4e01-8b5d-35997c8612e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abcf73a-b253-4b7d-b903-02d75fe1bd9d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8526fe-51d7-435d-9e21-15ac60eefdd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b9b5c2a-cdc6-4053-a629-58805cd8241c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e6c0ac-2960-43ab-b4b7-35fb872accb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da49cb9-ef15-45c2-bd9e-523ffa3cca93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468a1e55-68cd-496a-8d85-724760c864e7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd615f4-8627-4b25-bd64-f1c343cef60e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1448d824-cc17-45dd-bf46-f7fc2af70ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b4737a-561e-433c-b46c-dc7eee2eb28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562faec3-5f85-46b3-b050-525ba45d7fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85368f6b-171e-4170-862d-d03d52c085d4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03939c09-4720-4c8f-b524-f656447d6b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6327b09e-1dfd-4ab9-9673-6d5219eb71b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c570a1-12e2-4ffb-bc77-f8605a412a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73649fa-377b-44d1-838d-391e89bb599d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e33fc90-d16b-45a0-b813-9fab1183c2a2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb96c60-d311-40c7-ad57-3bcf611f587f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4bf9229-1ef6-46c8-943e-295e64585609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24a565a-63fd-4694-ad69-bd1b8c1458ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82e7aa8-d09e-4968-bae8-691ba42ebeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1453d418-727e-46b1-9fb5-1a71b99ab717",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7100f09f-a043-4ea2-ac92-797a03ae7f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bf7d67-3303-468e-afa3-8f266b8d02a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740cfca1-0141-4875-8e3d-8df46ce65ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb99619-132e-4a0e-94f0-a6a90f644b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f95a000-8c81-4206-abcd-fb24d85adc30",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091b617c-fb6b-4832-b0c3-ad4495b6a7d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf59efc7-76f1-44c1-92d2-db1046e10a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ddcc95-321c-440f-8f61-b850b6ca886a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0cf78e-0732-4fed-835f-ce6771c38e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e01f72-dfbd-4de2-8810-a1400566bbea",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dfecc5-e0db-4c34-b16e-386fea5773ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f4bac15-3fbf-4b11-9eb8-0b5f65c3fb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a583bb-8640-41b9-b815-1263e9fa4d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f463cfc-0e0a-4c9d-9c34-5667bbdf916e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32eafb6c-0898-4c4d-8a15-5d87f15bf283",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99248751-0c5e-4f27-a3f5-e279e4ad0ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa036758-deff-4fac-8fd6-c7c87c4bef95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94e2f73-f5cd-4432-bc50-bf59f75c5cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33937a90-88d9-4529-b6ae-885ded7c2ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda27653-e113-4321-b20e-725aed92ffb9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82a87ee-d152-441c-97e2-f718290399c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe5cb2a-ad49-4a30-95ac-e437a9108f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acf58d6-66a4-4afe-b6bc-8f400bcc5ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f5a40e-ad1e-4af4-b7b2-c0fe2a762721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb7e715-5b45-4aa8-8eec-cfa0eb297dcb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4251d760-c2f2-45ca-9dc9-f97145d70e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdf38996-4fbf-4f49-9fa8-6a5fcc6fbe1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee4bda3-e8ec-4b9e-943b-f15d5170cfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b43598d-ea98-4d7a-b990-8bcca1a05ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1794ff-5f77-44da-950f-b096288601f5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63a5689-03ac-4cc6-868d-2cf32139b957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c445e39-2a6e-4a06-984b-6456be1b61d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54180550-ba74-4ce1-a048-88bf94e6a1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f7fa31-ee56-4eba-8be8-0b72f93be786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1fc8d3-89a7-453f-b3da-94549ad74251",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51f0ea5-496e-4d8c-84a5-07f9e5087cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c816b19-4e0c-412c-ae81-ff245f7a0f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9c589d-2d30-4f09-9d3e-d7059b1b801f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4cc920-077b-4055-a42d-1eecdc8be890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b5f1d8-ca11-44ef-8930-409ed7edc83f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7330f953-2091-4b3e-9af9-6aa6ee2cce3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8515ac-2701-43b4-8031-6f6ac015cbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eafe65f-586b-4146-9471-f310ed1f37f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45647f1b-1c70-4783-ba43-b8941b3ca5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da883a08-c23b-44f9-a757-6a25704f315d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0384885-edd6-4c0c-b286-57b56f7800e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bcd029-20c8-470d-90dc-c86e529a85eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83ddb2b-5e95-4320-9198-c53cb5703d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51fd211-67f5-4c64-a2e2-037cc448adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d78d13-4441-4461-a1e3-6b3a4de868d2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8c245c-7a5c-4805-a7ce-87edf161f3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03eb0bb6-3ed1-4aad-8b4b-047a463de75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c451294-fbce-4256-a7fd-cdd85ee9899d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cc7112-4626-44df-af00-0766e1081e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817b8f9d-9b45-4589-9b28-31a7e90c32c0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ace84b-f24f-40aa-9870-26c7c81b176e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3530ee4a-5015-4452-a547-f1c300f1268a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f94e91-b30b-4d66-aa6a-274a106ac5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd03dae6-71ea-46cc-9358-0354ba1e2f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f9fb45-3edf-48cc-bea1-f4ed3e761697",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd94060f-5dc5-4045-a6f2-e7c4f8be0365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94884311-13c6-4f23-b7f9-4792f9f22aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572a21c3-81e5-4bc2-b860-ad8f0642a474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9939dd13-3cd2-442f-a6e6-83fce6e6746d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff93201-a523-4e52-b46c-0775ae9b27b2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788938ee-fe0b-4668-b102-6dc5bbb2b4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba3eb02-a4b5-4e9f-9bb1-9ab79fdd2d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bc5f02-d130-45bd-9d1a-acfc9ee18fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13db8ce-dc91-418f-ad69-cf67acc8a53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db14b5a5-3619-47a3-964e-4c62d2ff8504",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1023b70a-06cc-4fa2-ae95-b5eb5d8d77bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66cac44-7d62-4232-8095-6d31be85eb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a14955b-b6c7-40c1-a620-920d00945d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8be3ab-e54b-4e38-b831-4c0ae4450509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc664b0-f4d9-44b6-8b9d-f42260840f46",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6b931c-bb9b-49ce-b04e-586d5fa2a90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d801fabe-de97-4f44-a881-a210c56abaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edb6a61-f867-44c6-abd4-963514cccd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d86be19-3cae-472b-a3e5-133b60f0269f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c256d42-9745-4edb-bcce-02e97e4174d6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df84f29-859b-42d4-9814-e40e5a0f5a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc2d171-8c96-4c4f-afef-0c68c96dcb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25de9da9-858a-4d31-b91c-07d3f6f5204b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bf543f-9b1c-496b-a21a-d711e0f755fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5e82c7-639b-41cb-8d36-1ebe4f6467f0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a3cfe0-9212-4c04-8330-9854ecabe058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f3ae63-924f-4e34-8a30-7a555fad3e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c771d5d-f608-4452-bc18-36ff8ddc603b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8fc392-219d-4142-8cab-e32983373083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e6378c-43e7-48fd-bc82-89539da67bbe",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530ab40a-4a03-40a0-b601-a48c9f17001d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62233995-e003-4008-afdf-f340546ba2c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cad7b9-48f9-4205-8a3d-1012d58f59e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3366c48-7dd1-4c3c-a425-972db999c1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc63a838-841a-4301-9289-a4cccff1bc48",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0ca633-d8a1-4efd-b540-7c37b9f76b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2aac936-bcb4-4084-abaa-e8786fd0075b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38692198-c415-4cb3-bebe-19ceb34abe13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032113d5-448f-48e9-8343-f7717124f4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d70287f-6541-4fff-bd30-b260dedaaafb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f78cd1a-0d4e-4e08-91f6-7694d05d802b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194c62e6-e0bc-4b07-93cb-50c5907db5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7af7c1-f6ae-41bf-b965-94737acd563d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0927020e-0478-416d-82d0-96a047a28726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e357a6-b658-44a1-a11f-5d7089a5ad8b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef47ddd-a321-4934-87cf-20b2c100864a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabb62ca-a7e9-4a5f-8700-f3a9d881fd50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8729fed-881a-4816-a2f5-8d14b906a85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2941a3fd-3e5d-464e-b88d-5c16cf0594fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e321f5a-ab13-4953-a70e-edbe8c84319a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834d70c1-3225-494c-9c45-08dc8656eb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fbe63c-2606-4d18-b5c6-6a03a5382a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6691b87b-2ba2-45af-badb-767f0530bf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952cf436-f56f-4fb5-974e-93ac1aeca7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718c1c35-9c20-4b91-a09e-466919ad77bd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90907ed8-88cf-46ee-8f1e-4bc4bbd904a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a004cec3-b24e-4f5d-ae18-63884c480e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0713ee89-30aa-4d29-8849-25e5aef29a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72990b49-ba50-44d2-a4b4-e6e4cb8a39d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666ccc26-a83a-45d9-975f-5c5a11dcd52f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093dba30-f5d9-440c-bf1a-6e07e2e48ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3550c33b-e04a-4591-8c93-6236f294d1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178c239e-5594-41b8-8ea1-bf4cf97b3c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945cd3fe-5ce4-4a5e-bc13-1acfb83983a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58df072-f70a-46f6-a05c-274ac1c4f8bb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf6e419-4157-4068-92de-8bad75632ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7649175a-05dc-4f7f-85c9-3efadeec3a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634eaa23-9cb6-4d58-9c7e-859526fcf423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbf30e7-6aeb-42ce-ae70-d70233c498c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37394156-3dbe-492d-bfcc-ee50c7a7103c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f92d0fc-553e-4876-84ba-9c00ce3fb9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d0bc4f-5cbd-4697-9f7e-9e900553dffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c0164a-37a0-405c-8946-e8ba425e1284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93899ab4-1fff-4052-82a1-a3f835777a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6561af17-20a8-402c-a520-aba9c7bdf9d5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e515b4b-0794-4348-99bd-0e3752b3881a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9d6ecc-ac8f-498e-b03f-d64e21203f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a97f69-24c6-4602-a0ec-d2d29ea024d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928a596d-5609-4229-ac1a-7986b21d798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e06574-60dc-459a-8793-2366259a7e3a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a48b23-87ec-4529-8f60-97972c4ac844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36041c4e-f065-4a33-a104-2da400e787af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e749d604-5f46-491d-8b46-53f5df3e6c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55a03c5-578f-4f23-8e47-b8b063f0096f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e9e1d2-0dea-4662-b3ba-a99350e40eba",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007768ec-833f-4ae5-aab7-af17cd4b635c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d2607a-bec1-4e74-b42f-6e575547de49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ec21de-46fe-4378-9b56-f7827b64da13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9f9a93-26a4-4466-aa4c-c3359ceaa1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a53917b-b569-48a9-8c6b-a13e59a19da9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d40c13e-cb97-4708-819e-676d6623f984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4ad246-deac-4621-bcac-273e2a7404ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa560f71-caf4-4dc0-b988-66d84b862988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9aad49-a2bc-4ee2-b7ea-e0f568bab769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233c0034-a241-46fc-abb6-2c2116d680e7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447f19fa-9101-4eea-8382-a3f53babed73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025ef2ae-59fa-4f8d-84b5-86a6fbdb6f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81edd9f-8e01-474e-8caa-7609b87fad82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de96a337-005d-4a3a-8e68-c6b4b2dac152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395c9c31-2426-4190-b850-d93c4b1cdd9b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dd761b-0fb4-496c-bd6f-e75f1d1fbb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40d24c0-7293-4163-a079-8d17c9d2fffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c49d50-63c5-4ea8-8f62-fde08e76971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59021851-7af6-4f60-8b0a-a1e0b08a2aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4247bcc8-fe29-4759-8ca7-3b3408812618",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a8daf1-169a-43ab-b952-ce81e85c71b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f948f20b-8e44-4ad9-9577-8c4fc6d2fca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9a5977-6516-451a-b166-644269d86ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ccfc70-911b-48a4-b0c0-12130c4b9251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b0842d-2fb7-4a3e-ac67-c1c1ce4e995a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d8c11e-bbef-4d75-98da-f0fdbb6fc458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afba1bc-c163-4500-b7d5-aeec61b9af62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b252bf-97f1-453c-b398-c955e09e9d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfb4839-fd32-447d-b6e9-02882f7fc51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15708187-d60e-44f5-b2c2-0a92ee076765",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90236561-d5ed-40dd-a354-762ac5b6186b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d9d97f-86c0-48c9-b9de-571ad738fd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c264ba3-7159-4c19-b0bf-c788cf19937d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec973e8-cf23-4bbe-9022-036f67e4e919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cac205-0510-410d-8998-d7058450497f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e182ef77-a59d-4cb9-9f02-5dcd3a4124ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7561b754-ce3f-444d-8c18-23e785ad63dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b795af-4861-4114-93ae-6042e39c3ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30114a6f-8b42-4086-a0e8-f02fab363a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7905c9-6667-47b9-b613-8de7ad28e64c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d09b181-75d6-45c7-9799-a77b8235eb55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97bb7e53-cde5-44c3-93f1-013477185119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6d0962-2db6-4875-a443-39ba17984c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65b73c1-6ed8-458d-95a4-5b407771f4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df03df51-75cd-4232-9639-b7a036cac112",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c762e0-17af-4735-9efc-f121a2665ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec40056a-f2a2-4a1b-9669-a34f85dc9779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb70779-8d7c-40cb-98c2-872154e19495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3010fb5-3601-479c-8b0e-f3401564a655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac7803c-1afa-4b3f-bbc3-b28d8b422f27",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f191b47f-2be8-4973-867b-f22599dc72bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca65e93f-5c4e-4406-90bc-2eb0d1a010e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa6dd01-4b62-4272-91fd-b9a1e5c26560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b234eee-7337-45f0-9d0e-9727aa59670d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf467d7-d218-49b3-813d-4fcb9221ee95",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dc5827-4b18-47c0-852d-da3f47e5e969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dacbb2a0-f561-4c18-b8df-807b6ed7c401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb896d5-4a25-4a56-89b6-abf7d4ee5f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbdfe54-3dab-4937-9e07-1a07a01e98f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ea3aee-94b1-4d89-885f-45db250ff826",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5252e7d4-fff2-496c-8bee-aa57613680eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b09b7c94-7245-491c-9b92-454457b7490f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4271e6c-6b03-4a32-9381-741e1936a892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1796dc1-63e6-49df-ab57-2a554634e4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29b0561-6fb4-4d3d-b14a-013f50e813d3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b98566-f3eb-4745-949e-866690d0164c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f75c7f-3e62-48aa-a5f6-56439ad8be03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00542e95-c9f7-4ab9-82a6-34e4f999f31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb6f446-b48a-4d84-bf8a-7cdc3e7793f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9443ce9-ee2e-46a1-9619-5bc47073fad7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4a3a21-ad4d-48e5-ab5a-99c2c86c6cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f910ca-d003-42fa-bbfd-c1078b4f7c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d30ae8-8fb7-4667-8e3a-f6fd46d511ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39752cd8-41c5-4ba3-829a-308d3f21a479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf26bfd-40bb-4f87-ae55-b95f584c9981",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34d37e2-f4f1-4a4b-92c2-3177b9d83920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "543dbdc6-7e1d-458b-9347-66e001506183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c885e4-a783-4799-bbcc-0c74b2ce074b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fbac651-e6ca-423d-a4ef-9192e5ea1f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3942ee92-c1cb-405e-9b70-ae1f62dc988e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a37fc8-adf7-4b12-8d5d-a31369f136d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7532c51d-b1c4-47ed-8035-27b6d723ec92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65507bc3-ff81-40c7-bb70-1cbc88cfb3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b762771-7666-4daa-96ad-cb341f202f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e197462-6b1e-4124-86da-66b111725ddc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708fb559-b488-4d97-8a5c-1c121c791d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db871d7b-ecf3-4853-9cac-c23d889a0088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c10945e-a6bf-402b-ac5f-58cb379dfc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416c5536-4723-4367-9c2a-4545528e26ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc0d88e-9c7b-4dd7-ab83-db5aa9cf1993",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4726b884-88d4-49da-b934-47d50b2c636e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e5e8e92-c9ce-42c7-b1df-6d4a0d86868b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d54f42-0718-4f2c-a2e9-fcb9b224f160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2162b657-5e0c-4f64-9507-e54b3d83405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2111bacf-979f-4c21-866a-1134f7afe84c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b46f9a4-b82d-427f-aeae-2a6096f4dd26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0bff48a-93fd-4447-a397-81306ace20f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4711cd8c-e333-4d76-8fea-eb39f4eed551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b690bc8-603b-41c5-a038-0a0eddd557b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a33ed4-e69d-4eb1-95c8-46827166e634",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cec1ae-cedb-4048-97c5-9d77dea3ff05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac5730d-4275-4b3e-82b1-31451cfd836a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc9018c-a06f-4ced-8ea4-10e4bb8b511d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ed6b2c-871e-4fab-892d-2e8261ff3662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7a9610-ea80-4f6f-995e-4b859666b12d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594d1bc5-9cf9-4bae-9679-e742fc6ee7a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c10c7f3-af89-438f-a2b7-c1796c41adb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3584cfc-b290-4837-8d42-2c1f6a724c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958760e7-489f-47ac-b60e-066ffca3c279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72419cf7-0f9a-47b8-a71a-2e5185f36e7b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe736f8-9a46-4da0-a32c-b5099067b990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c17e79aa-79a4-46b7-8632-36204a289e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1872929-491f-41c4-8e6b-1580b327c4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8287ab23-b5de-4da2-b915-31d0be4472a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc660f5-2bd8-45a2-8634-eed860ae5018",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fd35c5-7e3a-45f2-acdb-759534a9c5f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8155978a-b06e-4304-ba35-c7854504d3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08af487e-d130-47b6-9470-794a010d614d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d3beaa-1324-46bf-ad6f-c02000c2b27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75efe8c6-61bf-4b4f-afc5-2dc30e5e6199",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf192608-a438-4a4c-9c5a-6a979c937998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9897e857-523d-45bc-aff3-f704d25f2fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78916cb-94b9-4319-ba97-f77fc1865ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf19990f-2c09-4d29-bda2-01f1adc5c1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7555b5a6-12a7-4ed5-aace-ea05760c2da3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d6c923-ac02-4197-9538-478982f63da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfdeb5b0-b13f-42cc-ac91-d6fed2c67b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e540130-1a80-4201-be67-94a09763a3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e5fd06-cc55-4654-bac5-55a64813a5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8332c8-7991-4cdd-800d-4b6f27fc50af",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dcb3cc-6202-4e65-891a-3bb205bb7adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b39367df-3665-4bcb-ab34-fdb7a7234c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d22cc57-b70b-4101-97bd-58c63ec194fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20598725-7536-4cf9-bc51-853613e832ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0661edce-ab77-43b1-b4dd-5c81e2f459d8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa86e485-ba09-4065-9fc9-9edba53f54ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85518370-1dad-4cdf-b591-8a09e9088ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400c29ba-e4fc-409e-99f4-bd7fd5138f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cbc8c5-7a0f-439a-bd36-173037895274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca0ea44-a861-4a0e-bfce-c8e9329087d9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa81a4c4-7365-4d71-8f90-c0dba38c014a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dadda677-99b3-45c0-a6ca-8391086ce46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c8c5f9-c0ee-4d84-af20-1e2fb827312f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5fc469-0a34-4bf0-8131-a27ae0e08997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b29b866-f5e2-4b47-b13e-20c041d8f6f4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69606ea3-dd18-4c69-ab0c-169df4001a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54aac15c-b5ae-4e88-b462-21b875bf7914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd2600b-0846-4294-a988-b6a6482ffc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f82550c-4501-4968-9cfe-03d5658f0031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f275d86-3dda-4080-b1f1-e65bdc4fd668",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667d8c00-652a-4578-b0bd-2d634601ab30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8c9524-d542-48e7-9a47-14ed190ff0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596ac209-04e8-4620-a1eb-730ec9fb2507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e244114-2750-4ee3-9890-d493bf0cdb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51bc5c2-ad92-4638-805f-a2ace0198d2d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b29b480-c70b-4410-9435-68b0ae39dcf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5071e894-8f62-4d3c-a82e-f1dfbf14d968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443c1cb3-218e-4689-984a-ee2d93539aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabaaa8b-9b17-409a-b798-5db44624a8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa86ea80-4c70-4112-bed0-3fc41c2f83bd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf1124a-7179-4fcf-825e-4fb0acd954a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec315214-47b1-49f1-8ebb-6d429950d07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d41228-9df3-420b-afab-86de9e1193df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8b9c93-b9e4-4874-8a8d-10a9e5a528a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c885f06c-6a7a-41c4-b732-c5a978424683",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99d9110-a657-47e2-b3e6-7515240fbb29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279f024f-37d7-4d2c-82e4-37cbba49ff01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c22764-94a8-4fe7-88be-5354e7458bb5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68eb7415-b1f5-4ad6-aee9-17e4d0dd1aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a5c84f-6b29-4233-a7f9-3f8eef900398",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1e0a0e-2351-4d64-aff5-edf7c6d94492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4431b4e8-e388-4270-9cea-101d48adcdec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61e8a9e-4cc4-41ef-bd3e-3a28a9c68f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0ef9f1-81ff-465f-81f7-4e64d81afa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04a905b-a704-4819-a834-5283666bfe1f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e557ec87-6eba-4b8c-af75-6afba83414d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a56fd64-5704-425c-a266-36696807d486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0828b478-9475-4710-99a2-daaba4c07529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f6649a-c6cc-42b3-a7c8-9ac7599c2024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d66395a-426d-46c5-a32d-3ae89debef5f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a9705a-fa18-4e82-acee-95fac691817c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4902e0-c038-4a59-a2fe-5e6493d3a51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55501ac1-3bbe-41ab-9940-35b384650531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0333562-88c2-4cf9-a1ec-5e5ee4ae5109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32bac85-2330-4045-867d-d73aba79375d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c743a9-2aeb-4b13-8b5a-ea21ed4de03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc1b5ea-48e1-4c71-951a-728d815d1cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ea7025-197a-4a0c-b2d8-40fdb43c75d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff25771e-4c60-445f-a8fc-4c87d359e07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20420f62-e44d-47c1-9cbb-21f9dc93facd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd82e72-8be7-4c72-8ca5-beccc7f74e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d974efd-21b2-4517-95a1-83b863dae9a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df564700-76a0-4e9f-81b6-c90e0e0ae09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9216f754-a368-4684-9e4c-d55a01571061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b9128f-30fb-4636-9cc5-923187c847df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2e032a-b941-48a1-86b7-d0ec06d60590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1e962e-661f-495e-b7c0-aedf309e90c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa69635c-e393-494e-9f4a-61eba388a9cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5311be2-7630-45ec-868c-573ef583a6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824c3291-736e-4d25-89a9-d498c83e5628",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46f16c9-4b85-4a29-94d6-c3ce17b15367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b07f81ac-cebb-442e-9975-38f5e86db067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d21957-f7d9-4009-9e75-ebacb5b34dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d0fc69-e187-4415-a66f-04df6d6af07a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b336b8f7-23b9-48c6-8644-35b93e33da9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "157d2d74-2207-40fa-a26c-aa246cfb1d17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d1c88f5-6bd8-42da-804b-2c616e054272",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa2b2ac9-8935-4090-8e6b-9158843536dc"
                    }
                  }
                ]
              },
              {
                "id": "d5bba10a-a8e6-499e-881b-16035bbb14b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a32e5a9-731c-4f3c-b28d-acf84b96f624",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c511ebac-579f-46e5-ad55-1ba19c4a791d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4d6d2814-a7d7-456a-a2c7-aff985a37154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a15b1b7-2e35-4e9c-b89b-23326427c7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cba99f5-13d2-457f-bba6-eb1858ca79a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b7e4bc0-853c-4383-9581-4f90f076f0d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "554e6596-fa59-430d-9c0a-de5d10ea2cd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87f1f4e3-42a4-4459-86d2-c589a4dc23d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "395c470d-2064-4b3c-a30c-db411558ee07"
                    }
                  }
                ]
              },
              {
                "id": "957be740-307b-437d-956f-7af0fe021853",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0a8e59bd-98c0-43df-8aef-854c1e2c5c85",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797a2363-1af8-4632-8fb3-43cf98172775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7572a1dc-71b6-4b83-945f-20e1db36ef5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40c78f4-f8f6-4dd1-aa6b-d6c67adeb283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60342289-4c1a-49a5-94fc-85032cfaf103"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "370707a4-4903-4696-8797-bbe779dff292",
            "name": "Positive Testing",
            "item": [
              {
                "id": "864d77e5-f801-4d76-a834-eeba88758e4e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19a55439-d896-40d7-9183-99d21ab6d312",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "535f438a-fd1e-484d-9199-bd18ac79dddf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73a1ebca-ed57-446b-add7-764ab7021473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a2f4768-bbc8-4d57-b34c-77e87267c976"
                    }
                  }
                ]
              },
              {
                "id": "d7d6cdd0-f449-4e9d-b42b-07f8755a3701",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c0afc53-8ffd-423e-912b-7122919b4db8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4649d94-38e8-4846-affe-636aed244ea9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab9a477a-95ba-441e-b102-a2d51d5b2357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24dc5ed6-622d-4a17-b9ae-24b0999367f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "233fe053-b9b7-4ca9-8e60-ee3903c8b212",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6df4beea-c4de-448f-9018-1708b7737d97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "689c297e-f75e-4132-908a-7e9d6021f5d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ef2aa7c-a23b-4d57-9c15-a7589b77d6a7"
            }
          }
        ]
      },
      {
        "id": "bda8d720-4554-42d8-8085-dd0229204fe6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "03534566-a529-4be7-8347-a131ca113ceb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f67ea57d-3585-4896-b821-0150f30e4891",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b56f3b8-fe2b-4688-9a5c-43ee26bec15d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd44595-3538-42f9-8f81-2557eacbb080",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6ac5c958-e544-46cd-bb3e-725d03c9c4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdc8418-d076-4753-ae5c-e44f7ca7d58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1844a26e-544b-4fec-bccd-66e50789d586"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd889b4a-4dfc-4ec7-8caa-11c65d9d4a57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0edb7309-c05f-4998-a6d5-7fd851faac00"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3dfe5a9-371e-4f7a-8708-066350fe6295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "166aa59b-7c78-42b9-b43c-be81eda2b424"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "971f6ba2-90c4-4b55-8e21-96fd3fd73b7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2525ca02-7cb5-404f-9ab2-c7650e90fc08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "387055f3-dc99-4545-8485-d53b0462e931",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8dafda95-9007-4f63-987a-1d3ea8971ae6"
            }
          }
        ]
      },
      {
        "id": "b60f5631-ef7d-429e-a5a7-eb91cb2db7b1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6f674170-0765-40ba-a3cc-df0a638cb0b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51e52e85-dfdf-43a0-b6c5-1cd54382be07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc338989-861c-41a2-86c9-ce75dc885c0d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4092981-5fcc-409b-80cd-fe560d4f0d3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34b68134-8d47-4218-8cf3-e023581baabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2a492d-ef27-4af0-9784-c1cc28b99543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9826b5b-9f09-4b3e-9ff8-c36884b1bdf5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16026c38-077a-435a-a9be-73fcb4f2f39f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf7b3d53-b21e-4af7-962d-98113ab417a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c617204-97d5-4976-863e-cec5b1eab118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dec0efc4-4d1c-4bd3-ae9b-90c73f865aa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c604655d-95a2-4966-972c-8ff500995010",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70d75599-03e4-488b-a00b-a4ffbaa7899f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ad5b3d0-eafb-425e-a89d-858b9d8b230a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d69ef190-65d8-46d9-a90b-e3b30ec7b240"
            }
          }
        ]
      },
      {
        "id": "cc3f66a0-9be2-4c01-a3fc-bfa3d8da0f4d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2866110d-a7b1-4313-bf4a-58046f831bd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bd8a9e8-a3e5-4f97-8e63-e1f78e27c01e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73d493f5-5939-43fb-8ef5-f858b762f460",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6ed0fa-8c83-4444-947f-fc6eeab96282",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a896577-4d05-4459-8ad1-cd59c00c16f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc20a576-bc8d-4045-b118-66e7ee3880c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3d76198-bfc0-4142-b2a4-d2294b8a17c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e627de2f-9186-4921-9095-ff9cc7f21600",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5adb180-79aa-4184-8633-f904a07d306a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72a9915a-995e-4164-a17c-eb0fa2ad1f5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "476df0af-1853-4c98-826c-c7776746d718"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4e9f398-e828-411c-8b65-86a776ab41bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b4cb90ac-ef57-451f-9753-264b94b04b59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd45dac0-c060-40c2-8bd9-910d3a95a6c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b74469e-db1e-4901-ad73-a903fff70562"
            }
          }
        ]
      },
      {
        "id": "2d331083-3656-4031-b24f-e4ff9140b40f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d5e0c45-e34f-4c91-bae6-b08f632a57be",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef9acec7-e08a-460c-8e52-b085240fb7f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c5d97cba-6d8c-4930-a7a0-0547e744146a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45abe75a-e977-4980-bc0c-44b5c46bd6e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c238dbe-8b56-441b-bcf9-f122a6036922",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 361.6210526315789,
      "responseMin": 10,
      "responseMax": 8825,
      "responseSd": 1086.109488638771,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697762015893,
      "completed": 1697762131428
    },
    "executions": [
      {
        "id": "72b9e3d8-8acf-4da3-8a56-8aeefd9b752c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3725b964-fac6-4e41-865e-18d39c3dde3e",
          "httpRequestId": "d4b62a6c-15c5-41da-a06c-6a3ebccf7854"
        },
        "item": {
          "id": "72b9e3d8-8acf-4da3-8a56-8aeefd9b752c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fe4c2f5a-89d1-434e-869a-c05e081ae5cf",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "325dd26a-7483-4f1d-9496-83c8a8a26429",
        "cursor": {
          "ref": "ee07f60a-7483-449e-8bd4-c2e22c84deec",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "65b4130b-3a8e-4837-8eaf-122089d1a892"
        },
        "item": {
          "id": "325dd26a-7483-4f1d-9496-83c8a8a26429",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "424b3244-123c-405e-9b58-f3b53ef9e5a0",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6e931d65-f792-409a-ba0b-bc87e604e67a",
        "cursor": {
          "ref": "67b22abd-0026-41b1-bf25-9834162d24de",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cb6ddb6a-fea5-4e1c-b263-f919db4c3dca"
        },
        "item": {
          "id": "6e931d65-f792-409a-ba0b-bc87e604e67a",
          "name": "did_json"
        },
        "response": {
          "id": "49fda46a-4d23-446a-b5b0-128c17144181",
          "status": "OK",
          "code": 200,
          "responseTime": 1362,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5526ac3a-8f7e-4d7b-bbd8-c7ee205a06be",
        "cursor": {
          "ref": "501e0ecc-2d4d-4e02-8f14-3646d696ea70",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9de4c1f5-3edd-4b46-ad10-008ea02a84bc"
        },
        "item": {
          "id": "5526ac3a-8f7e-4d7b-bbd8-c7ee205a06be",
          "name": "did:invalid"
        },
        "response": {
          "id": "35395b83-c20c-4cc7-9128-d101db9d9139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1176,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5526ac3a-8f7e-4d7b-bbd8-c7ee205a06be",
        "cursor": {
          "ref": "501e0ecc-2d4d-4e02-8f14-3646d696ea70",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9de4c1f5-3edd-4b46-ad10-008ea02a84bc"
        },
        "item": {
          "id": "5526ac3a-8f7e-4d7b-bbd8-c7ee205a06be",
          "name": "did:invalid"
        },
        "response": {
          "id": "35395b83-c20c-4cc7-9128-d101db9d9139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1176,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d12c050-7222-4458-97e6-c19fec390572",
        "cursor": {
          "ref": "7326030d-c05f-4c5d-9222-5054f5d25cd6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cb230ae9-96ab-4a65-ab0e-94c0d05ab02a"
        },
        "item": {
          "id": "6d12c050-7222-4458-97e6-c19fec390572",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f39e9f32-0ada-4bf9-8f5e-4c40a89bf7ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 336,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c447fb-bbc7-436c-ab69-055b062313fb",
        "cursor": {
          "ref": "79849d8a-b185-4e8b-b069-ac89cc127c39",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "12f315bb-1ac7-40bf-8041-f8f580c08738"
        },
        "item": {
          "id": "92c447fb-bbc7-436c-ab69-055b062313fb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2d932504-f539-47c9-a80f-c596211fb2ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 383,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743d8928-8591-49bb-9c7a-bb771a8fe9dd",
        "cursor": {
          "ref": "1a6fc326-407e-46a4-880f-05fb77535e78",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5edaa718-bccf-4bff-a9cb-bd37cdadb59a"
        },
        "item": {
          "id": "743d8928-8591-49bb-9c7a-bb771a8fe9dd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9d8d9fcd-779d-4657-8ee1-41e85a60a5cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5e687a-00a2-421b-8777-b8987b61bb3a",
        "cursor": {
          "ref": "595b451c-9926-400a-b02f-d407c3d1456b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0cc496d5-7164-4ab9-865c-1ab67e2dd712"
        },
        "item": {
          "id": "cd5e687a-00a2-421b-8777-b8987b61bb3a",
          "name": "identifiers"
        },
        "response": {
          "id": "2e4a3e77-c225-44d7-8163-f339e6372a08",
          "status": "OK",
          "code": 200,
          "responseTime": 1299,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feab8960-fb56-4bc8-98ef-5edbe68ecfa2",
        "cursor": {
          "ref": "d5ee1c2c-afda-40f1-956a-5ea30852d22a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "df1f03a1-f579-4395-ba3f-4f82aec7865b"
        },
        "item": {
          "id": "feab8960-fb56-4bc8-98ef-5edbe68ecfa2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6852f2f4-80d0-480e-92e0-50f34c6205a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cac7c16-21c6-45b7-b67a-5e9bad3abd2f",
        "cursor": {
          "ref": "31fb109b-c582-4566-9c28-0380f2a9c703",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "95dba53c-59e1-49ce-b404-2e729fb25565"
        },
        "item": {
          "id": "6cac7c16-21c6-45b7-b67a-5e9bad3abd2f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e2cca837-ad0f-46f4-92b9-329a33bde55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca019225-23bf-4bc4-a281-cc12c3e66047",
        "cursor": {
          "ref": "bf43cd3f-07a3-4f0a-a531-dfb13827faec",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3895059c-ecff-4119-9ac9-43408ad3b2b0"
        },
        "item": {
          "id": "ca019225-23bf-4bc4-a281-cc12c3e66047",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "929491cc-2168-4610-b18c-c2d1b226c452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c5b8a9-ec2c-4d22-bc42-bae027b62fe4",
        "cursor": {
          "ref": "093caafe-6642-4fd1-97b4-fb333e5cfce4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6cea2dcd-0d23-449c-be2d-97e1655f6996"
        },
        "item": {
          "id": "a5c5b8a9-ec2c-4d22-bc42-bae027b62fe4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "afded932-6c57-478b-9733-d562e7db5c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba7b85c-cdaa-448f-8826-6416f719bb0d",
        "cursor": {
          "ref": "5e127e62-7c97-417c-818c-2a792982a3a5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "726254e0-a93d-4fbd-8903-32f8bfb7d0e6"
        },
        "item": {
          "id": "9ba7b85c-cdaa-448f-8826-6416f719bb0d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c92b7f39-c919-42ea-94c1-fd996a5a8ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2530fd35-43ae-4531-b87d-77345ce5437d",
        "cursor": {
          "ref": "f98bf78b-dc54-458a-9198-9a05f12bd4a6",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c3ef541d-35b6-48ea-882b-e045dc2aaa6d"
        },
        "item": {
          "id": "2530fd35-43ae-4531-b87d-77345ce5437d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "29f84908-be3d-4507-9be2-348aa7097e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a1215b-a59d-4652-b606-f522e12ae495",
        "cursor": {
          "ref": "4d8120e5-54f8-49af-9adc-a0bae4a1df70",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fab9dff2-835c-4487-ab6c-e713444ab21b"
        },
        "item": {
          "id": "c8a1215b-a59d-4652-b606-f522e12ae495",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8ad1dfe3-9546-47bd-9be9-006bf60591eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bed757-feff-4017-8ff7-3db475c4ed24",
        "cursor": {
          "ref": "9da0153c-817b-4562-8e88-da302cea2e8d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7bdcd901-d80d-49f0-a9a1-db1e423de5c0"
        },
        "item": {
          "id": "b2bed757-feff-4017-8ff7-3db475c4ed24",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0431c547-6c11-413f-94b2-42de0c5971f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4e6b63-4ccc-40dc-9edd-0f25a8b45235",
        "cursor": {
          "ref": "c3bdcd41-66e5-4fc7-98aa-cb9de0c44fdf",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ef36689f-0fe8-42e0-9274-203ab32c6d2f"
        },
        "item": {
          "id": "2f4e6b63-4ccc-40dc-9edd-0f25a8b45235",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3c132fb0-38f3-41dd-b69f-7bc3a356b723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e8297f-d5e0-44ae-8291-12b9d734f15d",
        "cursor": {
          "ref": "453153c1-7e94-4ec2-8a50-353a86823653",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1facbc88-b3d8-43d2-b1a7-66ecd64b71c1"
        },
        "item": {
          "id": "24e8297f-d5e0-44ae-8291-12b9d734f15d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8b731570-7b64-4e0e-aaf7-9773c44f0369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd4f107-e7cc-4e04-a406-52edf7bc135a",
        "cursor": {
          "ref": "0b2ec117-f392-46b4-98c6-2ecd3b793919",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8749042d-a178-4497-b6ff-8d7ecaac8a24"
        },
        "item": {
          "id": "ebd4f107-e7cc-4e04-a406-52edf7bc135a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bc1d609e-6414-4c03-a55f-869ac2a0572b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4409446f-bbf5-4d1b-a9f8-6799d19293d5",
        "cursor": {
          "ref": "9b2afd0d-467a-498c-9954-7f1e56ea4fb7",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e58a456e-df49-4a93-91ff-0132cc662363"
        },
        "item": {
          "id": "4409446f-bbf5-4d1b-a9f8-6799d19293d5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "84d37f32-1afe-47e9-a442-4f17455e7fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c53f24-2c8e-4b28-9565-e41fa7960e0d",
        "cursor": {
          "ref": "dcc97fc0-5d97-48a1-9477-43492293e4a0",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fe47baad-5ede-466c-b7ff-25e45781140a"
        },
        "item": {
          "id": "03c53f24-2c8e-4b28-9565-e41fa7960e0d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "41b8775f-79b4-4d34-b7d5-18d250fe82bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ade299c-6c05-4f71-a901-686ff6d31f34",
        "cursor": {
          "ref": "7dd89f4e-e13b-4371-bcd1-a15837d3b6c3",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8a70e484-d73c-43f7-b397-36668b5ec726"
        },
        "item": {
          "id": "1ade299c-6c05-4f71-a901-686ff6d31f34",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "07f510ba-1091-4d38-9f84-fca3af5e84ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cc809e-288a-46e5-80a5-b3d9c1641454",
        "cursor": {
          "ref": "522263b6-f7dc-4f02-b9c4-43ea77a4cedf",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8e4f5451-889b-42c5-8396-45fa2caea67c"
        },
        "item": {
          "id": "d9cc809e-288a-46e5-80a5-b3d9c1641454",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a8e31144-8397-47ce-914c-7e37320b6502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d88f9f5-cc9f-4d7a-9479-3f35fe3688b6",
        "cursor": {
          "ref": "831fb30f-9fa1-4aa2-ae05-a4e603a57389",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b5d84dc9-adbe-476b-a8a5-597e19be570a"
        },
        "item": {
          "id": "0d88f9f5-cc9f-4d7a-9479-3f35fe3688b6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0fc4a386-7ed3-420a-a0d8-11d8ab8d3fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e115827-4546-4b69-8b51-84dd3d4e3ad1",
        "cursor": {
          "ref": "f4cb919e-29f0-41e0-a887-e209eb881594",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a7a7eb3b-e0fe-4a48-ad49-066f5914905b"
        },
        "item": {
          "id": "7e115827-4546-4b69-8b51-84dd3d4e3ad1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "42c1b687-9b94-43e5-b1c9-dba2c58ffc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61419877-d52a-4e37-b9a9-e19be2b409b7",
        "cursor": {
          "ref": "1c24d3df-7017-489b-94b5-e8b0cbf41157",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4d9402e6-9cfd-4f2c-81c0-9ad5987fe8b9"
        },
        "item": {
          "id": "61419877-d52a-4e37-b9a9-e19be2b409b7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "46f51644-a0d5-41d8-a742-ee596c372005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7622a4a-b7a8-4f38-85ab-b3dbdd5aef47",
        "cursor": {
          "ref": "3647ca4a-240b-4274-bc9a-e63f923a5a48",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f8dd1bd3-576e-47b5-be8f-43a6a8a31da2"
        },
        "item": {
          "id": "d7622a4a-b7a8-4f38-85ab-b3dbdd5aef47",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1aa37cd4-c293-47d2-b61a-87687738f2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f262279-c13c-4df2-b72a-11b4033776b8",
        "cursor": {
          "ref": "456e9638-c535-4b68-8d01-bb8a67cf3e7c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "912ac8be-097a-40af-be1d-b0c8a6bbb46e"
        },
        "item": {
          "id": "0f262279-c13c-4df2-b72a-11b4033776b8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cae61641-3768-4652-915c-ef86513b55fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8f0990-1312-4660-a29d-c49826d41bfe",
        "cursor": {
          "ref": "03805ff8-48d2-4aad-8012-2c3092577b06",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6ebb094-5e98-439a-b340-c2b2e9db3e49"
        },
        "item": {
          "id": "6c8f0990-1312-4660-a29d-c49826d41bfe",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ccf2927b-b606-4727-83db-de93a489365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c75c3d3-0e3e-4ea6-8bdd-7836106bd63f",
        "cursor": {
          "ref": "32c1b09a-b09b-4804-a698-4dd8cd5a5062",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "80ed6c5a-2791-4724-a8b4-e34b97446ce1"
        },
        "item": {
          "id": "8c75c3d3-0e3e-4ea6-8bdd-7836106bd63f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "860038c8-dcef-415f-aab0-f557b42be9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b4ca9f-d87c-4e09-9f05-b7914407cf4b",
        "cursor": {
          "ref": "55b91d45-406e-4d4b-a409-f3335d80b4c9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "419e09e9-2468-475f-9d23-bbc6ea895e9f"
        },
        "item": {
          "id": "e5b4ca9f-d87c-4e09-9f05-b7914407cf4b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a88c95a3-9afb-465a-8de3-a38db014fca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979c7f75-2fcf-4513-8d1f-acdd4e71eacf",
        "cursor": {
          "ref": "56dcf42e-caa1-401a-8a3c-0ede1f8c26de",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2a1130cd-2348-478a-9762-12d401b8fcee"
        },
        "item": {
          "id": "979c7f75-2fcf-4513-8d1f-acdd4e71eacf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4ddf9918-1106-4466-b552-823dd6cf2774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cf2cac-35f1-48bc-95fe-03eaa667f008",
        "cursor": {
          "ref": "05eb3a53-4579-4778-8124-8c5b8f66a6d7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "96afc1ed-646e-4dfe-be32-47dff0051615"
        },
        "item": {
          "id": "60cf2cac-35f1-48bc-95fe-03eaa667f008",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c6650042-1c92-43be-945b-84f2702d732a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae96b79c-7102-47c5-bff6-15a4f2e9aeb1",
        "cursor": {
          "ref": "f49a7846-ced0-4ae8-b383-362390665d9d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "34b9559e-1bdf-4567-a7f5-df2980a6f035"
        },
        "item": {
          "id": "ae96b79c-7102-47c5-bff6-15a4f2e9aeb1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7fbce76c-ed31-4a53-81ab-deb135067664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771cc353-ff30-4c6d-8b13-2934dc49bec4",
        "cursor": {
          "ref": "7eec613d-a6bc-4288-ad87-ecaaf63472ac",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d5f06adc-52e8-490c-bd34-ea938fbba6c9"
        },
        "item": {
          "id": "771cc353-ff30-4c6d-8b13-2934dc49bec4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fed57149-f194-4e00-bc4e-d75c29839425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3d76b6-b4e4-4a66-b689-52a46456df5d",
        "cursor": {
          "ref": "47eb5e60-eda4-4426-8449-fca735bb8c40",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d9fdb3b0-bba3-4dfe-b095-7df8bcdb9266"
        },
        "item": {
          "id": "db3d76b6-b4e4-4a66-b689-52a46456df5d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ac1296bb-208e-4399-ba34-390a90147aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf9cd98-fb21-40e1-9fe0-61b13300f4ce",
        "cursor": {
          "ref": "eb96f8e7-84d2-4acf-8031-48cdf14607fa",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f2024c5c-91aa-47ce-afd7-18d8eb1e37c2"
        },
        "item": {
          "id": "3cf9cd98-fb21-40e1-9fe0-61b13300f4ce",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f29b0094-835c-4120-9169-98a85ea18e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238e9be9-4e1a-4d0f-aa95-0f5a45dcf0a7",
        "cursor": {
          "ref": "2c23e170-c31c-44a6-ab20-c3a58a766a9f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "05e55e9e-addb-44e6-ae60-74122d24cec5"
        },
        "item": {
          "id": "238e9be9-4e1a-4d0f-aa95-0f5a45dcf0a7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a7a03a6a-93d4-4390-b394-08b948998598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21153113-b626-4495-8c35-619cc2fd5cf9",
        "cursor": {
          "ref": "66b4f7e6-2206-466c-b963-ed2a0810ddb8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8527b646-630a-464c-b6d6-5ad94d7a35d9"
        },
        "item": {
          "id": "21153113-b626-4495-8c35-619cc2fd5cf9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "81720fec-e5dc-45b7-83ad-b27d9e5c57be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2190501-c77d-4cb3-959f-0c30e7ea8cd2",
        "cursor": {
          "ref": "b1fc93d6-23dd-4406-b939-595e59df8ed5",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2ad3bfe3-5838-42c1-aeca-bd111a0a02a7"
        },
        "item": {
          "id": "e2190501-c77d-4cb3-959f-0c30e7ea8cd2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aec4ee53-c0b7-4907-a287-a81baecfcaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5ddc7b-4c57-49f0-84c0-634346dc4f16",
        "cursor": {
          "ref": "e13fb971-9729-42f5-9a1d-b775d08ae4ec",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c578d091-1269-4b6f-b249-22aad91a3e49"
        },
        "item": {
          "id": "bc5ddc7b-4c57-49f0-84c0-634346dc4f16",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6fa55f4e-3112-42f3-b7f8-34045f708ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ea8923-088a-44ef-9088-509fe7f73399",
        "cursor": {
          "ref": "fa6516ad-a7f7-43b5-aa77-8abf6ed25814",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bddb4d95-7e1b-4999-9e94-485baa67e855"
        },
        "item": {
          "id": "08ea8923-088a-44ef-9088-509fe7f73399",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cf1dcd82-7ead-4271-8821-8246cd728c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e2f4d6-6dcc-48ca-9812-52b72587d9fc",
        "cursor": {
          "ref": "08dfd1ff-1117-4df5-af3c-c8306ffff39d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "77e2449b-0df4-42ed-a465-793336b20b1a"
        },
        "item": {
          "id": "84e2f4d6-6dcc-48ca-9812-52b72587d9fc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c8dd9177-926a-41b3-8564-112dbe19ea0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ea2a21-7890-49ac-9c36-9f41ed8b1469",
        "cursor": {
          "ref": "712526fe-9f2f-4b77-9694-7e2d328d588b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2ea60806-ea21-4b19-81e5-4b53536c6078"
        },
        "item": {
          "id": "53ea2a21-7890-49ac-9c36-9f41ed8b1469",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "087cd1f2-f798-4e4d-a275-c29e5b2ecf54",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1716,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6dbf67-d82e-4b5e-bc8a-5492be63666d",
        "cursor": {
          "ref": "c29e7a4b-1a6a-4009-ba4d-64a79b404fcf",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "28567d3a-31f6-4387-9b7f-4aaaf1d9d3b3"
        },
        "item": {
          "id": "6b6dbf67-d82e-4b5e-bc8a-5492be63666d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "22965e50-8ae2-4306-b257-3310ab295942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b94826-17a5-4ef3-a6e4-952529cf9052",
        "cursor": {
          "ref": "14648f07-b9a2-44b1-bb3e-e9ba6cc235a0",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "815b56fd-5831-453a-9bcc-5d9e4469ceaa"
        },
        "item": {
          "id": "27b94826-17a5-4ef3-a6e4-952529cf9052",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1c85d72e-d251-45cb-bc2a-ea32ea99df14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68162e93-2eff-43fa-b748-a7c5a6650aa8",
        "cursor": {
          "ref": "a72c59e0-0b7d-4792-8b49-6ba24ab866a3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dccb108d-4415-4fbd-bc7a-1a4b6e299880"
        },
        "item": {
          "id": "68162e93-2eff-43fa-b748-a7c5a6650aa8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "21b9550c-684f-4c20-87f2-09245bfb8522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91bc211-00c1-4dff-ae82-c1211621504d",
        "cursor": {
          "ref": "601b0bda-3c9c-4b82-a6ab-ff24a4cc94ad",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f5a359c7-3ec3-477a-81b4-a9cb00238f67"
        },
        "item": {
          "id": "a91bc211-00c1-4dff-ae82-c1211621504d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "41fa8a4f-23b0-4383-9cc2-0ae56e18f2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59534b8-3dfe-4a9c-be39-753d0411d590",
        "cursor": {
          "ref": "6a4fec77-9c29-420d-9a9f-988da5115806",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f7017827-882c-4dd2-84be-685b7686b530"
        },
        "item": {
          "id": "e59534b8-3dfe-4a9c-be39-753d0411d590",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d8917b72-ddfe-41f0-8cd3-1e1b65b232a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a859ad1-ebc8-498a-a55a-273f62458852",
        "cursor": {
          "ref": "a8dd244d-16ed-4d42-95bc-ba10f843364a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "398bb3ba-a01d-4b02-8a69-c48fa8043b84"
        },
        "item": {
          "id": "8a859ad1-ebc8-498a-a55a-273f62458852",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7226b7b3-6261-4806-a660-710d092c4d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9081c81d-995f-485f-bb2a-3dc8394bf2fb",
        "cursor": {
          "ref": "020dd40e-1917-4baf-8f88-a983989078ad",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ab192ce5-5945-4675-855a-e2370c299082"
        },
        "item": {
          "id": "9081c81d-995f-485f-bb2a-3dc8394bf2fb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "121d7d7a-cbc4-4f5d-b3e8-268a824a6509",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1713,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1371502-cd9c-45cc-88d8-02adc9c59495",
        "cursor": {
          "ref": "8bf285eb-bf56-48fa-aebe-265e39887520",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "53f57b43-a336-4450-a621-b2cf52861bbd"
        },
        "item": {
          "id": "a1371502-cd9c-45cc-88d8-02adc9c59495",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4daf3ec3-f188-4916-be9f-bfa991c626e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ccd348-2639-40f5-9b41-7988bd165534",
        "cursor": {
          "ref": "1f9dac3c-3355-44f5-bcb8-e177dd0b193a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "952432d7-aff6-464d-8bf9-3e5284ec5732"
        },
        "item": {
          "id": "d8ccd348-2639-40f5-9b41-7988bd165534",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3dcf7cc6-f6fa-4d62-a5e2-3733768f104d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554b6d2b-f67b-4097-b0e0-976ab58c06b0",
        "cursor": {
          "ref": "a60903bb-d682-42fe-92ba-0f54c51b6141",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "23fc163d-1ac7-4728-96ac-c6f5210f3d4f"
        },
        "item": {
          "id": "554b6d2b-f67b-4097-b0e0-976ab58c06b0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3e618bdf-0d16-400a-8b7d-24aa46d26ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77866cfd-1903-45fe-9d1b-50d87e5a2f47",
        "cursor": {
          "ref": "aa935536-4228-4a36-8c5b-eef5de3a957d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "82725d22-2100-4570-b7c1-b2b7d201877d"
        },
        "item": {
          "id": "77866cfd-1903-45fe-9d1b-50d87e5a2f47",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5295c777-1f35-4bdf-ba84-1d2f2575239f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9180d768-d44b-4391-a98f-5659da7750a5",
        "cursor": {
          "ref": "49a5409a-6f98-47ba-bd81-d2ed14fffafd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f573545e-c324-4fc0-b69f-990d3799ce69"
        },
        "item": {
          "id": "9180d768-d44b-4391-a98f-5659da7750a5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2e43321b-d5bf-4ddd-b915-c8379deecc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fb90ab-47d3-49b5-b97a-1fbdd7002703",
        "cursor": {
          "ref": "4fbe131b-8d9f-4c62-b503-8121854af659",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2f0d01fc-3957-4cc1-9cd0-43b20ff418ae"
        },
        "item": {
          "id": "e4fb90ab-47d3-49b5-b97a-1fbdd7002703",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9a528ba5-b22a-4c7b-8b8c-451a7be25454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a280004-9752-4ef0-b84f-fad8569ce77c",
        "cursor": {
          "ref": "ff8cfa40-f6a9-456a-aedb-741d70af2908",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "066e143f-9976-4dda-8378-aff1235df3ef"
        },
        "item": {
          "id": "4a280004-9752-4ef0-b84f-fad8569ce77c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "207a0e81-11e9-419e-a8d7-bf42a838d119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce425a5-7502-42d8-8dee-44b9c5d8ac21",
        "cursor": {
          "ref": "d171345b-5d4d-43fe-ae46-e192995d8bff",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "75129c82-4db8-429c-aef0-ad74a1118556"
        },
        "item": {
          "id": "bce425a5-7502-42d8-8dee-44b9c5d8ac21",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0047414f-8119-43ad-b2fb-35ec5c0b26a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599982f0-3595-4f1b-b2a7-4a9b0fe6ce7d",
        "cursor": {
          "ref": "4d4ece6d-66ad-4567-bf1d-4cf6bfd31d9a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5dd333ee-dad8-4609-abce-37afefceeb2a"
        },
        "item": {
          "id": "599982f0-3595-4f1b-b2a7-4a9b0fe6ce7d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "028e70bc-4a01-4882-a90e-81fd363cfb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d62858-be90-4a66-8657-d486feaef39f",
        "cursor": {
          "ref": "bd8f846e-1410-4928-b7e1-413c6117320e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2cdb9979-2e6b-42b4-865d-49d56bdf4368"
        },
        "item": {
          "id": "a0d62858-be90-4a66-8657-d486feaef39f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3b9acd0b-9bbb-451c-b866-7de57c361c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4cadbd-f25d-48cc-94a6-ad3ed0eeeed5",
        "cursor": {
          "ref": "0f123dbd-fe94-4a09-a192-f4970d6b0ece",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c192cdd0-db6d-4483-8325-4e368eb11fa8"
        },
        "item": {
          "id": "2c4cadbd-f25d-48cc-94a6-ad3ed0eeeed5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "08dbe4d4-4449-42e9-8f11-8bda0a1aee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca3c694-525f-47fe-8a3c-91a9edb54b8d",
        "cursor": {
          "ref": "83a49898-fa33-48ac-9404-f865d9790253",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a9d15ff5-f74c-4806-a157-2c9d65096b74"
        },
        "item": {
          "id": "fca3c694-525f-47fe-8a3c-91a9edb54b8d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "193dad9d-f7fd-4802-8430-d91e46ef8e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023d7178-9fb5-425e-a6b5-5b8ec8b5e600",
        "cursor": {
          "ref": "952d62e1-1eec-4220-acc3-bf9d85c477d0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a424455b-0b72-40e5-96fa-3816b5637a78"
        },
        "item": {
          "id": "023d7178-9fb5-425e-a6b5-5b8ec8b5e600",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e3e382c3-2673-4ab4-96c1-8f2353a392b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073f3f4b-510e-4ee3-bcdc-448d0b5f0137",
        "cursor": {
          "ref": "5a8ebdcc-ef3e-440b-9257-80c08e686169",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "440dcbdd-e3b7-4b44-93d3-ddd95fa51ccd"
        },
        "item": {
          "id": "073f3f4b-510e-4ee3-bcdc-448d0b5f0137",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "38b6c775-f908-4704-9bd5-79da6c38b374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad37249-1956-4925-8d96-1c1403c0863e",
        "cursor": {
          "ref": "c3c90b7b-d900-4d03-95b9-91a6fc71b7da",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4fbff5b3-8ef9-4121-832a-98f1af50bc14"
        },
        "item": {
          "id": "0ad37249-1956-4925-8d96-1c1403c0863e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "32d203fb-2a3c-4d7a-9e39-0416650baad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efd440e-d3ed-42a0-b3ea-382b7fe7e4a9",
        "cursor": {
          "ref": "e2d43c99-f411-4fcc-89f7-62329d522c45",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "caa94e49-b533-4637-b38e-3c912c9c8603"
        },
        "item": {
          "id": "2efd440e-d3ed-42a0-b3ea-382b7fe7e4a9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "05742b56-47a1-4b9e-8815-036d320ab167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa4fb36-e8a5-4e08-bb64-0046bc09d292",
        "cursor": {
          "ref": "1dc6854a-6ae7-45c3-82fb-5d63dc13ae39",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f063d665-0aa1-4059-84b7-30dfd0c24c2c"
        },
        "item": {
          "id": "7fa4fb36-e8a5-4e08-bb64-0046bc09d292",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5af4a8d6-59b6-48a4-8799-d9561c126e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fe90dc-35de-41af-9a65-8822a1c88e87",
        "cursor": {
          "ref": "fe37835f-1914-4495-bf3e-e9ec52b3ba60",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0adb7f6b-5b17-4802-a155-008a5be71085"
        },
        "item": {
          "id": "f0fe90dc-35de-41af-9a65-8822a1c88e87",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a25b13e0-b8fd-4a7a-b6a1-7faa1028de45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5378e269-59f2-4d56-af0f-4252284cd955",
        "cursor": {
          "ref": "ecbec27a-d433-4182-8be4-18490147545f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6727cfac-9a5f-4a5e-a590-992eebe7293a"
        },
        "item": {
          "id": "5378e269-59f2-4d56-af0f-4252284cd955",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9c7da656-5628-41c1-83f9-54f818a433b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f0168c-6fa6-4ba2-bb79-729e04043ab5",
        "cursor": {
          "ref": "7ab551aa-12f2-43d5-8320-58e7f8458065",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "80ef4d54-e665-49ac-9833-bf5115f538b5"
        },
        "item": {
          "id": "94f0168c-6fa6-4ba2-bb79-729e04043ab5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0568f957-7228-44b1-b21e-703bc86ca740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99cf0d8-840a-4ade-8928-70351689eafe",
        "cursor": {
          "ref": "2db2f18e-b473-4106-9d64-dd07ac7aed6e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "456db801-2572-43d9-bb2e-84bfad781afd"
        },
        "item": {
          "id": "d99cf0d8-840a-4ade-8928-70351689eafe",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6fbbc3ab-9164-4574-b320-6148d571551b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f282554-7ca0-492c-b06a-6f3eb43389e4",
        "cursor": {
          "ref": "8ca282a3-27ea-41c4-94ce-d38c20883426",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "80e22f42-4ad7-4295-8adf-f8185e844c87"
        },
        "item": {
          "id": "6f282554-7ca0-492c-b06a-6f3eb43389e4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e96cb1fb-d4d2-4f3b-891c-872c66dd6a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9020b9-5905-4c51-bd70-26cf7805cf90",
        "cursor": {
          "ref": "acd706c6-0c00-4672-8c48-3a1039441e93",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8daabb8b-88f0-4b6e-b659-6a884c135b3b"
        },
        "item": {
          "id": "8e9020b9-5905-4c51-bd70-26cf7805cf90",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d4b6a062-d95c-4eb7-8676-3b74d946059d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd3d8f4-97f0-499c-b732-9952b122177e",
        "cursor": {
          "ref": "956822ee-7f3f-40bd-bc24-be06271f9ced",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "359e4f2e-774c-41a7-9fbd-06e5e252a08a"
        },
        "item": {
          "id": "4bd3d8f4-97f0-499c-b732-9952b122177e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "43328168-b46f-47a8-a1b4-a4749edacbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c001955-38c2-4359-b3ad-3e13781c6ba9",
        "cursor": {
          "ref": "aab4b285-23c3-4244-ba8c-17568d8b0986",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d84ddc0f-e8e7-4ef6-a7df-b1645a0b8022"
        },
        "item": {
          "id": "4c001955-38c2-4359-b3ad-3e13781c6ba9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "58c1db5c-b656-4f5d-ab85-1ff2d38d74f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cc5fdf-08c1-4977-bbb3-20fb4acda895",
        "cursor": {
          "ref": "98ce911f-219e-4584-8833-ce6b5ff30c88",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3ef2777e-2609-43e8-bfcf-e62115e33717"
        },
        "item": {
          "id": "11cc5fdf-08c1-4977-bbb3-20fb4acda895",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b97c1d98-cfb1-4031-9935-f726b0f5c657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e3b759-b884-4825-a8db-de3eefd77903",
        "cursor": {
          "ref": "ae1fd3b7-89ed-492e-9194-8a62276b70ba",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "df3bc028-a590-43a0-9972-a8f9bfda2c9c"
        },
        "item": {
          "id": "11e3b759-b884-4825-a8db-de3eefd77903",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8f9eff52-457a-45fb-8fd7-b44502e13bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b32951-1969-4465-8590-330749224ec1",
        "cursor": {
          "ref": "273f14e8-5974-4a99-9642-d2fb11b6d053",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d148cbe8-1d75-49bc-a6b4-b847affa5040"
        },
        "item": {
          "id": "09b32951-1969-4465-8590-330749224ec1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e69f7f06-6b92-4825-9fc9-38fa98df7b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd562bc-93ea-42b1-bab3-76f5407f6f03",
        "cursor": {
          "ref": "315c78c3-7fc0-4a68-83fb-a05879399094",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5348bfeb-fa7b-4719-89ab-8e871abf9f6b"
        },
        "item": {
          "id": "0bd562bc-93ea-42b1-bab3-76f5407f6f03",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "06133794-fbef-4f06-aa82-db520b33d6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de7c998-c935-4985-a330-50ec60cf2061",
        "cursor": {
          "ref": "21ac685d-e1df-4185-92ae-02343c439855",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "204cbcae-9878-4796-aade-1244fb3d9dfd"
        },
        "item": {
          "id": "4de7c998-c935-4985-a330-50ec60cf2061",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "860ee22b-e6f4-4aeb-809b-1bd05a54c7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b994d1c7-d950-4f70-867f-a5ab653fdbe9",
        "cursor": {
          "ref": "5ff2cdbf-aac7-4bfc-b5e5-d8c165ae6a26",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "54e0a13b-f955-4c08-b38c-2b8bab3cc0aa"
        },
        "item": {
          "id": "b994d1c7-d950-4f70-867f-a5ab653fdbe9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e00f6ef3-215f-4f7c-a396-7bcbfa2f8489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e11905-ca5b-4a93-b581-0b55a9d82dea",
        "cursor": {
          "ref": "7187ec15-8bdc-454a-80be-2c3050a31da6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7fee11d2-2104-42bd-be35-99e6d1500769"
        },
        "item": {
          "id": "90e11905-ca5b-4a93-b581-0b55a9d82dea",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b4881370-ebf3-49c1-b063-cab556bf63f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e05f3e1-cd11-4158-91e0-c41d994f6539",
        "cursor": {
          "ref": "835e17b8-8234-4f4c-8224-25d367f00e44",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4332a9d3-27ba-48a9-9fdc-e471067c6c30"
        },
        "item": {
          "id": "3e05f3e1-cd11-4158-91e0-c41d994f6539",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ac033b47-0d78-4f96-9bb8-675401b938ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b506dd0-2480-4e30-ac67-383c2bb90e47",
        "cursor": {
          "ref": "af87359c-02dd-4d14-9342-a4bd61981e8f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e7da425d-5552-4231-846b-b6d6ff0cf71b"
        },
        "item": {
          "id": "0b506dd0-2480-4e30-ac67-383c2bb90e47",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e02217fb-6541-42b0-ad56-667348f45615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ba770-577b-4d06-9854-925a433a87e1",
        "cursor": {
          "ref": "a00b6bc1-0be9-47ea-b69e-799885e0ec93",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dd7fa708-3da9-4ed0-b362-b1d13c38d031"
        },
        "item": {
          "id": "2c5ba770-577b-4d06-9854-925a433a87e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e5ecfdf2-e564-4ee4-8873-15f5248d1c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a50588f-4358-4266-9696-40854a3a8b10",
        "cursor": {
          "ref": "1d4f76da-c1c1-42d1-997a-f469c6d524f0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aaa4672a-6736-478f-afc3-236223e0ec80"
        },
        "item": {
          "id": "8a50588f-4358-4266-9696-40854a3a8b10",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4bdefa38-6398-4011-9aa8-d4e092080a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d1790c-76b2-41ac-b9be-7e53fc35ea58",
        "cursor": {
          "ref": "51507c44-f0b6-4eb0-9c14-c80ea61fda17",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a3fbf490-2900-4f87-95f3-8ddb8509b908"
        },
        "item": {
          "id": "d6d1790c-76b2-41ac-b9be-7e53fc35ea58",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9a9c51f1-738e-4fa4-9802-79a58dbd68dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630251c8-acc4-4418-9775-1413eb6ae1d9",
        "cursor": {
          "ref": "349fd828-5580-4d08-85be-cc16da8a6285",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ea4d6626-73b3-4f3c-8127-d02367a907c2"
        },
        "item": {
          "id": "630251c8-acc4-4418-9775-1413eb6ae1d9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d33e84c5-adb1-4a63-b936-e0549b6c39e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368016af-84f8-4403-a223-3282f8ae8034",
        "cursor": {
          "ref": "c2713791-f915-465f-ba79-f147ecf51857",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "25dd634e-b39f-459d-9ef9-1f1c5cd103a7"
        },
        "item": {
          "id": "368016af-84f8-4403-a223-3282f8ae8034",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c60d7b2c-6eba-47e4-a609-661bbd7731fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ed417c-d798-4291-be5d-c92f930d9027",
        "cursor": {
          "ref": "a185e616-00eb-4fd8-9abf-720006928661",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "486aaacc-638c-4268-a5ab-b32056fa088e"
        },
        "item": {
          "id": "94ed417c-d798-4291-be5d-c92f930d9027",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8c27c2c4-4c76-41dd-8e73-ada6def1b372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe440d4-ee3b-484a-aa94-63bd88de232e",
        "cursor": {
          "ref": "bf2516e9-473d-4d53-9d9c-48ccc4d3a098",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6da3abb6-4d0d-4963-a812-2e1697416e36"
        },
        "item": {
          "id": "fbe440d4-ee3b-484a-aa94-63bd88de232e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3b424b86-2067-47fa-9d60-2153a978ec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704b5582-3252-4719-8f0a-b4365d1af685",
        "cursor": {
          "ref": "668c4cec-2ab1-4f99-aa00-9587999bede7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be5b1c78-fde9-4eda-9fcf-82f57e2fe192"
        },
        "item": {
          "id": "704b5582-3252-4719-8f0a-b4365d1af685",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9cc8b02f-ea3a-457c-9486-d40803169920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de452d56-adbf-495a-9ae2-45d42dfd976a",
        "cursor": {
          "ref": "b705f727-772f-42c8-b6f5-4b7054948d28",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ecfa2d32-551c-4006-8760-a5d322a166f5"
        },
        "item": {
          "id": "de452d56-adbf-495a-9ae2-45d42dfd976a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3ed84e19-b3ba-4fe2-ad8e-41497880e3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544be0ee-2955-4c00-af6d-f00b9cfcf310",
        "cursor": {
          "ref": "2556931a-c18f-4925-97ca-97a8e404d269",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f3bd0fae-7852-4b85-9dd4-3050cc0235ec"
        },
        "item": {
          "id": "544be0ee-2955-4c00-af6d-f00b9cfcf310",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "483b87d5-dc43-4770-9a57-149b5ca777a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3743e3e3-98ef-4894-977b-911eb4773c2d",
        "cursor": {
          "ref": "686d944b-4b11-400c-a32e-6e233344c4c8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "155879f5-6e5c-4640-a915-5c211e403aa3"
        },
        "item": {
          "id": "3743e3e3-98ef-4894-977b-911eb4773c2d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6b7de954-e690-43e9-b88f-15cc115d50d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914b88bb-fb19-45fe-bda2-87f4eaf89ade",
        "cursor": {
          "ref": "1c97d618-6095-4778-9582-78ae48204ab2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "67e963ba-192e-496f-a679-4b6be6cb8de7"
        },
        "item": {
          "id": "914b88bb-fb19-45fe-bda2-87f4eaf89ade",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1c7a1045-008b-4e39-a792-865fd655d360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf93d3a0-48c0-4bc1-94f0-2d3466e7178e",
        "cursor": {
          "ref": "54b59d3e-58f3-4c58-88da-03924f123d9c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8431de79-bae4-4a75-9b01-a9086961d59a"
        },
        "item": {
          "id": "bf93d3a0-48c0-4bc1-94f0-2d3466e7178e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1025bec8-0346-4186-a709-9b69b14f49eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9750dfe-828b-4848-8742-8e4285fdba12",
        "cursor": {
          "ref": "31b83699-667b-4098-8d63-7e609d609257",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9b99803d-ad71-4f3d-84f4-21bd7a398c0e"
        },
        "item": {
          "id": "b9750dfe-828b-4848-8742-8e4285fdba12",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c7c31e3b-334b-4d5a-915f-7930092937a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517eb7bd-4906-48d3-9aa2-ead2e1020414",
        "cursor": {
          "ref": "0f327b96-b086-4f29-9805-bffbf62fd253",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "341cc47f-a9fe-410b-bc8b-2ac59b25c731"
        },
        "item": {
          "id": "517eb7bd-4906-48d3-9aa2-ead2e1020414",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "52db3d9e-7bb5-45b7-8925-d4b26b399339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256905d4-bd69-4436-8720-8df94c2db5a7",
        "cursor": {
          "ref": "efdb4b8e-2a72-4f5e-9a62-4662889d620a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "375d16c3-357f-4ca2-a1cd-71d0146a34b5"
        },
        "item": {
          "id": "256905d4-bd69-4436-8720-8df94c2db5a7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7efefcec-8077-422e-8b56-5802dff9298d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a248a4a0-e51c-43be-b02d-48cbe2a15a96",
        "cursor": {
          "ref": "c0be8305-aff9-4ffd-8e61-f5a93fc2f8b1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1e93b327-f005-4ced-8728-3700c1013585"
        },
        "item": {
          "id": "a248a4a0-e51c-43be-b02d-48cbe2a15a96",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cfa9adb7-bfbc-467f-88e9-2063a55758a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3048bd86-ba74-4177-a45d-2a3f6d62498e",
        "cursor": {
          "ref": "bc74dc4b-5ee8-41a4-9c44-5cd65f2a8ed7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aca22733-388e-47a8-a68f-c52c5d7ba4e0"
        },
        "item": {
          "id": "3048bd86-ba74-4177-a45d-2a3f6d62498e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "82c899a1-3af6-4f6e-bdcf-5a11cac69c65",
          "status": "Created",
          "code": 201,
          "responseTime": 8759,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "358f4b7f-ed21-44d7-b2f2-79624dfaee27",
        "cursor": {
          "ref": "322e1056-bcb3-4a28-9d4d-f4116755c1a9",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "02ff4a57-9ce6-4cdc-b2b2-570b24fee843"
        },
        "item": {
          "id": "358f4b7f-ed21-44d7-b2f2-79624dfaee27",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f3fa4f4d-121c-4340-a5a9-5c2135e86280",
          "status": "Created",
          "code": 201,
          "responseTime": 7737,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d71b22-c1f2-4b9d-96b4-e9b0f530d4c2",
        "cursor": {
          "ref": "ac68bd47-6c9d-4b69-97e6-aabc117167ab",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1ebe6a3c-dc7d-4e52-a9ac-a6f22923977d"
        },
        "item": {
          "id": "54d71b22-c1f2-4b9d-96b4-e9b0f530d4c2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2ed7087d-85e1-498a-82fc-3a200184e396",
          "status": "Created",
          "code": 201,
          "responseTime": 8283,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa96eaa-064b-4245-a086-710faee7f017",
        "cursor": {
          "ref": "03732641-8066-4f5c-9e8f-f49c2667dd8f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "10798b7c-d2d3-4816-9232-7bbb09eb4fdb"
        },
        "item": {
          "id": "cfa96eaa-064b-4245-a086-710faee7f017",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "07d78443-60f5-46c1-b5b2-9bfa8b31cea1",
          "status": "Created",
          "code": 201,
          "responseTime": 7764,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9e983e-2e91-44da-a783-0ade97e44df9",
        "cursor": {
          "ref": "a473c5f8-5b1e-48f6-9c33-90f847b2929a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bff7d936-2392-4c4d-ac81-75587032bca4"
        },
        "item": {
          "id": "3f9e983e-2e91-44da-a783-0ade97e44df9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a72c736f-7b9a-4c2e-a779-58fa550e5b43",
          "status": "Created",
          "code": 201,
          "responseTime": 8825,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea5e634-924c-4320-aa47-2f42c78d052c",
        "cursor": {
          "ref": "43060f56-db7d-485e-8c03-29cabc96ec8d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "11dcfb09-b5e5-4047-b41d-f019ec8b3d3b"
        },
        "item": {
          "id": "5ea5e634-924c-4320-aa47-2f42c78d052c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d498bc69-9a09-4298-9d22-97815332ba2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f229fad7-86ec-4cc0-a81b-7ead903acf39",
        "cursor": {
          "ref": "60f865ce-2dbb-4261-b1ea-0fecfe6da40d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "878e40a6-4b7e-4092-b4af-8e9b3a5f59df"
        },
        "item": {
          "id": "f229fad7-86ec-4cc0-a81b-7ead903acf39",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b27ab6a6-63e9-4645-9863-e98ef387f408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45b704a-218b-4a7f-b739-e5d56e6e8273",
        "cursor": {
          "ref": "a3e28734-48c8-40bd-80d9-60ece13ebabc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7b097145-e815-4e47-bfdd-2ce275c9e8c9"
        },
        "item": {
          "id": "a45b704a-218b-4a7f-b739-e5d56e6e8273",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9317971f-84ad-42d2-92b3-7cb7f214cd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2833c0a4-95cb-4ec5-b73a-519ef484426f",
        "cursor": {
          "ref": "5df1468d-6eeb-4dc0-971f-eb5c876db166",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "436ea3a7-39e3-4e00-8c11-12c0c33f821e"
        },
        "item": {
          "id": "2833c0a4-95cb-4ec5-b73a-519ef484426f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8f49c681-4a99-4747-85d5-f75cbd82d5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b552e239-cda6-45ae-a9ea-750bb289137e",
        "cursor": {
          "ref": "ad32488c-6ca4-4d18-bd43-2eb45f2cc8c1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d710bebc-ba71-4a35-aad7-32f42806b15a"
        },
        "item": {
          "id": "b552e239-cda6-45ae-a9ea-750bb289137e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7de9be3f-9912-4056-afe1-ae3f53bbbc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1929a8ae-d92f-4d20-82ea-209cd1707bfd",
        "cursor": {
          "ref": "77b5be74-5c8c-4f38-98f0-bfda9a4c4d47",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5fc0864a-5641-498c-a563-1e6a702cedc0"
        },
        "item": {
          "id": "1929a8ae-d92f-4d20-82ea-209cd1707bfd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44531c34-b623-40f6-94b2-4eeb3ca52079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c18012-5f5f-4915-99b9-139dca48494b",
        "cursor": {
          "ref": "1cb2aff0-77fb-46fa-93ab-114cd436ca2c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "64f827f4-d958-48d1-9b58-46de809d20cd"
        },
        "item": {
          "id": "40c18012-5f5f-4915-99b9-139dca48494b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dbdb104a-9123-4725-8e2d-c1d58f7a96e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc358e6-832a-438e-9a75-2cc2dc972a73",
        "cursor": {
          "ref": "622803ee-710e-4823-bffb-69d0e4fe19ca",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0aa9fd60-0991-4821-bdf1-4729bfc1f491"
        },
        "item": {
          "id": "2cc358e6-832a-438e-9a75-2cc2dc972a73",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1fc0d3ae-1d3a-40a8-abc6-df0c15f733d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec66b16a-cb2d-44ee-ac90-36e66b8137b0",
        "cursor": {
          "ref": "d8eec38b-6f40-49bf-b73b-2f4f8dd6476c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "810a8b67-f694-4694-971b-36b2b6ba4d93"
        },
        "item": {
          "id": "ec66b16a-cb2d-44ee-ac90-36e66b8137b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8425e54e-eb6a-46c1-88da-173af6775d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f547b424-01e6-4996-9c69-88a6e5b42d33",
        "cursor": {
          "ref": "bf951777-ecbf-4c69-95d3-bd31f0bfd9c5",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0e5d5396-8364-432c-80c7-6562e5b6f036"
        },
        "item": {
          "id": "f547b424-01e6-4996-9c69-88a6e5b42d33",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "92730bcc-8aa2-4aa5-b720-1fd62f8b448d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091a4b83-37a6-42d0-b5d7-8962aa0cf9f6",
        "cursor": {
          "ref": "a567579c-8d39-4516-89a2-2dadb6aff982",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9bc62a22-65ac-4e7d-9820-e78dccb899b6"
        },
        "item": {
          "id": "091a4b83-37a6-42d0-b5d7-8962aa0cf9f6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6b053336-e39b-4f82-9944-fe2c87399ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c9f182-074d-4c69-a8da-42bf21d2cf88",
        "cursor": {
          "ref": "4d4dc80e-48ce-42da-9738-af6c830cea6b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "719e8e8d-a2bc-421c-bbe2-b12c8e6fac22"
        },
        "item": {
          "id": "c8c9f182-074d-4c69-a8da-42bf21d2cf88",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "077cfeda-983b-4394-9dd6-e7b5bb00d4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8336eb-87f9-4521-af3a-416b7f28252e",
        "cursor": {
          "ref": "5cb0e006-076b-44fe-a90f-32ff2dc5062f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9ca3105d-ccec-4f1d-a158-ef19d48e25a8"
        },
        "item": {
          "id": "5c8336eb-87f9-4521-af3a-416b7f28252e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "16f08779-385a-4c8d-a6c6-9738066b6c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01408efc-46e2-4074-82ef-9154f29bb92d",
        "cursor": {
          "ref": "538f21cc-51ae-4283-a6fc-d4856732ade3",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d35db155-e043-49ce-8565-5dd4e2437b71"
        },
        "item": {
          "id": "01408efc-46e2-4074-82ef-9154f29bb92d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1f1b2e6f-14d1-4ace-8f67-66b800e4997f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015ac63d-49f2-47e5-b8ad-4767712b7120",
        "cursor": {
          "ref": "e9b60bc4-2036-4ca5-9ea8-3fd4c1cabc0a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "37d891ff-423f-423f-bc6a-9855e2767901"
        },
        "item": {
          "id": "015ac63d-49f2-47e5-b8ad-4767712b7120",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bad9f4b1-beec-4cbc-a1b6-c15cab61d3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deb021d-052e-4052-a599-5f17cf547bb9",
        "cursor": {
          "ref": "c8eebcca-1436-4730-ab30-9d6b5a1d366e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "823bec87-aafc-440a-bd7d-848dffc491d0"
        },
        "item": {
          "id": "4deb021d-052e-4052-a599-5f17cf547bb9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "518b9ac9-2e27-48af-aab6-7de67ac0c0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f1086c-f24e-4e3d-8a9a-59dea96407f7",
        "cursor": {
          "ref": "12c71b04-d0d7-4ec0-83f5-02d11a7de7e2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2469e116-fac1-4fc5-bc2c-5d818c0ec2ab"
        },
        "item": {
          "id": "49f1086c-f24e-4e3d-8a9a-59dea96407f7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "22030d1a-7237-401b-9298-c0a6b0d21a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012267b3-27e8-4ffd-a91a-586b7511fa27",
        "cursor": {
          "ref": "c2705c35-dc1f-4e91-a5db-aed49fae3599",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "49af5b71-4798-45ae-81ae-059b6cca9f75"
        },
        "item": {
          "id": "012267b3-27e8-4ffd-a91a-586b7511fa27",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a7734531-9237-4e49-952d-5d9cafb0820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1296390-c0dc-4468-92b8-7c3237903701",
        "cursor": {
          "ref": "6f9e289e-84bf-4618-8d00-58d8db125edf",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "36210fc4-4fb0-4d7e-8eff-801eee54ef1e"
        },
        "item": {
          "id": "f1296390-c0dc-4468-92b8-7c3237903701",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7d040521-c07f-417d-966a-5202c86ca37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cae6bbe-4880-42b6-aabc-0f637a39fe31",
        "cursor": {
          "ref": "80f1067e-7e0c-4cb7-921b-f8ad95446477",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2f43ba35-3c6b-46a8-8faf-b60822145094"
        },
        "item": {
          "id": "8cae6bbe-4880-42b6-aabc-0f637a39fe31",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8415fa1c-8224-4927-9c09-81186c76a0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5404831-5dc2-4692-94a1-63d672e61f94",
        "cursor": {
          "ref": "34c84200-304d-44bc-a2e8-d59f09576687",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "69c888e2-bda3-44d7-a697-d133adb6d637"
        },
        "item": {
          "id": "f5404831-5dc2-4692-94a1-63d672e61f94",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5106239-f942-499b-8b33-6dceed6249d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c32205-ce95-493e-af10-43f7215e6031",
        "cursor": {
          "ref": "84529346-b1cf-4c0e-a07f-910a5126ee1e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2bc8b584-8681-401b-b058-a91cdb7329ab"
        },
        "item": {
          "id": "95c32205-ce95-493e-af10-43f7215e6031",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c68f8e40-0003-470b-a215-433e5647973d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129a4b0d-82e4-44d5-9057-2b32b6cd8e14",
        "cursor": {
          "ref": "c178974f-824e-463d-971c-2f43f3e55cd5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4e839038-b550-4af0-b8bd-a65e914a1f2e"
        },
        "item": {
          "id": "129a4b0d-82e4-44d5-9057-2b32b6cd8e14",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "00ad3733-8bef-44dd-b861-32d75e49f8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eefefd5-f0ff-4805-8b0c-b0fe411a2a64",
        "cursor": {
          "ref": "b2d6072c-b3ed-4b66-94f6-8a39650d1070",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e20da72d-94ba-4503-b691-354ec18ab891"
        },
        "item": {
          "id": "6eefefd5-f0ff-4805-8b0c-b0fe411a2a64",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a8a0442b-533e-4cd2-924c-c0f958fee107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb84274-eedb-4817-bab6-1a1b9beae060",
        "cursor": {
          "ref": "f687f499-1a2b-4a5b-a84e-f2dc93cebf5c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d1e168e1-cd29-459d-8d1b-6aede0f25ea9"
        },
        "item": {
          "id": "4bb84274-eedb-4817-bab6-1a1b9beae060",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b56c9e3e-e73c-4c99-bf53-fe72597645a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f3ea5f-1d46-4529-99fa-17884ddd01bf",
        "cursor": {
          "ref": "2fe8e0b7-ac0d-4a65-87eb-5f440907e1ba",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ed672caf-3f9e-4cda-95dc-c4e437c3d4a4"
        },
        "item": {
          "id": "84f3ea5f-1d46-4529-99fa-17884ddd01bf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4b0107b1-4ea6-46ec-8946-17166a97e701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d79062a-49a8-4b5a-afec-1a84fefcc027",
        "cursor": {
          "ref": "db740e7f-9f77-4501-9d4a-223c43eb5726",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ac806296-db56-4076-9f49-b635a13c3c06"
        },
        "item": {
          "id": "0d79062a-49a8-4b5a-afec-1a84fefcc027",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eb9d574f-dc88-4172-9037-387d41e9925b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caa9bbb-55e1-4c18-8f49-bd6ef879e0a0",
        "cursor": {
          "ref": "3cf9620f-4602-4bfe-9034-d5e45dd6f0ee",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "abca43f9-ec1d-4be6-896f-f53b6ed4de96"
        },
        "item": {
          "id": "7caa9bbb-55e1-4c18-8f49-bd6ef879e0a0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "94d1b021-de65-4f99-a01c-250574afd413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcc81bb-2cae-4706-8905-324bea197b5f",
        "cursor": {
          "ref": "551a39f4-5e32-424e-896b-b46b70240a90",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "541f3eda-125a-49fe-944c-2ec95f0b2c66"
        },
        "item": {
          "id": "fbcc81bb-2cae-4706-8905-324bea197b5f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "586d4858-25f0-4ccb-83e7-ec9b7cf873f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5ce44c-67f1-43ea-b588-61c988b073be",
        "cursor": {
          "ref": "59ff0654-aeb5-41bb-bf1d-885a1e050b7b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2ae05135-3119-45cb-83b2-32395fce6f3d"
        },
        "item": {
          "id": "0e5ce44c-67f1-43ea-b588-61c988b073be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "127e48da-67ca-41a2-8277-4b4da0ab9c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28ed199-67b0-4bfb-a0e9-7d0fe6f509e5",
        "cursor": {
          "ref": "f5d0e7e4-b493-4a2f-8d65-c645118fc7a0",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8964d509-3dad-4e8a-9a93-0dbe31a7b72a"
        },
        "item": {
          "id": "b28ed199-67b0-4bfb-a0e9-7d0fe6f509e5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d563e88b-7398-449d-9757-e74be23cdbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d984042-03a9-4e09-a14e-87bc969c9d76",
        "cursor": {
          "ref": "fdc0bb00-78ea-4570-923b-81697598dab1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5d590b2b-0ab0-458f-9623-ad2475398fa5"
        },
        "item": {
          "id": "1d984042-03a9-4e09-a14e-87bc969c9d76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bb69e068-bb1e-44b8-9d29-fefe58ff839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5a46cb-4031-41f5-9d48-b6b1231d9673",
        "cursor": {
          "ref": "197f09fc-8b43-4bec-8608-e392fc72e068",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f6978f55-659a-49e1-a4bc-3e4c01cc5a21"
        },
        "item": {
          "id": "ae5a46cb-4031-41f5-9d48-b6b1231d9673",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b0064d8e-102a-4dfb-9997-6f7043968061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c910f9fd-acf0-4146-9594-dea70c0c77ff",
        "cursor": {
          "ref": "3176cfbc-8099-4f3a-aa07-653ea3dc832a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a7149e77-ba1a-4cb3-b811-56e2127da2e1"
        },
        "item": {
          "id": "c910f9fd-acf0-4146-9594-dea70c0c77ff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c9044d90-b933-4955-a0b7-2602d1b097b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dccdea-c12d-43b0-94c9-dc6ff8127398",
        "cursor": {
          "ref": "c49d2da9-02d1-4ed3-85a0-a296753b9f63",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f1483cda-f404-4e4e-b71b-3542a89a2e13"
        },
        "item": {
          "id": "28dccdea-c12d-43b0-94c9-dc6ff8127398",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f614f550-5132-4f75-adc6-ebb9b534d075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19035ff-1c44-47ac-973d-01673889496d",
        "cursor": {
          "ref": "b770b14a-6a2b-4cb2-a96c-d7754c0fd9e3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "60307ad5-546c-4899-8acf-d113aa4d1b4b"
        },
        "item": {
          "id": "d19035ff-1c44-47ac-973d-01673889496d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f6d4796-8bb9-4c2f-b8c3-a3c205337cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743bc2f9-8d0b-49e3-b504-641c348ece91",
        "cursor": {
          "ref": "23438e80-87b7-4211-afd0-7551e4533830",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fb4cf1da-fddc-42b2-8a6e-dca80d574bfd"
        },
        "item": {
          "id": "743bc2f9-8d0b-49e3-b504-641c348ece91",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c2b17231-4a5b-4c8d-ae01-5060d54a7de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d34f51d-374e-4a38-bf5e-4e0d84b80893",
        "cursor": {
          "ref": "0c997a68-220c-42e1-bc49-0e3268d6978f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "12077acb-c3a8-4b3d-af5a-4631ccda128e"
        },
        "item": {
          "id": "1d34f51d-374e-4a38-bf5e-4e0d84b80893",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4bc375f5-9071-4793-b8c5-7a0f8598f990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6038917-1557-41ed-9adc-cca0363aee31",
        "cursor": {
          "ref": "a50b403a-f036-419d-bf07-b083eecb09dd",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2660bac8-692a-4793-9d8b-d4ffd8227c21"
        },
        "item": {
          "id": "d6038917-1557-41ed-9adc-cca0363aee31",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e11c4483-f3cc-4e18-889b-f50b2677a1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a899d7-4a81-4bc5-a10d-7bacc0460c4f",
        "cursor": {
          "ref": "5b5907dc-2d4e-48fd-902c-6898c5c6d76a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "493c2614-ffba-40e5-89f8-a7d15a8f370d"
        },
        "item": {
          "id": "73a899d7-4a81-4bc5-a10d-7bacc0460c4f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c3264e0-fc0f-4037-a0bb-cdbad4e11881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbde9f04-6baf-4cab-8e8d-8863bfaeb38f",
        "cursor": {
          "ref": "5e4b64eb-b83f-46fa-a837-a7e1398ef3a7",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "af90a7a1-9cb4-434c-b399-e2646f5577c5"
        },
        "item": {
          "id": "bbde9f04-6baf-4cab-8e8d-8863bfaeb38f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "80d47b9d-0d43-4818-904e-224d04603548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647c0b66-5f61-42b4-a428-5940046ebe6d",
        "cursor": {
          "ref": "e7301056-e940-43a2-ae77-0b6c7584844d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f445b466-a793-4a81-81ad-ed9231fa0c7d"
        },
        "item": {
          "id": "647c0b66-5f61-42b4-a428-5940046ebe6d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cdb519fd-8aa5-4582-96c9-502273223488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44d587e-c06e-4595-8dbd-3c855173d12e",
        "cursor": {
          "ref": "af0f13cb-d057-41af-89bd-5e17b513cafa",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1575103e-6591-4b41-b627-7ee7425312aa"
        },
        "item": {
          "id": "b44d587e-c06e-4595-8dbd-3c855173d12e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "739358d4-c710-4c39-94fb-9c3a680d3fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b46799-e06e-405c-a6f8-af509a833a69",
        "cursor": {
          "ref": "7defdc15-29a2-4c1c-a485-2a617b1974df",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7bc7d339-9772-438a-88bc-c92ae0547a10"
        },
        "item": {
          "id": "50b46799-e06e-405c-a6f8-af509a833a69",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3c76b4f0-91c9-491e-9293-c452251c8633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ec4cea-af97-458f-bf6c-2fc4497e5b1a",
        "cursor": {
          "ref": "1db8b776-e561-46f7-9cf7-956a12dcb02f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "90e464dc-bbeb-4ad9-a530-e283a546f259"
        },
        "item": {
          "id": "33ec4cea-af97-458f-bf6c-2fc4497e5b1a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7072649e-65a3-4709-80a1-c2e90485f929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685d73dc-2dbf-43e1-9d9a-05b8e09dab9d",
        "cursor": {
          "ref": "303d1fb8-9e01-4ee4-9598-86bed5d1b5b9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "994b26bf-983a-4e95-af29-2aae62604c77"
        },
        "item": {
          "id": "685d73dc-2dbf-43e1-9d9a-05b8e09dab9d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2dbde039-d16e-43c7-bcf4-1ea0c12da110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa77c14b-21ba-449f-85fe-2a341337326d",
        "cursor": {
          "ref": "ab7de82a-50b3-488b-9f88-cd98727be50f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5091588d-b3bb-414b-a7fb-2b337268bb4c"
        },
        "item": {
          "id": "fa77c14b-21ba-449f-85fe-2a341337326d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5af8e693-2b51-4603-906e-b1e880e6dee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bf4088-e503-48ad-94fa-b9a2571eb4b9",
        "cursor": {
          "ref": "b92e058f-3dc6-470e-95ff-7034c50789e6",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "15d4c4dd-391e-4085-b638-48d1c198d5d5"
        },
        "item": {
          "id": "52bf4088-e503-48ad-94fa-b9a2571eb4b9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a7e64fbb-1630-4d42-85fb-3ab04ed0429b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0a79ad-22a3-427e-a5ca-0f4c9f325e8b",
        "cursor": {
          "ref": "6dbb5fc5-8100-4633-be07-8d2392c84f25",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d76945e8-dde3-4824-a079-eddacc35875e"
        },
        "item": {
          "id": "9a0a79ad-22a3-427e-a5ca-0f4c9f325e8b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a0913e38-fa6d-4e1b-86d2-2cf0e2be2437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d101b971-7c71-4ae1-966a-6e75b76a9381",
        "cursor": {
          "ref": "04f3b11d-1576-486e-8559-d7bb2f27297b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aaa2f954-62ae-4cc7-b918-8ec308b03c66"
        },
        "item": {
          "id": "d101b971-7c71-4ae1-966a-6e75b76a9381",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d111c7ed-932d-45b2-8668-2e33c0553b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ed3ea4-4b9c-462e-a4e6-cadf43c358c6",
        "cursor": {
          "ref": "5ba67f10-adc8-41a0-a0cb-4613595daf33",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cc905f3a-81b2-41ed-97ce-8e190d02d091"
        },
        "item": {
          "id": "38ed3ea4-4b9c-462e-a4e6-cadf43c358c6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4dc61727-f820-4220-ab3d-127a53e09382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43178b3c-f2db-432c-90d1-452feba39f62",
        "cursor": {
          "ref": "17dfe87d-9e0d-4750-a8d9-d61cd5fe9a81",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e4cf63b6-5410-47e1-b57f-063c12aea248"
        },
        "item": {
          "id": "43178b3c-f2db-432c-90d1-452feba39f62",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "97492f58-f646-47fe-affd-1de3f2df07e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1815ff49-6dbc-4822-9b1b-9fc03f13200a",
        "cursor": {
          "ref": "a7ed6243-94a4-49a1-bdcf-e32b3e5fa0b9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "053299e7-6311-43db-a4ea-2761a2314571"
        },
        "item": {
          "id": "1815ff49-6dbc-4822-9b1b-9fc03f13200a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "55b9a85a-7dbf-41d4-b0d8-ee30a5ff6378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef2e3ba-3dad-41b2-a033-ab1297ff988a",
        "cursor": {
          "ref": "963e9a2c-827b-4c18-a20c-372890e0ac11",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dfa27442-d8f2-4d4b-be2f-659527640341"
        },
        "item": {
          "id": "eef2e3ba-3dad-41b2-a033-ab1297ff988a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "af3d5b3a-3751-4a74-96a0-6be2c51cb1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fde745-58f2-43e5-a270-5bacecdb61a6",
        "cursor": {
          "ref": "23286f77-15df-4cca-b2e0-7fb3b6618bed",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3c17498a-0a0d-43ca-8113-6f0679f3b01d"
        },
        "item": {
          "id": "37fde745-58f2-43e5-a270-5bacecdb61a6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "850a682b-65d8-4a86-ac97-2607708cf610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d05eff-a8d3-4f24-a866-ee72820edeef",
        "cursor": {
          "ref": "a7dcc593-741d-44ab-845c-b1f646b06359",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4c1ca649-ffb2-42cc-aff7-b80e69939086"
        },
        "item": {
          "id": "a1d05eff-a8d3-4f24-a866-ee72820edeef",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4e295e29-e0fd-4b7b-b5a7-3578f21a6016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1ec91f-cc44-4535-b9b7-584f5db02430",
        "cursor": {
          "ref": "9437b1bc-ebbf-466b-bb61-e25c4edc9d40",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "906ff415-7804-4f18-99bd-6c58d3106c97"
        },
        "item": {
          "id": "0d1ec91f-cc44-4535-b9b7-584f5db02430",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d388f7ad-c534-4f7a-a27e-a74d10c161c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3948ce5-ce8c-4b06-b390-57f6ca4efdd4",
        "cursor": {
          "ref": "ebea66fd-8314-416a-b530-cf0759c5efb2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3e031488-d7fa-4245-a129-7421f26403bf"
        },
        "item": {
          "id": "c3948ce5-ce8c-4b06-b390-57f6ca4efdd4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea91f8df-1504-45cd-bc58-a3f86d6e8a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec338b0-76cc-431f-ae5e-f75daa15b195",
        "cursor": {
          "ref": "d6105dff-3873-402f-9147-6ead3654b9d0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "57d065da-e017-436c-96ce-a045a6a5c3af"
        },
        "item": {
          "id": "5ec338b0-76cc-431f-ae5e-f75daa15b195",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "330d5829-01fe-4d6c-aa0c-97a32b3562de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c580788d-ccf9-44bf-873d-58d7fff93dd7",
        "cursor": {
          "ref": "dd0fa389-fe82-4d1b-9732-e3894390d5c5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2c3f8b01-ac32-47ef-8416-9cec44d6a04e"
        },
        "item": {
          "id": "c580788d-ccf9-44bf-873d-58d7fff93dd7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9c4394f-ea5c-456a-90a3-63c27e3b0056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843d5872-f0c7-4814-b376-738048fac787",
        "cursor": {
          "ref": "57b350c9-461c-4ddf-868a-022831dc4b50",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "103e1ab9-f480-449b-bb75-9a0216499903"
        },
        "item": {
          "id": "843d5872-f0c7-4814-b376-738048fac787",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dc1fa56e-41e7-4e43-aa09-eb53b2a971fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ea338f-4ada-4f3e-bb90-7eb9f4b3cffd",
        "cursor": {
          "ref": "9bb299eb-eea1-4f83-bccc-f6b89ca0ce94",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ce5b5d92-822f-4c58-aa51-d13336389c52"
        },
        "item": {
          "id": "73ea338f-4ada-4f3e-bb90-7eb9f4b3cffd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "08710d53-1a57-4bdd-a9de-4238f0dfa141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad3ecd4-9892-471d-9070-a02948a7c94d",
        "cursor": {
          "ref": "40a28569-6438-45aa-a31e-f6748c225e2c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3d3fa34f-9eef-46f9-afad-272f56912c05"
        },
        "item": {
          "id": "3ad3ecd4-9892-471d-9070-a02948a7c94d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f82e0655-d087-4c1c-99bb-bc3f6ba43fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd48a2b-ce84-49c3-8655-6322934ce65d",
        "cursor": {
          "ref": "a9c228a0-9fff-4bf3-9c66-4c90af79f7c9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "dc62ad04-3729-4a63-aeb7-af83b46ecd58"
        },
        "item": {
          "id": "bbd48a2b-ce84-49c3-8655-6322934ce65d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f482f3ec-2034-44e9-b596-482a1a996584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffd2fa0-c24e-4ef0-a4ef-bc34549cdfa7",
        "cursor": {
          "ref": "d432d563-209a-4731-97ef-966671c50380",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b9fafb77-1463-4bd5-911d-e1c47ae38fa1"
        },
        "item": {
          "id": "4ffd2fa0-c24e-4ef0-a4ef-bc34549cdfa7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a4a10781-b29a-4186-9d05-6beab194be91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091984e3-642e-4b44-84e6-82c9f302d8bf",
        "cursor": {
          "ref": "3629f287-c557-4515-af46-6b998f30a8ba",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bf8279fd-cb90-45fe-8241-c55749b91858"
        },
        "item": {
          "id": "091984e3-642e-4b44-84e6-82c9f302d8bf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "703e645e-07da-4e67-ae26-c50c41fd944d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc5c7f1-8ed3-4c70-bb62-4590b91c1018",
        "cursor": {
          "ref": "8448a371-790f-4ffb-b36e-74af9e0f556f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "93f8d438-149b-4753-9a59-fb4672418357"
        },
        "item": {
          "id": "ebc5c7f1-8ed3-4c70-bb62-4590b91c1018",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "de74e167-175f-4027-96e5-5d5fcde8e580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d2bf31-62ec-4a4b-81d2-b9a12c9706be",
        "cursor": {
          "ref": "a7e36797-7bbb-4684-913b-3cab912fb986",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "009c7acc-d95f-4c90-a098-4998cfd10421"
        },
        "item": {
          "id": "15d2bf31-62ec-4a4b-81d2-b9a12c9706be",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "53ddbce6-bc80-4eeb-9508-b952d0873f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cce952c-f1e4-4806-8205-47039d512f94",
        "cursor": {
          "ref": "8e112d67-4dd5-48c5-b9b0-59cd7cdf958d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4176f70e-f1cc-4112-8fc6-f73f15c6fab5"
        },
        "item": {
          "id": "3cce952c-f1e4-4806-8205-47039d512f94",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4b4c313b-416f-4aca-afca-53f9e72cca28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e6ac5c-9b20-4f91-8c01-804a07d5cc8a",
        "cursor": {
          "ref": "1f7fc833-01e7-4680-ae22-6db2cef300fb",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f52d384e-a89a-4cc1-86fe-808d7fed8aa5"
        },
        "item": {
          "id": "c7e6ac5c-9b20-4f91-8c01-804a07d5cc8a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "66d50d8e-2204-4e5c-8fc2-b69c6e3b2faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bd9ce1-ddad-4f5e-8df0-dd839235cc11",
        "cursor": {
          "ref": "48cc8b9b-378b-4336-b4b7-df8459533bdd",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e485f535-7815-4f56-b05c-22babbbb7582"
        },
        "item": {
          "id": "d6bd9ce1-ddad-4f5e-8df0-dd839235cc11",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c4e4ac7f-1479-479a-833a-37316d2a52c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44cc2c6-f70e-4351-a844-01ef5e5b05af",
        "cursor": {
          "ref": "a0239940-de41-4666-bb33-8cd0dbc44f30",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c5369e42-36fe-4d77-91a8-3554217bab5d"
        },
        "item": {
          "id": "d44cc2c6-f70e-4351-a844-01ef5e5b05af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f63d0be-3a09-44ae-b917-f795ca22ffbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd8bc9b-cd0e-4bf6-9428-8048f66404dd",
        "cursor": {
          "ref": "9c86e72d-67ff-47a5-828b-d57a4e1c2449",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "52f5ec8f-d3cc-4d5e-8557-418f6212fb78"
        },
        "item": {
          "id": "1dd8bc9b-cd0e-4bf6-9428-8048f66404dd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7c023d73-498c-4181-a348-7ebcbb3a23cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85921e2-a847-4693-b6f6-ec8a2e2eb6dd",
        "cursor": {
          "ref": "55d8a33f-38d3-4344-bbe9-90268e6bdd22",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "98943916-741d-48c3-8043-b2a39817cf02"
        },
        "item": {
          "id": "f85921e2-a847-4693-b6f6-ec8a2e2eb6dd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fa99b1b4-c29b-4448-9179-4e609bccefe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5ca4cb-819b-425e-8502-31a120053414",
        "cursor": {
          "ref": "543efb9b-c307-4d0f-a9e4-01c846ede0d9",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fafce7d0-9560-4f38-9bef-44bf306fa4c9"
        },
        "item": {
          "id": "bf5ca4cb-819b-425e-8502-31a120053414",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3f1d843f-f679-4f30-8d55-01422fcb39b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cb663e-a65b-4ae3-8560-4c557c763f71",
        "cursor": {
          "ref": "a62454d2-a718-40c6-9272-5ccfd6c6a0ed",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a7dce08e-c846-4866-b3a8-16c4619e9435"
        },
        "item": {
          "id": "24cb663e-a65b-4ae3-8560-4c557c763f71",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ffec926d-75ed-4b42-b5c6-38f412e456b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d654899a-af06-4db7-a813-3c58c541766a",
        "cursor": {
          "ref": "0df3b2e1-fe47-42e6-a150-100d392df95a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e6a11aa4-83eb-48a7-b9d9-86ea488f25a2"
        },
        "item": {
          "id": "d654899a-af06-4db7-a813-3c58c541766a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1d2bace3-ac6b-4278-a195-ba35d1f6eafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c3ba3b-9bfa-416a-9e01-419e88dba3aa",
        "cursor": {
          "ref": "fd907c29-de23-45ba-9326-b0226c003a20",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "aafae07c-8f66-40a3-a5c2-469fdec55633"
        },
        "item": {
          "id": "36c3ba3b-9bfa-416a-9e01-419e88dba3aa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "179cdb28-dc97-400e-9928-8f56164e3648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc5e6a3-f1a9-4af7-866a-fd96fc0a89c6",
        "cursor": {
          "ref": "ac6f436e-7d8a-4c09-83fe-29f56749300b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "409e7aa5-a826-4a84-ad21-ae353efed779"
        },
        "item": {
          "id": "ebc5e6a3-f1a9-4af7-866a-fd96fc0a89c6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "de30f118-e793-4d83-a1fd-4c38f24adc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec98a102-3a4c-4891-914f-d39e6678b1c2",
        "cursor": {
          "ref": "d660f85f-7192-4708-a5bf-5e2bb0299c4c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64f93f5a-9686-468d-88f9-6422c9c1cfa1"
        },
        "item": {
          "id": "ec98a102-3a4c-4891-914f-d39e6678b1c2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2ff59c18-2cd9-4c9f-982d-61f5d3ff003f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86895acb-92e6-4c55-aa92-fb8185066cbe",
        "cursor": {
          "ref": "c60f93e2-e352-4072-ba51-10264476d763",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "db343537-5ad2-4e37-91dd-433b4329edb5"
        },
        "item": {
          "id": "86895acb-92e6-4c55-aa92-fb8185066cbe",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "11c10e45-e4a5-4acc-9c23-d11733ba1d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f3b0f5-97bc-495a-86db-c3da7b3f7ceb",
        "cursor": {
          "ref": "2d99bdb4-27da-4145-9ae1-064cb0b8a712",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a861dafc-3941-4e59-aa98-59ab0f51a3b6"
        },
        "item": {
          "id": "d7f3b0f5-97bc-495a-86db-c3da7b3f7ceb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3c1fc9b4-43fa-43ba-a12e-a36b46c9a43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0f8b3b-d3cf-45b5-9494-597fe3bfc3e0",
        "cursor": {
          "ref": "6649c73c-d365-47f6-a7b9-cbbb6f5b28c8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4f699dfe-1540-464e-9bc8-2910c68da94e"
        },
        "item": {
          "id": "2e0f8b3b-d3cf-45b5-9494-597fe3bfc3e0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab0bc03b-2082-45e5-af39-72c81cfd3ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556af563-693d-4e6b-95fc-4ae06a9f4b1e",
        "cursor": {
          "ref": "ab8fac20-17cd-487a-98e9-b88db58625e1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c54b62c8-acca-4026-aaf2-50031bc73522"
        },
        "item": {
          "id": "556af563-693d-4e6b-95fc-4ae06a9f4b1e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2b290bc8-ee2d-4625-b74e-f8bb83532d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d234d93-0077-49f6-bf63-4637a71a7027",
        "cursor": {
          "ref": "382affb1-18e8-4a36-8a7b-36e2433a7cee",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d373f99d-242c-46bb-a730-e7bfdba5a22f"
        },
        "item": {
          "id": "2d234d93-0077-49f6-bf63-4637a71a7027",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cc277107-ae43-40cb-9680-e42b1c7656e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806ba104-fe4b-44d9-8a1e-dd0eebf57a39",
        "cursor": {
          "ref": "d3345746-4f4f-40d0-b25b-1b4bcabe8a74",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "98cd7630-499d-4ed0-a655-a849e983f75e"
        },
        "item": {
          "id": "806ba104-fe4b-44d9-8a1e-dd0eebf57a39",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3fd70c06-d29e-4381-a791-1f328d8367e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd04997b-44e2-4292-a583-1647a9205b19",
        "cursor": {
          "ref": "55304064-2546-4322-9f2e-8db080e16955",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "294d327d-97e9-429a-a14e-da8272ecd808"
        },
        "item": {
          "id": "fd04997b-44e2-4292-a583-1647a9205b19",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b0e94c1d-31b0-4168-8561-5bc18370690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f6d9e-bff7-4ce2-b5c9-c516e673a8fc",
        "cursor": {
          "ref": "ca8d3a90-af60-47e7-8ff5-2d39064943d1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fb037c72-2b25-404c-93e2-32b1dbe8ecc2"
        },
        "item": {
          "id": "1b7f6d9e-bff7-4ce2-b5c9-c516e673a8fc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "955ebc8b-a62d-4d7d-8b43-9078b5cf4076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf572b5-7b87-43f4-afed-76d9acb1f909",
        "cursor": {
          "ref": "9b055481-afee-42b7-89aa-1cae9468d15c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "73caea76-0ed9-47dc-877c-a727869eb948"
        },
        "item": {
          "id": "5cf572b5-7b87-43f4-afed-76d9acb1f909",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7f8f1406-37ac-4fd8-862b-102f8b367a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebcc07f-cd91-4d91-baf5-d13aa0cfee5d",
        "cursor": {
          "ref": "0bdeab4b-2107-4718-8d29-a554438a25ec",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9448a2b1-71e8-4cb3-99a5-5c0137fc7618"
        },
        "item": {
          "id": "cebcc07f-cd91-4d91-baf5-d13aa0cfee5d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5348b2e3-9a4d-422d-a1bc-a10f7d7fedf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e477f3-0d65-435e-94b2-b46c29901d2f",
        "cursor": {
          "ref": "c8c8c67a-0f33-4d93-b92a-cf8b517b8b78",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0411b9cf-05ed-4d5f-abcb-0e0e8f843acd"
        },
        "item": {
          "id": "66e477f3-0d65-435e-94b2-b46c29901d2f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0af18346-3189-4a93-b5e4-dc2806b926da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d61caa2-5b37-453b-ae3d-cbd7e49d1eb8",
        "cursor": {
          "ref": "8f594f9c-5103-4631-9693-8bf6a8429b03",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "959db8fc-1b9d-420d-aa1f-9210d2213389"
        },
        "item": {
          "id": "2d61caa2-5b37-453b-ae3d-cbd7e49d1eb8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4ae8d4f5-1666-4632-b07f-ceb9398c6dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2573af-6acf-4de7-9a13-eea627a253e6",
        "cursor": {
          "ref": "5e46364a-c921-42f3-9fd7-75aebdffe5c9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a51d6876-d60b-4c32-a7d5-89c6af85168e"
        },
        "item": {
          "id": "2b2573af-6acf-4de7-9a13-eea627a253e6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a738eaf8-f4a6-4810-8894-a77691d1288e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d04f181-463b-4ef6-aa87-45a6feb3de8d",
        "cursor": {
          "ref": "8e68edaa-faef-4aac-bfa1-3d964457ad64",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3ea28f19-0e12-44ff-916a-d1ea0883ae55"
        },
        "item": {
          "id": "8d04f181-463b-4ef6-aa87-45a6feb3de8d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8f842789-29d6-4b29-80df-3aa9cd0d6d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1208973f-b471-42e4-93d4-506dfb33fc77",
        "cursor": {
          "ref": "2e3410ae-9cce-4838-8269-34e5376d75d0",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "268c0ab2-ef97-4a0c-bc74-2e3e23c882aa"
        },
        "item": {
          "id": "1208973f-b471-42e4-93d4-506dfb33fc77",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a494ce0-2838-41da-8fa1-e5c44d7473ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abcf73a-b253-4b7d-b903-02d75fe1bd9d",
        "cursor": {
          "ref": "de5f634f-6246-4c9c-8078-b645d8f3497f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8386469d-e218-4886-8d5a-62a292e9f7da"
        },
        "item": {
          "id": "5abcf73a-b253-4b7d-b903-02d75fe1bd9d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "da9dbe76-e6d4-4d9d-9eb0-080ae277f090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468a1e55-68cd-496a-8d85-724760c864e7",
        "cursor": {
          "ref": "2b019909-82fd-4b27-9619-8262d88cce3f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "89949cce-c6dc-488c-a2de-6bf44cd59e65"
        },
        "item": {
          "id": "468a1e55-68cd-496a-8d85-724760c864e7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "67c58006-37c8-470b-80df-0a50b990f4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85368f6b-171e-4170-862d-d03d52c085d4",
        "cursor": {
          "ref": "8e05151d-59e9-41ee-9ec2-f3ccb01e2853",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cb409e51-f0f2-47fd-b8c8-286606d584a3"
        },
        "item": {
          "id": "85368f6b-171e-4170-862d-d03d52c085d4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "27fa4b75-796b-4e80-97a5-f221ad89176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e33fc90-d16b-45a0-b813-9fab1183c2a2",
        "cursor": {
          "ref": "33b3775c-ca32-4eca-8ff2-b436e5c105e4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "63b54c09-2fd3-49d3-8d86-2463570c366d"
        },
        "item": {
          "id": "5e33fc90-d16b-45a0-b813-9fab1183c2a2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "17376040-55cf-4987-a813-e0c5f63b27f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1453d418-727e-46b1-9fb5-1a71b99ab717",
        "cursor": {
          "ref": "16319c87-481d-415c-bd05-e71e15cd6235",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "198d2d83-32f8-4db1-8a28-7dba7dc4246c"
        },
        "item": {
          "id": "1453d418-727e-46b1-9fb5-1a71b99ab717",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a26fee35-3831-489d-9c19-5e0cff6a9aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f95a000-8c81-4206-abcd-fb24d85adc30",
        "cursor": {
          "ref": "7b95afc3-866f-43e9-9e3d-0544e583efe0",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c0812f84-c0dd-4096-ae52-6477f4517e14"
        },
        "item": {
          "id": "2f95a000-8c81-4206-abcd-fb24d85adc30",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b04f6049-fd1f-4ae1-83d2-4522afca12cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e01f72-dfbd-4de2-8810-a1400566bbea",
        "cursor": {
          "ref": "6bdfb74b-c0ec-46a6-8ee5-937e85a2d9fa",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7831394c-ff26-4927-8c04-12efd0423532"
        },
        "item": {
          "id": "52e01f72-dfbd-4de2-8810-a1400566bbea",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3631cd1b-9d39-4aae-aaba-8d0339808abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eafb6c-0898-4c4d-8a15-5d87f15bf283",
        "cursor": {
          "ref": "9cf0dfe6-3fa8-4fa2-be09-c968cae264c9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e708742-efd9-44b3-8c67-6476227f0a1f"
        },
        "item": {
          "id": "32eafb6c-0898-4c4d-8a15-5d87f15bf283",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f37d1515-6b06-4d8b-8b77-b5aadcb03808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda27653-e113-4321-b20e-725aed92ffb9",
        "cursor": {
          "ref": "e9bf1468-a81b-41c7-a15c-0b0eb161b418",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c89a4656-e31f-42e6-9592-517e76cf97c2"
        },
        "item": {
          "id": "eda27653-e113-4321-b20e-725aed92ffb9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e20657d9-4fbe-4889-a9dc-74c696a38e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb7e715-5b45-4aa8-8eec-cfa0eb297dcb",
        "cursor": {
          "ref": "16f21582-5b88-47c3-b367-b2fd78bf7462",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d90f6e21-5dcd-4429-b755-471f0ae39ea9"
        },
        "item": {
          "id": "dcb7e715-5b45-4aa8-8eec-cfa0eb297dcb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e0a9de58-681c-4a75-b7c4-7d4e4b3f9a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1794ff-5f77-44da-950f-b096288601f5",
        "cursor": {
          "ref": "242fa1b6-6175-4ebf-860a-e525fcc26994",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b5db3218-3a43-4764-9d53-bcb9f45acf7a"
        },
        "item": {
          "id": "0d1794ff-5f77-44da-950f-b096288601f5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a773531a-abe9-4f76-9e4f-6ed80c94ca64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1fc8d3-89a7-453f-b3da-94549ad74251",
        "cursor": {
          "ref": "cf7172dd-4d96-406a-b34b-91118ea64a47",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "09fbd54c-5364-4958-a808-8ead09dc3c36"
        },
        "item": {
          "id": "da1fc8d3-89a7-453f-b3da-94549ad74251",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a0ad7e32-09a3-418a-adc1-81207ba3621b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b5f1d8-ca11-44ef-8930-409ed7edc83f",
        "cursor": {
          "ref": "8771feb6-ae12-4860-ace7-d69be19b7200",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "536663af-8d0a-44e2-a615-c422cbb050c2"
        },
        "item": {
          "id": "a3b5f1d8-ca11-44ef-8930-409ed7edc83f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1110a192-5b00-431c-bfbf-114891ee5464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da883a08-c23b-44f9-a757-6a25704f315d",
        "cursor": {
          "ref": "85278932-0cb0-4c0e-a7b3-5d408a2a6a39",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d792f445-fa8a-48aa-a013-6ba1e6a3c015"
        },
        "item": {
          "id": "da883a08-c23b-44f9-a757-6a25704f315d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b16975b2-9e96-4683-89f1-54068ff433cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d78d13-4441-4461-a1e3-6b3a4de868d2",
        "cursor": {
          "ref": "d878868a-c796-4594-916e-8c651988cbd5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6fd3f82e-19d2-40dd-bdf5-b8a65cee6160"
        },
        "item": {
          "id": "62d78d13-4441-4461-a1e3-6b3a4de868d2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "eab1219c-ae0f-4f24-a37b-da1e611479c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817b8f9d-9b45-4589-9b28-31a7e90c32c0",
        "cursor": {
          "ref": "9ff9c791-7ab5-4e95-9268-31f3607c577a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bc887e6e-fc1c-43c7-a019-41e8698cb84e"
        },
        "item": {
          "id": "817b8f9d-9b45-4589-9b28-31a7e90c32c0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "15df618d-90a2-4c5f-a197-2e6496c62c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f9fb45-3edf-48cc-bea1-f4ed3e761697",
        "cursor": {
          "ref": "fdb2ba5d-d695-4a3e-8dfa-ad6d0d26aef1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1d782208-aae0-4e78-b54f-fa5c72f2b4b2"
        },
        "item": {
          "id": "a7f9fb45-3edf-48cc-bea1-f4ed3e761697",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6e480915-cb65-4bcf-bdc5-4ebc8ed12375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff93201-a523-4e52-b46c-0775ae9b27b2",
        "cursor": {
          "ref": "df3e22a7-760b-45d5-a513-3004c4f64f37",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6ca43cd3-bb06-4697-ac76-da01b1679d1c"
        },
        "item": {
          "id": "dff93201-a523-4e52-b46c-0775ae9b27b2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f1586085-d351-4405-8940-af9c862a1802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db14b5a5-3619-47a3-964e-4c62d2ff8504",
        "cursor": {
          "ref": "f4ad9507-1ba3-4591-9418-34f11cc2596a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "328e4dc1-19f9-4ab8-8048-778a6939f998"
        },
        "item": {
          "id": "db14b5a5-3619-47a3-964e-4c62d2ff8504",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f3376463-c1a2-4a82-9b1a-6b121a1b2078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc664b0-f4d9-44b6-8b9d-f42260840f46",
        "cursor": {
          "ref": "3cdd08c2-d189-423b-815a-d58dbf5a1ebd",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8bc3228f-37bd-4c6d-b763-1bc64d76f43d"
        },
        "item": {
          "id": "7bc664b0-f4d9-44b6-8b9d-f42260840f46",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3a542fa8-9018-4a0d-9e1e-fab2c8a443a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c256d42-9745-4edb-bcce-02e97e4174d6",
        "cursor": {
          "ref": "ccc35017-00c5-4eec-9d67-f833338099d0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "71d2ca66-8054-4505-b6c0-6e22b224196f"
        },
        "item": {
          "id": "1c256d42-9745-4edb-bcce-02e97e4174d6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cab3ab0d-22b7-479e-98af-ef211abbef9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5e82c7-639b-41cb-8d36-1ebe4f6467f0",
        "cursor": {
          "ref": "0d835003-63d0-42cb-9952-fb81b9c9b12f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9c7f8ace-0304-4b60-93d7-99531e5163df"
        },
        "item": {
          "id": "3f5e82c7-639b-41cb-8d36-1ebe4f6467f0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e2c02b2b-94de-45a1-8388-507b6db0dce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e6378c-43e7-48fd-bc82-89539da67bbe",
        "cursor": {
          "ref": "962c350b-ca7e-4597-af7b-4ec9d3293eb3",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4bdb6058-7a6d-42eb-9d23-466fa698da99"
        },
        "item": {
          "id": "52e6378c-43e7-48fd-bc82-89539da67bbe",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3292fa4f-138d-454b-89ba-9a7b4fb9770c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc63a838-841a-4301-9289-a4cccff1bc48",
        "cursor": {
          "ref": "162ed33d-e494-4c3f-a3ed-ea3afe21b5c5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c5ef69da-c03d-4c6e-94d6-b5881e6912fc"
        },
        "item": {
          "id": "bc63a838-841a-4301-9289-a4cccff1bc48",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f3f4f862-8884-4c61-b79d-759224bccf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d70287f-6541-4fff-bd30-b260dedaaafb",
        "cursor": {
          "ref": "0c8f4349-7e83-4afc-8efb-a48246a571b8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4e730efc-94e1-4ff8-a7b9-648c63528fd0"
        },
        "item": {
          "id": "6d70287f-6541-4fff-bd30-b260dedaaafb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c950bc6b-7080-4a10-b391-a5a3f6b8e9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e357a6-b658-44a1-a11f-5d7089a5ad8b",
        "cursor": {
          "ref": "2fc5d169-8a94-46e9-958f-b7f599900ed6",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9929baf2-913a-4743-871f-401736f59872"
        },
        "item": {
          "id": "e7e357a6-b658-44a1-a11f-5d7089a5ad8b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "693ab6fd-f4dc-4166-8b0c-0d5c893444c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e321f5a-ab13-4953-a70e-edbe8c84319a",
        "cursor": {
          "ref": "712cc8f6-504e-4008-91e4-0da2faf70044",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c66d4111-9099-4e85-9b9e-e02bb72a1fbc"
        },
        "item": {
          "id": "3e321f5a-ab13-4953-a70e-edbe8c84319a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5921670d-670d-4d28-842a-3c74a3ac5d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718c1c35-9c20-4b91-a09e-466919ad77bd",
        "cursor": {
          "ref": "5dce5579-e993-4844-8afa-7b46152cb769",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3440c392-4c33-43cc-9a42-3f47fe3454cb"
        },
        "item": {
          "id": "718c1c35-9c20-4b91-a09e-466919ad77bd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0bb1f146-1185-49f6-907e-131d83440038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666ccc26-a83a-45d9-975f-5c5a11dcd52f",
        "cursor": {
          "ref": "147495e5-85a1-49d3-a0f0-f41ee19483f8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "35e52102-3f22-44ac-bb68-c402c2c7c4ea"
        },
        "item": {
          "id": "666ccc26-a83a-45d9-975f-5c5a11dcd52f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "35d6a676-c36f-406a-b84c-341be099cb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58df072-f70a-46f6-a05c-274ac1c4f8bb",
        "cursor": {
          "ref": "2b123b89-2fe5-4467-8d18-d72f664839a2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "87150910-6599-4f7e-9196-856feb3ff74c"
        },
        "item": {
          "id": "e58df072-f70a-46f6-a05c-274ac1c4f8bb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a7612416-133b-45a7-9d32-cfb0657b9818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37394156-3dbe-492d-bfcc-ee50c7a7103c",
        "cursor": {
          "ref": "9a8fe8e1-00e7-46b1-8224-f830803ec58e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bc37a03d-5b36-4cb2-a726-bff1b684e596"
        },
        "item": {
          "id": "37394156-3dbe-492d-bfcc-ee50c7a7103c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fed3f399-0460-4ba2-b28d-8085f494b7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6561af17-20a8-402c-a520-aba9c7bdf9d5",
        "cursor": {
          "ref": "82e5df67-6ac5-4e61-bf6b-95e0625b482d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1dec1cf0-28d4-4c21-aeb2-e13d5202267d"
        },
        "item": {
          "id": "6561af17-20a8-402c-a520-aba9c7bdf9d5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c4ef243e-24be-437c-8e69-3df6bb1e9ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e06574-60dc-459a-8793-2366259a7e3a",
        "cursor": {
          "ref": "b2ff00de-96fb-420d-8189-076662fce7c0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "60c5f840-9f4a-4e6b-9cc1-2fb670e19e6b"
        },
        "item": {
          "id": "e6e06574-60dc-459a-8793-2366259a7e3a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7ca04c7a-cccd-4000-9a4d-f30c56aa048d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e9e1d2-0dea-4662-b3ba-a99350e40eba",
        "cursor": {
          "ref": "a4da3992-906f-467c-bbbf-65c587778040",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1fa261f3-7bec-4def-97ab-f59a14d06f82"
        },
        "item": {
          "id": "24e9e1d2-0dea-4662-b3ba-a99350e40eba",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c1f67ad1-7f7f-4c8c-948b-7275b4c4d9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a53917b-b569-48a9-8c6b-a13e59a19da9",
        "cursor": {
          "ref": "2ca5cbac-89f6-497f-8d30-58c6d2fe76e2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a4733842-44c4-4c04-b7af-cb1f051ad6e4"
        },
        "item": {
          "id": "6a53917b-b569-48a9-8c6b-a13e59a19da9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d219ae3c-6d97-4eac-a830-30b6b929372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233c0034-a241-46fc-abb6-2c2116d680e7",
        "cursor": {
          "ref": "94bf963f-42e8-4389-b311-e6e27c43bdf3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3c83b25a-228d-45cd-af83-c3e335504c90"
        },
        "item": {
          "id": "233c0034-a241-46fc-abb6-2c2116d680e7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b6259c2a-ddd4-4988-93a4-4abafdaedf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395c9c31-2426-4190-b850-d93c4b1cdd9b",
        "cursor": {
          "ref": "d3eeba62-dd7b-43c5-acd7-ef8071139080",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "336edd4e-229e-4944-8f39-fb992d842c06"
        },
        "item": {
          "id": "395c9c31-2426-4190-b850-d93c4b1cdd9b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3ba33c43-9ab3-4f64-b941-79e9fbf7dcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4247bcc8-fe29-4759-8ca7-3b3408812618",
        "cursor": {
          "ref": "b39e18d2-0e6b-43a3-8f7a-e7dd207b7e01",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f3b246b8-1c1b-43ba-a619-7e0fcec529c7"
        },
        "item": {
          "id": "4247bcc8-fe29-4759-8ca7-3b3408812618",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "63ccfe2f-851f-4bff-bf7b-7c145822bf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b0842d-2fb7-4a3e-ac67-c1c1ce4e995a",
        "cursor": {
          "ref": "cfca4afc-d8d3-4857-8b84-d368168bc37f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ae840649-7bb0-4fa0-992e-0ded1c1413d0"
        },
        "item": {
          "id": "24b0842d-2fb7-4a3e-ac67-c1c1ce4e995a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "839eeabc-19ae-4095-991a-85c050b1ac69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15708187-d60e-44f5-b2c2-0a92ee076765",
        "cursor": {
          "ref": "30f1c989-722a-4ae7-a6cb-12dba0b90582",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "28fda905-c2dc-48a8-889f-525bb24539a7"
        },
        "item": {
          "id": "15708187-d60e-44f5-b2c2-0a92ee076765",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "eea8981c-bbb8-4fcc-95dc-8ca566727ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cac205-0510-410d-8998-d7058450497f",
        "cursor": {
          "ref": "315e2bb0-6f7a-409a-8207-dfdff2022032",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e4158796-5af5-4237-8355-3884e615ddf9"
        },
        "item": {
          "id": "56cac205-0510-410d-8998-d7058450497f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "57e08980-4e44-4020-864b-470abc65fec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7905c9-6667-47b9-b613-8de7ad28e64c",
        "cursor": {
          "ref": "148a3ab4-f4e1-42c1-8997-9f3d89826e8c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9c7c87da-1718-4856-bfda-8c0815885772"
        },
        "item": {
          "id": "4d7905c9-6667-47b9-b613-8de7ad28e64c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0f513271-e988-401b-8632-2b48c6a3d7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df03df51-75cd-4232-9639-b7a036cac112",
        "cursor": {
          "ref": "7168a8c5-ba47-44bc-a21c-b8625b8a94c6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3248bf03-5e76-4855-a9ae-29e7fa32a5da"
        },
        "item": {
          "id": "df03df51-75cd-4232-9639-b7a036cac112",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7639454b-d60c-4759-b898-c058913028b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac7803c-1afa-4b3f-bbc3-b28d8b422f27",
        "cursor": {
          "ref": "6573f836-ee76-4b70-8493-838377395690",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "70c5c0da-ccac-4c7d-9500-e9034b693db9"
        },
        "item": {
          "id": "aac7803c-1afa-4b3f-bbc3-b28d8b422f27",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c7da5572-7d3a-4f61-9071-0cfef4ec6b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf467d7-d218-49b3-813d-4fcb9221ee95",
        "cursor": {
          "ref": "aff2a956-9192-4902-946c-1325e681f5f9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a02a09b7-d9e2-4eee-b421-44f90aeb93f2"
        },
        "item": {
          "id": "9cf467d7-d218-49b3-813d-4fcb9221ee95",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3c821da5-d487-45f3-8c0a-f008a52b67c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ea3aee-94b1-4d89-885f-45db250ff826",
        "cursor": {
          "ref": "7daa83a9-856a-40b7-8a2d-62d8f7880f9c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cca5364f-6244-433c-9bab-62ef3fe21f59"
        },
        "item": {
          "id": "51ea3aee-94b1-4d89-885f-45db250ff826",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "18b9a148-b1ac-4863-ba05-fa80fd7355ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29b0561-6fb4-4d3d-b14a-013f50e813d3",
        "cursor": {
          "ref": "3280fb22-75be-4b3d-a8a3-fbf3e7e075cc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "99bf3bb6-b338-4314-8691-3f3227784014"
        },
        "item": {
          "id": "d29b0561-6fb4-4d3d-b14a-013f50e813d3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8d57f159-fae9-4bc9-9587-a28db91b704d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9443ce9-ee2e-46a1-9619-5bc47073fad7",
        "cursor": {
          "ref": "2fb9e1cc-741c-4bd5-93ae-5afea7002a6d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "06348ee4-1781-4b97-b600-faf151a78b47"
        },
        "item": {
          "id": "c9443ce9-ee2e-46a1-9619-5bc47073fad7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5f1ddabc-cd8f-4fe1-b302-0c47b3fd8ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf26bfd-40bb-4f87-ae55-b95f584c9981",
        "cursor": {
          "ref": "eced9372-7e2e-4e10-8044-741bbe93c57a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "06deb0ed-2389-43ff-a520-d9f713262956"
        },
        "item": {
          "id": "9bf26bfd-40bb-4f87-ae55-b95f584c9981",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4c26a25d-37fe-456d-bfae-8345b91a4e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3942ee92-c1cb-405e-9b70-ae1f62dc988e",
        "cursor": {
          "ref": "28c52d2c-0206-4f3d-acf3-eb88ccd70f5a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1b7061ad-8417-4fe3-ab00-eadfd0d26063"
        },
        "item": {
          "id": "3942ee92-c1cb-405e-9b70-ae1f62dc988e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d04a9c43-6572-4341-b960-f75b9c37017e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e197462-6b1e-4124-86da-66b111725ddc",
        "cursor": {
          "ref": "a7896c2c-a6e0-48ed-8820-ccde2b974db3",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "11388263-de75-4231-b3fe-d9aeb3b8403e"
        },
        "item": {
          "id": "9e197462-6b1e-4124-86da-66b111725ddc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "04456282-1146-49bb-bbfd-aa7649f20f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc0d88e-9c7b-4dd7-ab83-db5aa9cf1993",
        "cursor": {
          "ref": "282ad733-e17d-403f-9350-1f85d6ea1a77",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1498c3cf-4c60-4e17-b184-45e8270ec75e"
        },
        "item": {
          "id": "5bc0d88e-9c7b-4dd7-ab83-db5aa9cf1993",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c30b7be7-f7ec-4836-ad34-5e80b058ad00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2111bacf-979f-4c21-866a-1134f7afe84c",
        "cursor": {
          "ref": "9bed8e4b-ed08-4dc5-b1ce-8e9198d0e37c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0ccf914e-207e-41a6-9da0-0ce94739d2c6"
        },
        "item": {
          "id": "2111bacf-979f-4c21-866a-1134f7afe84c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "78eb5d79-263e-4d52-b16c-399e5b0a1b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a33ed4-e69d-4eb1-95c8-46827166e634",
        "cursor": {
          "ref": "f4a830fe-e02b-4e20-9f0b-ce9837a71843",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f7e9f365-09f7-4848-82c2-ae445fac8795"
        },
        "item": {
          "id": "c5a33ed4-e69d-4eb1-95c8-46827166e634",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "041d0162-d2bd-493e-aba8-07b0ef2cc749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7a9610-ea80-4f6f-995e-4b859666b12d",
        "cursor": {
          "ref": "fed7f470-e668-47df-b2fe-c341167a79e2",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "11177b2b-5ec1-40a7-91a6-5ba2234a1861"
        },
        "item": {
          "id": "8c7a9610-ea80-4f6f-995e-4b859666b12d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "700d4432-8f0e-42f1-bb6f-5c00f6fb1c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72419cf7-0f9a-47b8-a71a-2e5185f36e7b",
        "cursor": {
          "ref": "90cc96f3-3cb1-4118-badc-3f0b1a31c522",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5d9b8c79-7d7a-491c-8d9e-138058a61d0f"
        },
        "item": {
          "id": "72419cf7-0f9a-47b8-a71a-2e5185f36e7b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0aa07069-9970-4b31-8c0c-d90449f1c631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc660f5-2bd8-45a2-8634-eed860ae5018",
        "cursor": {
          "ref": "f28dd358-c916-4b19-a879-509710e180ea",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3881d8e2-2ddf-4573-b2db-6084faa65671"
        },
        "item": {
          "id": "bbc660f5-2bd8-45a2-8634-eed860ae5018",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8ebefa83-1631-4117-8881-b3f218028f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75efe8c6-61bf-4b4f-afc5-2dc30e5e6199",
        "cursor": {
          "ref": "87fdf6e2-3690-4b21-bdcc-a5e43b474e8f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "31382e61-192d-41f8-84a8-faf94386a15c"
        },
        "item": {
          "id": "75efe8c6-61bf-4b4f-afc5-2dc30e5e6199",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9f0b8f4f-6ed8-456d-a772-aaf890429059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7555b5a6-12a7-4ed5-aace-ea05760c2da3",
        "cursor": {
          "ref": "72ebd4af-f1aa-4b64-80d7-14250ab287da",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1188f112-6010-4158-b19a-7721de6c38e0"
        },
        "item": {
          "id": "7555b5a6-12a7-4ed5-aace-ea05760c2da3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7bee4339-a6ef-4085-90ce-2a39b656fc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8332c8-7991-4cdd-800d-4b6f27fc50af",
        "cursor": {
          "ref": "f03042f3-b237-4f48-ad9a-18b6d6c32676",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "31390b29-1168-404a-939d-6389aacb8e18"
        },
        "item": {
          "id": "9e8332c8-7991-4cdd-800d-4b6f27fc50af",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be8c3624-7d34-4e86-a520-f279ff01e89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0661edce-ab77-43b1-b4dd-5c81e2f459d8",
        "cursor": {
          "ref": "1f4b5ea7-79f6-496b-bdb5-9f3b2ecbc221",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f680c009-2a61-4453-9614-d49187a5dd6b"
        },
        "item": {
          "id": "0661edce-ab77-43b1-b4dd-5c81e2f459d8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3ebc07bb-b991-4ff6-9502-a64db9a09c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca0ea44-a861-4a0e-bfce-c8e9329087d9",
        "cursor": {
          "ref": "59039ec3-fcec-4e06-8918-f1980d3819d1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "adbed9d5-ca13-49ac-9c41-88dcc5295e56"
        },
        "item": {
          "id": "bca0ea44-a861-4a0e-bfce-c8e9329087d9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2fc03b1f-03e4-435f-86cf-536e6d4e9f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b29b866-f5e2-4b47-b13e-20c041d8f6f4",
        "cursor": {
          "ref": "e1d73252-9441-45a9-bcc5-8d60e33dc79a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bae2391a-5b65-4d69-904d-fcafb9453540"
        },
        "item": {
          "id": "4b29b866-f5e2-4b47-b13e-20c041d8f6f4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "354349c0-f7f3-4d4f-9cd8-4789cbad4d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f275d86-3dda-4080-b1f1-e65bdc4fd668",
        "cursor": {
          "ref": "bb872a96-cba5-448b-877f-421d0219286c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "50bc4c18-0dd7-4ad5-8f63-f8b464927db9"
        },
        "item": {
          "id": "9f275d86-3dda-4080-b1f1-e65bdc4fd668",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "313491e6-7900-492d-a91b-517efce7d872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51bc5c2-ad92-4638-805f-a2ace0198d2d",
        "cursor": {
          "ref": "2dda2bd5-8e95-45de-a9f2-43ae1d67b30e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "baa6acb3-480c-4a5e-beef-a732d98f3c04"
        },
        "item": {
          "id": "e51bc5c2-ad92-4638-805f-a2ace0198d2d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2988d3f3-668f-4e9c-8cd2-9d33af95f3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa86ea80-4c70-4112-bed0-3fc41c2f83bd",
        "cursor": {
          "ref": "f5eb7d2f-0e57-4b16-86c8-b901f146ce58",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "068b03f6-daab-41d2-b12b-4523135c1847"
        },
        "item": {
          "id": "aa86ea80-4c70-4112-bed0-3fc41c2f83bd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "39ce3923-f56f-4f30-8700-29b74452e24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c885f06c-6a7a-41c4-b732-c5a978424683",
        "cursor": {
          "ref": "5d5509e0-8eed-4c34-b670-eadbcaccd9a6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "75c493cd-bf68-47b0-99ae-c9c1c9e7adb0"
        },
        "item": {
          "id": "c885f06c-6a7a-41c4-b732-c5a978424683",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "45384c22-f20c-482f-9ae9-45162d54f1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a5c84f-6b29-4233-a7f9-3f8eef900398",
        "cursor": {
          "ref": "3a83fc0a-106e-44f0-83c5-1a3586cd371e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "26a1b30e-3a25-4534-a0fc-b168086e0a88"
        },
        "item": {
          "id": "a8a5c84f-6b29-4233-a7f9-3f8eef900398",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "80bc9e28-9995-4d90-8c45-ea6d9e9e71ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04a905b-a704-4819-a834-5283666bfe1f",
        "cursor": {
          "ref": "3972c0f5-07f5-4935-88f7-92064fa5029a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "525067ce-7712-4a65-83c6-e4654a974362"
        },
        "item": {
          "id": "d04a905b-a704-4819-a834-5283666bfe1f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "63507abf-9c02-48a8-8184-0ca23fc4c1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d66395a-426d-46c5-a32d-3ae89debef5f",
        "cursor": {
          "ref": "1c7347f2-00f3-4f0b-b102-683a8bfbd90e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8fd2ec5f-8755-4f45-b73b-a4f8d6d63012"
        },
        "item": {
          "id": "4d66395a-426d-46c5-a32d-3ae89debef5f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "173f038f-b528-471c-9007-2a747741c736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32bac85-2330-4045-867d-d73aba79375d",
        "cursor": {
          "ref": "9bbe023e-d716-477f-9b33-6b690aeac895",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0e9d78a3-a07f-489d-9080-1e96a83ed1c4"
        },
        "item": {
          "id": "a32bac85-2330-4045-867d-d73aba79375d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5045517d-af9b-495c-8d45-7d52db047ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20420f62-e44d-47c1-9cbb-21f9dc93facd",
        "cursor": {
          "ref": "b45096fd-902b-4580-88cd-747e0c937b6b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4b5d7fab-8d4f-4bc2-9842-13b73267f688"
        },
        "item": {
          "id": "20420f62-e44d-47c1-9cbb-21f9dc93facd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "66f6ad23-140a-48c4-8842-9ad6ae582575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b9128f-30fb-4636-9cc5-923187c847df",
        "cursor": {
          "ref": "54791ba2-44e7-455a-9808-753dff0f6277",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "99dca7d2-ef9c-4369-8e05-7d08bc63855b"
        },
        "item": {
          "id": "f5b9128f-30fb-4636-9cc5-923187c847df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d8829fff-80f9-4969-828e-b51cf69e7dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824c3291-736e-4d25-89a9-d498c83e5628",
        "cursor": {
          "ref": "c8f96674-de03-4038-8fca-c352650e6094",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b4c47a7a-87f1-4976-9be1-cd9399dbce06"
        },
        "item": {
          "id": "824c3291-736e-4d25-89a9-d498c83e5628",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0cb73ef9-d524-42bf-bb89-7edb4c607b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a32e5a9-731c-4f3c-b28d-acf84b96f624",
        "cursor": {
          "ref": "e4d44f09-bc8a-4f62-a976-5ab82210d564",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3258d17a-9939-4cbd-8353-223e5533cb76"
        },
        "item": {
          "id": "1a32e5a9-731c-4f3c-b28d-acf84b96f624",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ff49f8be-1def-460e-baea-2b9b0c466878",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8e59bd-98c0-43df-8aef-854c1e2c5c85",
        "cursor": {
          "ref": "cfda455e-f89a-4909-9655-63a6544d9225",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "98765ef8-7ace-47d2-9ecc-b63390f3f521"
        },
        "item": {
          "id": "0a8e59bd-98c0-43df-8aef-854c1e2c5c85",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fee559dd-1f09-4d71-bb46-366446fcadfd",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "864d77e5-f801-4d76-a834-eeba88758e4e",
        "cursor": {
          "ref": "d22a4715-616f-44ab-b0eb-3347400ebd6d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3ba0be7d-c6ca-4542-b743-c3cff82c9d35"
        },
        "item": {
          "id": "864d77e5-f801-4d76-a834-eeba88758e4e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b5937b90-11ad-4188-a144-83057375b479",
          "status": "OK",
          "code": 200,
          "responseTime": 1783,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d6cdd0-f449-4e9d-b42b-07f8755a3701",
        "cursor": {
          "ref": "5a6171ad-b13e-429e-8b9d-6d980772b6f0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "dc95f1e2-f558-4bf4-80b3-c8d747074c25"
        },
        "item": {
          "id": "d7d6cdd0-f449-4e9d-b42b-07f8755a3701",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ebc19347-98d1-4630-87c1-cfa9ebc41ead",
          "status": "OK",
          "code": 200,
          "responseTime": 1614,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b56f3b8-fe2b-4688-9a5c-43ee26bec15d",
        "cursor": {
          "ref": "916fcb6c-ab12-4b52-a46d-54c122a4ecb0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7ca23873-6161-4b4d-a60c-0009d0f79cdd"
        },
        "item": {
          "id": "6b56f3b8-fe2b-4688-9a5c-43ee26bec15d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "713f99c0-5ebc-44a2-bf09-997a0095ddf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b56f3b8-fe2b-4688-9a5c-43ee26bec15d",
        "cursor": {
          "ref": "916fcb6c-ab12-4b52-a46d-54c122a4ecb0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7ca23873-6161-4b4d-a60c-0009d0f79cdd"
        },
        "item": {
          "id": "6b56f3b8-fe2b-4688-9a5c-43ee26bec15d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "713f99c0-5ebc-44a2-bf09-997a0095ddf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc338989-861c-41a2-86c9-ce75dc885c0d",
        "cursor": {
          "ref": "1937564b-19db-4ed8-a5a6-c2fc15af6c58",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cdc0bc1d-445a-4bae-9183-d5baa88db375"
        },
        "item": {
          "id": "dc338989-861c-41a2-86c9-ce75dc885c0d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f928558c-51c0-492f-b78b-8a43c30c6a39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d493f5-5939-43fb-8ef5-f858b762f460",
        "cursor": {
          "ref": "5ce2e8a9-b9af-444f-93ff-3c0691c5f6a0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "341831f2-6afa-4435-9cda-abab43ba54a1"
        },
        "item": {
          "id": "73d493f5-5939-43fb-8ef5-f858b762f460",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9cb73a87-f148-457e-b2bc-c30ed8e42479",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}