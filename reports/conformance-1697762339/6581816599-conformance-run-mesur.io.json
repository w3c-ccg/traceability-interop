{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1f9bb370-48ed-4146-bf83-a9847e046093",
        "name": "Clear Cache",
        "item": [
          {
            "id": "26692e88-cd75-45b5-ad14-17d026ff48e7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6985c73-dc58-4a0a-a150-1c7f8f72d939",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "85a9348a-0cde-4fca-bf5b-c5cac26e52c5"
                }
              }
            ]
          },
          {
            "id": "e9ff3b57-94dd-48a9-99dc-054ac182bceb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ca39df3-c96b-49ef-9a93-717fc0ef2a15",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2108ac94-4fab-4fd0-9347-b6d9655059ea"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b31c8a45-74ac-48ef-af2e-30fcbf7c7af0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "55a0dba5-2d86-4b76-945a-70871392d553",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e37e8de-4f76-4bfc-8730-1a94a2c64f36",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66cc8528-71bd-4bb9-80fb-ceceb5a9a8ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50747784-9dd5-41e8-bfc7-acc3d360c9e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd08785a-81c6-4c0a-8dd6-bbe263f2ca11",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63ccddbf-1bd8-43df-9043-f46118b6f774"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c12c8b7-10a5-4070-9bf2-994846b252fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56e221e4-8444-460d-af66-ba859f4d1354"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58d2b159-c9bc-487a-b66d-6060fba635ba",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b22af467-4069-442d-adbb-a496d0b65fa5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "400b10b4-58f7-4b44-be6d-75ca28caaec0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e356297-1a1c-4682-8ec2-ce541d9e69d3"
            }
          }
        ]
      },
      {
        "id": "ff142cb3-476e-4f74-bb5c-a1ee412f05d1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ed80b39f-c580-408e-bd02-5af97da06f63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0621f6b0-0177-4179-8401-ca12cd878c19",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45ffaa53-ba60-4a90-837c-16aeee02438b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b477e4-afd7-4637-96bf-9b4048c69d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2790ffb4-d2ba-46d5-af0d-7be78b3d4dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fc3c91-7314-4b16-8a33-51ce2532007e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf16cc0-074c-425f-9cc6-b845b6b0dd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c71ef1f-6da1-4ba3-b386-004a8fcc75c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22656c24-6a9f-4a02-9afa-5e3da4400718",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a1a3d3-19b6-4d72-a960-fba590e8d2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88808b78-7c94-4c60-9a9a-aea7c64bc5fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb0ac3c9-16bc-4c7f-a190-68f4d0b4c146",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ed7b1fe-213d-4c67-955b-9abdfc593c9c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420cf1ee-6846-40b1-b474-8c3979d9f5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d977899d-3045-448a-b8c3-7a49043effa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0936d588-224b-4d0a-b4a3-a5c69bcc8acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f60c79-8993-4422-a3b1-9e07884e400d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1fff41a0-b319-4076-8ca9-883a605c527a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd5eba26-ee5e-4250-a5dc-7bb521e87c8e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c14a933-d030-4fde-8049-4a3221d5f2eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1b00799e-37b7-4f99-bf0b-6c34d74e2258"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d812e9bf-e8d3-41dc-bb95-4b06ed58c739",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b2ccc5c7-93a2-408a-bb7e-cff48d5381ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "022fc994-83c3-4d99-8739-34d8bf456b07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1812979-892c-4181-9bc6-95462de0a855"
            }
          }
        ]
      },
      {
        "id": "d1c829ab-2703-4a49-83ac-40ce559f4ad0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e2cd5978-b5c2-4839-82f0-a2e44732cc25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9011c846-725a-42cb-a24f-be7b02bef1fe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bd381994-44d2-47ea-a545-f89ed5cda45b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173366da-1095-4d8b-bcbf-c1944b039f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1b1f77-2bde-4e5f-99e4-5402bb8e573f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fbf9b3-b631-4337-abf0-6b8e58964537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "293aa1a6-548f-4982-98b5-772edd8a2832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58ac608-b3f0-4418-aca1-1b156346ffa0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86d5e5e-283b-46db-af17-31f6e76ed029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86f5b3e-5336-4168-b3a0-5d25591d98e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5225ae3-1112-4bf0-bbd7-5da076be5351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fee81dd-1b3c-459d-98f5-4cf125e05c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd047aa8-51bd-4e47-9913-9c1ddd7f91f4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679e953d-e7c0-4bf5-90fa-95004571b668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6367703-f218-44cd-b29f-2e40888ad172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155e84c2-9c27-4208-9234-1e646351158b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b0573c4-7ada-43f3-8a1d-a017ac8e57c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3882d6-874c-4aa1-848d-98e0aacf9f46",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65821106-8ed7-4bab-9c66-e0260291c973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6486681f-7ede-40c0-aeac-d23f774d4371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a4001e-6567-49df-ad9f-9a4600c1bf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca73aba5-384c-403c-8640-d6da8bff254d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28994259-1520-4974-9369-904d5abb062f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579db2e3-df4f-4926-98f4-3bcf7dcdbcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb26cc8b-d9b9-44a7-b576-bc5de581768c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c380a2ff-eb1a-4872-a036-dcaa4605dc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df724b72-d58f-447b-b0a6-310e5823da03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a36a7e-019d-4a10-9249-05915a0cea9a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3f6bb1-bf38-4705-876e-983605044180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0702da8a-3008-4bc6-9772-d53310d3f5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569137fd-621d-47ee-8241-64503f5e223e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99b01f02-dde2-4459-a4bf-06fa364f1afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880d034b-c17d-4986-9a9d-59d4f730dd76",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64181cf-b181-4e12-b39a-d641a0ef65eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddd75df-f69d-4c20-a7d7-509131a90e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2bd0fa-1059-498b-b457-fa8f7a9a0551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0512d9c0-09bb-4941-946f-0c37581e072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6bca84-87ae-4b06-8dcf-c9d1f3027fa0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ec562-b08e-411e-a103-505b5a0ae101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98c0514-4a5a-422b-950d-b18891d3e4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d777ac2-413a-498f-91ea-e0a2b738c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96589273-8e05-431f-9699-4b18103eb235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9e4eba-7ad5-43bb-b347-2708f19da2b4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39077ebe-d611-40d4-99e5-db55b5a93a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1fd4fb-5e78-4907-a3f8-6a2e4d1d5a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c70ed4-55fc-44e3-8246-e366b6b9be4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a98be058-2788-4a0e-8b08-bd3674d006d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c0cd0b-a844-496f-92b8-55167512d6aa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031c99cc-06be-42f7-8e63-026d12f8558f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf3dec1-ad8d-4836-b879-b561777e9f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb8ae91-caab-4366-9205-78dd3bdb9749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "313a682b-bc0e-4bda-8b6f-bf40ace72dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de88846f-c229-43c2-b67e-bd6b93a2cf83",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8359d8-beca-4b9d-be0a-3994025c2a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b446f5-de20-4813-b5f3-16870032c858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e5fcf4-b41e-4f47-a016-f07766f80ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dd91b83-a5b9-4bdd-b4e8-f0f80eb687bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3608db0b-7b56-4dad-ba3d-27bb0ce21e52",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8663a1-7f29-45b3-84e1-8bd215a50546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f097d57-d6e1-433f-8c8c-7b4d2efd1ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5910748c-6ead-4fe1-ade9-35c91bb22264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "315b1fb8-a44c-4926-aaff-33e176c2b921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ad9fbf-f0ea-49e9-95b2-635eacf952cc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e90d7f2-0851-47f9-a37b-aecc45a98802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770bedff-9f57-4514-8923-ec6d318fa038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e07243f-fd45-43ad-92a7-2775a9450981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e330a1c-06aa-4aca-ae4c-2d50d4232696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b85b6ec-f114-4934-9e7c-8ae93ea2c520",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eccf85-3956-4052-8f8a-d75ff9f458bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282b0ab4-f472-47a6-a439-e9a91ab14ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2010b24f-08fe-41e5-aeba-420d68f3016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a290ddbe-6f34-42ff-862f-896656706c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043f8a08-0576-43a6-8ee7-eac2b25c3ec2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4147bc1-612d-4670-bd0f-1df639bda6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50baa6ce-baf0-424b-a0b0-9dafa9ba76c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a441847-955f-482e-acb1-ac4327fec0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b21cc52-5582-46a8-8035-7a3675044cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5650cd6-914f-4390-a8f5-5408f2b4023e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d6849b-d8f3-4970-9c2a-1f0a755eddc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d47e0e-d8ac-4d2d-9bc5-34d70c1cb129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f120e77-1b11-49b0-b5ad-c210800f04f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0062d8e4-13e2-4d74-b0c3-ccf8fd420e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f375c4b-6a35-438e-95f2-4912e3a58640",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140984f4-ac61-44ad-94f5-367fca3b6bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a18343-b4f8-43d7-b74e-454b14efb382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e612385-3c97-4476-94a9-017f1fe66db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf2f0571-df3f-498c-b24b-23aae2945469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1e0b2c-1cef-4fab-8aba-83b91e49c90d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b411b647-42a3-470b-a6fd-d4ed46022b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c474b4d1-61bc-465b-9434-fba33c4da252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08db5374-9a87-4453-8693-b5e7bca46000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c16cb0-7bbd-4aa6-9c0e-c8c39b969506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7016db-8142-4bf1-9bbf-048d09c6cc8a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0935d7-6f42-49bc-981a-6dfafc38cfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb74fbf-0508-4eb3-b5aa-3ee9dba99a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177aca3d-4a74-4fa0-97b9-616d0ed79768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45581de3-290a-4005-a14e-6d4e253f6056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0372e0b-6749-4ec3-b6bc-d64de263cf53",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f235ea40-9837-4319-806c-460598ccce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f93da98-c594-4f43-acc5-7a18dcf053bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684fbc9c-3b15-4b97-94c3-99875b1d4968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee11dd9-e11e-4351-9745-fb3ac7a6f808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e03fb3-9e9b-4596-a89d-c2683dfe7be5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ed8f15-2006-4dee-ba1c-c4153ed93053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065ba6d9-143a-46db-a173-e309738325f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ce9cd6-b1c3-48a7-b7e6-cabb89d08b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1ec0a9-57b8-45ad-bc7e-708a37880f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8c56b2-9a21-48c1-86dc-01e95148a2fd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9c8990-e19b-4b85-8236-250108798df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d508ce8-7e97-47d6-a690-912b86f631d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a74f1b-c4b7-4af6-a156-78cafea72163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ca09e8-9279-4ab9-b765-76ecf219f516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f98d3a-f4ba-4994-8d9d-033e8a902fbb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6c4c19-c43a-46bf-a676-2591d2c0e390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d187869d-69fd-458a-8720-264db81b57af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc71db22-c944-4ae0-9cdd-b0d39c9d6c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21de996d-f5cc-4296-92a2-b9f365beeb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943d2f42-7470-425c-845a-6a4a7effb58e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80eeffbc-8158-483c-b9d7-cb88d2a819c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ae2064-d3ca-4686-8f9a-6144d92fc2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b27aad-2234-495a-8be9-756d672448da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e350c8-5b77-4b18-b661-63a6c6b9fecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e352cb1-0ab7-4e6e-9d80-2d2f9b02fd6c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decdd7d1-088e-4769-bd81-fcd0358dcf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4038f65e-8b50-4265-a072-e66341008418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a8cfa2-2761-4225-90a4-313d5441c117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbfa40a-6f82-4ff0-9f11-8a11dc7acc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ff186c-fa31-4a3e-8d00-d9c21f7ac294",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2b98ac-5cb1-4e57-8693-db356801cb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd575a75-dfc1-47af-82d3-828cdaa2bc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38398eb-f51f-431a-a134-51e5b25e3001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee985eac-4e27-4bad-966a-5ce10aacff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3de2240-e119-40d4-a4c2-4a749228e10b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3dcefa-8a5d-4fdf-b0cf-311c04f24766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7b599b-b2d0-4b91-8bf8-4ea73e32c433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93139d72-22c1-469f-9a83-66d4350b4d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6bc595-98c3-45ff-96dd-70e6f68eb156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a245b6-a26f-4411-8b76-944eecc0e12d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab48025-a56d-450e-9a4b-9991c044e52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d269072-e931-4897-a439-030887be5703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26f979d-7572-4b38-8f95-364c5d3fd3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fab10d-f8ae-42f0-a32e-992364763cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd86def3-2614-4a3a-a5ac-072f6d17c240",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71188914-2f59-45a9-b09c-dc9900263964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6613564-bbf8-49f4-ab5a-d9ff495ae5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea00b26-c959-45ae-9768-5dab7551bcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f785ac-8f28-473d-a8a5-1a3f8de8d18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedbff80-c2eb-41a6-b1f3-c76aec95c0f1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b909068a-6551-4241-80cf-6543d41de1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16aadd38-9750-477c-b8ce-330117866cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9127b4-2546-4401-961d-4a297b274c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2d0356-ca1f-4596-b1a8-b73253f52d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56a48f4-e7b7-456a-9a9f-20dc93af0590",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c8acb8-7f1c-4b91-8bec-c27d67b2ec27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c622eb-fb91-46d5-8dcf-e91b14ae2882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d6fafc-7abb-4542-9557-bc68868f88b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "752a8ee8-ddc1-434e-8f38-8f26d1f44ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13322177-95b1-4f8b-a988-d8c88fec66f1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d61e96-47be-4113-a90f-207b52f8dff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7116e3f1-14f5-4ae1-8763-6332bdde9817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd11f46-ff88-4304-94fd-89a41d686947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13e185f-6870-4803-bb54-b91793409d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a7f3ea-d913-419d-b366-2f046f1faa0f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e164e16d-ba27-446a-85f9-431686d5d6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62db48b-5ac1-4f72-9298-5dd7773336ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35ee2ac-4c7d-4220-b53d-2e31b9a42d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7690100-e6fc-4bc7-a6f1-f38e782af059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bfea95-88e0-4e8b-b239-3a7151be8b90",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9f26b0-aa22-4a64-9d85-031f1db14e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309064f1-c5d8-4a13-bdd2-e0b24fa1cb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86443e5c-0f6d-4860-8538-bd21df981e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ae5107-cf43-40fc-aa67-edb6ffcb986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9102cf6-0998-41c8-ae06-8357db0a57e9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f0a3f3-a8c4-4990-a7e2-baa2349cc75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ed6d42-f0cd-4583-aa21-3d4ba07ed106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511d06d6-fffa-4c08-959e-994c3b3348ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "04c05fbe-4630-417b-8c16-ecc544853b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900b7265-7bba-40e9-b4ed-7f9025bc02d8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e798641-22e2-4fdb-b184-b917059141de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2ffc729-4167-45f5-83db-49aa77f2cbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426c93cd-320b-432c-913a-cdd182684dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18786d66-5a15-4b47-836f-18101edbb31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290afa0f-348e-4757-b1a3-7c9c735a3f30",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43185841-33f5-49c9-aaf3-78bd003b3118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a91a2c-6673-46cf-b831-65ef79670d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec4995f-788a-4425-bc37-80d42054f075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2542e3-80e0-4f89-a803-96fcdc3b0c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4913b2d2-f066-4bd1-9bfd-b81e431e3cae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7625db54-dbcb-4061-940c-7b646107a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddef4b19-d287-43f5-8b33-a5700667ff4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761b0560-cd6e-40bd-a105-8df953fb25c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "59bb97a7-a9c8-4547-85d9-1236ef5171d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8decc04c-74c7-4389-9197-f10df475a6ad",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072c6afe-9595-47cb-a299-4cbcc6da9cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2deef472-4a4e-4fd8-82a6-e3b7c5fefd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1f7600-4549-45f3-b030-22328b36b11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "909532c5-485f-4dad-8f53-6eedb40e34ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569b078f-238f-4e23-949b-7551f2fc1d87",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe25fc7-7470-43ce-89b5-0c63bd863acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c10e896-3e95-4c75-b2ca-f860d387194e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb56b4e-56db-4780-877e-6437b6bcfd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "660f6316-4cd4-43a7-86ba-9c3e5b5457bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9ae712-e9b9-4a68-b23e-e65619ed60e5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b236171e-0e4e-4551-b764-0d0c5d561a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24eb10d7-d55f-4567-af27-7388cabd5580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4e165a-7205-4ca6-ae44-9000cb3020f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8ecb25-7617-4d2d-b7ba-c2f93a4b3663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaac59eb-80ef-43c1-a0a6-752e5aebb7ad",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6acff4-ad80-4941-b1fd-bcf3c6907e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d21652d-c2f8-47c4-9269-b6c94567f2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f61d090-0ef9-423e-9fee-634581868020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "187ec955-c689-4a82-809e-39e8a634933e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cc0154-9139-41b0-b29f-b3945a2af683",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ba3913-1ff0-4b4c-8a9b-20e8b62a1892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1795a1f3-7d0d-4432-a95e-59346718a942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258bec7b-b0f6-4a07-aedb-b9e63659cecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0a2d93-8fe5-4206-8883-34303d5f4641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8383982d-5474-4247-a5fa-eedfac578215",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22df859-d58f-43c3-bcc5-0338e2ffa115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb24441-a7cb-4bc6-ba51-620045f4b2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee1a47f-a89b-4d23-9b05-5d72cec4ff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55a8374-2b95-47b5-8cb1-c26b0bc4d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b7d76f-a5e3-46e5-923a-34d79a9ad40d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebbf41b-44e8-40ea-95d6-005334bb9cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abed233e-0c3c-499c-96f2-5633057af078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20d519f-7b70-4464-9c38-8bf17aeca0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62aa20e1-5935-4a2d-b959-ce0f4d19ed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba233bd-d56c-44ad-b7d4-286bf1ade3a5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3475c74-7e33-472a-a7ad-8fbdb7579cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa081b2-dc4b-4fe9-98c0-c5d4e96ce974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca2b29e-48bf-46e4-874c-cda7c31e6c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c90386f-ad47-434b-bfb1-8de527a86621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156cdd27-d42e-4c78-92ad-348ab1d4b343",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1789c6e-9505-49f2-81ec-42065373811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d891c7-395b-444d-bc20-69b53f2df2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bce8a0-00ff-43d7-9bcf-5b106d75f949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c2cac9-e09d-408b-b43a-db24a448e569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf30347-c952-493a-9149-bc8d4a2e5176",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd2e947-5378-4b34-9d59-6b1140a3fc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4be6a4e-a713-4d3c-b289-b45da9060bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b6adc6-e889-4b0c-b568-a4b5e21c26a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "783f531b-3f5b-4af6-b9bc-cd29a205ca0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01806f9-3e49-4896-b37a-bc95ecef3cf6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10335ee4-c6a0-4a85-988e-0c36f3105052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32ecc72-437f-481f-a30b-eb8c9ca7b46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c171ef7-a656-485b-b6a6-93dfcf41adc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf5c577-3476-4901-8786-eacb6f581b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4599835-d9de-43a0-95e9-1aaef9372438",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27ae68c-baba-41c9-8306-94617f6dd0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea513042-5781-4227-9ab3-6101880abdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3d8028-a054-4f82-ab5c-5a28e647c574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b45de720-1135-4162-bba0-33daccfcc15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3625d767-87e7-4220-92e0-7b6500e68062",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd232f07-35c5-4888-a10c-0b7b202a29e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c6eb1f-2bd3-4080-9eb2-e7fc7bfb4743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014298ac-bef7-4101-a101-70e280fe6db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "66cbc285-568f-409a-a3f9-cb078c055199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100c9b0e-2e59-4af5-8608-001c698776f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1941660b-688d-471a-bc17-cb32fc60a154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4040c49-1071-471d-bf01-cde06109049a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1c2faf-afc0-4dc7-8602-e6875d3ac878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6d8a26-601c-414d-9c34-7c34586ec455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dc5330-115e-4788-8532-387f7197b25a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae93511-bdb0-43d6-ad5d-3e77135cd92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fb1618-fabd-4747-8101-3a4bc89f80d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1967002a-e545-4612-90d0-0e1ba9cd4a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c27f44a2-566f-4b3a-80af-79d0528ddd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4adee92-d9bb-4046-ba16-80e5b0fbf15d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cead0b-c027-4783-a34e-1f8901b0397b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa987c17-1698-4fdb-a47d-3aa4e209b4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d070a72-de16-44c1-9d0f-21429b914d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92990429-96fc-4262-8add-6c32a95a7024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a240a16f-9eab-463e-b9fc-a5727386471e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7428560-e073-48e8-9637-d3b19b78cce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab88f89a-d5b5-4387-ad90-41cbd4633da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a631be1-beef-40fe-b784-6741f5f7bb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b4f9b7-0020-4a65-a566-1dad0a0add6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf117fd-8878-45a5-b5f5-520ab7fba2fe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85adc273-8d85-4c26-862d-b2d193734c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8272f631-dacb-4ae5-9c21-c6f4fa41af0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfad8fc1-3bf5-41dc-9e96-1be13d16d996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ee725d2b-11c0-409a-b706-c0dd63d37c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4f7a1f-c535-42c8-94e2-d5a9856322fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0f6e93-4ea6-4b9d-a9eb-fdc6814fffd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbee4d7-191f-4099-a473-48f1cc5b8341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cffc91c-6f5d-4c61-9562-cc4df9343505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a752e902-bdf5-4e5c-962c-0af45830e522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f49ceb3-15e1-44f6-84f5-fcd0060c3244",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac27ba2-6e95-4e8d-9835-1e74f85798df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5dba2f9-d754-499b-b429-79b939dc5a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9221ee2d-f5b5-45b7-90aa-80515fd1e415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d9b389-bb87-4314-a582-d3b344e7121c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7984059b-5139-422e-8f39-b1783cccb603",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69acc58-b861-4d34-9493-6c0a90f1473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36b537c-8163-40ff-8437-b63b44b2fb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e483f56-5810-42ef-a8ce-aa53d14d749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68749ce0-f74e-4784-aba9-fa501515289f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacac16d-471f-4419-83db-e4234101fde1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80866cee-f1fe-4274-ab5a-8c1e3faa0962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34be6ce0-1446-499f-be38-43039cd4cfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd35bf47-6956-4874-b549-271d094e186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97c1621c-37ec-47ab-96dd-e0751b49f005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff5c29f-f93a-4661-bcfa-943b3d433813",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d37bed-70e3-4a22-8011-3c489a370857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8991c3-d3e5-4a63-9383-a612c166d1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808ac649-ad43-4b56-9331-0a1b0119a744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "76847066-2bc2-487b-ac6a-9cde149b6c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42a949b-8678-4cde-830c-0262bd63ad93",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a743281d-78f8-45a0-b8ec-64b2915d77a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0868cf1d-03ec-4e85-a4ac-a8fd0b4a27bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c482a94a-7fa9-466b-a4f2-b080c86f5e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0202bf92-d872-4551-9310-c643f0ae0700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf885526-5ee9-4024-af32-c1a0bf11a2ca",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b52d601-3fab-496e-ae02-4e99dff024af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3a15a0-0278-44a2-8849-8db6ac100a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b219d6-2ef0-407e-922e-a4f2989722d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "30474520-934e-4784-b3d6-c9fcab1b41f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4acbdc-9c2b-43cd-8f04-dab3e4e1b839",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa20e6d-3390-4c5b-b020-5dea0c5b8836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c23631-06fe-4c95-989b-3e0acfba722f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d0375b-054c-4544-8985-64f51035a587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e49eafe-7b0e-47e2-8d17-89c7c6ab15d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff3ef4a-ab6c-44c6-9f96-72a7e8afac4a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ea18f9-7c9b-47b5-b807-2cf713340167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e9e025-ce75-4b1c-b182-f5431b592b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cd560e-ef92-4d33-9c18-856d66b41509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7eb895f-6fa5-4a40-8a51-3111cfb742b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acde7153-75ae-41c2-93ac-aceb60da6b6a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9f8b3e-8626-43f1-a69b-e4bc1acc194f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79dbe260-73d7-4fce-9ed3-429441f05d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c895abc7-5252-4062-876f-10a60a0dd262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "591e1ef7-10eb-47b8-8a3c-aa7db4b9b8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdbd6b2-c492-45f2-9585-4b6c8aa2ced2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ba9581-5862-4884-b7c3-d4215db6b749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97463692-700d-4f26-ab23-fe810a95cfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d233db0-8279-46e9-9846-d45c5db0f350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4675b205-0743-444e-b315-04e810ec329d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c253898-c0ea-457b-8952-9d4f60e827c8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b941600-64b8-42b7-bdb9-225ed1e2cd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b855d2-095a-49a4-a79c-6f225cad943e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9db160-f844-4d36-90d4-2fba642c1bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "146b0ef5-c402-4e8c-a673-e4fe45fc273f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c4358b-8698-4c1b-81b0-514153686908",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a924c1-7c11-4215-9b9e-84cb63800013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750d2053-c250-4406-baa2-5c18a8de9ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a0005f-56b9-4b80-98e4-fb898b2ae488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2237cee7-b80b-49e5-9aab-6fe42672a470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51287572-b2d5-4c30-bdd7-ff2fb276531b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42e2f86-5d1a-46a8-80c2-a5391464ffa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e18860-387a-418b-b557-740ac03eb5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f60c28d-44bc-4d45-a1e2-5ea610b86694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67771a9-164b-4229-af9c-3e828c1a3096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a015cea-f59f-498c-924f-36d39342f420",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dd5d16-db46-4e5e-ae67-1fa5678bb391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f6dfa3-3a2e-475e-b08b-2b331b21d9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd26d6ca-2458-49b2-9f3c-af7ecd8e1c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda11cb1-58da-4cd2-b114-7832f05b6a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f977a8-19ca-47d1-999e-d15681335709",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e9ecdc-66b4-4a1d-9b50-e299c4a91eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b4f215-594f-43a5-8013-869541036ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bbd052-a483-474e-851a-7389b4de2860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d6e14e-af4e-45ae-83e0-cbb087740f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc88507d-99d6-41a4-817d-668c770ee9e7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c4b311-08ae-4f33-b60d-6747b5ff56cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a013ed8-2bdf-4547-8b95-23034303ee19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1b3b35-3a1d-4edd-9c62-deb0aa087fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2de7105-0385-4ce8-9a6f-e3a6e88d1970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2702189f-7258-4eab-afc1-e169a574beb5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b45d85-1272-4772-9d8d-02aaaffc9700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcecb92f-7c0f-491f-8e15-21854bbd4dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77fe742-68c8-4073-9260-c18c8ef5c5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9951c989-9776-4467-beff-ef2c443c533e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1872199-4f90-48f7-8425-0eca459f51d4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc60fd7f-6ac2-4801-b08e-5e24b9d85731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1300265c-2a5d-498c-8130-c62997e30b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0a5295-4409-45a1-bca4-9993644eebd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70adc6b-ab19-4884-ad74-dc2e371e6466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9901e4-23d3-4513-9695-c94d93596cbe",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647b86cb-4992-4892-bcc3-210e44db5794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8228f276-a38c-4959-814d-291415f403cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07182485-8e05-44d5-8764-16ff82da5ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c44c74e6-75aa-4434-b8ab-f3154c40cb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b9d714-99f3-4f82-9257-42b7db03d946",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1bef96-393e-4923-ab9b-332c55a86e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94708d41-8ab4-4ec0-91f0-30ab950b9022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c0b43a-c864-4f55-a3f8-2a4ae99177ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63dec86-e569-41f8-b389-877bafc5e7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521c9b0c-3b30-4094-bfca-6f6123c1521c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe35a2e-dd08-4c8b-a300-a233fdbe2cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415b9b3c-b0d0-4f0e-a8b5-693d0c9a98ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc15228-9450-498d-b482-dd4ed06f90a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ac0705-de7f-441b-95ae-59689e4d3fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d4fee0-c0b6-478d-9414-30525c327dfe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b38a5d-6522-4c8f-b99b-ded5e83cde88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f784ab-13e0-4eb1-8012-55dc31368f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cb24a8-84b1-4694-8c8e-dd3b12ac79bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff1c4a1-668a-4296-bc43-c56e04d0c61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b0d0db-7394-4996-a5f0-bf2fc66206a2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e69e96-36f6-410c-9085-b1a76c1f7bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f273b24-5ace-4142-b013-1a621a18aa00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cb24a3-765e-40a5-a3b4-15edf9da4dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "957a4ebf-9fd2-4ce8-aeab-c3b80b555e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44132937-4cd6-4b24-9e19-12ff8f0b2e1a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25640a3-441a-4f50-9f39-73962eb4a400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a79098c-193a-4550-a75a-20d1d8b2c4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80214fc-f50b-43f6-afd0-b55ea508113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "497874c5-915a-4e1a-96c9-d5c9ca13ea29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c74929c-567a-44d0-8ca7-342447c1de4d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e8d4ba-c20d-40e6-96b3-b1edeb8fc1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a19078-fd48-456b-a70c-e1bdb7473141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac27032a-6f0e-4c69-a4b2-2e53bb134b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae665938-56a4-474f-be5d-8171f67c8aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92f1851-a94f-4f1e-aca7-402baefa7b64",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de0046d-c5ef-4089-8157-38755c017a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b235fd-0644-4c00-a69e-790036e1c596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ef1c0f-f3ba-4927-8323-b2ea84351cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f88af7-0c81-46e0-9a2f-3f3caa7e4f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5fe108-59ee-4f53-82c9-c9130c393f71",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb834d9-60bb-4f60-9cfa-40d51021014a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b5e6ad-72bc-44ba-99e6-2bc4cd18ea05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55523d0d-dff6-4aa5-8927-f119fbd27bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aadf6f4-8818-4e1f-bb56-f8bf84dfd50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a86f5d7-5a31-49b5-9972-325427988b88",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e80356-a4f0-4dfc-9297-a245cf472cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4431e4-68c9-4c79-8f0f-fce7d04d13d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75dac49-33c4-470e-a1ac-48d19154a418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6b07f3-bb02-4055-942e-a35495810588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440d22dc-0fe0-41d9-962e-ff69949a8ec3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd0962e-e7b4-4966-a892-395822491d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9d70a9-2714-46ed-b032-8aca9b2d2449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1c4660-d079-47ab-93c1-113c3a0f1f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64096baf-ffe3-462f-954c-e3f83f0566c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf284e0-5a29-4d95-8ef0-1700f671af31",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d3a895-6df4-49fe-b497-9b8db3888205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519b9ae0-ab6c-40c4-98f8-aabd054554f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1258d9-9676-4c58-b41e-c8a8991d58f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd125560-edd4-43bb-8b3a-fe35aeac7dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0286640b-240b-4fe9-b1b5-6eb402766433",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29ab840-efcc-4819-bde5-d9d7734d6f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898a9148-3d9c-470f-b9c9-c4b5b0578a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280d74c4-258a-47c9-adca-ea55e52ca423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "543de3d3-ec36-4d4b-8845-f943f4acf61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d40d4f-26ab-4f7e-9533-ba6726b4b590",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5616d1f-73c2-45e2-98c2-03195deb947c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8112defb-ec61-4f64-ae6d-28877f7e7598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc2ea1d-a287-4355-92ae-44ca651ddd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8778bbaf-fb49-4859-9f5a-23be4eeb7b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78507ef-4fe2-4ced-811a-a11de1603a0b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9001bf-cf97-45ea-85af-91bae3ef53df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30edfe8-9649-4745-9462-a14e0656e8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f03c20-9208-4ee4-bb19-5c3a712cbe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "44d09e0e-1b48-4900-8c45-ef07e5fee9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e4e77a-f720-400f-adad-3208891eb4e4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4d00a8-6f47-4e81-8fa9-a99a19b9ba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ea65ec-c22b-4646-9371-769f7f63ea21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c934d62-ca9d-491a-83f2-9ab9f5e19b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "202eaa9f-1206-4916-8def-eb17c2bc4866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e32f93-ea17-4e16-8e03-caf169cc029a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09015dbf-7c51-4c2e-a318-765207dd5aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1cdfd5b8-fd34-4899-b1e1-0d9281ecf7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f41828-08f7-4673-9154-d50b04567789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c7f801-73cf-4617-b8bf-e7a47c4be898"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "521b3f29-01e0-4d91-809d-7a20e3cf1336",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f23724d3-c706-4cec-aff0-d64717c85949",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a68bcb6-7d90-4939-8d4c-666dca3f4afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5992f72-8f07-4d45-a7dd-f59719ddf937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b4d062-5871-42f5-8f2e-cb8b69023269",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dadbae72-ef6d-4e85-a504-ff0f537f6cf5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be1f70db-5a83-40cc-a626-4f9491e598fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6ecd165-9fce-4993-a777-fdbd451999b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2638b188-a8e9-4e74-95a8-caa0372e340f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "639668b5-8a17-4c28-baaa-b21649caf86d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1bf0ce6a-98ba-4b51-9282-6e6c004a37f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90df86d5-d818-402a-8dbc-a92156fa0325"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f431d91f-e8be-4543-9225-152ff8934ade",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7933a182-2ddf-464b-8130-3a94f6c919f7"
                }
              }
            ]
          },
          {
            "id": "adab58d9-2e3e-4e2c-b0a1-e1bd2ffc264f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6f6c690-69c7-4e71-87cb-ffb256b07886",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5434537e-0913-4fce-b726-b978b2e64f25",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9c3690-55a6-4f94-a94d-811bb088a2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "286cbb89-e0c4-4e3b-aefa-7f1a8351b703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c66338-b16d-4a05-b5ff-9993e5ea4fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a357ba76-6452-446e-9942-5d56221ad32a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f112e677-697f-4b4d-9adb-404e4fe96042",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15f4f6a7-3901-4631-bc1b-1039bd3525bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bd6729a-818a-4214-9423-37b39234e135"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "907d9474-a8a9-42c5-8c08-829cc57a32b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2e4306d-fcaa-41c3-a3f8-f6f838622f0d"
                    }
                  }
                ]
              },
              {
                "id": "67cbf76e-cfdc-4ea2-a990-4c61e458cec6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73f8e095-b226-41c3-afad-a60a2109b087",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3aefb9c5-ba17-478d-a321-159b977c2bcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2b19aaf-c1d4-4b33-b32c-2a9ae3b1d3ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a93b437-65a7-4c43-b6d8-812f54f031fc"
                    }
                  }
                ]
              },
              {
                "id": "4e58402e-ca19-46bf-be7d-6dc37565cf40",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eee4b19-f25a-4c03-926f-0084994db520",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "742702d1-d5ae-42f8-9096-1faa0415d7f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4062f849-3e41-48d2-9022-3a2789d65b67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b93163bb-c111-47f6-84f8-c20a351028c9"
                    }
                  }
                ]
              },
              {
                "id": "20ab7fe5-95b4-4b7b-b720-0cfdcdd4c469",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20219d9c-1b36-45fc-a0b2-25dec6c8821b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9b7cf6b-1e06-4c18-b0f4-70f3613e5d86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61c89523-45b8-47a2-a9bd-dd658f845e91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cf82dcad-5608-4612-9059-04e60ee4d5d8"
                    }
                  }
                ]
              },
              {
                "id": "c5cfe91d-9760-4931-908a-ccbdd1301c32",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "679c150b-76fd-4c97-b464-f5421c3dd8a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c1bd527-9fe0-482b-8b81-fd8744bd7fbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56b3309a-43e7-47be-a68a-b06d768fd20d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8dc1011a-cc77-4512-9cd4-babe5652bb44"
                    }
                  }
                ]
              },
              {
                "id": "56638597-7f6b-401a-94dc-dfb9525da416",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc0df5ba-82b8-48d9-ba3b-d80b0af9732a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d9787d1-843c-474b-99f4-22f74855e199"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b18630d-59ad-4f24-b078-d13d2b373870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3beab08b-4256-40e5-a2df-873acc615f93"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82b0b9bc-7eec-4a49-a2e7-3334a7b65212",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7355e82-4cdf-42fe-9738-8993d0ddde08"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0dc009cd-cc2b-4f40-9aed-624cdc6fecf5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38cec061-2a59-4c77-abf4-fd8e8d622260"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3bab9c9-6076-4c00-912d-63832e5a6801",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "baed0b11-269b-473b-a0f3-f01cf00c6a7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f4762ae-e59b-4494-b12b-5dae32013e26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dab6fe37-2c62-4f45-8eb1-10acfbe5005c"
            }
          }
        ]
      },
      {
        "id": "6ee6c9cd-e4ec-4672-930a-5e2e3005eff3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d3ac6bdc-47b3-44df-b93b-5d07a471b140",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c273d247-15f7-40d4-aebf-6138d30bbf75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10b93036-3e72-4439-bccb-34cac7cfe40c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e72ee7-a281-4f3b-9e19-e3bcbccc9c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5747c3-8e02-4b9e-a74f-471d15cc47d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26511cac-76af-4251-9c16-78099e9d7758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b8eda9-9183-40c3-8211-94b11fc67046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e14a03-fd41-4791-af5a-e8cf6f1df37c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dc32dd-727d-4da8-82e0-e25bc9e28e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1570c148-538f-4e82-8727-66f78e5817ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f960c171-2446-4c52-9ede-c37d3741c25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb129be-7328-480b-957e-922be288ab6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5f7953-3acf-42c1-9696-d3f49567ea7a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a810ab8-3606-4b52-a8b5-98a0133938bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8122f862-79b5-4805-bb13-fa23fbfc3ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0252465e-a3b0-4413-bec2-9000c8d046cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f9b504-a1b0-4058-adc4-405cffc10c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334f3bc8-b5f9-4a46-8231-ca39a1a5fd7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab94ac7-bc83-44c9-8d2c-a05363bf8955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2223718f-174a-4d97-9731-299c86065ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7671e5db-6ad2-4019-b6c3-bdfbb711b610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff46b9fc-e215-4868-b08e-4a016e792f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1e1a70-b8e9-4dd8-a824-c5ba87b23dc4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8325c8ef-f63c-472f-a21a-1f3920643f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae00a5d-9534-46b8-9179-7667d984cad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6240f026-66e9-489b-a85e-3466ab337d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aee4d05-0553-4a3b-a8ac-1c43074ff364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150cd827-795d-4930-ba45-28a0d0f63fa6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163077e9-e461-40e6-b50b-6b9c7157eadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2493e5c8-0feb-4cb2-83d2-855f24809572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d7fc8b-9383-40ec-9747-bf2807d5ad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13955c31-cef8-42e2-9c56-953df474507b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42061ff-bc9b-4c06-a6b7-d9962fd23b88",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa41401-f133-4689-a72d-94f51603c619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fcc736-8e4f-430c-910d-0ac4a145f790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310e0289-d72d-4c50-a615-12944410a003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "00deca2a-bad0-479d-a898-4441b0d59763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf75bd6-cac0-4864-b65f-abcef70168d4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ff23a8-8bdd-40af-bf42-496c0e26e56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29aff82-74ba-4d65-9aba-823d55bb0ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f82760-5cf2-4f45-842c-3946e5571199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5eb150-79f6-4579-a6d5-5ba5a47d047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7efd2e-f56a-47ec-a934-006b11d556f0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130aaf30-4a71-4db0-9fd0-9381f2366e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12ea503-9652-46af-8aef-76677785bbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b248bfec-44a7-4258-bbb7-c44f051af3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee715b3-e49c-4a69-9d4e-9388d8b5892a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ceb6a4f-6abe-415f-8569-f97927eb2047",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af40f18e-2998-45f6-a153-529852db0c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b91fba-2650-4bdb-905f-569063078e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb27c9b5-dc2d-45eb-a6a1-58c7a4f553fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "965a01b3-dd87-4623-8d04-cfafa8e5ac96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e21d20-134a-48db-b0d1-c61b85b46cee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3f4eec-6571-464e-8427-9db0d829d97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52365ee3-970b-4c9c-b67e-599aea8a272c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd001ea9-4d6a-4ac8-a886-7fdafcc3fb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a22e36b-03b4-4ee5-9297-560ad0b2446c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9d093f-64f9-4208-a06b-14c1b155bb51",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8120ec-a27e-494d-b731-5827f5715b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766f5da0-5db5-459f-a78f-946f200d5524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57070904-6f36-466e-927e-cbd55fe5530b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43edd824-2808-4064-a92d-8412f53f7d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9fc2f4-98fb-40e1-bfaf-676a55b013b8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630b17fd-6539-4382-b641-2ee6ba34dd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a00b735-a8b2-4bff-9157-c5181e41233f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea91033-1e50-4d1a-80ae-a689684a70e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a48a6b0-a44b-4418-90ed-625c6ebdd0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8c491d-8557-4cc2-a3f8-afcda84c59eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b35eee7-fb87-4b54-b11c-fe9444b77af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1255313e-2e35-468d-93d2-74310a673aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90faae3c-e5f3-44b4-89b0-89b52008a6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "18585a69-15f8-4941-989e-fa1fa3941e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93545785-cf4d-44a5-8dc4-87774341fe7f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2539db0f-886b-4e97-b040-71821b7fdeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fcc85d-51e0-43a2-aa96-0f454db34850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2781f24a-9b34-4a0a-a8cc-0203a98fba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "04bf04a2-b176-4ae1-b935-cfed3e7c6ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f0e4b6-ddab-45d0-a6ee-2ba38926da75",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec032b0-3c37-4e69-8df9-5d1ae6a88bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69538764-95e7-4779-a9bd-866d8a0ecf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404f0e31-6062-4615-b624-c522a301bc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cde5cc-be85-471d-987f-24a9cd46705e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf7f609-74e2-470d-8e57-b6918aa0305c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f0eafe-7b32-4f33-9cfa-32ac1a0ea1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69173024-e820-49a6-9336-73ad47089e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e005cd-5948-4dae-a29b-43725a31034c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a5fba3-80e7-41b1-ae28-6e3d07b86e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083ab192-8175-404d-887d-da64c56ac443",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad6e39a-f3ba-4124-b398-4667f4e06a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a0e6ee-0508-4482-804b-f75648796bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18a2d80-e8fc-4abd-a1ba-7b93bbc4020a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a41125-d948-4ef5-8f65-cf45abbd2f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39cc263-35f6-4ca5-90bf-84b25beb4c5a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afee56f-606a-4bb4-9c8e-f5db225e530c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd78a23f-cdf8-463b-988c-9b0f45252fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a340c6c-c150-445f-a2fa-4e1bf6b5c6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2db635-7d5e-4106-8d1a-15c4758c3977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a813d3a-fb73-40a0-a687-0fcdf48186e7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbf9be1-e512-4c63-b665-164fd48c8800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb45c51e-17bf-4f09-97fd-b584d653bb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d86e71-a1d0-4d55-8271-a2ca31bf6420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9830d01-f8f4-4da6-b3af-faf973aafc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9682f3ce-8598-4221-b9b9-77cbe56aa99b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bb98ec-0493-4d38-830a-b2c150e453eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fb89c4-add4-40a7-8497-f613520a9ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352a2aff-af9d-47b4-9f46-c1c9e4f8d446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9c6f4d-bfeb-4b87-a7b7-3e7bfeaf0bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f16c90-31b9-41f0-a66b-1a96e756ebf8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17b1fb1-f1ac-4a34-bfc6-9e4cc5c40170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014b799b-6c5f-4ebe-a09b-0e668b7c50ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e42c054-4433-4ddb-a506-6972824936bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "252ab469-1942-4d89-9f3c-f71bc6fb1831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300cc0e4-7e92-4d7c-b661-77519633f409",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1c35ae-7d6b-453f-be6a-5f096e6e68c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7757ebfd-c4ee-4a25-b1e6-f7d20bfc30a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b6bcec-ae6c-4bea-be9c-acfb9042ac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f88642-5ea2-42cd-9eee-d79ec010ad88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2439ce3-1c80-4f2e-8c25-b63491cb1eae",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89360a5e-a760-4aad-b4e6-af827e475b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa987a4e-a747-4650-8ff4-0d9cf0fb241c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39bce1d-9f2f-4892-bca8-841c4857d82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "525950a2-d5e9-4bc2-8b5b-ac61ccd0717e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a467d68-12f6-44e4-8f65-540f80f6b692",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dae7435-8cbd-415d-a99f-7caaa8c35741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4492d5-8a0f-4ba5-819e-599e2a5df257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30600b86-c19a-43b9-8569-4b730b49edff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "419e7ad0-3556-42dd-84ce-f45399a235c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f5bd45-f2ba-4414-93b4-3aba7860bbb2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d04d91-6b2c-4beb-8cab-221536d7f618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000b23a0-6a09-4f46-9665-0ec86a5d0341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f15f27-b942-4eab-b65c-976b5a41a885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e780d98-1e45-4a68-857d-e34822609a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9615b154-7edf-4ac2-a85b-ca90f1efd4ea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4932eb8d-c9ec-41ac-9cba-30e26d8f29a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd3d808-80fe-4368-8c30-5a333b7c23b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ace3f3-d521-4fea-9569-77d8b75c6b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fadf9b-5409-4656-ae67-ebd6a0afc265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd8169e-da09-4834-b16d-7796c9d7b933",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6d416a-6648-4d4f-a873-847d9f57d3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd0c699-0e70-405a-bc5d-da56a7567f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052828d3-e8b4-4f05-92c6-cd95b403429a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a6f04a-a4a0-49e4-bcff-7d258ed830df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67955c85-abf7-4a4e-87e2-e263065d220f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b53586c-e0d9-4dd3-a0af-59cf6ef8e0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec2621a-cf1a-45f0-9001-46041a4bda6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b83dd02-c475-4c3f-ba78-151c636ab52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9769ebc9-8f6e-4af5-b0b8-54c3d565d025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae825606-e832-4e87-88a8-dff8e57fbafb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2657b6c5-6329-417c-a0ed-019d1cd1a8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623b7a73-58bb-4062-ba31-46a62f493e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa86395-b745-4192-ac21-9872ea91a971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c65587-e8ae-4b38-bcc6-f4d9d2997741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b09a5f-752f-475c-8cb4-6b8542b37465",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d97618-206d-4af7-bd0d-1394773906ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3a3558-d6a2-4e22-8cbb-f7372061a59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc32cd1-1629-4cf7-b222-b0c21bbf470b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd52148-2f5c-48b8-a68f-a677f2633fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50194be7-3a42-4e5b-946b-c4d5e59b84f6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962acd8c-8640-4599-ba98-a420067b9589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ed47d6-416f-4ce3-8646-3819f43fcb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872107e1-8ddb-4a5a-90ce-45bf999e7bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2fb6c5-5d04-4b73-ba6d-c94c029b1b18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65011a24-1277-47e2-9f58-256516de41a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f710f976-f442-4fde-b77e-f9fbf3f5a1e2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c966d4-10dc-4bf7-9810-a08c9bbcbe76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cbb447-b3ca-4203-8982-1a3d48fdd4d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1306c08f-5e17-448a-b284-fec931099e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b5706df-7576-4c47-aa05-258d14c80a89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d920d3b0-79b2-4837-a566-22aa4c70d641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e873153-39c1-4698-a079-8a7b0386c0c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ec12638-37f8-4218-a42e-8b08f64e2a33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d700b3c-6be4-4af9-a7a0-213d6004bf9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3453141-a07d-4e4c-bc78-20c35bf38646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e0530597-5508-4e3d-a2c8-e8fbfba44878"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "194bd7c2-c04a-488f-9c9a-03932a63987a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5cb7ad3-8566-4275-8963-7d3c9b0e81e5"
            }
          }
        ]
      },
      {
        "id": "8e8ee02a-b77b-47a9-8910-f3e762d94eca",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6d3e13f7-d9dc-4917-a728-175fb16a90a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba700bc3-ffec-429f-b65c-6079bb38c702",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de5b783d-7a90-43b1-83b4-e43682a078d8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4891f8a-c93f-440a-be5a-c335de2008af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98a2a00-c7cc-4bb8-a13f-90e85ab613cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e98a143-00b8-46fe-9bd3-aa504e8c28d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "57e277b4-84e9-4ffc-aa00-544c18b96879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2f7b6a-32a3-4977-a7e3-a1b584547ca2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c837f98-ce77-48ab-a1d5-13bfbfc2f5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e627e857-f392-4d4c-86d9-af6ef4cd35c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20ef722-d2ca-4579-b0cb-50f420c32523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95f91319-426b-45da-bda0-14116f5c0525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb3826b-7644-4c7f-adbf-16b0bd2c983e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc82512-14f0-4f65-897b-78e19970ca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec959b1-d22e-463b-8d34-1ef0ee8b5c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ec3bd5-5455-4696-8dcc-2d4a7113957c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5e8468-8af8-4a21-986b-9ec033600ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c44972-6845-4add-89ec-ff1db3a3ad7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1f9201-7c33-40ef-9a05-3682173ef4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0683d3-09e5-45c0-ac5f-0bfe64eb2c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07577c64-8f93-46e8-a4aa-cdb5d2183229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd9d30c-4978-4240-85bf-e3614002aa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504b84a8-54b8-4440-b32e-0f0dbdef0eca",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ab92ee-856c-474c-8c31-0e2be0dc6586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e852d0-89af-44ca-a24b-c44e11301a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d074641a-9a4c-4a0c-b9bb-d76eaaf6dee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c35e59-210e-476d-a268-4eba67bd190d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9a44e2-240d-435d-b8e7-99b17dd97de8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3a3f01-4d84-49f9-b489-8e00561480d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3283b1fc-73f9-4845-8aab-66276b3846af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ce94c9-7378-4886-bdeb-2d8d544b696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3827bf-6a8b-4a15-a22b-04ce68979c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cf4464-e71b-4e70-9a5a-9c34d0df198a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e52b239-a1a1-4655-8e82-4c213e532f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da71a060-e009-4da1-b246-1941acbaab6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f56b32-e210-451e-9f24-9f1f2424781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f26cc4-f286-4f4b-bcbd-7b9fb9d51b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71446d50-459f-4366-bd8b-03cee822029d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1104d0-136d-447e-b8b6-c650fe0d49fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e560ad9-30cd-45d4-96a3-e448ba3ad1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4ed587-0753-4f4f-9383-75ac00d6358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18cea494-5b44-4705-8a75-09b8cd3b61c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bb41df-075f-41e0-a699-207c3fb4f499",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb7cba7-471a-41f0-ba21-26c3dbd86eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1b2efa-6115-44d7-9e83-c5c0be06e143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba220f42-bea0-4da6-be18-f18ff429e410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e81b44-9f8b-44ae-ab53-66368f3dd5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae4574b-88f3-4af4-9f74-83202dbe5cff",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f93cb64-c5df-4afe-ac5e-2ba09433ac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad21dea-875e-461d-bbe2-c7b2de9ea05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e782c85-2812-4c4f-8aa1-b957ddf2de0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b876830-36d1-4389-afc5-02c6ce89ec2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857a80cd-6131-4bb6-ab4e-8c35ad308c84",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a01b64-b1a0-4c94-a44b-c271ae0fc73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e1ac9c-cf9a-4821-b3d5-06f1ff50cedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa369d4-5f08-4892-9f2b-08e6b8c8f87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "037e7389-9cec-4154-95b1-b950e6279afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfc965d-6cca-4e78-818e-ec9c4198a0ef",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d498f79e-9d52-4967-8024-092094f1d7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03321faf-549a-41e3-8b22-94cf6bd146fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b820233a-89ca-444b-b3ff-8222070e4472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f20c39b6-14d8-4a70-be76-cf49cf70484c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de54fcad-153b-4677-bb5f-79538acd5d06",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2211d2e-6e7a-43f6-8914-926b75fe1f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae2131a-140f-4386-8be2-e45fe61a6255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7547b4ec-3323-4f2f-9dc0-50d8032b64ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba949d4-a94b-4e94-a08c-eb1449edda9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de9fb56-f499-4401-ba0c-95131b2161f3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c60ba14-9ac6-45f4-bdd7-09fe38078050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e714afb-59a9-4e4e-bea4-eeb5fe4483ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22da603f-cb60-45c8-a386-351f06079400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd2c07b-2365-400c-b754-f7b5a2167683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bde6d0-2465-4322-a68d-1af9a9fbeebd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e85164b-e3cd-426f-895a-f0c01c0385fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48932199-c540-42a8-b4df-cfec7b09a83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbd95e4-e40c-46c2-97f8-7f0ade403827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3608c9af-37e2-4a0f-85bc-a0339664a291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b2479f-96c3-4f9f-ab82-242ca723b7fb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d8dc69-52b5-4bae-b522-0660c04b66ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383f31f5-0633-44c2-bd7e-22d27bc7628d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4908bb4a-b532-441a-9f67-73adea21b455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2898114-b8ae-4127-8609-14bca8038e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fdb1c5-86d3-4d5b-981a-f02e84635e62",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f060d93-3bff-4d97-a706-963136fd0739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80f8513-2f0b-4b69-a497-c2210d44303d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a53be8-bd76-4be0-ba7a-f18811cac3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08405f7-0e02-4f5d-8c7b-5fdced883580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba72639a-daf8-45de-90b1-ad10eb522de6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c742aeee-cfde-43cf-a744-09a790ccc0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd35236-d169-4103-8f40-1b90a28c53d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9af1e4d-b3e7-4b96-9d08-9ecfe50b70ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6787b0a-6e60-413f-af5c-9cf8736b132f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc600d27-8ceb-4634-a33a-e5f912bcec6e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc00d5c8-5c0f-405d-bcee-99efec3aa77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c94e282-6733-448a-a890-50c20686f36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53332765-547a-40ae-820f-d2cb8d524343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "683ecfd7-fed5-49b1-8670-7ecf1093578a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb61fb47-fd99-41df-95f7-bdc5bf5307fc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cc9714-30b5-4f33-b818-bcd3f4902190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b25417-0651-4385-862a-dc984699d302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74addd56-5399-419d-9d79-89587179868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7a0018-8a77-423d-964b-df44d1aa06a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797fcc21-50e6-491d-901d-7e7c9b222c15",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f382705-41cb-40b8-82cd-919af2427419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5612521-1920-4f05-820e-81387b112eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91996ffe-e3be-41eb-820c-f3cb448fedb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c80f09ec-b993-44af-99f0-1d77c503bb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ead6344-90bf-4a08-9391-70e2fb6f4f36",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f8999e-bf2d-49d1-bca6-d5bd9d593615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f46be2a-ce66-4e60-a979-270023fc11fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe5ec38-af52-463b-a99c-76282842b856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59c2822-c5a6-404e-b756-be2ed381fe69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7102fd33-ab83-4bbb-9157-b0b1e7371e3e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67345c8f-bd97-4ac1-a9d8-0165af8692f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af7f9ca-c460-4719-a5de-1d851ddf3eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b680c73b-0434-4ef1-9623-3be1b4e3dcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf19b90-e63b-46cc-8e60-023d41f510ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13db1a52-64b7-4a76-8886-45bfd42f6aa9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79306ad3-5584-43ba-ac22-66c747228ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a26d2e5-4a67-44f0-a16e-4aa541526fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083d39fe-a460-4f75-8385-9497c75cdf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7af487-ce15-43a6-a3c5-c2badb426738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f919de0-dd64-408b-a555-b7ebb669276d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f7422b-0657-4bbe-a9c0-edd004904473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d75bf88-7490-4f73-84e3-295f54dceba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fb5748-35a6-42f0-b0e5-4355ef125836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "515d6faf-9704-4247-9419-ca9815c356cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ad7793-b47b-4b26-983b-580ed4290019",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b3431f-c7bb-4c8b-ab52-d98e2365a59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82231a17-3b81-4b0b-a5af-2e47987a910c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e9cad4-ee9f-4090-b8b1-76a22960b57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8384d80a-e0ac-4807-b2d4-0f8401fb8511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cecbbaa-6ce2-42c8-bff6-8cdc3bd8a868",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e14b0f-1dad-4cc2-a673-ef59d4cf66db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18dbd6d-1f8e-4f30-991c-a0ff2546716f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962530e6-2d11-41f7-ac62-b6d332369c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84f60a89-b77e-436d-8948-3b2cbd250521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3658eee5-5188-489e-a7c5-19bb06ffcb99",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6628d6af-6c53-4ceb-ac41-bb850dc46bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a922a1e-6d54-44e9-ad8c-960da343ce1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd3b82d-e985-44ac-afba-f03c33672290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "059c1a79-74bd-45a1-ad6b-9c41603dd9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08092997-f1c1-45f4-9150-b259597cdf36",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27642823-0fe7-4426-b161-1bb9840a3d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c834f9de-34d8-43a9-9ea2-c2355af2fff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318603ee-62c0-4ddf-857f-ade19d26e8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e971d19-6c1f-4d0b-8b89-f00f627a71b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714d4511-ff5f-4427-a392-903ae8a81742",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3ca25e-e270-4fe8-9c9a-cf729b4c2f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08102cd2-4982-480c-ae83-c8e80ffa34e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783a1b59-f07a-4652-a6c0-08d412fb34dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc05bdc-8eab-4658-ba4b-d71a03878024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3494357b-c22e-4a7f-8268-3d380f03abb1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d69f850-557b-4e9e-8f5b-0ce912c11e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebdbe6f-cf5b-4781-8628-b7fc96afce4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d05965-d38a-47d4-808f-59c87293a8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6387e1-b224-43ce-8d09-c7e474bd6a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eb5532-f1b2-4e9b-8920-72d6f4692d75",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64138687-ddc8-4f9c-add8-1ba041aac8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836c8de3-0b9e-4224-8c4e-9f27c75f7cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd718e40-8ad9-4741-bacb-06b7cf2621dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c3a1a3f-c3a1-487d-bdcd-f4fc96d6ca14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c11e8e5-07fa-48fd-90d7-efaadb78a8c0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06515bfa-f1f3-4fb1-a631-a644b70d385b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57097ab9-9401-4e0f-9b18-6f495de5a84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5715699b-c507-419f-acbb-3877a8b09203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb554cb4-faa1-4f1c-98f4-a158ad2cf516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaa1b5e-fdd3-4103-a3e9-abacb1ed62fa",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4facc15f-c524-48b4-a32a-587095921836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1371ff33-90d0-4e8b-8eba-3501c0845288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb13ed7-d56b-4963-9543-fee800897d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae497c5a-aec1-4613-a95d-41a41d8a918f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8bbd51-5fbb-43e0-9e91-8bb59c5fae2b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abfbd98-c5bc-4683-9216-f102b32b6450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244ee8a4-c6d5-4af2-aa24-7f284408d30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498c7931-f376-476c-af19-c5083081066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "777804c9-e399-4207-b19d-87535da19387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70571bd0-dbfe-4a4e-9dcc-af76a828d34c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1439e80f-e0af-4c84-a51f-e136ca8078dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085b3956-40da-45e5-8b99-6d0c4f8ca64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8b3103-ae4e-4eaa-bfc2-0d5984eb1c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "223d7a20-95f2-4def-9359-efe05e4a10e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cc9dd9-b440-409d-88a2-9e7b5762cc20",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027d8ee0-5c2b-4acb-a98a-4c917c17293a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90187e50-1cc8-46e5-9692-a520896b88e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cd459a-8373-4049-a777-98a4f4d54746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd49c99d-6072-4c99-afc0-18fd8bd53db5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0cf6986f-251a-4039-9923-d79c0930a2ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff6c47de-0294-41e1-8513-be4abf5ba69f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a066fd9-aa03-4cfe-8965-15a77009edba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "46c256b5-2242-4495-b394-9f02fff28fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9d64d7-6e2f-4cec-b9b7-874d02c156ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59db8a5a-e0f0-4023-8070-0d0360d4612a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2bba3f4-24ed-48e4-8778-f02845dcf09c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1d62731-f830-4135-ad39-58f10791a280"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "567b97aa-9aa7-430b-81fe-d98318693849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0ba0bfd-fa22-4fc5-b755-1ebb91ce9f64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8050be3c-dc09-424c-8655-2b59f2574e0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "84774cfd-d539-4c7e-9137-f5c89241fcfb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcfdd4ca-a0d8-496d-b598-69f680a508bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07dc0ccf-a489-4ee6-ba3b-3b4c4d10e951"
            }
          }
        ]
      },
      {
        "id": "53fe1fb7-96bf-489f-856f-3bbb9534a211",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "493838e3-6c8c-4baa-9c4a-84ab79159ae4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae7f58f6-5826-4e38-a7ae-3c8c4a2a28be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72efb79d-3da5-4fc3-9712-70974aeea21d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5d8dcd-51cc-4db6-8b43-fbf855c32899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17182783-5fda-472e-95a7-1b0f1d5b64fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912c3b90-2213-4220-bf98-3f7bd7934744",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911c03b9-8691-4d1f-ad6f-cc5838271c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489488c5-0ec9-4c3f-88f9-de3369f3b16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe758c1-b531-44d6-b7ad-2222db5c2c07",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67613aa4-a33c-4052-9a85-b290e0154249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c518bd53-35a2-4569-a5d5-e3eaf81ae320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27efce0c-8b39-461e-87fc-c6bb591d9a7d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aa7048-339d-48de-b96f-44fe280d9c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a6d34e-1ba2-4db7-b603-fa9eb365a0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5626af68-5702-468c-90e6-73f7ecbcf4a4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7e3aa4-40d5-4347-b6d0-f943f62f76c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fd739a-9cf0-4630-a39a-6d728dfbd756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6274f6-131c-4cd9-8347-f7c380f93f2d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf292d0a-5901-4862-9afb-f1466f5cc1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708090cb-f29d-4438-9e61-5e68dc87c9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716dd7c6-fafa-4615-ad76-2deeed0cf8fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10ae92a-a62d-4b66-9413-601b16745a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8032312d-edb9-434b-bde5-473eab51ec6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a000d87-8a6f-4e33-9c4d-8dfe1fb8eadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c74c5ec-f724-4bf4-ac8e-8af74aea1014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436ccff2-e5e6-4d8b-9ada-5cb6ccf0e161",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b9ee25-d4f9-4481-8949-a0e689dd975e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80cc752c-52c5-4157-8cb7-215f110554c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5019e2-b4d8-4ac4-8ef5-2a48ae91ae8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016f6dc4-da6e-48bf-aad1-3e65d6b20f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90337d90-f066-48f2-ae37-1356b6517d05",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596b2fb0-cba8-40f2-af38-a56525308a56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a7dab5-5273-4d63-ad8a-aebbe59fc912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f224c630-4452-4d04-bfe0-8a562ed40c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40acc5ff-665c-4b0a-9201-9fca848ac409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3033b9-de96-4393-8ad6-191260409d43",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a927962-2ba0-4fc2-b870-e7a3ba2715c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8920ba18-35bc-4dec-afc4-e431c95eff90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4317b84-04f4-49c6-ad9d-c1cc0dcedb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e027b194-f4e3-40c4-b982-f17f38cec456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6009519-e3b2-45c5-b321-03ccc3cee4fe",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553fe203-553a-4f73-93b2-d681dbf71267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7c2ea2-7c5b-4b1f-9e50-dbeaaec14e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52b8728-acac-4f4b-8b6b-36f5ca5dfe76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83957d2d-3918-4cc1-88d1-6d78e11649b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07fc534-426a-44de-8250-8401da7e9a3a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59a0f55-484a-48f3-b46d-9d7033151f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7593e9b7-d02a-4431-8585-9f6342a5d630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27f83e8-6bf4-4d93-a1f2-7b4f9a42e1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edc1461-ec5f-4a94-b299-0d6f05c196da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ff5694-568c-49ec-ab2c-d5fb561a9400",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6b1da0-1a46-410b-a883-c75e082bf328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ded9f6-a479-49ff-9750-e9b666e3cfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b599849-b3db-4986-b471-ac014d0f0e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d23d741-3b68-4678-a6a1-a7f03bc09012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2236cd-5fc5-4dba-96cd-39dc816af151",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff875019-35e6-46cb-abbb-16a0038997c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16831e8c-e74c-451a-8649-468993d1eacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec795556-b4a2-4a3b-b463-fdb6f6a065df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccc30a6-e66c-4654-9e0f-3cfd320f247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe252b5-288b-4974-843d-8f231800a06d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4040312-7403-49c7-a756-b20bf683bfb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5a18e4-1c51-4a62-82e3-a0a605e4862b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4081d7-7c71-4c74-82fb-00875d8d73e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a750f736-980e-4e26-8f74-a20c1d8fcb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9604fef9-8f93-4890-8fe2-c2a9625ba2ee",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465cd0eb-54f1-430d-9a0d-1af0b78bde43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9799e4-5a8e-4414-96a9-9e3b76b1e0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1643450f-3228-4497-810a-266dc195e8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6ff88b-33aa-4518-a6ad-ec8c014b84ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4193e9e8-08f2-4ae4-ba1d-bf7c9d4b7878",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a6ba60-1ef6-4cfb-a1da-d72f4abe16d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a22d69-7b8f-4d3e-83e3-fe2413ba9cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b3614b-aefe-4792-ac05-968147b4bc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d7fccf-3d93-45fe-af2f-2660446145d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a5a7f3-4abc-4b21-b812-c5df4e8dc15a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2afab96-fcae-45aa-919b-4a5f7588db80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f447fa84-4375-40e5-9b77-e75ef016ffcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305fb934-952d-4757-8619-159bfd031ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e883e00d-b107-42e8-bd8b-831651935bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cede2e-afc8-4311-afdf-ef3806778f02",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33967b9b-e305-4eb3-a46d-64794a983d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ae49df-973f-403a-b360-71e58f2bc1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2046a929-8970-4239-a993-75b021b68404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f63284f-7ec2-4ac2-a68c-5166f46fc72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd5cc4e-db07-451c-b796-2e66dd06d18a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0615b1-8e1f-498b-950b-77a9269ffb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4198d06d-2d7d-4ad7-8b7e-c4bd4895e34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d702d4-9afa-4cd4-9aa9-9136ac99a3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11f771e-0ed5-4c1b-8b37-3046448fa0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06bd6cd-9879-4b4c-9f72-3ba34264682d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2b827d-ef81-41b2-9208-20249e0fc356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee11e1ac-9aef-419f-a4fd-1e6f0a8041e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d86f6b2-a41d-46de-9cb7-80a60734244b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f556af-31ec-4131-abd5-e2d73e4f44f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fe7208-62aa-4f3e-86ae-7bf82aa5f68a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bad78d8-20ab-43e8-bb0c-88518436f423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce177c7-8fe5-4c50-9e3f-3ab69d8418c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d9ce5c-99c0-4af7-945c-4b2773518f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b949ae-c5d0-46c0-bfbe-3e7ed4752a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbf8659-7fb4-42fb-a507-07084856df01",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9ceb51-df2b-4fc6-947a-c526f857b6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66ca0d5-a7c1-4d03-b500-a3260f14f53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93776855-1bbd-42c3-8e37-785dca37218d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc07cd3-9111-4747-bf92-6869b84bfc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b432de-cb5d-4846-9005-7c3aab818651",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84175eac-4e20-4abe-85f1-ba3cd6f642c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2a4222-1acc-4686-9397-dbb8c9b01bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33212f6-55fe-4a6e-b56b-098ad6708de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fb5db3-8b4b-4d30-8a05-713c809ed1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6b7a57-e7e2-4405-83e2-7c0081ffb4f8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2820e846-92f7-4497-94cd-1306a7ce7be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5afd221-3213-48c1-9ef6-9d89a41b1cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa557e2-db8e-40a0-af46-8f841e283b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5beb71c8-1e21-4151-82d1-373a151a191b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea684514-ed2b-4e74-a68b-ff31c85a2e00",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ba3bd5-563a-4054-8687-2818a01e3b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40cbd53-e8af-4c80-b699-b11a52a58ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e5f8d6-6c81-4851-a583-37670e4abcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e947ab4-da1f-4ba4-be1f-1d6be2dcd1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a304a4-0357-4620-8389-a1bb26d1a009",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d53bd5-046f-4179-812a-0133a8bc812f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70654ce7-85f0-4f72-8db1-c75c99d34a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14be69ba-e221-4e07-99ba-d739e180a8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f296c9e-a1d6-4e1a-9017-4f1a533ca9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aa2d09-8df9-4808-8989-267e42ef9786",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee10f00-a181-4a4f-bf0b-e475e5302288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8e6c4a-9115-4d07-9c29-e4f4e112969d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d85b01-7c26-422c-82a4-9d496b34d6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e95f02-b515-4db4-abfe-9f6d32b67699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34491c4a-db21-492e-8c9b-fb3d9979c5ad",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f294541e-31bb-43cf-ac13-87203dad67aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca8507b-e654-4f29-898d-ffc00d08f009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91f7aaf-7bcf-45f1-85de-d9d33a1ab5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f610829a-c033-4838-9898-6e76c5eb61d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87e5634-5539-4806-b718-f16364fab8e2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18344ff0-25b4-4536-bd65-2bdcac868072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b1e875-8cac-402b-b21b-84b606b8a21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e830c1c-4c0f-4880-a849-00b3ddad6681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d6efb7-4c2e-455c-962b-83da752ab08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6fdb8a-4bdc-4aec-b0e1-dacfaed310fe",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4660931-62a6-4fe0-912e-6b0270eb7f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "678d7d55-8a34-4716-aeeb-c4c374e62241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18845194-8330-42aa-a9be-0687e085c8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c2e358-d8aa-45ab-9d93-a8c6af420f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb1fb4c-22fe-410e-bdff-f34836498e3c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b6c1df-3b05-4573-9eb1-321400ac3c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dabbbd2f-1f46-4dee-8269-5faf8eb5c927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4b5140-1dd4-4557-a2d6-1c1c1a73ce85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dec926f-0508-43b5-b51a-65685bc419a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9c968e-5d70-4722-abd6-d0f592688317",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3918dc-4d5c-47a4-8c7c-097b9fba90dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b8e1d14-3e88-4f22-b0d1-8571302ddcdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1776fb26-5886-4fda-b978-89d74c14ec15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1173fe51-9fe3-45eb-8f56-269bf08e119c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eedccb1-e1eb-4826-9be1-c6f23bf7a6a2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb86139-6f32-4d0e-bfa9-7da3e62bdb6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf85cc14-b665-40c2-a757-f6db70e38ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adb21ab-d144-4f4b-a30e-9c9c107939cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9b13da-2903-4c66-801c-dc71e36d16ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58676704-f2c0-4842-be04-7bea05a392c2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94227029-8e6d-4e4c-9874-b2080023d3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357c7b48-1b62-4329-9b29-44b6aa7055de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc34397-7401-491d-b471-e92f8fe2c621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8724eb-ac0c-4152-a673-8319be36feb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba049cc-daa1-4a47-b435-f6657b42e67d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1def0fb0-34d0-4849-9f3c-5e03cef759f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381b7351-fc1d-468e-ab7a-d4e91214b309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddd192e-29ed-4f17-9dff-4d8d95b79460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8910b4-f6bc-4d42-9acb-4b84b98979f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da154314-1a63-4238-9d92-56ab0d390422",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20a70f9-fcc1-48d8-b8ad-da23afbf9247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c2ea46-565b-43a0-bd05-2736d775d742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e390fbcd-1ec2-4664-8090-e56eafbcf1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f996ebd-ed5c-4c85-9727-76bc9d17b49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a38ba8-b8a2-46eb-8bd2-3ea8dddaf9bb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78216cc7-9e2a-4555-9b22-b6bff12ea547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6bd163-c302-4e71-b198-69d78794b0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dfa56e-c80d-4fd3-af1b-00e7c3d78f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d36823-0fd5-4bdc-a59d-3d4bd7e14058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845d44cc-0c41-4c6d-8bcd-943b82e61d5a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b738c7ab-9fa9-4452-a968-31cbf3dbc545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a866f4-6308-4166-9787-e96b4e3f0b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e43cf9-a130-4511-a475-daa71ef4e4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8495e08-eb03-4c90-b9be-b59e08c88f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b4b7e9-036a-44b6-ba59-912f2d585370",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed759354-ed8a-453c-985d-7236b9cf9f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057ba960-52bf-46df-b3d9-d3785e26de01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b094d0-4769-4c7b-ab2d-d760241ef7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e180eab-efc2-4015-8e66-081d8384c1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2759cd67-055a-40bf-9987-d37f1371493e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae90afed-e6b3-4c4d-adb3-87c98a3084a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4beef0-74c9-4767-ad88-9f9145dd82aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4f4933-c913-4ee8-8aad-fd9b28433321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8c39d9-9779-4967-a2c0-62737c42d0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7091c6fc-073b-4776-891d-01eda7d38d85",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2666ba-726e-4978-995b-b9976d916337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a90c210-0441-4ba5-b9a3-a8c29a122b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f798313-e2e1-45be-85a9-4142dd255c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9e81a3-9079-4d99-9e9d-7a2495fcb8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e53a12-13b2-4ca1-bc13-0a1c2f2d6e37",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe834985-8cd6-420d-895d-0118780d9ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24744805-dac2-4d62-8948-bc86affd27b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcaf0cc-fd11-468e-b271-00258e6f628f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955eeb25-4387-4e17-8d78-0dc0b9a94ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f9ca65-0125-45ae-84ff-20e785daf424",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f3dbae-4f23-4635-a55b-77406225bac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f4ac25-112d-4737-b2ff-ff38d8bae3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585c37cf-1ba4-4983-a46c-c9cf74cd9881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c3f122-77aa-4928-8a81-099190897b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8721d37-4a25-43bd-b403-e53b2274abcd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10564ba9-08ff-4d20-9774-6a960e2c8b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f21707-5d2f-4e8f-b730-c9af447112a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895b3998-010c-4bf6-b884-fe7ade643297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dc36ed-ea1b-4af3-958b-03b858cb9007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae591ce-53dd-4d16-a44e-e8a608e4701d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38204db7-8a7e-4a16-a877-69f23a65767a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98f89bc-6436-4f14-8c63-d69d0e1b27c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb45471-e520-4abb-86be-86191181a70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afc7ca2-b7ce-491c-9a2a-371349ff0a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52149f0b-4601-4911-93f9-27ea7b68023e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee68dace-091a-4721-83c6-89357d5e302e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cdc1f3-ca59-4ad5-91cd-52faa20b32a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae071d0-4e08-4d74-9e71-aa221ae09846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f606c4ee-3e6b-4e19-9826-f05f485fa008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172bf53a-cd40-4d1a-a3f6-c1d6f9a983e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb90e3c1-5981-470f-adb5-08abd2dea899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa4e851-0c1a-45fa-9abd-00fb891ead3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07232675-b917-4367-b9e0-daf33124dda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39da8dd5-0d30-4bbc-9619-62e5992f685c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f24dbe-dbe1-4e48-9aba-617b12580daa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71a8f7e-8fec-480a-8092-882f1e5a058c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c51bb1-4b71-4164-806f-1e24e1a6a8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497e955b-8ec7-4fbd-9b5a-ca7e535955d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6389b1f1-5425-476b-aae3-a23ce9f2349c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000883a1-2d5f-4adf-aae0-354448acdaa0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd7215d-5690-4166-90fd-55aaa8f7663d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e5dccf-c8b7-48cc-961e-754a8a1a9916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefd6338-3cec-4cf2-bccc-bbc02e859120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d77271-1ad4-4911-a68d-d55f6da26f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3e1b4d-564d-4620-ba37-5e8b826dcbb3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45da08ce-33a8-4a54-b6e9-168f40701109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b95eda0-ca42-4b92-bf13-c14429552bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db25f7f-df9a-4cde-ac7b-5fdc3211af4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e13854-eac0-48ac-8aa4-cff8b1636fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178614fb-aa5d-431c-856e-57c1ec5dbb7d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860c2af6-c1e7-4ffb-a1c5-a785e991dfa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89411bc3-bde6-44bd-9505-4c5c1d6e8520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33deaed9-18ba-404d-95c3-16315dc73bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9a3b8c-072f-4bd4-a48d-5bfd960e8c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed909a6b-3c98-4522-baa2-b23282327092",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c3c620-c1f2-40a8-925e-00ea4db3a7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3897859-d210-4aa3-9715-884b51b0d90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4c1800-b757-40f3-a89d-07078263c8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4723aad9-621f-47cb-b8d0-5be01d45bf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdc8ba9-c98e-4a6a-b78f-80cd2089030d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00500040-2d01-4794-aed3-71b1438fb75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac0e6c2-657e-4a8e-b3f0-15dbba4e98db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d899154-31c8-48fb-8216-74bfabe95f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1623b64b-a20b-46a1-bbfb-ec2ab149c493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a03537-4a67-4cd9-9f72-ed0917b0cc4a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db79650e-0666-43da-9000-3b8d31b05e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb642ebb-ea85-480c-9e31-85f73d5d963b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dd025e-e84f-49fc-990a-ec57bc875daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbf99a4-8e7a-4f37-906d-0bd8c6a0ccec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47efc0b6-d802-4bdf-aaeb-2fa07f48c935",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c870cbb2-a7d7-4975-978b-8503bb091440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd930f01-b1cb-48ef-ad78-604f4c4d85f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad762727-dff4-45e8-91ad-c7ae985eb275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8e84d1-210e-4fb0-9afa-a415f5de159e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b0158a-ba56-4233-9122-6c248616fb6a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c412304-a3a6-4ed9-b00d-5ae27fbde3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ef7e76-ceba-429a-a765-839dc6b66cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa80a239-b79e-4ecb-a038-e3aa64e7f28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5950bd-ef74-467a-a8b7-e882efe9843b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab539f3-7b7a-488b-ba76-73c20931fad5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed99a602-0987-4f47-a317-19fa69e467c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983219fa-5bfe-4c48-9535-8a780654d940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da424825-e462-4d0c-b59f-91a32588f18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04543aaa-bdc3-484c-a0de-623e8d0ab261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f09f528-d114-4357-b817-71e0bc89fa54",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ae9ad0-c863-47bc-892b-9f81b15cd9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880a0fe1-059c-4071-85b7-52a569d203ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7150376-4fce-43a1-918c-74cc91e9e288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fda3602-623a-4690-a5a3-649018734e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c3e47e-a884-461d-90b0-ba2423780a8d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f028598-88fe-4684-a67a-a3f2dac756c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3116e4e8-cf3c-41b0-9b56-29f4481fa29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5959f7b2-3e55-41c0-b066-735a1e7ba598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a325047-1c93-43f7-999b-8810d411d2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09fe7a2-2732-4f1b-b1bf-519b1db0b7d2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f20e70-cb7f-4cb7-a61d-0e2a24e2bfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4038ee-0c44-4141-9a23-bf53b987757c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86eb4825-2b82-48ea-8ac7-815505aec044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c116f60-a6f3-47a7-96a5-1cbe6ae7e75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf12461-e85f-40f1-8a5d-c8aaea34c1e5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6ff4a2-11a6-4aec-a834-9a171ad6d546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9407006a-4663-4556-b4fd-452058cd28ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3608ab-4e28-4738-8745-9892bb1fb7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8416a3c2-5361-4237-b375-e4c152b30fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc021ddd-8845-40ad-ad6c-38e6c27f83da",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be619093-ecd5-4b83-a201-d987f7de0df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e8b5ee-18d9-432f-b5af-1cb42923d5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4141341-486c-4e35-8819-fc463d801709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46476a37-bed3-44f0-9598-bdc3c15abacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6517018b-9267-467b-bdf2-c69203cb5e63",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f535e02-45b6-47f7-b377-c22e08374ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17030f2f-93d1-417f-9020-49a7f28057e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8aba76-ef17-4617-919a-8fd7d9b3a0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb21e03-93fb-497f-a2dc-a6cb31454ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87239d1-4b12-4576-86f7-8b73c024bb0b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ff7c21-deca-4bcc-812a-82794462670c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e95f2cb4-cb56-41a1-bab8-2699828a69c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b97e80-6b3a-497b-b4b0-47f4b458e742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582f54ef-98b6-4a78-81b5-8e4f8b744dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232de6b7-7e85-492f-95ec-7aba83315337",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd46e2b-461a-4d01-bd62-bfac0537bb7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aefcfb2-672d-433a-ac8b-d5d76043234d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c868d5d7-03f9-43d9-8b64-c5f70efaf06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8796700b-e5ac-471a-9bc7-a32da1ce1b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a2064b-e376-422d-8e8e-9d52cd0a1418",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cc5845-e30e-49f3-8e2a-aafac67381e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a33f91-9932-445a-8d37-549198c828a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c6723e-4fde-4218-8f69-aaa7d0474516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559ec84f-50db-42d0-8b90-08dfbeee5e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e69fc9-7601-4f49-9fc4-3b70668557b0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76404b1-cb68-49ab-933d-f6bad25ef5d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba575dd-e64c-4e33-ac4b-2e3913bf2167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171b4e06-0a45-447e-8744-1f7d7b69798e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2db157-53aa-4873-afd1-843e091475c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c26599-97a1-4e45-9479-16e584cd8531",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5390f2cf-9252-4c71-90ff-d6cf1f97321f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94914888-5432-4452-b0b1-55ef713763fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0973ca66-598a-440a-9a2d-31f16154376b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee0884e-ada3-4ac1-9240-f2c6c59e5296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095ac42c-03ea-41e5-90fa-c6961f12cb38",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712d5d93-5fee-43c4-82d0-3c08878d45bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80520ca3-a4b1-4d4a-9aa7-0dddc5972472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7256a6ff-13d0-4966-920a-a7008369c97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4aea21-d803-4716-afb7-b59b0129b40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528ee34b-404a-4d78-bb50-a6470ccd9346",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc079d3-7d59-4d9c-a7e8-13a0d0f28d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b87afd4-f680-4236-ae14-1e14c36f8f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6e4af8-4876-4ccb-94d6-3d9618b1176e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4e832c-f657-437b-9ef6-b77afaa918e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59ef13a-6e57-4ef6-b0a2-a4cae5eb68b5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833a5492-925b-4f5d-b7de-9236d64aa7b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f125246-cad3-44a9-91e1-12538be06001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd8a22d-9369-4671-9f58-a58c70dfbc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593a8dbc-d53a-47ac-8976-c8051b01cc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc83ce9-64fe-4248-b1e5-51ff39e4861d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30731804-0187-4389-bdb7-24f4f475367c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded42799-6883-4d83-9b6a-c3d7e5c0bac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f04b8fc-b163-436a-a8f6-b4eb92c3d0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a868fb8a-62f0-47f0-9a9c-560933164864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b6868-6fcb-456a-abb7-3aa887664bc6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c069af32-e9a1-43b3-87bd-a9fa00880731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638b9be1-4396-4c3d-869d-fb4b5f09cf06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81912a0a-5efb-4494-9c33-604174c87a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ec1308-17ae-49d8-ba15-86bfe0b1122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a496dc89-83a1-4605-ae7e-155e674e8a77",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52b9640-3e82-41a8-95fb-9211c3f629ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4352726-15bc-4cb2-987e-8b54ae373a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b066803-bbef-40bf-9407-f3577f598d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58380486-8ddb-4a14-8cb4-eb6b36599702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518f74fc-2455-43a5-a808-fc6d93433686",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e68cb4-0a22-446f-8a39-d21fe49a5f8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62927961-139b-40d2-8f31-599b1229f29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2af4fbb-4a42-4fa4-9c6d-ddf50e5fbd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f01932a-078b-48d9-8009-494b685b0863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6969b30b-85c6-40e6-81bd-d9be42ae49ba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a94014-cf99-4c22-93ae-bb38a0c925e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d23f1a-144c-484f-a36f-a41db077d348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7c37e0-d0e3-4987-9c28-ca444b74b03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5468bcc0-75f2-4b6c-be4d-76976520289e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c64c097-bb2e-43b0-861f-9e0dcb63ad02",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c09989-50d0-4ca2-8810-25ce46285971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1585bcc8-f530-4128-a18e-0b6440f7c54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f540213a-1a8b-489e-84d3-16bcdca73f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f636cc-5427-4e55-a746-4da270bb768f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e081f806-2c50-46fa-a34e-06d524e18010",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d51083d-abc6-4b3d-84a8-76eb363944ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2633a7-7110-498f-831d-8676eb3f3c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2375f9e-f309-4a70-b0a5-3b2fa4bb441a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b99f8a-c1db-4eef-9a63-9425128da64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d4a0f7-67d5-4ee2-81ff-1b6d82d135a3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca0f749-570d-4239-88ed-249747694e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47eed9dd-b37e-4aae-b099-a2d0c514b608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81f9856-7f38-43dd-8137-7dbc459dea59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a625791e-fe4e-4085-88f8-a129c471c1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33891acf-53a9-4acf-bfac-07d56a267151",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27075c4c-9411-4318-b28b-4e26032853dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e63360-b498-44b5-90b9-8a6f26d4b91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256ce2dd-29e6-4d75-adef-783d06e7e6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb4922f-fb77-41e0-95e2-15ca396da69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef1c490-26d9-418b-84cf-92ad6258bbad",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b449337-36b8-499e-aa57-bef51d7142aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0da9523-2803-45f0-b8c1-cc98570e7dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c91a09f-7dac-434d-ba2b-9d1301d28705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99681888-e428-4de9-ae3f-e5c2a62e1396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3a7ac3-964d-4f2c-93e5-ce115ef4cbbc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafe5af5-e7d4-4ba1-9e32-9e8bfc137bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0331b721-3f6f-4b43-9cc1-d91f75100b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc302f13-61f7-446e-ab37-e32a0aaff61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89ed468-b6e1-428a-8ee1-0df6b2002658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8662d60e-718a-4ef2-be75-2ed7f50413b5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf504cc-fdd9-455c-ab2f-0c6130d5c9ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97cc95b7-f24c-4361-9e3c-dc7815bdeb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe2945-d2e1-45b6-8352-9dbc91a6daba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2818b51-3804-4c55-ab19-866dcf94c722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2eb1fd-848f-4357-8da9-eecc2470b093",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b05639d-3886-499f-9c92-6c281db4da74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd9a0be-6a6f-4312-90c6-15f04c0d4d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88884093-837e-4cd8-a14d-5b69be0d3983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5716dfd-4446-4d08-95a6-7deb1c93c7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0e7216-7650-479f-bdc2-eb253553bc7d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec034f1-edef-4bed-89aa-139c1823c85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "314f585e-9e1d-46c0-b94e-26149ee31c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a3977-4755-48ff-8380-1d2df627dee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af3942a-bdb9-4e53-8c52-e442f579db45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b287ffb8-fbb9-41d0-a85b-505f7ed33641",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a03dc0-53b6-4ddf-81f4-e23515f15593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5ac266-940a-42fa-8534-fed6414d8370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472452e8-05ae-42f1-b31c-0345f18104a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0108857-82ff-4e13-b38a-74d749615b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264265aa-0b49-4e6c-973b-017022f18aca",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25fe8ff-a1c7-444e-bc40-27e2565ed65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f8e233-0094-4a1d-9cea-c1b47c562530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3239944-39de-4794-8208-6e40088b37c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ea7afc-ae35-4e0d-b8f3-ccb347ad74e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c270febe-4d6e-4867-abbf-ef2ce35ee6aa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12ac8ce-580f-4385-92e8-549bec6d9e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea29482-a44f-4f52-94d9-ce2490558928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13aee4a-e1c0-4ae6-9b33-22fa028b6564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20e39a4-8001-4e92-baa0-c614ef61cb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e098e91-5cd0-4002-b61f-4d909fc794d0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f912ee-be21-4503-9754-48493cdd01b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96426c64-311a-459d-b6ac-31e52a2e6d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb925646-2321-40ab-8b5e-ff9aa107f3cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519be77c-1ddf-45d2-89d0-2eeec707e92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff50d5f-4216-45b4-a790-ac047e9aa1a1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96871f1b-f804-4ade-872d-6eed4f833412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366cc38e-357e-441a-b538-a9e2b0e2d097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705717a7-d91c-45bf-85f9-3c2f41a2b643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6369af0e-f0ee-4897-98eb-0add590af9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3ba8a8-c039-4c5b-aedc-0b49439109a6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53586616-86bd-4390-a555-af2056ce5ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8cde7f4-8a50-4c5c-93bf-2b9a9b52e11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374feb2e-2df9-444d-a458-0b0c7b11ce15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b16b5e-9fe4-4b04-a8ae-9862e984309f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69456b7-18c0-4e1d-ab4b-cf0b530bac13",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37996058-ace0-450d-b9ba-8a258bc6413e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc86299-acc0-44c8-8306-9074d44b386d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fa2399-e441-4e51-96ce-3f0dd40d9baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7e8b89-9e83-4724-b25e-83a655d53b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73003c9f-bd91-4763-9659-c8212166b03d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcddc6bc-763f-4d15-b9f4-e36a0ed2ceed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483b6106-499b-4c08-b8ee-7b2c1206dc26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af9f79f-3ed2-4be9-b54d-c155f56b9d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec388b47-926f-4226-a0d3-71984905aa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ea137f-b95e-45a4-ab7c-cf8f0ffc461b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f848a94-bdc3-4369-a49d-d2c02d3c9004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dea3c81-164f-429e-b62f-398a472e87ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99c454a-61ed-4676-bda4-e588b6d13359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc25d31e-4ad5-4875-9b2d-0ea73321237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bd8866-191a-4581-a259-687878f329a6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1897d45-e04e-4ead-bbbc-7a93383fdc1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0316489-6144-4467-a6f4-aff95d31790b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcd5969-d37e-48cc-9dae-391e007cd8c5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f9fa7e-b478-4b12-85bd-9bb30f62b1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f2708c-35af-4d33-903c-238d852ab1b4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fe0e1b-11b2-4610-a1ad-b2ec3da491f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54405a0e-4209-46f6-979c-e95f2e3e9ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f17862e-979c-48cb-8aea-cba6b5b0c5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c572c7d1-72ab-42d6-bfed-0e3a0714e7a9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc43a78b-273b-423e-8381-aa3166e08956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96cd4877-77ca-440b-9541-0efdc1edd0f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a509af56-1ad0-4784-91d2-ba4352f4a761",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a8616a7-2c6a-498a-9770-3b432a0fe058"
                    }
                  }
                ]
              },
              {
                "id": "5dabe42c-aea8-4b69-bb7e-6a81ada19dce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57daa548-d105-4d71-b56c-93771a00a886",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819d58df-c6ce-420a-a5bb-0cae7b2335f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d961a22e-bf46-4525-8cc7-d74603c2fb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d450e4c-a877-4de3-9f6d-7a6192e8901f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90e3c731-46c7-4e2a-a8bb-c374d2fe71f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74add5b8-75be-4a8a-880c-ab73fc93b161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be1581f6-8114-4ed2-a11f-109a380c45ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75536142-23b9-45fa-b498-ec572b954e29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a03a86c0-e1be-413e-87ed-5ed137dc8671"
                    }
                  }
                ]
              },
              {
                "id": "056b248d-0d14-4750-8afa-27698bbd0a92",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b13b4ef7-54f3-45ef-b15e-623c730b56aa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267a2665-5ff7-4fd0-a794-f16d6d13fdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "79c085ee-e213-499e-90d3-759c34039dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f066b76-a822-4411-8019-a0660ca0dcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3222309a-c892-43ee-bdaa-82d0f1f26f36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "052072ca-6d39-4fa5-b635-3eb6faba33a9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e594637e-ed8b-4c06-9a0d-e1e9fcbe79fc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f93a150c-845e-4a07-a24d-82bd6926848a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5489df9c-b4fe-4029-ad4a-6542adcaa721"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bb952db-6970-4f05-96ea-eeb26361f49e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c988198-d57e-4a38-a43b-a8b1e645a398"
                    }
                  }
                ]
              },
              {
                "id": "f6b3866d-7263-4232-8e32-89404574a0a6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c41c81fa-1978-408a-ad00-eedcfb046e05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "73f2a9d6-2dff-4e94-aadc-666db1c86c75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdea611d-71c1-40e6-93e1-2a820667cc1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78c28468-30b4-4934-baee-eca1c4a15884"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17225eed-4b37-4606-8c5d-48e2da992e8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a8d3e44c-282d-4a9b-b8c1-91654b0e7659"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad6ecdb5-5f44-4884-9edd-5fde5ddbe7fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "679bf9a2-914f-44e6-b05f-d09d3c68ad5c"
            }
          }
        ]
      },
      {
        "id": "ca6222fc-86ab-4f19-b129-3fba5e3a8eb3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d53b29b1-b4da-43d9-bda7-57fd0a71e1c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5537406f-79d6-4d34-a261-2b99ff979273",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f8aa78f-d037-4c29-a9e9-0e22069f4a9c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afbae74-7ca5-47e7-99ec-9707596fa3f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12129886-066b-4b79-8c46-af7ee0bd1c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be20268-351e-4787-a41c-96bde9b055eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ff17c65-3904-46fe-9236-5aa0483d7eb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc5a72fe-2406-471a-bd69-84517a171ba6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "188e9b83-8b07-439f-b95a-0a9292468833"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9333896-68a0-4c73-bad4-0dd10527cb16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf3b730-7cb2-4b8d-9123-32dae3310954"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4a5ffd2-d911-4707-b077-32a59c8409f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "075692ea-de2e-4623-9676-b95e4c6d576d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30700041-ac3c-4fd1-a797-305ba6d98b9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cb2a6bc-7683-4975-bd2a-acf7eacde941"
            }
          }
        ]
      },
      {
        "id": "467f7169-b0f7-42ee-86d2-73895f8afd3b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b953bf0e-18e7-4b4f-bd91-49dae9b65d23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddd27548-d9b9-490b-a680-86ba58d8ace3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03c9c71d-80fd-4fe1-b905-ba2e1d2a8f8f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67d9015-c2e7-429d-a90d-57b7eb502d0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bae0bd4-3edc-4ae6-9f3c-e8148fae9658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb0f33f-e29d-4dac-95dd-c3ee037a3118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b407971a-dc5d-479e-8ea9-5df07d8bb575"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20f05772-0ea1-4e4a-82cf-f877e1d88f0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ab437ce-61ef-40df-9977-9147bd203074"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2b2e836-adf0-4cf9-a287-623e03e5226f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63bec057-f712-4b88-b66d-3c67150d065a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2190ae2e-9210-4366-a45e-7be967da3689",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a551f2a2-093e-46ad-9b76-658eac37f656"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eed39abe-3b80-490a-aa8d-622291c5f87b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "306e28ac-e4e3-494a-bf44-9bb92d5855e4"
            }
          }
        ]
      },
      {
        "id": "eba5edf7-9642-4b64-b8eb-58116a2ed456",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "99ee97b4-e71f-40a6-9a80-4161b000637a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f06cd8ae-6b30-4ff4-88a5-8f9d42b04279",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "957d6170-da66-4885-982e-685b7c37c8ca",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125a9d1d-4f7c-4710-9f02-ee4238e1c06b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca247b5d-49e7-4961-88b0-08e6d5c3e235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5007387-1428-40cf-b440-b685d267013b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f76f98de-7c3c-4cfd-ac93-fcc7d50db2f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b3385a3-cad2-4614-ae2e-0d73f233dfd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71002f95-338f-48af-938e-5c9dfa55b541"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5007eaad-8efb-4e0b-995a-05fa6f2dc0ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0c6defe-dc9e-4a41-8828-3523507cea90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23c1cf4f-3803-4c73-81b4-998623b8339a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dbed1a16-3a6f-42cb-93a8-8efb584a97e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e348b23-909f-47b3-a9f1-395ea27b8b11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d182918-9794-4890-bfd7-5b9ed048312c"
            }
          }
        ]
      },
      {
        "id": "e68a20a0-b921-4169-974b-2ee946a0bb6a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e77308d8-2073-49d6-82dd-5b4a1c4168d2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b822513-7384-45de-9d94-e8fba1f31300",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "42e14f22-0a3a-4b14-9169-848d5a71398b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7d17556-96e0-40f8-9772-e1bedd24f519",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a0207e6-dab0-4758-9dc7-179c0c323785",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.02105263157895,
      "responseMin": 14,
      "responseMax": 278,
      "responseSd": 24.301171272343115,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697762019419,
      "completed": 1697762041730
    },
    "executions": [
      {
        "id": "26692e88-cd75-45b5-ad14-17d026ff48e7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d1937c6a-fed3-4782-af9e-a9fbef6edcd7",
          "httpRequestId": "2e475228-1b3f-4c4f-bdfd-3f33055b881a"
        },
        "item": {
          "id": "26692e88-cd75-45b5-ad14-17d026ff48e7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "57843810-3547-42eb-97d6-f50dc10b5e95",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 0
        }
      },
      {
        "id": "e9ff3b57-94dd-48a9-99dc-054ac182bceb",
        "cursor": {
          "ref": "06242ec9-fab2-47de-899c-b114ad917357",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dadf2661-7f9b-4053-aef4-0210d0470a7f"
        },
        "item": {
          "id": "e9ff3b57-94dd-48a9-99dc-054ac182bceb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "100ff04c-fa1c-4ee2-94fc-238202b430a8",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "0e37e8de-4f76-4bfc-8730-1a94a2c64f36",
        "cursor": {
          "ref": "34934ffc-47d1-447b-9a78-34a46f468c58",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e3a7e585-ba08-42f2-b308-1a311dc79268"
        },
        "item": {
          "id": "0e37e8de-4f76-4bfc-8730-1a94a2c64f36",
          "name": "did_json"
        },
        "response": {
          "id": "311db03a-9e1c-4521-9ad1-8724a6aeceb0",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ffaa53-ba60-4a90-837c-16aeee02438b",
        "cursor": {
          "ref": "6aba2c95-45ee-4272-b427-5908eeb0954f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c87c1103-2b94-4dff-b9c7-7b4b24b3db49"
        },
        "item": {
          "id": "45ffaa53-ba60-4a90-837c-16aeee02438b",
          "name": "did:invalid"
        },
        "response": {
          "id": "79a046e9-9844-41b7-ac3f-a9140eb2b234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ffaa53-ba60-4a90-837c-16aeee02438b",
        "cursor": {
          "ref": "6aba2c95-45ee-4272-b427-5908eeb0954f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c87c1103-2b94-4dff-b9c7-7b4b24b3db49"
        },
        "item": {
          "id": "45ffaa53-ba60-4a90-837c-16aeee02438b",
          "name": "did:invalid"
        },
        "response": {
          "id": "79a046e9-9844-41b7-ac3f-a9140eb2b234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fc3c91-7314-4b16-8a33-51ce2532007e",
        "cursor": {
          "ref": "b21a9f09-81c5-40c8-844a-fdb9fc534acf",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9c8f1a68-3987-444f-a140-a144252ce941"
        },
        "item": {
          "id": "a8fc3c91-7314-4b16-8a33-51ce2532007e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "92755514-d1bc-415b-9e20-219c14513730",
          "status": "Not Found",
          "code": 404,
          "responseTime": 78,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22656c24-6a9f-4a02-9afa-5e3da4400718",
        "cursor": {
          "ref": "61a7b9e3-62bd-45b8-9ae0-8fd40299e251",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "04ca3767-691e-49d8-893e-c60b7cbf6e78"
        },
        "item": {
          "id": "22656c24-6a9f-4a02-9afa-5e3da4400718",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "43a4955b-b8a3-4b64-85ec-2ac9f4a7cc98",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed7b1fe-213d-4c67-955b-9abdfc593c9c",
        "cursor": {
          "ref": "2e9e2b38-e870-43a8-8b28-700d59e6fb37",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a7b1c700-a1a1-46a4-9589-d58f78401573"
        },
        "item": {
          "id": "9ed7b1fe-213d-4c67-955b-9abdfc593c9c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e7c95a9d-c12b-43ef-ad70-dabb42e95103",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5eba26-ee5e-4250-a5dc-7bb521e87c8e",
        "cursor": {
          "ref": "7b0d8a97-a68d-4863-97a7-5e8aba34b5f0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "67e62f7d-f3ec-45a5-86f4-b73644797d02"
        },
        "item": {
          "id": "fd5eba26-ee5e-4250-a5dc-7bb521e87c8e",
          "name": "identifiers"
        },
        "response": {
          "id": "d6bb8478-d6c6-4821-a770-2e05b5ad2587",
          "status": "OK",
          "code": 200,
          "responseTime": 253,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd381994-44d2-47ea-a545-f89ed5cda45b",
        "cursor": {
          "ref": "a5bf9b63-4fea-4ae7-9d59-4d2c574bdef5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4274e9cf-3fb0-42a2-9dde-9dc51d177670"
        },
        "item": {
          "id": "bd381994-44d2-47ea-a545-f89ed5cda45b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0606d2c1-c99c-41f2-93bc-40ea9db6d5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58ac608-b3f0-4418-aca1-1b156346ffa0",
        "cursor": {
          "ref": "d4fec37c-9cdf-47b0-8a67-7c471d710172",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e59a57e5-efee-43b7-ab87-6d4e11452b6f"
        },
        "item": {
          "id": "d58ac608-b3f0-4418-aca1-1b156346ffa0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "551253dc-ad5c-4d4b-9d8b-d637c7ab3606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd047aa8-51bd-4e47-9913-9c1ddd7f91f4",
        "cursor": {
          "ref": "9cc6aa15-aae6-4fed-8565-17e9c466622a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2939fbbc-4006-4bd7-b740-b7659f639dcf"
        },
        "item": {
          "id": "fd047aa8-51bd-4e47-9913-9c1ddd7f91f4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "16358b5d-17fc-4c89-8ee7-33cc49e38fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3882d6-874c-4aa1-848d-98e0aacf9f46",
        "cursor": {
          "ref": "bc794aef-4b95-43f2-b77c-b2af6ee0b856",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f1f2e431-c95b-4d2a-996f-7fa9d57a82ca"
        },
        "item": {
          "id": "da3882d6-874c-4aa1-848d-98e0aacf9f46",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4df34075-6209-4f8e-8af3-a92622c38e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28994259-1520-4974-9369-904d5abb062f",
        "cursor": {
          "ref": "a237b2c6-f760-4650-8d2e-0502e478d62e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0f891c55-22bf-4d84-814f-a6caf57e7f15"
        },
        "item": {
          "id": "28994259-1520-4974-9369-904d5abb062f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "886d226b-2b45-486d-819e-a37f9470cbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a36a7e-019d-4a10-9249-05915a0cea9a",
        "cursor": {
          "ref": "838686ea-a1ee-401b-9e47-469afc379bd5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "026760da-6f2d-436f-961a-a346edf24655"
        },
        "item": {
          "id": "06a36a7e-019d-4a10-9249-05915a0cea9a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "da4ab45b-0388-407f-b332-ea5c40f2fef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880d034b-c17d-4986-9a9d-59d4f730dd76",
        "cursor": {
          "ref": "0491091b-a9b4-4d7a-bc57-cb08e8fdc261",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dcc26ef9-f297-44cc-9854-24550f7378c1"
        },
        "item": {
          "id": "880d034b-c17d-4986-9a9d-59d4f730dd76",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f3959513-f2ff-4bc2-a3ff-c3a5e9048392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6bca84-87ae-4b06-8dcf-c9d1f3027fa0",
        "cursor": {
          "ref": "86420cff-2eaf-4642-b81f-bb82c1e67e3c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4de84ae9-51ff-4cf2-b3dc-48eb6a15641f"
        },
        "item": {
          "id": "5d6bca84-87ae-4b06-8dcf-c9d1f3027fa0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "09bedf95-a594-4168-af16-31e5f10cd616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9e4eba-7ad5-43bb-b347-2708f19da2b4",
        "cursor": {
          "ref": "eaaa2949-fe69-4f74-b7a7-8510d2258a88",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c3e0e106-70c7-4c9a-b94b-b7433f6b2792"
        },
        "item": {
          "id": "5c9e4eba-7ad5-43bb-b347-2708f19da2b4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6265bfac-ef82-4917-8686-2d6c49263090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c0cd0b-a844-496f-92b8-55167512d6aa",
        "cursor": {
          "ref": "4bf8b00c-f98e-449f-8f82-5f3598bd1408",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e5dc4464-ad93-4ecb-85a4-a1f7f9275cfa"
        },
        "item": {
          "id": "02c0cd0b-a844-496f-92b8-55167512d6aa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0a269ab1-698f-45b8-bdb5-a32fc4b6cad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de88846f-c229-43c2-b67e-bd6b93a2cf83",
        "cursor": {
          "ref": "1e8a7ab9-b533-477a-a4a1-ff0056a01935",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "55f6b7c1-11e5-428a-a3aa-8384056c7051"
        },
        "item": {
          "id": "de88846f-c229-43c2-b67e-bd6b93a2cf83",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6502479c-8326-49c0-bf42-94a36ac66f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3608db0b-7b56-4dad-ba3d-27bb0ce21e52",
        "cursor": {
          "ref": "004c9161-583a-4d4f-b3bb-04c4d1c47dd2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ce673cef-eab0-435b-a5b5-16c8d892006a"
        },
        "item": {
          "id": "3608db0b-7b56-4dad-ba3d-27bb0ce21e52",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "61a2e68d-d805-4f6b-8131-68c794fd7064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ad9fbf-f0ea-49e9-95b2-635eacf952cc",
        "cursor": {
          "ref": "3283977d-a81d-4735-b33c-3743f53b5fdf",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e6b1f634-8e1e-435d-b15f-db26119ff952"
        },
        "item": {
          "id": "f1ad9fbf-f0ea-49e9-95b2-635eacf952cc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6cfdd2f8-e585-4acd-a922-bfba6ece6df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b85b6ec-f114-4934-9e7c-8ae93ea2c520",
        "cursor": {
          "ref": "6848a202-ab35-415c-b300-96f91145c89d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "41e3539a-03ac-466f-8854-2ee2bcf0e26b"
        },
        "item": {
          "id": "8b85b6ec-f114-4934-9e7c-8ae93ea2c520",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4d5cef03-248b-4d85-a1dc-a49cfa412f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043f8a08-0576-43a6-8ee7-eac2b25c3ec2",
        "cursor": {
          "ref": "a4958820-7683-4928-b1bb-adb4d76659a0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e85bc4ad-927c-4710-9b9c-2b8d13f99b61"
        },
        "item": {
          "id": "043f8a08-0576-43a6-8ee7-eac2b25c3ec2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "89a51534-f161-4c7a-9751-196a7c071546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5650cd6-914f-4390-a8f5-5408f2b4023e",
        "cursor": {
          "ref": "84ea6527-e7ff-4bb3-9ec8-d0185acc5425",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "32bdadfc-b8fa-440b-82da-cf038e68e11e"
        },
        "item": {
          "id": "d5650cd6-914f-4390-a8f5-5408f2b4023e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2cd663b1-90d8-4914-aa16-f09dcabf615c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f375c4b-6a35-438e-95f2-4912e3a58640",
        "cursor": {
          "ref": "c83d8068-2e54-44c1-b99c-9b28c28cab3b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0dd0543a-0967-4fee-a42e-529e6218e655"
        },
        "item": {
          "id": "2f375c4b-6a35-438e-95f2-4912e3a58640",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2805fd2-be4d-4ab0-8de8-335fc5c1816d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1e0b2c-1cef-4fab-8aba-83b91e49c90d",
        "cursor": {
          "ref": "08cb38d6-129b-4c75-87ce-3b95ccf7f7dc",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0bd7eaff-b07f-4b16-b1d9-0bf1436b1009"
        },
        "item": {
          "id": "5f1e0b2c-1cef-4fab-8aba-83b91e49c90d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c2031821-361f-43f1-94c5-6a4442095c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7016db-8142-4bf1-9bbf-048d09c6cc8a",
        "cursor": {
          "ref": "66b7f255-42d7-4362-830b-eb9c2e1d66e2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ca061003-be2f-4e7b-b2b6-789464aa6cf3"
        },
        "item": {
          "id": "4b7016db-8142-4bf1-9bbf-048d09c6cc8a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "848d9c8a-efc7-41fd-9948-f1456a58e840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0372e0b-6749-4ec3-b6bc-d64de263cf53",
        "cursor": {
          "ref": "04393315-4c00-41ad-bf7b-54af8554f79d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fe67fb72-be9a-412a-9f7c-db312e0c6329"
        },
        "item": {
          "id": "c0372e0b-6749-4ec3-b6bc-d64de263cf53",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f6f3e923-f854-4172-8cc1-6782a9941e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e03fb3-9e9b-4596-a89d-c2683dfe7be5",
        "cursor": {
          "ref": "b210e7b6-972d-498b-b3c3-d0d4e7dad426",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ac582b74-d91f-4159-9614-aa2a3b276ecd"
        },
        "item": {
          "id": "98e03fb3-9e9b-4596-a89d-c2683dfe7be5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "35504116-deb8-4b29-8ee4-60debf07ef05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8c56b2-9a21-48c1-86dc-01e95148a2fd",
        "cursor": {
          "ref": "40fa670f-8a69-40a2-b2cf-25d4fd9bfb65",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "efe01ec2-4e22-448b-90ea-09465dc0fba9"
        },
        "item": {
          "id": "dd8c56b2-9a21-48c1-86dc-01e95148a2fd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e8a44ce3-a991-46cb-99fc-e7a8237138d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f98d3a-f4ba-4994-8d9d-033e8a902fbb",
        "cursor": {
          "ref": "9d9b34d6-aabc-415d-b969-385e44be1cc0",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ba2f4227-dcf2-4915-a8a4-5fca0177c75c"
        },
        "item": {
          "id": "a9f98d3a-f4ba-4994-8d9d-033e8a902fbb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "49328457-3143-4ab0-8195-3a15247690a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943d2f42-7470-425c-845a-6a4a7effb58e",
        "cursor": {
          "ref": "421a608f-7ed3-4e08-a6aa-ef1dbe8503c2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d3de157a-b7b8-48c4-9c28-33885fc32d5f"
        },
        "item": {
          "id": "943d2f42-7470-425c-845a-6a4a7effb58e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "30a55480-e900-41b9-a5d0-45d007876321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e352cb1-0ab7-4e6e-9d80-2d2f9b02fd6c",
        "cursor": {
          "ref": "3997ecd9-dfa5-4340-b0a1-f52832b48b12",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e19feb9e-39dc-4c60-bff2-9b2f9f69dc61"
        },
        "item": {
          "id": "0e352cb1-0ab7-4e6e-9d80-2d2f9b02fd6c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c39ba391-5bc8-40e6-9c71-90e868d17cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ff186c-fa31-4a3e-8d00-d9c21f7ac294",
        "cursor": {
          "ref": "480a3f3a-77ca-447d-88e6-29bc32617383",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fe257877-7af3-4c7e-9e97-62bea467f80e"
        },
        "item": {
          "id": "59ff186c-fa31-4a3e-8d00-d9c21f7ac294",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "561ca5d4-3c2f-4d35-9437-3c62748b437b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3de2240-e119-40d4-a4c2-4a749228e10b",
        "cursor": {
          "ref": "47fb3226-bed2-4c1f-b0a0-08037c48b8ec",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f1b0845-689e-4dc7-8f04-399e00dcfb29"
        },
        "item": {
          "id": "d3de2240-e119-40d4-a4c2-4a749228e10b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2e669200-d07e-4b23-a54a-3aa52e65e559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a245b6-a26f-4411-8b76-944eecc0e12d",
        "cursor": {
          "ref": "688d6349-1b3b-464b-9804-26fdd5ae3bcc",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a1828f17-c71d-4cf0-b9f0-36b6c63755ac"
        },
        "item": {
          "id": "92a245b6-a26f-4411-8b76-944eecc0e12d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "252c19a6-2fe3-4eac-90e7-efe7c8dfacfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd86def3-2614-4a3a-a5ac-072f6d17c240",
        "cursor": {
          "ref": "e7a3269b-43a0-463c-8781-f7494b2dcda0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "53f9bd2c-d833-4ace-9027-b9672d0ba129"
        },
        "item": {
          "id": "fd86def3-2614-4a3a-a5ac-072f6d17c240",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e1834470-21a8-4e3d-9fd3-cca992bb6df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedbff80-c2eb-41a6-b1f3-c76aec95c0f1",
        "cursor": {
          "ref": "9cfdb985-d63b-4c52-b1b6-bccf0d55633d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d3aebb7d-67ed-4fae-b930-3e488bb45859"
        },
        "item": {
          "id": "fedbff80-c2eb-41a6-b1f3-c76aec95c0f1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b0f7d21e-ad9b-40f9-812d-a63431401390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56a48f4-e7b7-456a-9a9f-20dc93af0590",
        "cursor": {
          "ref": "89a8a40b-fba7-41c6-9a4a-f6f581340137",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "375b27f9-11d0-4d16-af71-3dd9802806ab"
        },
        "item": {
          "id": "f56a48f4-e7b7-456a-9a9f-20dc93af0590",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d6b0d869-0499-4bfa-8691-b09997f62b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13322177-95b1-4f8b-a988-d8c88fec66f1",
        "cursor": {
          "ref": "c1d6dc5e-6bfa-41e1-8df7-aa4b50b4c862",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "54cfb89b-eb15-4a81-9ecf-3ca78de56c5c"
        },
        "item": {
          "id": "13322177-95b1-4f8b-a988-d8c88fec66f1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "88bf9685-f4a5-40a1-b632-3c26fd7c121e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a7f3ea-d913-419d-b366-2f046f1faa0f",
        "cursor": {
          "ref": "55b5aa11-8d81-4764-ab35-5e1322143d5f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f20cfd38-f6f5-43ff-8605-b22aba9a4465"
        },
        "item": {
          "id": "77a7f3ea-d913-419d-b366-2f046f1faa0f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "80d1fa65-5f26-46dd-ae26-21d07d879ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bfea95-88e0-4e8b-b239-3a7151be8b90",
        "cursor": {
          "ref": "d133c6e9-f11b-4bec-960a-37b3109d624b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09e65cf9-7e25-4193-bdcd-1855ee9a5a7d"
        },
        "item": {
          "id": "b3bfea95-88e0-4e8b-b239-3a7151be8b90",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c6094215-5ccc-47ce-8dfb-85587cc2a892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9102cf6-0998-41c8-ae06-8357db0a57e9",
        "cursor": {
          "ref": "72e1cd86-d2db-44b0-93bc-187300882fe5",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "317bd6db-bed7-4020-b252-aa71f669c42b"
        },
        "item": {
          "id": "f9102cf6-0998-41c8-ae06-8357db0a57e9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8f0b5ba8-34b3-485d-a6c6-7baf5fb3691e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900b7265-7bba-40e9-b4ed-7f9025bc02d8",
        "cursor": {
          "ref": "6d130b61-183b-4d1c-835f-afc68131fbbe",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "de70867a-629a-41ee-a498-20627996df37"
        },
        "item": {
          "id": "900b7265-7bba-40e9-b4ed-7f9025bc02d8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8b3f3d38-0dbb-4d82-a48f-c0adaf2030fe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290afa0f-348e-4757-b1a3-7c9c735a3f30",
        "cursor": {
          "ref": "0afc3db8-790b-4acd-9872-9b84302af60a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0f997cfb-c0b7-4136-b791-73a1b17cdfcd"
        },
        "item": {
          "id": "290afa0f-348e-4757-b1a3-7c9c735a3f30",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "39463858-849c-48e4-9a35-f2df916f3138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4913b2d2-f066-4bd1-9bfd-b81e431e3cae",
        "cursor": {
          "ref": "86d1ccdf-b046-4e0a-810d-d3a0e0213a24",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "36d4b52e-db78-44ab-89fc-d803386cc8a9"
        },
        "item": {
          "id": "4913b2d2-f066-4bd1-9bfd-b81e431e3cae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c99391dc-9370-4631-9008-a32507ef7764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8decc04c-74c7-4389-9197-f10df475a6ad",
        "cursor": {
          "ref": "e1bb9b76-461e-4451-92b0-cc155a5fa194",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ffa368ae-6a95-4265-976b-2e0e87d15eb0"
        },
        "item": {
          "id": "8decc04c-74c7-4389-9197-f10df475a6ad",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6a02b297-a712-48ef-940d-7d666d4da103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569b078f-238f-4e23-949b-7551f2fc1d87",
        "cursor": {
          "ref": "ffde3bc6-3ea3-4d39-9ef9-46720c020731",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eb0a204f-8968-4309-bdb4-5011153473b3"
        },
        "item": {
          "id": "569b078f-238f-4e23-949b-7551f2fc1d87",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7b4a40ce-7aa7-4c38-927b-99e87baf0bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9ae712-e9b9-4a68-b23e-e65619ed60e5",
        "cursor": {
          "ref": "ec92d459-ef5f-4208-a171-e4cf1dd1b571",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5a10b41b-7444-4bc1-88c0-b988f8a58638"
        },
        "item": {
          "id": "ea9ae712-e9b9-4a68-b23e-e65619ed60e5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b99e41b7-1013-4d98-952b-22a057116568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaac59eb-80ef-43c1-a0a6-752e5aebb7ad",
        "cursor": {
          "ref": "14e76a90-8417-45f4-9c7b-3372a7ae1648",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "57a6ebef-41f0-4a34-a585-d27ca0e9f4e8"
        },
        "item": {
          "id": "eaac59eb-80ef-43c1-a0a6-752e5aebb7ad",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9c3cceb6-21cb-4522-9e34-4d0e505d5183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cc0154-9139-41b0-b29f-b3945a2af683",
        "cursor": {
          "ref": "3f788778-5eb1-4136-82de-6e60ea082047",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8e6f625d-f2e1-4ece-8042-956e61ba9e16"
        },
        "item": {
          "id": "12cc0154-9139-41b0-b29f-b3945a2af683",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c97c3328-0c27-42ae-8f17-b18a2afb14f7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8383982d-5474-4247-a5fa-eedfac578215",
        "cursor": {
          "ref": "2badd314-5e35-43de-95f9-c39faf8e4ff8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d7018204-e2eb-496c-a9ce-b961f4431a09"
        },
        "item": {
          "id": "8383982d-5474-4247-a5fa-eedfac578215",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "641e9338-a45f-494d-b0cd-eeb0544cba4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b7d76f-a5e3-46e5-923a-34d79a9ad40d",
        "cursor": {
          "ref": "468549e7-8ecc-4d3f-9132-7051c3fce5e2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7cddb720-50a4-49df-baee-78fcb054b2ba"
        },
        "item": {
          "id": "a9b7d76f-a5e3-46e5-923a-34d79a9ad40d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ded3a3b2-519e-4993-bcd9-20ba8f03f89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba233bd-d56c-44ad-b7d4-286bf1ade3a5",
        "cursor": {
          "ref": "f4ee3b5a-a9bf-4f20-aa08-d07e89b140c4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c6109044-cc15-43be-ae33-995d50a8fdde"
        },
        "item": {
          "id": "dba233bd-d56c-44ad-b7d4-286bf1ade3a5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3c2f639c-50be-4ab9-abf5-f17a362ea021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156cdd27-d42e-4c78-92ad-348ab1d4b343",
        "cursor": {
          "ref": "6fe45f1c-b131-46e4-90f8-bf305268c64f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fc0fa1d0-7d26-4142-a4ea-a67f7d30aefe"
        },
        "item": {
          "id": "156cdd27-d42e-4c78-92ad-348ab1d4b343",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "01bfcbe5-0df1-4c85-822f-c7da16fcd56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf30347-c952-493a-9149-bc8d4a2e5176",
        "cursor": {
          "ref": "3e50565e-d5d6-44db-9177-1e19783d7d1a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "37a045c4-37d3-4bf1-99c0-47e11d216bad"
        },
        "item": {
          "id": "bdf30347-c952-493a-9149-bc8d4a2e5176",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c0cb8350-590e-4384-a210-c2f07cf1d1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01806f9-3e49-4896-b37a-bc95ecef3cf6",
        "cursor": {
          "ref": "883c4dda-14bf-42f0-bf85-a5b95343b28d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "40da843d-3cda-4af4-b4cb-b9cb5da3388c"
        },
        "item": {
          "id": "b01806f9-3e49-4896-b37a-bc95ecef3cf6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0ddeb468-134a-4705-82a8-c5b0ee34de6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4599835-d9de-43a0-95e9-1aaef9372438",
        "cursor": {
          "ref": "2cc115cf-5592-420e-8f8d-c0dfa0d92317",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0b34a9f6-5713-46e8-96ad-b04b7605c0ca"
        },
        "item": {
          "id": "b4599835-d9de-43a0-95e9-1aaef9372438",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fc998c12-3ad7-4b08-9c10-b1a726753b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3625d767-87e7-4220-92e0-7b6500e68062",
        "cursor": {
          "ref": "696b70f0-a0c6-49a3-b1a6-915ac406cdf4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "84edaa91-5d40-47ba-846e-d5c166183bc4"
        },
        "item": {
          "id": "3625d767-87e7-4220-92e0-7b6500e68062",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6ec9139d-b609-404c-b367-da821b108611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100c9b0e-2e59-4af5-8608-001c698776f3",
        "cursor": {
          "ref": "1c0f9f12-83ab-41b2-8dbc-9363bfbd8d0a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4690ae0d-b3ba-4c03-ba0f-3ac938ddbe79"
        },
        "item": {
          "id": "100c9b0e-2e59-4af5-8608-001c698776f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ec45ea98-6acc-4e76-8343-e5f55c7d4871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dc5330-115e-4788-8532-387f7197b25a",
        "cursor": {
          "ref": "d31ca711-fdec-4c40-a771-6cc17491d889",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d7f9d605-ae81-4ae6-a98f-eb1a1b2668a1"
        },
        "item": {
          "id": "62dc5330-115e-4788-8532-387f7197b25a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6e7876e6-f655-4185-a67f-1a35979f0514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4adee92-d9bb-4046-ba16-80e5b0fbf15d",
        "cursor": {
          "ref": "1b6ecc10-0b54-46d7-9f81-8188773661a8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fc019af6-6a78-45bb-ac90-6b9841527f00"
        },
        "item": {
          "id": "e4adee92-d9bb-4046-ba16-80e5b0fbf15d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8e596699-850d-4bd9-81f7-10526c4869ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a240a16f-9eab-463e-b9fc-a5727386471e",
        "cursor": {
          "ref": "bae556a0-1f84-448f-a015-6635feb42227",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b717c0da-9521-4651-9902-72178ab286dd"
        },
        "item": {
          "id": "a240a16f-9eab-463e-b9fc-a5727386471e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "85e69914-6f4c-46a2-9d10-9a3cb487ccb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf117fd-8878-45a5-b5f5-520ab7fba2fe",
        "cursor": {
          "ref": "56188ebf-fd0c-46b6-a984-66539cba7662",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "08976d69-1dfd-473d-9b93-de0f3a4b13c9"
        },
        "item": {
          "id": "ecf117fd-8878-45a5-b5f5-520ab7fba2fe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "16164708-d872-4476-8271-3bf4413abd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4f7a1f-c535-42c8-94e2-d5a9856322fd",
        "cursor": {
          "ref": "a95e8371-fca5-40b9-b70f-f41bbe329af7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2637f97d-a0ce-4787-9d44-3f7cc76bd172"
        },
        "item": {
          "id": "eb4f7a1f-c535-42c8-94e2-d5a9856322fd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "04f13510-6c56-43c7-9bec-ca451e70a6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f49ceb3-15e1-44f6-84f5-fcd0060c3244",
        "cursor": {
          "ref": "f96c1f7c-4279-4e36-8e1c-839c45684167",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "051b999d-51dc-4cc9-a4cb-99cca4d5bf64"
        },
        "item": {
          "id": "7f49ceb3-15e1-44f6-84f5-fcd0060c3244",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bcc72eb3-e9a0-4d75-8868-756186871637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7984059b-5139-422e-8f39-b1783cccb603",
        "cursor": {
          "ref": "16b7cdad-d61d-4b76-afdb-ae07d92ced22",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "59b11300-9eed-457d-a050-69457764cdcd"
        },
        "item": {
          "id": "7984059b-5139-422e-8f39-b1783cccb603",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "92c009ba-0da8-47d1-bb11-b877fc9303a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacac16d-471f-4419-83db-e4234101fde1",
        "cursor": {
          "ref": "3041e8c0-61b4-44b5-bd42-2ee114ff7d8e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "91bb8ac2-c589-4f7e-820c-3596a5905317"
        },
        "item": {
          "id": "cacac16d-471f-4419-83db-e4234101fde1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ab9d1621-a4f5-4eb6-b418-dd6711807f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff5c29f-f93a-4661-bcfa-943b3d433813",
        "cursor": {
          "ref": "905da721-6dea-4b47-8a4b-80c32fc46108",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8a08134e-0b58-477f-8d2d-cd3e6f24fc46"
        },
        "item": {
          "id": "bff5c29f-f93a-4661-bcfa-943b3d433813",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8eb263b8-8f82-4ff0-88a6-ebf3860a4b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42a949b-8678-4cde-830c-0262bd63ad93",
        "cursor": {
          "ref": "01dec00b-238d-4bc2-96bf-68a027e56da0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "892006ed-a78b-45bc-b44f-cf88b5038ea6"
        },
        "item": {
          "id": "d42a949b-8678-4cde-830c-0262bd63ad93",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "359fa4a2-ae55-4890-9308-8f6c26647571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf885526-5ee9-4024-af32-c1a0bf11a2ca",
        "cursor": {
          "ref": "0c8a2589-e738-4f73-90f6-8103607d3c3e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e2d683a3-01bf-4975-b4da-729ea194fcee"
        },
        "item": {
          "id": "bf885526-5ee9-4024-af32-c1a0bf11a2ca",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1e2e8bee-22d6-4243-82e5-f547059d6158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4acbdc-9c2b-43cd-8f04-dab3e4e1b839",
        "cursor": {
          "ref": "0a251a06-6bd8-4cce-8e6a-5290699bb274",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b42db81f-b1f4-44e7-8e5f-82fbbcbac6e7"
        },
        "item": {
          "id": "ff4acbdc-9c2b-43cd-8f04-dab3e4e1b839",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ccb98bfa-6d30-46da-92f1-f3b9d6657db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff3ef4a-ab6c-44c6-9f96-72a7e8afac4a",
        "cursor": {
          "ref": "2472e8f5-3f63-4bb3-bebb-94afec6f8443",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "181de1fd-8068-4ca9-afc8-8852b577bd42"
        },
        "item": {
          "id": "4ff3ef4a-ab6c-44c6-9f96-72a7e8afac4a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "69cf26b7-5f73-4040-b57b-5a835a759786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acde7153-75ae-41c2-93ac-aceb60da6b6a",
        "cursor": {
          "ref": "85d57d9c-0012-4854-83d5-d14306e14cce",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a93998a6-a87d-46ae-84b3-ee20e31e3e5d"
        },
        "item": {
          "id": "acde7153-75ae-41c2-93ac-aceb60da6b6a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "90fd46e0-4490-4d12-9506-4f0a64022b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdbd6b2-c492-45f2-9585-4b6c8aa2ced2",
        "cursor": {
          "ref": "a9fb5985-e07f-4b19-aea6-48afa6e35d59",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "be900a98-4d94-4006-a158-5fe169cecff9"
        },
        "item": {
          "id": "fbdbd6b2-c492-45f2-9585-4b6c8aa2ced2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cd4f0716-c823-436f-be8c-7a08bdf59e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c253898-c0ea-457b-8952-9d4f60e827c8",
        "cursor": {
          "ref": "d84a44c1-863f-4d34-b0e1-eb901e19bdc3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "15db2133-8bc1-4b83-b2fb-283b26752b5d"
        },
        "item": {
          "id": "7c253898-c0ea-457b-8952-9d4f60e827c8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2df1a5bc-5d5c-4164-827c-1aa1efe2310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c4358b-8698-4c1b-81b0-514153686908",
        "cursor": {
          "ref": "f4689dd0-34f0-437c-8d0d-802298973fca",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2e5ddd75-b36b-4330-97cc-ba009222af58"
        },
        "item": {
          "id": "a0c4358b-8698-4c1b-81b0-514153686908",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "60f1b194-6f10-405f-a2ed-f9173203733c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51287572-b2d5-4c30-bdd7-ff2fb276531b",
        "cursor": {
          "ref": "d19be3d2-c30c-47da-b161-b3f63245b704",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ff3ea53f-d367-42b8-b034-921064265768"
        },
        "item": {
          "id": "51287572-b2d5-4c30-bdd7-ff2fb276531b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e39b317d-8fdf-490e-8985-3e2059927bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a015cea-f59f-498c-924f-36d39342f420",
        "cursor": {
          "ref": "bed08346-a28e-4e01-b482-3d397bc7734e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b630132c-3977-4c0a-8b02-00d226cfbc48"
        },
        "item": {
          "id": "3a015cea-f59f-498c-924f-36d39342f420",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "439a4552-9592-4be2-8fff-47bc12dbbb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f977a8-19ca-47d1-999e-d15681335709",
        "cursor": {
          "ref": "653b0351-d53a-49da-9373-58e194cf483c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a352ec36-c330-47b6-a3c1-1547c8e65b2d"
        },
        "item": {
          "id": "e8f977a8-19ca-47d1-999e-d15681335709",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f9f5ea2b-16db-4129-819e-b8322d7d7698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc88507d-99d6-41a4-817d-668c770ee9e7",
        "cursor": {
          "ref": "bc286f98-7422-4e75-9ea5-a6f9b2236596",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6cc613a2-26ee-4af1-b0b6-13dadbd6c099"
        },
        "item": {
          "id": "bc88507d-99d6-41a4-817d-668c770ee9e7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a0a19be2-49c0-4f3c-873a-d3375f900b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2702189f-7258-4eab-afc1-e169a574beb5",
        "cursor": {
          "ref": "9ae9b601-a123-40b3-bed5-8def43a13b36",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d97d13ac-2866-4289-9d52-51249f06a5b2"
        },
        "item": {
          "id": "2702189f-7258-4eab-afc1-e169a574beb5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "255a108c-3bae-4617-9b7f-67f8d856e88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1872199-4f90-48f7-8425-0eca459f51d4",
        "cursor": {
          "ref": "4ab97cf5-3ed9-4790-b8e3-f42a32c39b74",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0fa9b3d7-0cef-419a-9819-3e4bdbf254d3"
        },
        "item": {
          "id": "e1872199-4f90-48f7-8425-0eca459f51d4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c0d815e3-e726-4f7b-bd1e-de386fb43312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9901e4-23d3-4513-9695-c94d93596cbe",
        "cursor": {
          "ref": "bb304b04-2f3f-45a7-b72e-062819749718",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fa08ff25-aae4-4de4-a1e8-fd2b01c61409"
        },
        "item": {
          "id": "9e9901e4-23d3-4513-9695-c94d93596cbe",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9078add6-a34d-45c6-88d4-8045d4cac47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b9d714-99f3-4f82-9257-42b7db03d946",
        "cursor": {
          "ref": "c9b784b5-bd6a-4371-afca-60889374fc1f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ae7a5def-deb8-41ee-8160-826345a3c0b2"
        },
        "item": {
          "id": "27b9d714-99f3-4f82-9257-42b7db03d946",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cc6ba1a5-1fef-4489-8507-6ac1f6bf9350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521c9b0c-3b30-4094-bfca-6f6123c1521c",
        "cursor": {
          "ref": "d3e5dfe2-5c03-4b76-9003-b7085c2a3eee",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5fadc857-9cee-4581-ad2e-5dd1a60186a7"
        },
        "item": {
          "id": "521c9b0c-3b30-4094-bfca-6f6123c1521c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d99a009f-7f14-4195-ac96-bed3666af92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d4fee0-c0b6-478d-9414-30525c327dfe",
        "cursor": {
          "ref": "9d3e94f9-e5da-4092-8223-4b0425bd5ef4",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "74cb880e-d2ca-4f1d-8b97-4b0698b2c29d"
        },
        "item": {
          "id": "14d4fee0-c0b6-478d-9414-30525c327dfe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7913e233-e008-4f20-b755-6751726cad18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b0d0db-7394-4996-a5f0-bf2fc66206a2",
        "cursor": {
          "ref": "0f9f5fb8-e362-4869-b24b-6858b028d587",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "17a37f22-bb38-4013-af08-ef676ab9a070"
        },
        "item": {
          "id": "b2b0d0db-7394-4996-a5f0-bf2fc66206a2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b57fe83f-787e-43d7-865b-4d9fd10f3853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44132937-4cd6-4b24-9e19-12ff8f0b2e1a",
        "cursor": {
          "ref": "d554c1bf-899d-4ec5-8520-6403d338d54b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b70e90f5-97e2-4de9-b3e7-aaa12869a868"
        },
        "item": {
          "id": "44132937-4cd6-4b24-9e19-12ff8f0b2e1a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5134f610-85c3-46ff-ab1e-53f41d2a2b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c74929c-567a-44d0-8ca7-342447c1de4d",
        "cursor": {
          "ref": "71019810-2e46-440b-a3d0-22393a7b4473",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5eca2ee8-a11b-4e03-a857-33c4d6ef17bf"
        },
        "item": {
          "id": "0c74929c-567a-44d0-8ca7-342447c1de4d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "05f50082-a87c-4744-af90-d7ddbb83c3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92f1851-a94f-4f1e-aca7-402baefa7b64",
        "cursor": {
          "ref": "d4112612-7022-4a4d-9675-9623dbecd943",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b6f6b80b-b724-4fde-ae07-4857c992c50a"
        },
        "item": {
          "id": "c92f1851-a94f-4f1e-aca7-402baefa7b64",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2c55b205-255b-40a9-949a-579aa5f0c32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5fe108-59ee-4f53-82c9-c9130c393f71",
        "cursor": {
          "ref": "a4085da1-51ed-4ef6-a19d-2883d3073364",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ead120d3-3a6f-4599-b785-e0b5b4fa0090"
        },
        "item": {
          "id": "3c5fe108-59ee-4f53-82c9-c9130c393f71",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "071a75e9-e804-443c-8498-7f92db63d929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a86f5d7-5a31-49b5-9972-325427988b88",
        "cursor": {
          "ref": "ebabce7b-2261-48d3-ba46-b82425f1d009",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "93bcc19f-e9e1-42ec-b0eb-702937f8d53e"
        },
        "item": {
          "id": "7a86f5d7-5a31-49b5-9972-325427988b88",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1b29d937-41a5-467b-86e5-36a617cb99e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440d22dc-0fe0-41d9-962e-ff69949a8ec3",
        "cursor": {
          "ref": "0bf6c94e-5226-4334-ba96-7e737c5b5b0b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a4dcc6be-6c8d-4b95-b377-bb53ec77a79f"
        },
        "item": {
          "id": "440d22dc-0fe0-41d9-962e-ff69949a8ec3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c739bceb-be4f-4ee0-bbf0-90cca9a9fa12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf284e0-5a29-4d95-8ef0-1700f671af31",
        "cursor": {
          "ref": "1c1c5826-48a9-4f33-a096-2ba04a70cc1e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "beaa0444-17f0-4050-9479-805e99f0092e"
        },
        "item": {
          "id": "2cf284e0-5a29-4d95-8ef0-1700f671af31",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0eb659e1-1b86-4f25-a916-0a4998155e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0286640b-240b-4fe9-b1b5-6eb402766433",
        "cursor": {
          "ref": "0f4d265a-e574-406f-9060-04bbe2d718f5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "513160de-4e64-4496-aafc-c8af7047ecce"
        },
        "item": {
          "id": "0286640b-240b-4fe9-b1b5-6eb402766433",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1ea6401f-a3c4-4ed3-8065-40cdf9454a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d40d4f-26ab-4f7e-9533-ba6726b4b590",
        "cursor": {
          "ref": "c3575326-0fba-43fa-8454-72f8dbb07b57",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d55cd36e-27ef-4c2a-b49c-081c54faf515"
        },
        "item": {
          "id": "49d40d4f-26ab-4f7e-9533-ba6726b4b590",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4c7ee923-e615-4f14-8443-2ddcd61c43c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78507ef-4fe2-4ced-811a-a11de1603a0b",
        "cursor": {
          "ref": "c6131e92-c9c7-49ca-b441-cc8b7103f4df",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "021bf882-8136-4472-bce5-d74c3bc2bf43"
        },
        "item": {
          "id": "a78507ef-4fe2-4ced-811a-a11de1603a0b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5cae1390-5a7e-496e-b9b8-2dcb135baef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e4e77a-f720-400f-adad-3208891eb4e4",
        "cursor": {
          "ref": "4489e9e2-0417-4cb1-ac53-d357308c0132",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "294ceace-79f0-4f4d-9a20-1d398d051173"
        },
        "item": {
          "id": "12e4e77a-f720-400f-adad-3208891eb4e4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b2f796dc-f031-4fc6-8def-9358d3d7c769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e32f93-ea17-4e16-8e03-caf169cc029a",
        "cursor": {
          "ref": "8a9643bc-4d26-471a-a0fd-d343a2830a91",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "446f1111-be34-4957-ab7d-5fa1f0978318"
        },
        "item": {
          "id": "77e32f93-ea17-4e16-8e03-caf169cc029a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5e337eb1-016d-4c67-9894-a07fb645eca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23724d3-c706-4cec-aff0-d64717c85949",
        "cursor": {
          "ref": "3b5ee1fa-e747-4406-b1d7-e262af57797d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4f3e8b4b-7476-4cc6-b9cd-edc1c27a7030"
        },
        "item": {
          "id": "f23724d3-c706-4cec-aff0-d64717c85949",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c8496cdf-6882-495f-877c-c248c1e4c49b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5434537e-0913-4fce-b726-b978b2e64f25",
        "cursor": {
          "ref": "28441571-604a-4f78-90cd-f07d056fed2b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1db79f2b-5e40-4265-bb62-236b260fa67d"
        },
        "item": {
          "id": "5434537e-0913-4fce-b726-b978b2e64f25",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "38609226-4db5-49e0-a277-2cf65961d63e",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f112e677-697f-4b4d-9adb-404e4fe96042",
        "cursor": {
          "ref": "dcd2fe78-28c1-4a59-a322-ee4031a2000b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aafd2ccd-8ead-43da-ac60-6d9c85acbf60"
        },
        "item": {
          "id": "f112e677-697f-4b4d-9adb-404e4fe96042",
          "name": "credentials_issue"
        },
        "response": {
          "id": "26cc2920-106b-4794-bb34-0e9f76cef3e7",
          "status": "Created",
          "code": 201,
          "responseTime": 184,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cbf76e-cfdc-4ea2-a990-4c61e458cec6",
        "cursor": {
          "ref": "ac48b2bb-910c-402f-9d9e-2a1411b2e7e8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6929c03c-2250-426e-a7a1-572918b2ec2c"
        },
        "item": {
          "id": "67cbf76e-cfdc-4ea2-a990-4c61e458cec6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a6e86813-d306-4750-bf85-cea800ac5d8f",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e58402e-ca19-46bf-be7d-6dc37565cf40",
        "cursor": {
          "ref": "5897e6da-4b20-49d3-9bb8-20f0609f6c2e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "56984d28-3262-47d2-95f8-fb605e89d7e5"
        },
        "item": {
          "id": "4e58402e-ca19-46bf-be7d-6dc37565cf40",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cbc07c1c-c42f-47d9-9992-e83369678f15",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ab7fe5-95b4-4b7b-b720-0cfdcdd4c469",
        "cursor": {
          "ref": "791301f9-5da7-420c-8b7e-cf8207149c65",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9e6ac606-284d-462e-9490-3c9aee715f8a"
        },
        "item": {
          "id": "20ab7fe5-95b4-4b7b-b720-0cfdcdd4c469",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e44f3501-5805-4143-be03-3a4fc25f1490",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cfe91d-9760-4931-908a-ccbdd1301c32",
        "cursor": {
          "ref": "b2771399-4033-465a-b81c-e4fa7bf8b5fd",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "03e90cfe-bfa8-479d-869b-90ad28c0a5fa"
        },
        "item": {
          "id": "c5cfe91d-9760-4931-908a-ccbdd1301c32",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "de9d39d5-3045-4e4e-aeda-e647111420d2",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "56638597-7f6b-401a-94dc-dfb9525da416",
        "cursor": {
          "ref": "69ec3587-c9e8-474b-a975-23be93503b42",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c31565f2-417e-4b99-8d88-ba63f25f1c82"
        },
        "item": {
          "id": "56638597-7f6b-401a-94dc-dfb9525da416",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b4d84688-8709-4fae-b629-261f4cee1154",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b93036-3e72-4439-bccb-34cac7cfe40c",
        "cursor": {
          "ref": "51b6869c-807a-48c7-9c2b-5fa067ff6908",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3c870f12-1ae2-420d-b55d-45bb859d6b86"
        },
        "item": {
          "id": "10b93036-3e72-4439-bccb-34cac7cfe40c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7f00ab94-a0ac-4793-a28c-d24a44069b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e14a03-fd41-4791-af5a-e8cf6f1df37c",
        "cursor": {
          "ref": "22a46689-d72d-4c2b-a966-2ca0467d8503",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e326d7d9-79b5-45a3-94db-6aa80fe5e9e2"
        },
        "item": {
          "id": "05e14a03-fd41-4791-af5a-e8cf6f1df37c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "33be5ef0-bfd8-4fb9-bde6-a30c75931e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5f7953-3acf-42c1-9696-d3f49567ea7a",
        "cursor": {
          "ref": "c6554f55-91cd-4773-8d9f-2d714bfe7759",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bee9971a-f488-4652-b750-6336b313bd19"
        },
        "item": {
          "id": "7b5f7953-3acf-42c1-9696-d3f49567ea7a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "960ffa22-cf3b-436b-a83f-df1be6a09d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334f3bc8-b5f9-4a46-8231-ca39a1a5fd7e",
        "cursor": {
          "ref": "f2036bc2-56aa-461f-bbb5-9e962a764057",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2061fba2-750d-4a8f-9a7f-8d06d8ec617c"
        },
        "item": {
          "id": "334f3bc8-b5f9-4a46-8231-ca39a1a5fd7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9f7326b1-14b3-49ce-b028-53aa2295e40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1e1a70-b8e9-4dd8-a824-c5ba87b23dc4",
        "cursor": {
          "ref": "70b4b56a-8033-46ec-92d4-ef2291f03e47",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7c4d299f-2fa9-4ffa-ab2d-fea0bb87c21b"
        },
        "item": {
          "id": "5e1e1a70-b8e9-4dd8-a824-c5ba87b23dc4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0cb8a324-3be6-4367-bd9b-ea17b1923299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150cd827-795d-4930-ba45-28a0d0f63fa6",
        "cursor": {
          "ref": "71d2abc4-e456-49e7-91da-1b26b0528f7d",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "09b0fb35-a6e9-4816-8fa4-5bc945a75f30"
        },
        "item": {
          "id": "150cd827-795d-4930-ba45-28a0d0f63fa6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fb18f03b-1b32-47be-afa5-7f3f367c28c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42061ff-bc9b-4c06-a6b7-d9962fd23b88",
        "cursor": {
          "ref": "3c4c8c05-5804-47ac-a45c-5756c1469612",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ecaa0ef6-deed-4d9b-8b59-488b0ec99fed"
        },
        "item": {
          "id": "c42061ff-bc9b-4c06-a6b7-d9962fd23b88",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "29be2193-c2ff-4f0a-af9e-b92e37188d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf75bd6-cac0-4864-b65f-abcef70168d4",
        "cursor": {
          "ref": "b8405063-2bc0-4407-8e3c-4060538a4225",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b4ad0e4-3139-4d0c-8ca3-b7d525a289f6"
        },
        "item": {
          "id": "aaf75bd6-cac0-4864-b65f-abcef70168d4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c4e7ae5-316d-4c48-a1c2-2cdf53002918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7efd2e-f56a-47ec-a934-006b11d556f0",
        "cursor": {
          "ref": "aa2deca7-1995-4f8b-a9d7-824ebe54be10",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "688c53c1-c952-45ce-9995-80e1c956accf"
        },
        "item": {
          "id": "9b7efd2e-f56a-47ec-a934-006b11d556f0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3a3fe6d0-e96a-47fa-aa6d-a2d81130e815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ceb6a4f-6abe-415f-8569-f97927eb2047",
        "cursor": {
          "ref": "0a947ab5-c01b-40a0-b0b6-d2dcdde26530",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5da40447-b77c-4aa6-9e01-52b5cae4fce2"
        },
        "item": {
          "id": "9ceb6a4f-6abe-415f-8569-f97927eb2047",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7f9ef740-e6b2-4a39-93dc-25160f70dabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e21d20-134a-48db-b0d1-c61b85b46cee",
        "cursor": {
          "ref": "5a702971-d063-4f9e-b2c1-eb21e524c40c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "94c647dd-db7c-421a-b667-dfa647da24da"
        },
        "item": {
          "id": "64e21d20-134a-48db-b0d1-c61b85b46cee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7dfda6d4-a055-4152-a2a0-3d594aa586f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9d093f-64f9-4208-a06b-14c1b155bb51",
        "cursor": {
          "ref": "e236d87d-c019-4182-a921-7b6022c21b8b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "713bba07-c498-4928-b15d-a5ac2a4497f0"
        },
        "item": {
          "id": "8a9d093f-64f9-4208-a06b-14c1b155bb51",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "54c61d2e-bb3e-400e-acca-bb175abb5035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9fc2f4-98fb-40e1-bfaf-676a55b013b8",
        "cursor": {
          "ref": "aa04e1d7-a763-49db-b9d6-5911799dc0a3",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1a875f4a-26b5-4834-8410-bd9d5ffdf0a9"
        },
        "item": {
          "id": "1d9fc2f4-98fb-40e1-bfaf-676a55b013b8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "329be778-1337-4349-99ad-1f350a3d6135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8c491d-8557-4cc2-a3f8-afcda84c59eb",
        "cursor": {
          "ref": "c5e4cd4c-bdae-446f-b247-95d5134ba3cb",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f82e0a2d-b8c0-4b8c-a908-fb1761d14953"
        },
        "item": {
          "id": "2d8c491d-8557-4cc2-a3f8-afcda84c59eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ef9d8d7a-f8f1-4cc6-aa0d-7251f2d6446a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93545785-cf4d-44a5-8dc4-87774341fe7f",
        "cursor": {
          "ref": "eba04db4-1580-4fd7-a6f1-8dced6d97c9c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "35137ed8-4dd6-40e8-9600-b5fee17273d9"
        },
        "item": {
          "id": "93545785-cf4d-44a5-8dc4-87774341fe7f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fa71c649-38cc-4b96-a15d-be4e296f2301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f0e4b6-ddab-45d0-a6ee-2ba38926da75",
        "cursor": {
          "ref": "8647761e-21fa-43dd-8c5d-929b684addaf",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a52d2217-4c04-43ec-b012-f0a55a5958f2"
        },
        "item": {
          "id": "69f0e4b6-ddab-45d0-a6ee-2ba38926da75",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d3a16bec-afbd-44ac-a898-c502ca30cbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf7f609-74e2-470d-8e57-b6918aa0305c",
        "cursor": {
          "ref": "21e45212-bc62-44d5-9090-22f175be0a02",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "58fbe01a-ec31-438f-97f9-683891f899e6"
        },
        "item": {
          "id": "adf7f609-74e2-470d-8e57-b6918aa0305c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1e3db8a3-7042-440b-bb08-1e73af1493df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083ab192-8175-404d-887d-da64c56ac443",
        "cursor": {
          "ref": "eab67af4-9313-44a3-9abb-be367e75a720",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "24730e93-a5f5-4d9c-9c48-1cab2f31cc41"
        },
        "item": {
          "id": "083ab192-8175-404d-887d-da64c56ac443",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5da24bb1-062c-436d-ab87-fe52476221fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39cc263-35f6-4ca5-90bf-84b25beb4c5a",
        "cursor": {
          "ref": "a5739748-f9d6-4984-b069-7539095ffb90",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c4e2fc6b-b399-4f7f-bfeb-fde4fe7bccd3"
        },
        "item": {
          "id": "e39cc263-35f6-4ca5-90bf-84b25beb4c5a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5846bd02-5c42-4dc5-bac4-d799df25243b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a813d3a-fb73-40a0-a687-0fcdf48186e7",
        "cursor": {
          "ref": "dfee5247-3423-4cf1-921e-551bf16454b1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "024b6d68-15ff-4e30-8517-ccfc5b2bd1d7"
        },
        "item": {
          "id": "1a813d3a-fb73-40a0-a687-0fcdf48186e7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "274636f3-7cd3-4d54-a2da-dbcb3d1c7f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9682f3ce-8598-4221-b9b9-77cbe56aa99b",
        "cursor": {
          "ref": "31aa2166-593d-4170-b0b0-80461c73e31d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5ca6fcc3-01bd-4d98-820a-6febbfc39088"
        },
        "item": {
          "id": "9682f3ce-8598-4221-b9b9-77cbe56aa99b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6db0cbf4-741f-4625-9a24-e6fb0ab51c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f16c90-31b9-41f0-a66b-1a96e756ebf8",
        "cursor": {
          "ref": "879e15a4-f980-43b2-b365-a905ee1cc96a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fcac00d2-d5b4-44cb-9288-531e6bcb9e13"
        },
        "item": {
          "id": "49f16c90-31b9-41f0-a66b-1a96e756ebf8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9cd4aae2-c6c6-452d-a6f9-679ee398ad5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300cc0e4-7e92-4d7c-b661-77519633f409",
        "cursor": {
          "ref": "a5783f2b-2082-49fb-8d85-068f85908fcf",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dfc2a23c-6772-48ac-bd72-71a36bf53b98"
        },
        "item": {
          "id": "300cc0e4-7e92-4d7c-b661-77519633f409",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0d2ac572-3345-472c-8810-cf2f4215b931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2439ce3-1c80-4f2e-8c25-b63491cb1eae",
        "cursor": {
          "ref": "4077c653-32cf-410b-8aca-74eecf3a7764",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5997dedb-598e-43aa-bf86-102290a8e315"
        },
        "item": {
          "id": "a2439ce3-1c80-4f2e-8c25-b63491cb1eae",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "21668260-b09a-454d-a8ba-d2b33fa422ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a467d68-12f6-44e4-8f65-540f80f6b692",
        "cursor": {
          "ref": "3bb16291-18f5-42f3-b98d-560ccebabe5b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c55944a7-c112-46db-9988-b1354049d96a"
        },
        "item": {
          "id": "0a467d68-12f6-44e4-8f65-540f80f6b692",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4c629e03-f594-461e-9f05-1235c9b2774b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f5bd45-f2ba-4414-93b4-3aba7860bbb2",
        "cursor": {
          "ref": "aee2d011-d62a-4bbd-aa64-42ee3825e7c6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "185c4112-d10b-4b47-b7c3-1d7596384da0"
        },
        "item": {
          "id": "60f5bd45-f2ba-4414-93b4-3aba7860bbb2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6b488584-dadd-4640-b5fd-b71619847568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9615b154-7edf-4ac2-a85b-ca90f1efd4ea",
        "cursor": {
          "ref": "0e36b3ba-cbe6-4a20-b44a-dc39996c6f2c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "63392c1d-9a47-4a78-8929-c584885b58b0"
        },
        "item": {
          "id": "9615b154-7edf-4ac2-a85b-ca90f1efd4ea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "134452cd-19da-4348-8f0e-7e8566d00141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd8169e-da09-4834-b16d-7796c9d7b933",
        "cursor": {
          "ref": "43528859-cf55-4c47-8b8e-dba5922545cd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6ba2915f-e837-4348-a57b-2cd4cc8d373f"
        },
        "item": {
          "id": "1bd8169e-da09-4834-b16d-7796c9d7b933",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "587c27ac-c527-4db1-a6db-f90d17503a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67955c85-abf7-4a4e-87e2-e263065d220f",
        "cursor": {
          "ref": "02a9fb97-0968-45f6-875f-67a14a63d287",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f25e8695-5de1-4834-a347-a126c2c72757"
        },
        "item": {
          "id": "67955c85-abf7-4a4e-87e2-e263065d220f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b6eb3617-a828-4bbe-913d-e8d58fc3a6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae825606-e832-4e87-88a8-dff8e57fbafb",
        "cursor": {
          "ref": "cf88e3a7-fe65-4068-8dd8-6a4d49cc3f68",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a5326580-ec64-40fe-9621-e20b953885e2"
        },
        "item": {
          "id": "ae825606-e832-4e87-88a8-dff8e57fbafb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "24fa6c0d-13ad-45e4-8e5b-d96d3b591e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b09a5f-752f-475c-8cb4-6b8542b37465",
        "cursor": {
          "ref": "de505e68-1ed4-47ad-afcf-614acd2e7002",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "073eabeb-b70b-4f96-8f84-563b96479615"
        },
        "item": {
          "id": "56b09a5f-752f-475c-8cb4-6b8542b37465",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "efe41073-a90b-4100-8f64-751bd7fa189a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50194be7-3a42-4e5b-946b-c4d5e59b84f6",
        "cursor": {
          "ref": "cda20f95-e0b8-44af-99c4-17cc95eb2cff",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "599d2b6d-63a1-4415-b364-e21c1523e67c"
        },
        "item": {
          "id": "50194be7-3a42-4e5b-946b-c4d5e59b84f6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "164a91f9-3bb4-4922-8d6e-4a093d7e45df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f710f976-f442-4fde-b77e-f9fbf3f5a1e2",
        "cursor": {
          "ref": "c3c04530-a89f-4978-9df8-0c86b903d370",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eeaa5a1f-966c-4527-b3b2-b85f05e2432b"
        },
        "item": {
          "id": "f710f976-f442-4fde-b77e-f9fbf3f5a1e2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "92d7bff8-e909-4497-8882-295c32afcfe1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5b783d-7a90-43b1-83b4-e43682a078d8",
        "cursor": {
          "ref": "e1074b0f-b9b0-423e-8fcc-34aa4d82a5b2",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "caf67fa0-916e-42d8-a8cd-169a4d6b749e"
        },
        "item": {
          "id": "de5b783d-7a90-43b1-83b4-e43682a078d8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "97c339d6-3965-44cf-a898-e43018d1fb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2f7b6a-32a3-4977-a7e3-a1b584547ca2",
        "cursor": {
          "ref": "aaf27226-cea1-4e6d-beb1-1e6c386aa552",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9c91e3a5-ff62-49f7-a778-f128195d36bd"
        },
        "item": {
          "id": "3e2f7b6a-32a3-4977-a7e3-a1b584547ca2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "55403f08-d8ce-44d3-8a24-0e25e5eea7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb3826b-7644-4c7f-adbf-16b0bd2c983e",
        "cursor": {
          "ref": "4a99287c-d00c-499d-92f5-d4c9fe440849",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "57652294-748c-4bb7-b66e-e2633d66b312"
        },
        "item": {
          "id": "ffb3826b-7644-4c7f-adbf-16b0bd2c983e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b0971d53-7d8c-449a-92c2-3731e8644b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c44972-6845-4add-89ec-ff1db3a3ad7e",
        "cursor": {
          "ref": "e9fb6c63-3800-4e0d-852e-d18d5e0df11e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e130f23f-9a23-4a18-83ca-a6fccd3fd88e"
        },
        "item": {
          "id": "27c44972-6845-4add-89ec-ff1db3a3ad7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7e7e678e-1b23-48e8-90e9-c072bb3851ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504b84a8-54b8-4440-b32e-0f0dbdef0eca",
        "cursor": {
          "ref": "4ce6af1a-e9bb-4c9f-a9b4-f95fcce6c240",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e23cd7e6-ee76-4012-85a5-fa2e20d8b946"
        },
        "item": {
          "id": "504b84a8-54b8-4440-b32e-0f0dbdef0eca",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ca9e898-8d7a-482a-8ce9-d2346fe15715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9a44e2-240d-435d-b8e7-99b17dd97de8",
        "cursor": {
          "ref": "acc72034-cfe8-4151-b6f7-b8fc72989a99",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9ec8a21f-872f-479b-9aad-a9ba2b7a275b"
        },
        "item": {
          "id": "8e9a44e2-240d-435d-b8e7-99b17dd97de8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cde2d77c-0caf-44c6-bee4-525f71ec2d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cf4464-e71b-4e70-9a5a-9c34d0df198a",
        "cursor": {
          "ref": "11b047a6-e149-44bd-85a7-4354c46a584d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "acbb7422-09b4-4e7b-bfb5-2e33b1531c18"
        },
        "item": {
          "id": "02cf4464-e71b-4e70-9a5a-9c34d0df198a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f716245-52b3-4928-a155-4520bbd745de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71446d50-459f-4366-bd8b-03cee822029d",
        "cursor": {
          "ref": "933e4aeb-f8a3-47c3-987a-831b24eed019",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "53a874b6-a97a-49be-9a25-add81bf2b8c7"
        },
        "item": {
          "id": "71446d50-459f-4366-bd8b-03cee822029d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6acd4b8f-3226-4475-b3ae-b28fb0bff911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bb41df-075f-41e0-a699-207c3fb4f499",
        "cursor": {
          "ref": "24e3d50a-2fc3-496e-beb4-88b194d08ad7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "135ca77a-b673-4f84-bd38-28b4a69c7bf0"
        },
        "item": {
          "id": "28bb41df-075f-41e0-a699-207c3fb4f499",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "123c068f-a8dc-4310-816a-867620251481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae4574b-88f3-4af4-9f74-83202dbe5cff",
        "cursor": {
          "ref": "29f52a0f-0127-4dfc-9ee6-4aeecc05994d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e621ade1-0da7-422d-9bac-c4cdb5a8f9a3"
        },
        "item": {
          "id": "6ae4574b-88f3-4af4-9f74-83202dbe5cff",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b2df1bca-19a8-4a04-9713-b2474bcfb070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857a80cd-6131-4bb6-ab4e-8c35ad308c84",
        "cursor": {
          "ref": "ac94567f-693c-4bcd-afcf-ff7fb4ec4da8",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fa6ac08a-2dc7-42be-b0e4-cd65ea8eb93d"
        },
        "item": {
          "id": "857a80cd-6131-4bb6-ab4e-8c35ad308c84",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d4e82870-6d49-4591-9a50-1dfc2ded7638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfc965d-6cca-4e78-818e-ec9c4198a0ef",
        "cursor": {
          "ref": "fa8d9f8e-95c8-442f-a0a2-d204960bd8f0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "369ed15f-6f19-4631-b385-9b91420e211c"
        },
        "item": {
          "id": "8dfc965d-6cca-4e78-818e-ec9c4198a0ef",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f6fa424a-62b9-4268-ae59-a282673e40da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de54fcad-153b-4677-bb5f-79538acd5d06",
        "cursor": {
          "ref": "22d73007-d485-46ec-9268-911ea9d5d3d5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "56cd2a17-123d-4b76-9f7b-95b20012000e"
        },
        "item": {
          "id": "de54fcad-153b-4677-bb5f-79538acd5d06",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fe6d5de9-1777-41cc-998c-194883b96b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de9fb56-f499-4401-ba0c-95131b2161f3",
        "cursor": {
          "ref": "ea57a65c-9298-4c81-9880-de7287e4340f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "54f12b44-89bd-4821-bbb8-948819c5448d"
        },
        "item": {
          "id": "7de9fb56-f499-4401-ba0c-95131b2161f3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "680cea36-a61b-48a1-82f5-17be666212a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bde6d0-2465-4322-a68d-1af9a9fbeebd",
        "cursor": {
          "ref": "6c12d373-3509-49fb-97e8-281e38c5e94c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6ad9e20c-5950-4d9e-bb9c-982cd43d083c"
        },
        "item": {
          "id": "35bde6d0-2465-4322-a68d-1af9a9fbeebd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2a2afea3-079e-49f8-9cb8-480c43e81615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b2479f-96c3-4f9f-ab82-242ca723b7fb",
        "cursor": {
          "ref": "753bcf1f-98ef-448f-8522-3b9aedfac5ea",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ebf00470-9c5c-426f-aa3d-fa855133c00a"
        },
        "item": {
          "id": "c7b2479f-96c3-4f9f-ab82-242ca723b7fb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f2f285ed-5304-446d-9dde-69ad60966899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fdb1c5-86d3-4d5b-981a-f02e84635e62",
        "cursor": {
          "ref": "5c0f831e-9ecf-4d8a-a905-8126e8c3391a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "168969cd-9330-4a15-a5da-97b2940ddd02"
        },
        "item": {
          "id": "46fdb1c5-86d3-4d5b-981a-f02e84635e62",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0d8e886a-a58c-454d-853f-c6f0937378e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba72639a-daf8-45de-90b1-ad10eb522de6",
        "cursor": {
          "ref": "2b2eff56-5ed7-4024-803f-3a5feb997795",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "19a60f95-c8a8-496b-b265-2dbd8a343b8e"
        },
        "item": {
          "id": "ba72639a-daf8-45de-90b1-ad10eb522de6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d0b3abf9-fca9-4776-aa51-3a346bce08de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc600d27-8ceb-4634-a33a-e5f912bcec6e",
        "cursor": {
          "ref": "88d96713-8727-4589-beb2-a24c5509af96",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3ba98029-7e1f-41c1-9fa7-58af22b8785f"
        },
        "item": {
          "id": "dc600d27-8ceb-4634-a33a-e5f912bcec6e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8de551c5-fa35-4d57-b258-c873b6f34b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb61fb47-fd99-41df-95f7-bdc5bf5307fc",
        "cursor": {
          "ref": "bf591359-0052-4094-8483-2c725803e2f7",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a8ab6e3-4dd9-43bc-a31f-ba97b3ee854a"
        },
        "item": {
          "id": "fb61fb47-fd99-41df-95f7-bdc5bf5307fc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff937f1d-35ac-4d31-9450-7496f79c2367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797fcc21-50e6-491d-901d-7e7c9b222c15",
        "cursor": {
          "ref": "053fe40c-1597-4342-9bb6-91941cc2efa1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2f09b5c8-ffd3-45fd-8068-da6b9161db73"
        },
        "item": {
          "id": "797fcc21-50e6-491d-901d-7e7c9b222c15",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "51eb2394-0e15-4422-a074-9d2fdafb43ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ead6344-90bf-4a08-9391-70e2fb6f4f36",
        "cursor": {
          "ref": "2ff0873f-204e-4c43-ab92-6dd19042ae3e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3cfee221-c3fd-4e44-9981-55bee3b4ce90"
        },
        "item": {
          "id": "7ead6344-90bf-4a08-9391-70e2fb6f4f36",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b0aff44b-e04c-4ecc-a0ec-3fe7959fbc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7102fd33-ab83-4bbb-9157-b0b1e7371e3e",
        "cursor": {
          "ref": "b8acdc3e-3425-4d56-affb-40c71c8c7eee",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1e2a1bab-e61b-46e0-9d72-7ed8343ce11b"
        },
        "item": {
          "id": "7102fd33-ab83-4bbb-9157-b0b1e7371e3e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5c36654-5dd0-4dbe-b36e-958581036ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13db1a52-64b7-4a76-8886-45bfd42f6aa9",
        "cursor": {
          "ref": "303efd61-cf88-4c76-b45d-5d5633f20ce0",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fa3be6d4-ffff-4d94-a29d-2349e783b8db"
        },
        "item": {
          "id": "13db1a52-64b7-4a76-8886-45bfd42f6aa9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aee21c72-0115-42f7-ac63-6fe26f6a28fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f919de0-dd64-408b-a555-b7ebb669276d",
        "cursor": {
          "ref": "1f0f5ffe-0d2d-434e-921a-30c88a41cbe7",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aabea12d-70a0-4035-8c72-bb989d384a80"
        },
        "item": {
          "id": "5f919de0-dd64-408b-a555-b7ebb669276d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c000f79f-e5f2-4d91-a577-e6cf666cb93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ad7793-b47b-4b26-983b-580ed4290019",
        "cursor": {
          "ref": "feb497c1-13e0-41d8-8737-c16f34cacbda",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5cac991f-cbbc-40ef-95e5-5a9c95e2b96d"
        },
        "item": {
          "id": "72ad7793-b47b-4b26-983b-580ed4290019",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7170a247-9098-4b32-a6b7-ba85732ada39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cecbbaa-6ce2-42c8-bff6-8cdc3bd8a868",
        "cursor": {
          "ref": "1ace8094-8023-4f7d-8e7b-1b7acbdde92c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fb218743-710e-436a-88d2-59fba9a2d1e8"
        },
        "item": {
          "id": "4cecbbaa-6ce2-42c8-bff6-8cdc3bd8a868",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bde92f0e-0f78-4e1f-b41c-90ab5f453fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3658eee5-5188-489e-a7c5-19bb06ffcb99",
        "cursor": {
          "ref": "ebe7bf9d-3e5f-4368-b24d-20574b291a92",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6496d98f-d65f-4596-b963-74403234ac45"
        },
        "item": {
          "id": "3658eee5-5188-489e-a7c5-19bb06ffcb99",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4487d73e-9237-46df-83b1-bf3af796779c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08092997-f1c1-45f4-9150-b259597cdf36",
        "cursor": {
          "ref": "2799aa71-de2b-4258-8d9e-cabe7bc5622c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4ebe454d-3736-4526-bacf-96bcc64ab29f"
        },
        "item": {
          "id": "08092997-f1c1-45f4-9150-b259597cdf36",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bdc33918-1a1a-420c-a21c-6163f5253b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714d4511-ff5f-4427-a392-903ae8a81742",
        "cursor": {
          "ref": "c3f259f6-325f-49f6-a3d8-8c6cc27b5764",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "24d97f23-2cd6-4701-955a-2c45015dcb44"
        },
        "item": {
          "id": "714d4511-ff5f-4427-a392-903ae8a81742",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d0b3c99d-0324-46e1-b7af-082785219cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3494357b-c22e-4a7f-8268-3d380f03abb1",
        "cursor": {
          "ref": "d19295aa-4065-4ec2-87b4-1b8d64a7e50a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d5e0603a-2660-4f51-86ea-b2437217c094"
        },
        "item": {
          "id": "3494357b-c22e-4a7f-8268-3d380f03abb1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4dd312ae-229f-4543-8c35-82c3fe9e0afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eb5532-f1b2-4e9b-8920-72d6f4692d75",
        "cursor": {
          "ref": "c14041a4-3a78-4634-99fb-b19cfd4bad05",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aaa3656f-3fc4-43f3-9e71-6a8b043388cb"
        },
        "item": {
          "id": "d0eb5532-f1b2-4e9b-8920-72d6f4692d75",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "518d1960-15b0-42d2-bcdf-25829606e489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c11e8e5-07fa-48fd-90d7-efaadb78a8c0",
        "cursor": {
          "ref": "d5c5977e-bbb2-4e43-baa3-170829aa62f5",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9da8984d-7d85-485b-a01a-2842295c82bb"
        },
        "item": {
          "id": "5c11e8e5-07fa-48fd-90d7-efaadb78a8c0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "20fa8a74-97d9-4f9f-8de6-da3221c9520c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaa1b5e-fdd3-4103-a3e9-abacb1ed62fa",
        "cursor": {
          "ref": "83dedc62-f10c-4af5-adae-1f7054d10264",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c059eba0-5936-466c-8be1-840da1f8ec3f"
        },
        "item": {
          "id": "aeaa1b5e-fdd3-4103-a3e9-abacb1ed62fa",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "58170762-7143-49c0-b3f9-11b411ee88ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8bbd51-5fbb-43e0-9e91-8bb59c5fae2b",
        "cursor": {
          "ref": "3ba9381b-7dfe-4100-bf23-1a4be910689d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4ce784bc-9d4c-48ed-9edb-23c3d754ba12"
        },
        "item": {
          "id": "8c8bbd51-5fbb-43e0-9e91-8bb59c5fae2b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "88427848-700b-47c3-a881-4652f45a6369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70571bd0-dbfe-4a4e-9dcc-af76a828d34c",
        "cursor": {
          "ref": "4c8170c9-6226-4ac5-84f8-c1cec70df0ee",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "34e60f9d-0e62-498c-9b78-35b968f25f30"
        },
        "item": {
          "id": "70571bd0-dbfe-4a4e-9dcc-af76a828d34c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "703f4c66-45fc-4c90-904a-6d39f474f16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cc9dd9-b440-409d-88a2-9e7b5762cc20",
        "cursor": {
          "ref": "3d64dce8-344b-47b3-97ad-173410feb568",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "79879c85-e8b5-427a-9b55-678e05a783f2"
        },
        "item": {
          "id": "95cc9dd9-b440-409d-88a2-9e7b5762cc20",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c0115ec9-1471-41cb-8a3e-ce886735c50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6c47de-0294-41e1-8513-be4abf5ba69f",
        "cursor": {
          "ref": "4b35ac56-edfd-4563-a607-dbe684051a7d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cf4cfa60-5017-4774-a252-dd8aa861c47d"
        },
        "item": {
          "id": "ff6c47de-0294-41e1-8513-be4abf5ba69f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6cbc3b75-85a4-406d-a476-7113b77f37ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72efb79d-3da5-4fc3-9712-70974aeea21d",
        "cursor": {
          "ref": "379da8be-2ad2-42d1-898e-b3c2195f7215",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ebeaf3d7-1f7a-41f9-8bc2-5bb4054e81c8"
        },
        "item": {
          "id": "72efb79d-3da5-4fc3-9712-70974aeea21d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b689581-42d4-45d7-8382-51b8f94187eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912c3b90-2213-4220-bf98-3f7bd7934744",
        "cursor": {
          "ref": "25abc53b-c97c-49bf-bc21-d0fb8382df69",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8bda3366-b110-44f2-8d17-a1d4c25a04ed"
        },
        "item": {
          "id": "912c3b90-2213-4220-bf98-3f7bd7934744",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b49814ac-1064-4a70-bf23-37ee35f7fb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe758c1-b531-44d6-b7ad-2222db5c2c07",
        "cursor": {
          "ref": "600be825-63bb-4b28-8dae-db2b13ebcde4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "65ba787d-e8dc-49b9-bf5b-0265b4fe235a"
        },
        "item": {
          "id": "6fe758c1-b531-44d6-b7ad-2222db5c2c07",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "68b4926a-dac4-4611-9880-34640f69c217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27efce0c-8b39-461e-87fc-c6bb591d9a7d",
        "cursor": {
          "ref": "cceaee6d-76bb-4b48-b1a0-f66ec0dcdb11",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a86c8247-a02c-418b-97c1-477ac6171cc4"
        },
        "item": {
          "id": "27efce0c-8b39-461e-87fc-c6bb591d9a7d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8efd8b61-1c39-40dd-9799-f29f7a0ee212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5626af68-5702-468c-90e6-73f7ecbcf4a4",
        "cursor": {
          "ref": "1254638e-916b-49ca-920d-6fe954a35b3b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b1444131-c3c8-4d36-be57-6e9807d313cd"
        },
        "item": {
          "id": "5626af68-5702-468c-90e6-73f7ecbcf4a4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5fe59ab7-66f9-4e61-82ce-9e9e640b92a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6274f6-131c-4cd9-8347-f7c380f93f2d",
        "cursor": {
          "ref": "2b1a7154-9772-45e2-aeeb-8cc8a4f22ef3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ee5bc9d0-b632-4320-875b-45b1271e1fc1"
        },
        "item": {
          "id": "2d6274f6-131c-4cd9-8347-f7c380f93f2d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "52e4a92f-9c63-4c1f-9ff8-8c4d3cb31c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716dd7c6-fafa-4615-ad76-2deeed0cf8fa",
        "cursor": {
          "ref": "f4f07ba2-c0b1-4421-9e51-609d6d7bc825",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9342ce97-03cf-45f2-af0e-8d5f0ab7e6d0"
        },
        "item": {
          "id": "716dd7c6-fafa-4615-ad76-2deeed0cf8fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "537231f9-afcd-4edc-8ffe-c1edacb41ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ccff2-e5e6-4d8b-9ada-5cb6ccf0e161",
        "cursor": {
          "ref": "1bd52ddb-29a8-4aa7-b6cf-23082380627a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "02985bd5-2a7d-4aa9-994b-680c5f6f7204"
        },
        "item": {
          "id": "436ccff2-e5e6-4d8b-9ada-5cb6ccf0e161",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5d756af5-1d3e-414f-aa91-48d56a249f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90337d90-f066-48f2-ae37-1356b6517d05",
        "cursor": {
          "ref": "99464c18-623d-4183-83f7-e9ffedc7cbbe",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "520e8972-bd25-47b6-b4da-60a9f43e9b6d"
        },
        "item": {
          "id": "90337d90-f066-48f2-ae37-1356b6517d05",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c19b7a1f-7f1a-4286-835d-0e271ab53340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3033b9-de96-4393-8ad6-191260409d43",
        "cursor": {
          "ref": "29721116-8107-4b13-ab37-4ee124e570d7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4a182e96-175d-4102-a7c8-6661af231557"
        },
        "item": {
          "id": "0a3033b9-de96-4393-8ad6-191260409d43",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "29b6020c-6670-4fb5-92b5-6b8027096c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6009519-e3b2-45c5-b321-03ccc3cee4fe",
        "cursor": {
          "ref": "bc203698-68dd-49e0-9bf0-06e4a098ab02",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "14d04b4a-8887-48aa-849d-9aacbd70fd39"
        },
        "item": {
          "id": "a6009519-e3b2-45c5-b321-03ccc3cee4fe",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "90f074e0-ce0b-444d-918d-d4eb943deccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07fc534-426a-44de-8250-8401da7e9a3a",
        "cursor": {
          "ref": "57649c3d-f167-4ffa-a763-e68079f186c5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c276a1dc-9b09-4cd4-8cb1-f93ac29a0d68"
        },
        "item": {
          "id": "c07fc534-426a-44de-8250-8401da7e9a3a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c4d90aa9-3327-402c-a7e7-e1a6d8e0dddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ff5694-568c-49ec-ab2c-d5fb561a9400",
        "cursor": {
          "ref": "05be33e1-c3be-4f35-bfbc-5558bcfdf2d4",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b4893d3a-3061-4fff-b03a-8e180911f1db"
        },
        "item": {
          "id": "b6ff5694-568c-49ec-ab2c-d5fb561a9400",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "374fbce3-9981-4893-bb67-e63f4c565c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2236cd-5fc5-4dba-96cd-39dc816af151",
        "cursor": {
          "ref": "752e1142-4fb6-461d-8b48-56136ec7b752",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fdda4b45-a09b-4db1-914b-dc8f83ae9494"
        },
        "item": {
          "id": "0d2236cd-5fc5-4dba-96cd-39dc816af151",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "98fe06c5-b75b-4c86-b8cc-357df789ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe252b5-288b-4974-843d-8f231800a06d",
        "cursor": {
          "ref": "d07eee3b-2206-4d8f-830b-7bb83a313175",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0c98407e-ae90-498b-a944-3fee79bb3525"
        },
        "item": {
          "id": "efe252b5-288b-4974-843d-8f231800a06d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fcce18d8-94c6-4163-bd38-3e9d3fb072e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9604fef9-8f93-4890-8fe2-c2a9625ba2ee",
        "cursor": {
          "ref": "a70054ff-7e32-418f-8bac-1e72e3f5e56a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "afb27853-e025-47e7-a37c-a1b94b8cb1e3"
        },
        "item": {
          "id": "9604fef9-8f93-4890-8fe2-c2a9625ba2ee",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "78d15d50-7dea-4bbf-8f30-5edbf6595272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4193e9e8-08f2-4ae4-ba1d-bf7c9d4b7878",
        "cursor": {
          "ref": "589b98c2-9116-4223-a185-fe12c8907d57",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8dd8db9b-3876-4598-aa97-af34fbe3c746"
        },
        "item": {
          "id": "4193e9e8-08f2-4ae4-ba1d-bf7c9d4b7878",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "411d1b88-63cd-4bd0-9e27-f018b737de07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a5a7f3-4abc-4b21-b812-c5df4e8dc15a",
        "cursor": {
          "ref": "33b73405-05a8-4d66-bde1-4cf18ce6744e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c119e3e1-2eb0-41c8-9435-49eec8382877"
        },
        "item": {
          "id": "a0a5a7f3-4abc-4b21-b812-c5df4e8dc15a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9a274462-0896-440e-8538-53d9496a100b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cede2e-afc8-4311-afdf-ef3806778f02",
        "cursor": {
          "ref": "e5ff91bf-d68b-4f00-8aea-ba4ef1192b89",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a829e22b-4a36-4b18-bb9b-952d11836e18"
        },
        "item": {
          "id": "87cede2e-afc8-4311-afdf-ef3806778f02",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b48f8aed-c5a0-4c23-bfbc-2a4f4ec698d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd5cc4e-db07-451c-b796-2e66dd06d18a",
        "cursor": {
          "ref": "b7fffb93-81dc-4c4d-a6d0-bddd54f6072c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3c30c4a0-0510-43e0-b642-2b45d85f2873"
        },
        "item": {
          "id": "0cd5cc4e-db07-451c-b796-2e66dd06d18a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c7d4feb0-75e6-40bc-831d-83870c3af604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06bd6cd-9879-4b4c-9f72-3ba34264682d",
        "cursor": {
          "ref": "e762c5a3-f5dd-4fac-a198-3c1a5bf83a04",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "534ac4a0-1e31-49e2-9421-f342e22d0c6d"
        },
        "item": {
          "id": "b06bd6cd-9879-4b4c-9f72-3ba34264682d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7ba41fab-95d2-40f6-97d9-3ca1bb5b9c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fe7208-62aa-4f3e-86ae-7bf82aa5f68a",
        "cursor": {
          "ref": "e94d9fb4-e55a-43bf-8d4d-95b20d235d20",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "060c219d-7e88-4246-afb2-1bec3f3d98e3"
        },
        "item": {
          "id": "46fe7208-62aa-4f3e-86ae-7bf82aa5f68a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d5eb677d-63f3-4ad1-af2d-db012b150490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbf8659-7fb4-42fb-a507-07084856df01",
        "cursor": {
          "ref": "a69c6516-1139-40b8-a388-fd6cecc402af",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5a8a8b7d-d4d6-4da1-9a58-4d08f3e44042"
        },
        "item": {
          "id": "fcbf8659-7fb4-42fb-a507-07084856df01",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7e48d3aa-08f9-4bc6-85f4-a20407de8169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b432de-cb5d-4846-9005-7c3aab818651",
        "cursor": {
          "ref": "32874338-7e46-4667-bc9e-a6634cb54bad",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3f42099d-6890-40af-aec7-599d7cf70ba1"
        },
        "item": {
          "id": "49b432de-cb5d-4846-9005-7c3aab818651",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d86b19d6-0a40-4227-856f-48ce3b84cda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6b7a57-e7e2-4405-83e2-7c0081ffb4f8",
        "cursor": {
          "ref": "f700ab40-adc6-4cf2-84b1-33b40a71f00d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fa06db9d-b525-48c9-8fc9-7bf090358c20"
        },
        "item": {
          "id": "8d6b7a57-e7e2-4405-83e2-7c0081ffb4f8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4cc6614f-cfe3-4e10-b0ab-741168313c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea684514-ed2b-4e74-a68b-ff31c85a2e00",
        "cursor": {
          "ref": "22169da7-6e10-489f-84ac-fa303c0164b4",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a39d48ae-23e7-4024-b362-efdb87572b82"
        },
        "item": {
          "id": "ea684514-ed2b-4e74-a68b-ff31c85a2e00",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "78125938-1fdf-4315-997e-c9a21da851c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a304a4-0357-4620-8389-a1bb26d1a009",
        "cursor": {
          "ref": "0211b85e-6ef6-459a-b064-7c47b914f832",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "98d5c778-b0a9-45c0-97be-66a579ef82b5"
        },
        "item": {
          "id": "a2a304a4-0357-4620-8389-a1bb26d1a009",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "515f757f-2275-4810-9b65-1a5443a5a888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa2d09-8df9-4808-8989-267e42ef9786",
        "cursor": {
          "ref": "c779e717-858d-431a-b470-dcebf39b4e87",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "311f0824-bfc1-47fd-89a4-91e0cf6ccd0d"
        },
        "item": {
          "id": "59aa2d09-8df9-4808-8989-267e42ef9786",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1a12f1f7-fb7f-4208-8915-2cd55a8e5e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34491c4a-db21-492e-8c9b-fb3d9979c5ad",
        "cursor": {
          "ref": "89f43e8e-b405-4fe5-862c-1cc33b05dc93",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ac7c1837-c4df-42eb-b5d4-8e34a4582be1"
        },
        "item": {
          "id": "34491c4a-db21-492e-8c9b-fb3d9979c5ad",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f5ce10e6-076d-40aa-8fd1-e6b0a34657ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87e5634-5539-4806-b718-f16364fab8e2",
        "cursor": {
          "ref": "f06abbf6-24cb-496f-9cb3-56f7c7d72fb8",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4b5ff113-a154-45b5-ae9e-b11b4ef557b9"
        },
        "item": {
          "id": "b87e5634-5539-4806-b718-f16364fab8e2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "46a02951-b669-44e1-9f7c-68223e1c9c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6fdb8a-4bdc-4aec-b0e1-dacfaed310fe",
        "cursor": {
          "ref": "d63fdfcb-9e12-42c8-abd1-88dc3a3edeab",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "31608fd7-cedf-4b12-ad92-0adc03d0cbaf"
        },
        "item": {
          "id": "0a6fdb8a-4bdc-4aec-b0e1-dacfaed310fe",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ef6fa2c2-9972-49f8-ae0b-1fd70596a9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb1fb4c-22fe-410e-bdff-f34836498e3c",
        "cursor": {
          "ref": "cccf3a26-7b5f-488f-8ad5-eac3031bd43a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f6c85f07-2801-485f-86fb-901d6637cc2e"
        },
        "item": {
          "id": "3cb1fb4c-22fe-410e-bdff-f34836498e3c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "83046491-a4a3-4fd2-b31f-17f49711b99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9c968e-5d70-4722-abd6-d0f592688317",
        "cursor": {
          "ref": "b2602425-9d75-4c43-8adc-680a3f1eb7a9",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "896a7838-f257-4ec0-b911-31debfedae37"
        },
        "item": {
          "id": "fe9c968e-5d70-4722-abd6-d0f592688317",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "39eb1646-9a86-4a44-a56d-8b6eadeebc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eedccb1-e1eb-4826-9be1-c6f23bf7a6a2",
        "cursor": {
          "ref": "cc03534f-1a99-4c8c-bbb0-7d246e408e3c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2e925e62-12a4-4c8f-b390-b1f3c5d6fdfd"
        },
        "item": {
          "id": "3eedccb1-e1eb-4826-9be1-c6f23bf7a6a2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "39bd39f0-7ac8-425a-a546-85e258485451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58676704-f2c0-4842-be04-7bea05a392c2",
        "cursor": {
          "ref": "2ddab436-6dc3-4bb5-bc3a-ca8e24b34889",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "833d3aa2-b5e3-47de-9758-b0c5b336dfdf"
        },
        "item": {
          "id": "58676704-f2c0-4842-be04-7bea05a392c2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0775a5af-5fc7-41e7-a1b8-9af72d81bb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba049cc-daa1-4a47-b435-f6657b42e67d",
        "cursor": {
          "ref": "b07fd52b-09fb-4f57-943a-64bc4c532f16",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "929754a7-9b22-4151-b405-82ed5a3e4d8e"
        },
        "item": {
          "id": "dba049cc-daa1-4a47-b435-f6657b42e67d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7b393ed8-8d71-453c-85b6-0ccb50fb08dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da154314-1a63-4238-9d92-56ab0d390422",
        "cursor": {
          "ref": "4287f651-1e99-4bc9-967d-79cb7fdda934",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8f462177-1f6f-4bb8-b8a9-ab80822615a9"
        },
        "item": {
          "id": "da154314-1a63-4238-9d92-56ab0d390422",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "07fb63fb-d1dc-4c0f-bf06-0127572e4574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a38ba8-b8a2-46eb-8bd2-3ea8dddaf9bb",
        "cursor": {
          "ref": "54306ac6-4195-41b3-8429-55e998f33f58",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6b622404-6967-40bc-87b7-460366b63ec2"
        },
        "item": {
          "id": "27a38ba8-b8a2-46eb-8bd2-3ea8dddaf9bb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "670bb793-99bd-4ddb-9c61-6f8d06836d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845d44cc-0c41-4c6d-8bcd-943b82e61d5a",
        "cursor": {
          "ref": "c212ae60-5a88-40d7-b68d-4fc894e598b9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9663eeb3-c77f-4d25-99f1-7c2f4017f575"
        },
        "item": {
          "id": "845d44cc-0c41-4c6d-8bcd-943b82e61d5a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6bcaab8c-3dc4-4d3b-8e26-d35c80c20024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b4b7e9-036a-44b6-ba59-912f2d585370",
        "cursor": {
          "ref": "5464222f-3180-44eb-8025-d7f7801e81cc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7f6ff6d0-811e-40c7-97f8-89fa019b4cf8"
        },
        "item": {
          "id": "b2b4b7e9-036a-44b6-ba59-912f2d585370",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7fbee0e3-4ef7-4206-bbf0-35cc8257039a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2759cd67-055a-40bf-9987-d37f1371493e",
        "cursor": {
          "ref": "f0e82dd0-dc8e-477b-bc53-d99f0514992f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "724f0a6c-b3c7-4573-ad86-fb275dfc6d3d"
        },
        "item": {
          "id": "2759cd67-055a-40bf-9987-d37f1371493e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "edc64eb3-ba85-4806-86c6-40c715881dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7091c6fc-073b-4776-891d-01eda7d38d85",
        "cursor": {
          "ref": "02453eb1-3ed2-4a71-adf7-2d1e8c652ff5",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9ea60c83-0aa7-44eb-aac4-ccebc01af71e"
        },
        "item": {
          "id": "7091c6fc-073b-4776-891d-01eda7d38d85",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "adf64a01-0574-4b7f-b622-041b41401c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e53a12-13b2-4ca1-bc13-0a1c2f2d6e37",
        "cursor": {
          "ref": "e955182f-6100-48de-a7bb-360330922e31",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eec18f5c-b66d-4bf7-bcf4-190a65b086cd"
        },
        "item": {
          "id": "f0e53a12-13b2-4ca1-bc13-0a1c2f2d6e37",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4f4a81f9-5a88-4eb8-9232-39b9b85743c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f9ca65-0125-45ae-84ff-20e785daf424",
        "cursor": {
          "ref": "af316745-145d-4c4d-911a-40b48ded206b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bd7223c8-21a2-43da-af1a-ab10ab9c825a"
        },
        "item": {
          "id": "13f9ca65-0125-45ae-84ff-20e785daf424",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3468f99f-b377-42a4-90f6-8588eec38bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8721d37-4a25-43bd-b403-e53b2274abcd",
        "cursor": {
          "ref": "3591ed9f-37cb-4311-8f1c-31fb855eb050",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d33b25f5-edc4-4d85-863e-d771f0ceb124"
        },
        "item": {
          "id": "e8721d37-4a25-43bd-b403-e53b2274abcd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "57346cbd-3892-470f-a57f-8f4487a2b229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae591ce-53dd-4d16-a44e-e8a608e4701d",
        "cursor": {
          "ref": "b0892867-a481-4b6c-bbe9-1fddb2009439",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "43826c5f-e07a-4710-96d4-824824d024a0"
        },
        "item": {
          "id": "dae591ce-53dd-4d16-a44e-e8a608e4701d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "db1b1cf3-895b-4d57-a4e2-130537daf6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52149f0b-4601-4911-93f9-27ea7b68023e",
        "cursor": {
          "ref": "88829965-4d8a-4c26-99f0-2c17b4bdc444",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2bccf9b7-be80-4b11-ac38-97866a4ec2cd"
        },
        "item": {
          "id": "52149f0b-4601-4911-93f9-27ea7b68023e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a047b1eb-bf14-4aed-ae3c-1e47ba2f62d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172bf53a-cd40-4d1a-a3f6-c1d6f9a983e1",
        "cursor": {
          "ref": "75935b77-afb8-42aa-89bc-78ae9ba655af",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "275888d7-65c0-45f8-ac58-4708e18f507e"
        },
        "item": {
          "id": "172bf53a-cd40-4d1a-a3f6-c1d6f9a983e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8d35d5b2-f615-4bc4-8c85-edd579b3ec62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f24dbe-dbe1-4e48-9aba-617b12580daa",
        "cursor": {
          "ref": "6ead29fc-622b-4983-ac10-a635b7d6d47e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2ce98dec-1259-43a8-a1ed-3c0ab4e89695"
        },
        "item": {
          "id": "39f24dbe-dbe1-4e48-9aba-617b12580daa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a3be3cd-91b3-44e6-a00f-67e7f86f84c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000883a1-2d5f-4adf-aae0-354448acdaa0",
        "cursor": {
          "ref": "775449a5-a67d-443c-8db9-bf8e69930831",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fd638c7d-452c-4b57-8226-72586941aac2"
        },
        "item": {
          "id": "000883a1-2d5f-4adf-aae0-354448acdaa0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8e626128-181e-4772-a34d-e9a789985602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3e1b4d-564d-4620-ba37-5e8b826dcbb3",
        "cursor": {
          "ref": "2dc06c2e-ebf9-4da1-bcb8-5d09f3440613",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "23f8903a-55e5-4a76-abb8-f3011b7a8d04"
        },
        "item": {
          "id": "ef3e1b4d-564d-4620-ba37-5e8b826dcbb3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "73e4be7f-8505-4fd1-b7b3-1b2cda597400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178614fb-aa5d-431c-856e-57c1ec5dbb7d",
        "cursor": {
          "ref": "d582036e-f0ca-4e12-a43a-36bef219a1d9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "16c5927c-7cd9-4ba5-9774-743338b94357"
        },
        "item": {
          "id": "178614fb-aa5d-431c-856e-57c1ec5dbb7d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "607f2294-68c7-471d-b713-631b82ba2a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed909a6b-3c98-4522-baa2-b23282327092",
        "cursor": {
          "ref": "7e01271e-7953-40f2-938a-9117a4d46d03",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c786cc1e-5124-4d5e-a36a-c1dd91d8566e"
        },
        "item": {
          "id": "ed909a6b-3c98-4522-baa2-b23282327092",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "566a0a5f-6a7b-41a4-8fef-3714534e4ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdc8ba9-c98e-4a6a-b78f-80cd2089030d",
        "cursor": {
          "ref": "953a97a3-1700-4333-b662-b3f552bac1d9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7e23a36a-3019-49a7-be45-24a3728d44f3"
        },
        "item": {
          "id": "cfdc8ba9-c98e-4a6a-b78f-80cd2089030d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ed085722-4704-4f20-b513-43ced3fb8a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a03537-4a67-4cd9-9f72-ed0917b0cc4a",
        "cursor": {
          "ref": "d73b957e-bf18-4148-95c2-2b583299deb8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "72054a21-bf75-4fa0-b30d-664d1644ac13"
        },
        "item": {
          "id": "31a03537-4a67-4cd9-9f72-ed0917b0cc4a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fea56af3-8f49-45c1-bc10-b3d80faa0453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47efc0b6-d802-4bdf-aaeb-2fa07f48c935",
        "cursor": {
          "ref": "738307dc-ad78-417f-a8b8-a86509c2e43e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d5a76ffd-6bfe-4877-a2cd-4e1120401f23"
        },
        "item": {
          "id": "47efc0b6-d802-4bdf-aaeb-2fa07f48c935",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9548f925-bbeb-44dc-9ece-ae6c735900bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b0158a-ba56-4233-9122-6c248616fb6a",
        "cursor": {
          "ref": "92c35808-7810-4adf-aeeb-55914c3f09ae",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aac24a98-a845-4583-9d99-2df4250fa47b"
        },
        "item": {
          "id": "40b0158a-ba56-4233-9122-6c248616fb6a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "815a3aeb-2aa5-48c7-a56a-dd5b05dafbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab539f3-7b7a-488b-ba76-73c20931fad5",
        "cursor": {
          "ref": "14d690bd-848e-41b0-9703-1183d38c59fd",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7f1097ac-e2ac-4951-b76c-13a903d15039"
        },
        "item": {
          "id": "eab539f3-7b7a-488b-ba76-73c20931fad5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d4d5a791-9218-4169-8c8b-6d19c631f108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f09f528-d114-4357-b817-71e0bc89fa54",
        "cursor": {
          "ref": "7cdfadb5-95d0-49e1-a888-20b17e331428",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "830c8ecb-9f5d-4fb8-aa14-0dd034ecec90"
        },
        "item": {
          "id": "4f09f528-d114-4357-b817-71e0bc89fa54",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "32df8248-b180-4cb0-a9a3-3112b2be0137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c3e47e-a884-461d-90b0-ba2423780a8d",
        "cursor": {
          "ref": "d782edf6-7766-4aa7-91c2-244a0e9de339",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8c3dc427-6177-4af7-a8e8-749fa6f920f5"
        },
        "item": {
          "id": "77c3e47e-a884-461d-90b0-ba2423780a8d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ec061fc7-62ba-4d2f-8194-4f1abc73e84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09fe7a2-2732-4f1b-b1bf-519b1db0b7d2",
        "cursor": {
          "ref": "a8d78699-154b-45be-880c-7ef06d7a87da",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "eec0ca72-4045-4b4d-9bcc-ef18a76602a1"
        },
        "item": {
          "id": "e09fe7a2-2732-4f1b-b1bf-519b1db0b7d2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "088a696b-d399-48ad-82b8-a7c23e559bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf12461-e85f-40f1-8a5d-c8aaea34c1e5",
        "cursor": {
          "ref": "be8573f2-43c9-4d64-af2d-c92bcdaefdde",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0fb2feb8-9da0-4542-9e1d-d76e50de4191"
        },
        "item": {
          "id": "abf12461-e85f-40f1-8a5d-c8aaea34c1e5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb2895f8-9fb5-4834-b878-7491cd7dbd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc021ddd-8845-40ad-ad6c-38e6c27f83da",
        "cursor": {
          "ref": "1f2f7bbc-d341-43fe-8de3-c8d90473eac8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0db1e3c5-8b14-4c2c-bd7c-74364554ec46"
        },
        "item": {
          "id": "fc021ddd-8845-40ad-ad6c-38e6c27f83da",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e48df460-b00f-4fe6-9744-e923b9f1abe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6517018b-9267-467b-bdf2-c69203cb5e63",
        "cursor": {
          "ref": "8322751f-726b-4c2a-adf5-4dc650723dc4",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cad0abc1-e232-45b5-b3fd-b891cbe769f3"
        },
        "item": {
          "id": "6517018b-9267-467b-bdf2-c69203cb5e63",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fe0994fe-1db7-4794-bf7e-fe20273355ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87239d1-4b12-4576-86f7-8b73c024bb0b",
        "cursor": {
          "ref": "9e6f8cbd-02dd-4ca0-93d4-16cb98e71f33",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "37eceb1e-b439-46b3-a1de-f417804cd362"
        },
        "item": {
          "id": "d87239d1-4b12-4576-86f7-8b73c024bb0b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "96ebad45-5f5a-4662-809e-5f2a2e2f597f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232de6b7-7e85-492f-95ec-7aba83315337",
        "cursor": {
          "ref": "eb5138c4-7ec8-4e06-8634-2586c77ecf77",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2f48f726-77e4-4f36-83cc-2c79e21fc33e"
        },
        "item": {
          "id": "232de6b7-7e85-492f-95ec-7aba83315337",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8092ac9d-f02b-41f1-a89a-6ade7cbde743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a2064b-e376-422d-8e8e-9d52cd0a1418",
        "cursor": {
          "ref": "b94ca081-793e-4359-84b8-2e46d4b6a6b3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "600fe796-af80-4edf-b3ae-b5ca8757ff4d"
        },
        "item": {
          "id": "51a2064b-e376-422d-8e8e-9d52cd0a1418",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b07913c3-12f1-4cd2-854d-c97266954acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e69fc9-7601-4f49-9fc4-3b70668557b0",
        "cursor": {
          "ref": "4d90eaa4-9a85-4653-af8b-b51a7faad80d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5a10cb9c-5c05-41bb-9e04-1cce5e30f378"
        },
        "item": {
          "id": "19e69fc9-7601-4f49-9fc4-3b70668557b0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c9df106b-3ea1-4aef-9b84-bba58eb3b25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c26599-97a1-4e45-9479-16e584cd8531",
        "cursor": {
          "ref": "50e06f95-b9a9-4583-9007-e3bb441ba6f5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bea4a207-9673-4891-93d7-ffd17b827624"
        },
        "item": {
          "id": "08c26599-97a1-4e45-9479-16e584cd8531",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1ecc0894-a75c-447e-86b3-a032ec0c46af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095ac42c-03ea-41e5-90fa-c6961f12cb38",
        "cursor": {
          "ref": "67c3511f-aab5-40f7-8ddf-bf0683ffdbd1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "320b736c-6e81-457d-a5bb-5933b49e4145"
        },
        "item": {
          "id": "095ac42c-03ea-41e5-90fa-c6961f12cb38",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "55782695-9393-4ac0-9f4d-cd9bfa04a44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528ee34b-404a-4d78-bb50-a6470ccd9346",
        "cursor": {
          "ref": "97248678-a9d9-4e29-b5c2-e48fa81150d8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f038870c-18c1-4f55-89f9-4c56424418f5"
        },
        "item": {
          "id": "528ee34b-404a-4d78-bb50-a6470ccd9346",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "085014b9-9326-45a4-9374-d49a059759be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59ef13a-6e57-4ef6-b0a2-a4cae5eb68b5",
        "cursor": {
          "ref": "a5c67341-b995-47f8-938d-727c0315f3ae",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d0dc7c02-31c6-4578-aae1-9799c83b8355"
        },
        "item": {
          "id": "a59ef13a-6e57-4ef6-b0a2-a4cae5eb68b5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c6ab165f-1c10-49b4-bd3d-04dad3e800db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc83ce9-64fe-4248-b1e5-51ff39e4861d",
        "cursor": {
          "ref": "1564242b-fe37-406d-94d0-e5dc5f3b1ace",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6921ef12-2034-4a01-a7d8-575bd5e51658"
        },
        "item": {
          "id": "9cc83ce9-64fe-4248-b1e5-51ff39e4861d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "30f27a6b-7da5-420c-9c56-97de9375576e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385b6868-6fcb-456a-abb7-3aa887664bc6",
        "cursor": {
          "ref": "be6d867a-354e-4f7c-b3b8-3cae99dfa1be",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3367b332-9382-494b-8bdf-06d45c086379"
        },
        "item": {
          "id": "385b6868-6fcb-456a-abb7-3aa887664bc6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "23d32c28-6ebf-4320-aaaa-42ba02652c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a496dc89-83a1-4605-ae7e-155e674e8a77",
        "cursor": {
          "ref": "bd808f24-80e5-4a5d-8a63-ede18a368da0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "90d9922f-2844-4332-9b32-90c8289f624b"
        },
        "item": {
          "id": "a496dc89-83a1-4605-ae7e-155e674e8a77",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fd7b6413-a77e-4790-8f32-c746b909b43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518f74fc-2455-43a5-a808-fc6d93433686",
        "cursor": {
          "ref": "ee80a5fe-4cb0-46f4-81ee-3ef3411fabc9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "714f6e02-864a-4e27-baad-09eaed1df23c"
        },
        "item": {
          "id": "518f74fc-2455-43a5-a808-fc6d93433686",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4eaf0e14-7737-49fb-98b2-2f4b328ff946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6969b30b-85c6-40e6-81bd-d9be42ae49ba",
        "cursor": {
          "ref": "64023339-d1df-4a8e-a92a-d2086839605c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5a75fdc7-7959-48c7-85c5-119879c59250"
        },
        "item": {
          "id": "6969b30b-85c6-40e6-81bd-d9be42ae49ba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "361b500b-d37d-4bb3-b9e9-3fd7b37bc3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c64c097-bb2e-43b0-861f-9e0dcb63ad02",
        "cursor": {
          "ref": "1dc3d729-7be0-4515-98b4-8c519934258f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ab012f37-c8f5-4c14-a82d-4c76b14551f1"
        },
        "item": {
          "id": "6c64c097-bb2e-43b0-861f-9e0dcb63ad02",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "67c4d802-625d-4019-bbf9-920a359e989b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e081f806-2c50-46fa-a34e-06d524e18010",
        "cursor": {
          "ref": "a9c400dc-6644-4cfb-b651-931ab16e42ca",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e56481a9-c1f0-486a-9002-0246de14b061"
        },
        "item": {
          "id": "e081f806-2c50-46fa-a34e-06d524e18010",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f2dff6bb-8dbe-480e-b814-bd63de98d124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d4a0f7-67d5-4ee2-81ff-1b6d82d135a3",
        "cursor": {
          "ref": "6ba019ef-6226-42d9-a639-dd346a880636",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "002bdfd9-d47c-4e0d-a1e2-a3c5bfa30bfb"
        },
        "item": {
          "id": "96d4a0f7-67d5-4ee2-81ff-1b6d82d135a3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "35a045ef-4789-4726-add2-a67cb38657aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33891acf-53a9-4acf-bfac-07d56a267151",
        "cursor": {
          "ref": "917eaa2a-c64b-4234-ac46-4c987f4622db",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "91f42798-2db2-4d17-a58f-ba28b83dc2ac"
        },
        "item": {
          "id": "33891acf-53a9-4acf-bfac-07d56a267151",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "781900e1-2b20-458a-af5b-f18f3242068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef1c490-26d9-418b-84cf-92ad6258bbad",
        "cursor": {
          "ref": "69355db1-db0b-499b-801a-15b250aeb705",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cc293730-2f21-4193-9e23-988bcb5e1cec"
        },
        "item": {
          "id": "5ef1c490-26d9-418b-84cf-92ad6258bbad",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "71af9751-b84e-4f19-990d-3906aa990a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3a7ac3-964d-4f2c-93e5-ce115ef4cbbc",
        "cursor": {
          "ref": "93c03e12-4f12-4dd0-901c-959476482d54",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2973aa51-f88d-4d81-a05e-063580e06dad"
        },
        "item": {
          "id": "cc3a7ac3-964d-4f2c-93e5-ce115ef4cbbc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "060a79cf-8fd8-4288-a271-a99d4f828384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8662d60e-718a-4ef2-be75-2ed7f50413b5",
        "cursor": {
          "ref": "15b6b51b-e91e-4c28-b36a-9a8939b0e671",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b6922d21-3573-4314-8e87-b9e8a2bf22fe"
        },
        "item": {
          "id": "8662d60e-718a-4ef2-be75-2ed7f50413b5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d66aafa6-1cf8-45da-9e01-7d6a05f8613c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2eb1fd-848f-4357-8da9-eecc2470b093",
        "cursor": {
          "ref": "3875aaba-4750-43c0-ad6a-0185c653d930",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ababdb42-2e55-4943-b0fd-399e3adf4a94"
        },
        "item": {
          "id": "2a2eb1fd-848f-4357-8da9-eecc2470b093",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "94f429dd-c8d2-4731-8a1e-85b91dafe43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0e7216-7650-479f-bdc2-eb253553bc7d",
        "cursor": {
          "ref": "8539a851-6a33-4720-a181-8f0da8395704",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f6f8c87a-5dc5-4540-b2fc-a191717a961d"
        },
        "item": {
          "id": "bb0e7216-7650-479f-bdc2-eb253553bc7d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "66b3eb21-2894-4cbb-8a2b-3513f46e573f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b287ffb8-fbb9-41d0-a85b-505f7ed33641",
        "cursor": {
          "ref": "8bdcdcf1-7dd8-4cbe-a43a-f555796a8df2",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f0b1e217-0d08-4d63-aeb4-e496fa8a415e"
        },
        "item": {
          "id": "b287ffb8-fbb9-41d0-a85b-505f7ed33641",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2133a188-302c-4985-9cb3-f2b24fe56b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264265aa-0b49-4e6c-973b-017022f18aca",
        "cursor": {
          "ref": "e545c00f-1ccb-4f1c-8af2-596aaeeb44ff",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "53a16078-78ab-4d09-a549-197a073f0c32"
        },
        "item": {
          "id": "264265aa-0b49-4e6c-973b-017022f18aca",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ad28ed80-ac8b-48cb-8117-0559275acfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c270febe-4d6e-4867-abbf-ef2ce35ee6aa",
        "cursor": {
          "ref": "f1f7c639-4582-4802-95b6-0ed2550c02f9",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bdb42cf0-0fee-4baf-997a-ca19c5a7080b"
        },
        "item": {
          "id": "c270febe-4d6e-4867-abbf-ef2ce35ee6aa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "341df717-baf4-418a-9edb-a256fe95f04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e098e91-5cd0-4002-b61f-4d909fc794d0",
        "cursor": {
          "ref": "2c710415-d78d-41e4-a038-bd85ae602355",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e685203b-eef4-4629-9fda-c929f9f02332"
        },
        "item": {
          "id": "4e098e91-5cd0-4002-b61f-4d909fc794d0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b094176c-f150-4c1f-bc57-463bd7859de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff50d5f-4216-45b4-a790-ac047e9aa1a1",
        "cursor": {
          "ref": "f876a0f6-ce0d-4e29-bb2f-edfbb835243b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "221dca95-ee9d-410e-afbf-68060aac68fa"
        },
        "item": {
          "id": "3ff50d5f-4216-45b4-a790-ac047e9aa1a1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1b867010-5194-4fec-8b7b-d932cecac1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3ba8a8-c039-4c5b-aedc-0b49439109a6",
        "cursor": {
          "ref": "244a0f7e-1003-4742-8322-4d34306b73ee",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "70b155a8-bf2e-4275-aa29-84a0fac5d707"
        },
        "item": {
          "id": "4e3ba8a8-c039-4c5b-aedc-0b49439109a6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "76862899-e9eb-44a9-9774-d576095a2f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69456b7-18c0-4e1d-ab4b-cf0b530bac13",
        "cursor": {
          "ref": "4dbb6aec-01b2-4ab1-977f-eb60abbba339",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "61087fda-c498-4bfe-96cd-77a61479773d"
        },
        "item": {
          "id": "e69456b7-18c0-4e1d-ab4b-cf0b530bac13",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "673de934-db8f-4055-aa2b-8979f72abb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73003c9f-bd91-4763-9659-c8212166b03d",
        "cursor": {
          "ref": "b8088bca-26ff-42c5-9996-f62c9cce1054",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "18421608-da59-4269-a37d-f10b15fc6bab"
        },
        "item": {
          "id": "73003c9f-bd91-4763-9659-c8212166b03d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ffa3c585-db41-4d7e-9060-098b4bf0ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ea137f-b95e-45a4-ab7c-cf8f0ffc461b",
        "cursor": {
          "ref": "071db892-7b45-496b-8193-71c97dc012ad",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a936700a-1a31-4471-8f8f-6b755ce8b28e"
        },
        "item": {
          "id": "88ea137f-b95e-45a4-ab7c-cf8f0ffc461b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f1734085-11dc-4f0f-9c96-c060ffe9a84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bd8866-191a-4581-a259-687878f329a6",
        "cursor": {
          "ref": "e6627f86-52ae-4cf1-9eb0-a73d3c56a4d7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7c459bd3-efa9-4e3b-b05e-dc99fe5ac597"
        },
        "item": {
          "id": "25bd8866-191a-4581-a259-687878f329a6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a7f6a3da-efe2-46b5-9613-a31417eee4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f2708c-35af-4d33-903c-238d852ab1b4",
        "cursor": {
          "ref": "6451f431-30c4-4f76-916b-ec3ffce892cf",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a18bc308-5e79-4940-b515-3f15f9fb8b11"
        },
        "item": {
          "id": "a0f2708c-35af-4d33-903c-238d852ab1b4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d8641c5f-c040-4531-b962-ec158fb449a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57daa548-d105-4d71-b56c-93771a00a886",
        "cursor": {
          "ref": "0e3c2662-f119-43ec-b260-422f79a22a41",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "95a973c7-25a9-4bc9-80df-e20a71b74c06"
        },
        "item": {
          "id": "57daa548-d105-4d71-b56c-93771a00a886",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ca507013-fdf3-481b-be6a-0865db3a331c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13b4ef7-54f3-45ef-b15e-623c730b56aa",
        "cursor": {
          "ref": "436a79e4-f8d7-4370-acdb-3d0bfc17a47c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8825a564-4ee8-4d4a-99fa-cd64b2ee1ef4"
        },
        "item": {
          "id": "b13b4ef7-54f3-45ef-b15e-623c730b56aa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6dfda046-6176-48c4-ad4b-ed33bca21125",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e594637e-ed8b-4c06-9a0d-e1e9fcbe79fc",
        "cursor": {
          "ref": "1cd3e07d-aef5-4583-be4c-b64867ac47a2",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3a30e2c8-04ad-4705-a780-4aaee8b76332"
        },
        "item": {
          "id": "e594637e-ed8b-4c06-9a0d-e1e9fcbe79fc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bf627783-ed33-40d5-87db-8cd25d4d344a",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b3866d-7263-4232-8e32-89404574a0a6",
        "cursor": {
          "ref": "6905732e-a8f1-4383-8927-c6b8c3567849",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "039b8b26-2439-461c-acf1-a6771e81c4c7"
        },
        "item": {
          "id": "f6b3866d-7263-4232-8e32-89404574a0a6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "02029507-4a09-46a5-8737-c8e94b4078ab",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8aa78f-d037-4c29-a9e9-0e22069f4a9c",
        "cursor": {
          "ref": "b351f148-89ee-40da-9eba-91e06d7ae90e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2a5427e4-0821-4105-a24c-d6856fc13b96"
        },
        "item": {
          "id": "2f8aa78f-d037-4c29-a9e9-0e22069f4a9c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1cb2b792-fffe-45d7-937a-d81415135cd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8aa78f-d037-4c29-a9e9-0e22069f4a9c",
        "cursor": {
          "ref": "b351f148-89ee-40da-9eba-91e06d7ae90e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2a5427e4-0821-4105-a24c-d6856fc13b96"
        },
        "item": {
          "id": "2f8aa78f-d037-4c29-a9e9-0e22069f4a9c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1cb2b792-fffe-45d7-937a-d81415135cd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c9c71d-80fd-4fe1-b905-ba2e1d2a8f8f",
        "cursor": {
          "ref": "725a72e8-9630-41b8-91cf-4d1d638a6ca4",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6a94c3ca-4ee8-479d-8b49-3de49840c110"
        },
        "item": {
          "id": "03c9c71d-80fd-4fe1-b905-ba2e1d2a8f8f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "389c868a-2a32-42ed-a423-932b51c76d18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957d6170-da66-4885-982e-685b7c37c8ca",
        "cursor": {
          "ref": "bde0d4d5-5ca9-4f63-a5e0-f0bfca789461",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "cab8e3ce-c6c4-47ca-986c-8ab86f081b4b"
        },
        "item": {
          "id": "957d6170-da66-4885-982e-685b7c37c8ca",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5d8d02af-fa28-4100-93b4-33fca89a0beb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}