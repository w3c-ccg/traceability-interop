{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0b8f8538-da1e-4206-90fa-d5ed1490971c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3cb6dd54-191f-42d8-9535-d0189e875bce",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "238e5abb-d682-472c-99d2-88b2743ed5ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb332fce-39c7-4240-a727-af34b42dfd44"
                }
              }
            ]
          },
          {
            "id": "cb73521b-6d62-4a6d-8ab8-3f12e829c61e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f3f5836-5082-4d5f-abad-569dd07fd15f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3b501f03-092d-4b8c-8ffe-973c47425dc5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f64fdfac-5053-489e-aefc-d5e8398a61a6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f6069dc2-e96d-48cd-bd51-593ff309339c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "296eda87-68b3-42e1-83a8-99baafdbf4d9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "460d7059-beba-4e00-9060-17384f881a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f00f74d7-ce36-4f0b-b454-ed35122ac114"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee886786-d15a-49f6-b0af-95fdc84d59ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31d293c4-4f38-49ed-9e53-16a2f9835925"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c703f2de-b006-4c59-ad3c-1f066cd6df6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fc34821-7d8d-424d-931d-e9052babe0cc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92c661ff-57ef-478c-9464-de3ab14b1ead",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "37605a6c-c91f-49b2-a3b1-84dcb6577ad8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fefde91-a866-45b2-b1b2-c20bf8c706db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29b2bad7-6e6d-4be0-b6cb-755b42653849"
            }
          }
        ]
      },
      {
        "id": "de140118-44e4-465b-b74a-2f09f2cf0b72",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1e6e1d11-adc2-4570-b78f-7369b70d3d18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48d9bad4-ac31-4fee-acf6-ab17760ebec5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9adbb7d-0629-4b4e-8980-12945d5709be",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fdc869-3d0b-4fa0-8e68-170a0b8ec5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "861e6f79-334a-4d19-a7cc-83268d7faf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5516a725-5b0b-48ba-b0c5-fc49348be22a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c74dcdf-59cb-4705-a491-f341bb8830f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29bd4911-117e-4b75-a8e4-e6699862712a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6e0c5c-4eb1-4bef-acef-c8771dabc464",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8e19d3-9bd7-4a30-b50d-2309074b148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f372b8c7-09d1-47b2-99c5-7ca581fe737f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71920756-289d-4076-b015-f53305e51d85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03b618ad-50e1-4c58-9bde-340d2af323e1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11764447-bdb9-42f2-8fda-9f5efd991684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4c2331f-b2fc-4c04-bbdd-bbd31e2d06e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ac1b66-581b-49a5-a371-1bcd4e981f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e234446b-eb79-47f2-b521-dab5dece92b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "51c6b072-0cb1-4fc7-8814-172960a428a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "909ac4c3-62d4-4e2a-853f-c5396a7940fc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5a7371a-5971-458b-ad7a-6943b1b982b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d1c8fa66-091e-4378-ad17-193c8ded5d50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54bbb64f-a070-49d5-80af-05a1561ee947",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f8f51a25-bf99-4652-af9f-d29f9f47b381"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81e42495-20e6-4e2f-b6a7-734aaed0b3ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f4a65b5-2e85-4c87-a1b4-48a39a2875d8"
            }
          }
        ]
      },
      {
        "id": "1bd895a0-4003-41d1-8250-df9fe6252714",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "55dbe403-1e1f-4ca5-be90-a142c841426b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fc7ade6-4d39-4206-acfb-f932bba9f28b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f9c02b72-f1c2-46ca-aebb-ab5eaaf1ce5d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e48305-454c-4dae-baff-9c56d95577bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2857b433-e030-464a-ab7a-9be4de95c9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8115f979-940e-4f06-ab98-b8949cdfff43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e6e8424-5723-4d34-8bcf-e1dc232279b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74156371-6306-4f9d-835b-74daca9f708c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63022c44-8728-4ae0-8933-8b2d12b760e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a41909-3c89-4e8f-8cd1-5aefcb9ce72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c869de2-0137-463a-9f34-c5c826cc267c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1a607f0-8841-4e5a-9696-201233117a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9611d78c-df01-47b5-98a4-1c90555739f0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7174e602-3f74-4ef3-8894-df0b374e97c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5510f3a-7022-4878-981e-fb513c072ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bd2c3e-9c8a-44f7-ab02-fd832ec11bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab4f5892-e006-400f-aff7-27f04e05d572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7169ef-4b9d-4bd3-b3b3-69609f2e34c4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f99a22d-403c-4d06-9620-17fbf09575d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfe854f-736f-4d8c-89de-5fb3ca2f4dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9b0112-77fd-460c-990b-0f27004d3c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8c6d734-28ad-466d-ae4c-151b18ed937f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1db6b3b-c2d0-4e75-b8ce-574a91fe52ce",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e23801-5af2-4ab0-aeaa-c587507dc4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eba8773-d60d-4ade-b566-3748f302622d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780f0926-d2d3-426c-8c0e-5ae8a21418c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0971a7b6-3dc5-4e8e-b0da-e3ac767ce42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67781fd-ab81-4e08-a25f-f0f0652bafeb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47620d22-df51-4b53-a94e-8bd4747e6b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5109cfa2-e461-4c2e-a195-5099e414bbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90964d6b-9fb2-44dc-9c34-1b187bd67c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "490ab0fd-3f20-475c-a460-712948ded8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855a5f0e-f0b9-443d-bf88-ca94668601b1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462a5fba-0154-4aa2-bb77-349a33347ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f9dd71-4610-4f17-bad3-c07527d1a90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c206298-0f67-4a57-a54e-b3fa4815997c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed9873a0-8e45-4d8e-82c1-e79145da2a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9171bf65-c94b-4315-aae0-e41fd8bf59e7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ebf252-a562-4141-9c46-1c3c5c3cde38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1501041e-7ffb-48b4-b3e3-d59387b65151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef5064-dbbb-4c57-8933-597f5c453b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2ee8625-8f14-44ba-98ef-3257b0853a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bcb34d-dd6b-4621-a0f2-f4091d9172c6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747b5f68-6c01-4249-98ba-aae1f92982f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d678ad-77cb-4138-8866-a1211741eef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b97091b-e3f0-42a2-9a83-bd2450221aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50bc285b-61b4-4f43-be5b-4a377ba774d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c24e70b-64ee-48e2-9afa-810033ac583e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83de1b92-aaf1-48fc-b712-e5bf5cd9cf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7949221-20d9-4136-8521-6d471f74137e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2a5f01-a535-4820-a6d1-9b84b2a2d03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e732a4-18ab-4390-96ad-4006c4cdbfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3adf6c-8ba2-4224-869c-6081615cf7ef",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d137336d-2a6a-40b7-98eb-ceaa0b0a4bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949c3bc9-c16e-4ff2-998f-509b3786dfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbced44-84c5-4f96-ab3c-1e8a4866899f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "648d66e9-73d6-4e74-aa91-0ea05544a290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c984b3f-7728-4e71-8dfc-dd1398e2a93d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a915ecc7-0d3c-4db0-aed7-f9972b9462a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0922ca0f-e8d3-46df-9571-e0373419042b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73899649-320f-4a50-9f6b-05c33e57dc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ada79ed-ccbe-46bb-9ab2-e982c665c22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2871ccb5-3830-43e6-a7c5-f0bfa93eb03e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2e2225-80e5-411f-9012-bef93ef6943d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52e17d4-54c0-4834-8b40-035055663a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e70928-c5f7-4ec5-b832-3c9193d4d246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82ad7de9-2f8d-4da7-a2fa-5a9c0f7bf33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a287a0bd-03dd-4007-83b4-928a48c19afa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7f2dd5-0c90-4243-8eca-2444e7772c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e2e7e6-9a6c-4950-a017-da63d4623be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d0685a-c694-4794-8389-8bf33e195aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "011f2834-d1be-470d-be15-0c52a353be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505ce87e-135c-4681-8803-ef40192c371b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff16db0-de13-4f09-bedc-9bbc2f9f26b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984b263d-9ed5-475e-85bd-a216baf0891f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd42564-00be-4811-b898-9fce0bad9f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8075354e-b9e1-45d6-8798-936c54d18fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829432c9-73ce-4ad8-9fbe-f7d6fe363bdf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ca6492-264d-4538-8fb1-86abbb94a164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc8a241-5293-4563-aaa0-d031483b176d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b334d90a-e215-46ab-8ade-ce6e1b4dbc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5947a86c-1e2a-430e-bcc1-5460b10ad37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e5c8d3-1d59-44a1-a311-52ac2df50914",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2a0e55-06fa-42f3-8497-f5ec4c5e79bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7d640b-2114-4ca4-aab4-2d1118bd7b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c34c513-6046-4480-8806-f9aa5a90e76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd06afaa-173a-43d2-8f68-376df3968cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abce44fc-0893-4d49-a3c7-97561f790a87",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cca2651-fa00-4fa6-b999-94f6700dea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c226ad89-ef23-47a9-88d7-a8a8ec35ea72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9715987-d2a0-4f26-a4a8-e1d28ad2a01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ce6a28-d364-4af2-8018-6433e69608cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d003e3-a902-4e52-99de-d295d3b26035",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cad6ae3-289a-4d81-a406-355267446067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13082f18-cd2f-4840-a401-71a4bd23ff3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdb82c2-0e72-4567-9167-427f9df214de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ea94d5-3b71-499f-9a2e-edf8e16e8d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6872742b-bbb9-4902-81c8-8a1a7690a421",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9609fd5-34a3-4c21-89c7-f201bfc27bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d8f517-5ed5-4720-9b35-7c1eac48a10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db65853-0ba5-4732-abf6-8c5a7c4a881d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87bf7fc4-ebaa-49e4-bd2c-36e0860b9b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324a5ccf-f521-49d2-8af6-eca6229573f7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b68fde-704b-40de-ad07-f5a1979836f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3eb3c2-6b97-4672-bcbf-21fe6e81f367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900564f6-0097-412b-9eb3-f6d108e0cecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7fe4e7-28b6-4f88-b7ba-4ed8ad8034ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fa986e-d980-4b0a-b4cc-d0c2609a451f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b05fe61-57e6-45ae-a75f-4b29406f6629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a694d563-d25f-4d4e-bed4-4d3ac1544704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95596392-4533-4a27-b855-288eab2e37e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1bf6f8-354c-4d57-81a8-930dc6564537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39a6ac3-138b-4a79-a854-d8c5aba41484",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d290f093-c086-4b2b-abf4-65f34350f7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65be1c0-62fb-46bc-9d34-7ef81f7c5b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1956f842-7910-4434-9cf0-551ae05d599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6eaf971f-bb47-4cfc-b9b0-54fdebeb55ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66436d05-2e84-4f2c-b9cd-aaaaae7e4ad3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168281f8-a6a1-4973-9ab8-9ef341abdcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286d288e-e100-45f4-9732-79686e8d56ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232bf7c1-17fc-4220-9ff9-989c0e499fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e39f26-b577-4eb9-afe9-d5db3068bac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe1f8a5-aed9-4cb6-9390-16645a74ce9e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eb3125-b9ce-49a5-84df-e64afafacf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256318fa-8a9f-4e60-99a5-9ae153148464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e1f344-03c6-4ad7-9604-0ce3caffefef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd7ff9f-eaf2-4704-adb7-739f695f0e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16196b1-c654-4300-bc76-dbb510a1d8bd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11b56c1-3edd-4b8e-9bdd-2d4d874ed775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ea9405-8413-4bc9-9e47-c96d5c326e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1d0023-dddc-4227-bd28-dbcfa197723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f088c8-9bcb-4bf5-a346-fdc9a8e54c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9516b046-333f-4384-b57d-f435f2804943",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6349e3f-702d-481a-b29a-1b6891b0f2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27565c9b-c025-47f0-b2cb-f6f202536f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f23b10-3558-4525-b5a5-4a718604d97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a61ffd-eb83-41d0-add1-50300940e5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706a335d-494b-4e2a-bc7c-8ab9f307c2ee",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e15522-8b8e-4108-badd-a3a91ec014b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb52d408-e54b-4c24-95a4-a24bfe2e6e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659223a1-a006-4392-a939-d5227f9bfa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab75981-54b3-41a5-8f4b-7cf6608a2f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0665187-e72f-4872-b87f-2545d0923e1e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7771e1e-548e-4e89-814b-6d588ed23dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec492755-11db-4fbe-a95f-32b79a484b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cfb7ed-e607-4aac-9e6b-da6bfa951fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a46c7f56-7ec0-47ad-87b3-6a8748077231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482b6c91-9d93-4f56-8a4e-78f56fffc391",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84092f10-3e2d-44d1-8e8d-1655ee33e561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe7b7d7-7cca-4046-8cb4-fb3b8e2538ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec128d9e-3973-4dd8-a696-4750368119f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec094f9-cfd6-4dd6-9c46-0c4867a03b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abd2296-d78a-44ae-9d37-651ce65eee87",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22e1fcf-e263-4f2b-a445-d883dcf79bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415f73ea-1e78-465f-958d-49585753133c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cf8c5b-b62f-40a2-92a4-0d7deb01253c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3041b3dc-34f5-401e-8398-7348f3a070a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6302f2f6-c5aa-4d59-a39d-e430b5310c39",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470e558a-61c9-49f8-96c0-f36e821e9efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f7488e-dc03-43c5-b2e8-176acacadac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614edb06-57a7-4108-a99b-83410cdf9149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c14e03d4-eb0d-40d7-b694-db160b828a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60494945-4c41-455b-89ec-2ab241fddbfb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce7be05-05b2-4104-bcde-ca0a1fc0d518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1bda48-5eaa-48da-8577-d795c9daa68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c866154-0eae-4cdc-a1fa-f38469f10ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6c2c7c-e958-4857-9593-2251d307f822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe976c6-9192-42ce-a1ae-dd66a6ac623e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e32e4ec-fff0-44b0-b661-fdcf4d36dae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc3a269-fdf4-431c-af00-6c1138c91360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d01ccf8-3316-4f5e-b458-fcf70b7a9632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd1bff7-1c42-4f61-9e41-b155843b0d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daad0ac-b4d8-4454-8df6-bc78e9017754",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0c8971-ad37-494f-a233-b7368a1ca1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450a6cfd-a5fd-46bb-b51f-edd89d3df3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1dbb2c-f0a3-4245-8e02-a6f11bdd427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "25b75cee-3f31-4142-8471-10948df45c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd43b55-6474-4856-83b8-39c897fe3a64",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639649e6-76f7-4a07-908b-5a7a8f953b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0e64843-1cd9-45be-9708-933b35fbf82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60163122-e551-48e0-824d-57e687783c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4407d7c-9694-43d9-87fc-81ae4a9f1961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadc740a-fc06-44c4-9f03-c89df45fba12",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4808abfe-2b16-49e1-b12d-457dbacfb423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dcaee6-abeb-43b9-8035-1a41ff5b28ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4040507e-7fe5-4214-b28e-5181e2dcdbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2304dd8a-93b0-4037-99d7-b922b7d20861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfecce81-88dd-41d1-9da9-120681718561",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acd0ef8-44b7-458d-84a8-17e5fdebaaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd3c14a-fde0-42d2-9af6-959ec5d55366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9a4331-ab6f-4afa-b794-d929409cad64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "812bb91a-b670-4a75-aa04-0a6d0bb723e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565ddb1e-8f89-43ea-ac4b-f909a580f677",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fae676-107d-4672-83c4-7801823b5d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a010a87-d041-4044-8ff6-a48ef7a368cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcd5b31-d68f-4da5-bd73-bbbeb1983c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0605ae15-ea40-471d-b0dd-25b99d5f184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb47d79-d0db-4b00-9afd-cbf1b507d0ab",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc78f05b-ac12-4a6a-b9c9-b8501e452135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09395a23-f08c-4d6f-a4d7-93ef2023ab0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b1912-5b82-4a04-8cd8-acb9d910c2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1b492f-23cf-4300-ba77-4de30e122e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c88edd-ff49-4e5a-833b-b49697a89bee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f48cc6-8444-48ef-bdbd-c18ebaca53f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c984d589-ac17-4760-98c7-89f3a4915147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee225a32-2edf-4e7d-a289-d9f8693ee86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d488662-e7a0-4c53-8f7d-6657ed8d4331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb72dea4-963e-4f97-b2bd-795d45a89825",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4e7c37-2d6c-492a-b765-b1024866d88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3246813a-7fcb-461d-8bf4-58d7a681ccd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6b7f86-7105-4e60-aeb5-3425f92450e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4c269e-07ce-4865-b0b0-9963fc088f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acc8d85-670e-4853-b332-7c567d80f19a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba7404b-945b-4bfe-829f-1c2796b92d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6a541d-37d1-4b4d-9f6d-38903dcf4f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d8872f-2250-4336-a826-d4d8ad13aea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7540a8a-a33e-42e7-afaf-71ec1d58a266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1163bb-bb30-4b9f-82e0-04cc3fb93b51",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1a4d31-ca15-45a0-9e89-0952db455867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d14900-94ab-489b-b235-b76b8453f8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fee390b-dee1-4708-b271-ca01000cc754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4638b90a-c618-407e-a42d-96b680aeab18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ed1880-9d81-40f4-830d-5f9566d1e8d6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1fb36e-d614-4757-adbf-4d8e81e3598a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf73796-e4cc-4893-b1bd-26dfbee8c4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472b0305-f611-490e-8bae-be221db1b266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b69e04b-70f4-46eb-9838-5909f9a14e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d62e0b-fa75-4c5f-b0b0-62219c0443a5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4a4f82-798f-49fc-89ee-6f5d696231e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fc5e33-7a8d-46a3-b083-196e9cabe5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0025b668-59bd-407b-a319-b9f65e5c62d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "493fd273-4599-4dc0-90aa-18e2eadafe0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01392c5f-0d40-4a48-ad4d-dafb74f63467",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab68db4-783e-4343-bac9-71e357df9030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c9dad9-d69e-4ac1-95ef-2a66aac0907d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3b4017-fa4c-4d7c-9358-6f69c40a47b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5079fc-a107-433e-85c9-6b25201b1e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f349af02-8b7c-4959-9cfa-df42e3f03b9b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b895980-6508-48fc-a18b-6223f7a088f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c84249-0b54-46a7-88bf-6902513c32b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92528979-ffd9-482d-9f24-dd343009f84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4fcb98-6e2c-4fda-8cde-ebddc7343aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6acfdf0-7abd-4a9e-b691-55c9d4abc82e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fed44a-6311-43fd-bf0d-8040edad9a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4236437d-054d-4199-b50c-6e4fa0f17de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da564b60-2277-44a7-8f7d-6e43db160b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b23af0-f523-4410-b528-b1f16f9d98d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda3e0e7-03c3-4e24-a2ff-4f3182b60668",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366c183b-2b5b-4b76-8282-972745bef47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8453fac-8a30-4a29-bdb1-11a666bb2f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a4c881-5053-4b3e-bf7b-87a169420ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d77a1a8-bd6f-4f43-af04-8773ce42271a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cf232e-510b-4732-a4e5-50ff0c14dfa9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebc6b1d-a36d-4940-b99e-5e62b3a396e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdc806d-b434-461c-b146-97f286bcdc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac8cfea-91c3-4a7d-869d-eadec5d249a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e48f74d-d08a-44ac-a640-a53fb973af53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700a9d73-bedf-4997-a052-cda122dc2180",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e129f98-b436-4115-8b0a-5003ac96551d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71035aa8-a34e-492e-9c55-af7194a43537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71ee6ec-f861-460c-b90a-14b6d3c2fd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e991b720-9e1f-400b-8b0e-7d2a5ff33646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bbd54c-ffcd-4303-9da3-383b89541fb6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb522bd-0364-47f3-958e-361467bb45b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7b5642-63a7-436e-bc04-97cc8d03ba8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bf8d60-0ad3-40c3-aa0b-9846f0232603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78629cd4-5193-4f0d-a9e1-83f326d83daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7487fbff-0a30-4ea8-861f-5e874dda0751",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56d7e09-ab04-4479-bd0a-ebc7d1431db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd8549c-e9ed-4b68-9e0a-f4f044dcb028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c1f0df-2d8a-480e-b9fd-229a3256f2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03ac3239-e92c-4b6a-8120-34080c02cab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0979a184-5f5d-43c5-a9a8-87af29c9cfc3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a364801-268e-4a99-9e30-771e2c8e260b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63a3cdf-b2a5-4d7a-ae1e-ab5262accebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fda906-9f92-454f-a21a-fd4b85bfc244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14fd01b5-17b4-436d-81aa-55dd61834f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fa0e77-f05a-47a4-ae53-a54caf60e85e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd18f86-1d68-463e-ba79-44f157c23c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05f7bb1-f886-4a67-9b70-8ce0494e8ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1298270f-0529-4af9-b45e-e3f82380dd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e082ae98-6875-485a-aaa3-9d563f72e629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e3d989-2da3-403a-88da-ab3e532fd18d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58bbef4-e45b-41da-9de6-0546d44df7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb5e82b-6f99-47eb-9ea1-f04df0a904e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58367a1e-7098-41f7-a197-f2b744828451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a10ddbc-2c60-44d4-9d0a-72be32b38770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622709a7-3cb2-4402-8573-e3142224cc73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68d0835-387b-4042-9db9-f9c972cd3748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98e7b19-e2b5-4e6f-a8a1-38cc722eb1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bb5c3b-c2af-4e64-8173-c0d78c92a7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1c7cb1-8403-4c96-a800-04ca6ed8555c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758eb533-98b0-46c9-a1f2-d8273dca3ad8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b73ccfc-e8b3-4166-960a-a837a9bf1742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84159923-6623-45ff-96ac-3905dab1d5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483dd2e5-cfed-427b-b5ec-2e0a27ded664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98adc099-0402-4889-964a-fef42e92d118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409cd82a-a54d-447a-bafd-9049dadbfe99",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a09439-9a89-4fde-80b5-7be6998e23c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3217782a-a5fc-42b4-b76d-bccede31541f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbd8965-cb41-4c5c-86e9-a1990807006c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "306c2981-3e57-42f4-8322-f74fec8091f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb28081-99b6-4304-85a8-36a0e04021bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d6ab70-8cc8-4596-ac7e-e39f69c3ca3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f04e8be-908e-4591-a7eb-8f50838e86fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c217ca-3f97-4dc3-be40-ef6a7786a6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "10568693-fd17-4f67-b28b-d83a6feb2c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4a7a44-2aed-4a1d-bb3d-a16bad09215e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6967b07b-f5de-40e0-bdb8-1db7f2263347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64d2949-264d-4eba-b45d-c77a21e1c283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581eac8-54e6-4550-8136-267e16169693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f1742a-f8c8-4490-bde9-ecc2ca93f76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf0fa2-d0e9-4e87-acbf-5c542198b394",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b55b278-e927-45c6-8373-1c537679ecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbe7399-2a10-4999-b90c-baec18ddb71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e36f3df-33e6-459c-820d-1c283f04893f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c90a39e-d6c9-4a5f-afd6-2be61eb17398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ca0b83-a266-4a9f-a252-0808bbe19b91",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf500103-5253-4666-aec3-8b68197cf4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979fa8bc-2490-488b-a108-20c23d83953e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8d621a-9ce0-488c-9aa3-a657eaa724e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "558fa6a6-bb7e-4e6c-b24d-6a1b37b4848c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d685cd57-9d92-4959-abdd-c16e3aaefdc3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cf5591-94d3-41cf-9d8e-c0cf1c53bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12f2c88-69fa-4e54-bc5d-5d04ccb72952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada0af1f-ee61-49cc-93c0-a6ec00a623a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "414fd1e9-ecd5-4743-b6ca-4fb524e5752d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c781c7e9-d6ee-419e-a65e-b4dd59d9f9cc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d52af4-f2e1-4281-b49a-04010e8445fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca4aab0-6559-40df-822f-2932a64bfb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f6a625-f6e2-48d4-bd97-eee14c6f6921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b4711c-62cd-4c2c-9906-d88bfafc8429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844ff302-01e1-4f72-9270-c4faf9df4dfb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584abb21-674b-428b-a79f-c3ad1bc992d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb783be-803f-4868-aeb7-892a5b5882a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8684b1a9-d05e-4901-a763-177c472bf551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b31295f6-0345-4638-a534-d5233ee9be57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc9faf6-c2dc-4257-8371-9589e4ae9028",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4dba76-cf6a-4872-9e8a-72b37f3c0736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72588d61-ee13-4cd5-a8f1-75e483b9d61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305f93a8-d01b-4fff-8d7d-136d20929a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b431af84-11af-4b1f-b03e-9390024cfb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d576e6f-2b4c-4d55-b858-c091d451adf6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bea8e3-f3a5-482e-bb39-700c68947fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d41e8ae-0543-4f3b-9afa-d959f8a82239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07903b48-3987-49fa-b21b-272520a5d75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "439dd151-5f25-43dd-948f-f754119cd9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55a7ffa-0f12-4b24-9d6c-ed200253a24e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7b03e5-4efb-4ebc-b8b0-f24f6bca9a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465b96b1-d9c0-4555-a715-61b54ddd5ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000a1e85-fd80-48b5-b233-1cd521e61a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33da94c3-d565-4377-9b0d-6053c9df2a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dfd6a7-200a-443b-800c-a7055ea38c5a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9550f5-29f2-4abe-9b72-c02ca9c3c387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2998ceb-b54a-44c6-acdf-d99df6bea972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fec087-c970-4837-aac1-d8ec72a65825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5d4614-446c-4d93-9ef5-8bf6745776cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4f2631-2905-48c9-b653-91ab9daab41f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15103599-000b-486b-97bc-8e10099f7371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fa543a-7c23-4fa3-a92e-fde9fa1a17a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4466a9-0b75-4329-b287-d0b3d72aa046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d51d5fa-c776-473e-a46a-748d55653dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91d6c3d-a72e-46ae-9bce-d8ed87b210d8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d818bf15-068d-422d-b873-9aa745e5807e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8297231f-d916-4563-bd2c-77fcaffd3c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6315181-0661-4496-819a-3b827a2fc7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6099ed-9a9c-411f-ae27-836e5cc4fd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c810f6-9048-4f50-ad34-047e25bcea5f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f998e4-2ddc-4989-a17c-ec9826cc523b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14137110-2435-409c-90a6-8ac53406aba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ff2680-bd3a-46db-b63a-c1c56ed4aa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac54e15a-8146-45db-b7e4-ce46ccf5e11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a81bab0-5634-43d5-8fe0-81108ef585d0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9870ece-7a76-4011-b2c9-424cf54055f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ea872c-dedf-4e10-9a81-2f0a97e44f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335f1cc8-23a2-4a24-baf6-0ba30895ee1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6779b7cf-7c07-4df4-9138-9c1aeb40ff6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7da66a-02ff-4292-96ec-f4b2c2ae11d4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36e1d91-7a7e-49fe-93b4-50476cee98ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835f99dc-4635-4fd4-9952-658aec537e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7948f7cb-7bc4-491d-bb97-f89186d4767f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c43b15-3791-409f-9ded-d94a28268c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48cd4fc-1fd6-4ad2-87fe-bd53da0a40f0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf743de-a2a8-4144-af57-fbdf559ab609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921e50bd-86f5-4a3e-8c0b-16d855d11114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2578d99-58e4-4f27-8f69-eb249a206bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4681a5c-2c94-4e05-a705-b62851f34b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6850f58-e6eb-4045-8999-fc8aa416bd97",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed1419a-81e1-4f92-8b0b-ed49ed436b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed66677-c8ee-4edd-93a0-86dd5b4af9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f52a30-b813-49bd-82d9-c74c540eab77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "683bc807-71b3-49aa-8fdb-7b611491529b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399588f2-61b4-45ba-93aa-ccb763eb6d2c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ee0a31-6a4e-48c7-90e4-131ccbc52a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd8324b-eecc-4adb-8b5d-6eacd192f4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe3e7da-a813-4048-aca7-660c2ef1e4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "702fa5ce-2c50-46a7-bc01-01cd225b63a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b74db23-23cb-4da5-b151-2eef251ee1ee",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bafcc1-36de-4c91-a344-4dccbbfc1418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1dbf2d-b81d-4abf-a4f3-2341962d6164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1b2763-e23f-40dd-888d-632f3cfb9db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b00bfc07-8a05-456b-b1e1-b24f319fa05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847de379-916c-42a1-9877-080fd105cdcb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbadca6f-001d-435b-b921-74b8ca5a5d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7901bb27-a670-4da4-ae1c-63a617f4e59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c21039-1706-4136-ad0c-526f2b6817ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6908a44f-442d-45c4-8e7c-d426e054c990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1083d276-48b0-4f1e-9853-189a549ef6bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce3fede-e03d-41ee-8a56-d607aa64f8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b83c8f-9d80-4ceb-95de-c571de00a1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f4e258-c4d0-49b6-990a-693573353cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b01427f9-20aa-4ed0-81d1-a10b646e93c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc1533d-32aa-4801-ad2f-33d1b66e1b2d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a5f0e5-2553-4583-9da7-a737cf1bf6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535568dd-8935-4e74-9955-663bf86762e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5127b0-3ea8-4a91-bf23-47517e7438e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2535470c-3db2-4e4f-9d4d-4ac616616bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31830a03-1d8d-4c85-b215-d9142f9dbf3b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f5cb19-4979-4667-bec5-a3efa8b2472b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bf217a-8bf9-4f2b-8351-a159668d8069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acf8ac4-4d98-4827-a850-d8891a49beb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8aae4e5-9b28-4e31-adfe-d6f897afbca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1972af50-a059-48bc-b05d-7b43f10cd7da",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc76e6b-4136-4785-ae20-c3688a7269d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749e4fb3-0cbe-4c70-b22a-698938c29f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a9a2db-46e9-4972-a166-87063d530dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff585f4-9769-408b-9237-c59abb447aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c43713-475e-45c3-9c34-0f46b987f0f5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9355dfeb-5698-4989-ae54-b551d770be87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121bdf7d-3310-45e6-8ad6-b231e835c56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51411d0b-ea2d-4ac8-989e-ce582ffa5495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2368b8-2095-4462-bc48-7520313cabe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3280d0c9-5d65-4849-b313-fd9b98b8f684",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be822534-4226-4f6e-adfb-2550bb1eac9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891358b4-8ac2-415e-a738-746c4930c366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe18c65-e170-43f3-b821-c58c6f1b13b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2516c03c-fe45-4b3c-bf1c-f06195ce7a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61d7a1c-77b7-4461-8ad9-92895ca349af",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e1ad29-b400-4950-9ed7-7ba05d6bd0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3920580f-cf5b-4bb8-b0b1-3bf53cb599ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f36040-ad36-4e71-8c24-a2c6322b91c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df15335-d9cf-433d-a15b-f2a01b238fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6dc185-a899-4e51-9fec-f20642ce3178",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eb0659-ec35-46d1-abd7-afbbedfc05d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45af513b-948a-4f51-8e1e-6cef16e35f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1178e3-d3b2-40e7-adcb-9d3ed850c6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "410e1ab4-bc52-466a-b16a-3ab08a69b325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869500dc-69c9-4b7b-9853-5de3d4b47112",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a928ae57-a2ee-4fcb-9708-9929eb9ec855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4f7005-1271-4e1c-bf5b-aa35851dbdaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55d82d7-d3b9-4a2b-b918-4739f9dca3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "286e2726-a883-428f-aeab-6e6420e95f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd0a30a-9c2c-4fc4-a3d6-9142ba204892",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de69240-8310-4850-9b94-cc4596a4cce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274a0781-a6f3-4c47-9fc1-0850bfc3ac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96b4b9b-bfd1-49d9-ad3d-d597b7a04cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a639e7-4eb6-426d-8a6d-33e3f34b6855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c5034e-c8d6-4509-babe-5ef76b6a6644",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e942875-2906-4c62-86d4-848f153c0644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4f6040bf-e620-4899-81cc-b6db8a08648f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27228c8-b81b-4748-97c4-3da9a1103d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a913df2a-2e2a-4503-a1ee-8e7f628e3838"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0307089-1dc5-4f38-a5a6-c6ccfb8a3118",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "780a4bcb-459a-4cb1-86b5-a4d4d20199a5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f24858-7b7c-4b70-b99c-f9410f8caf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49c36e66-b182-4b9d-be62-b48520a3c2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0019a0-f5fa-4e5f-a86b-efd029710f18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5f9f24f-bfae-4d4e-aba0-e5e93fb4ab1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4382260f-43ac-4bed-864f-343ab96e6cc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8974238-ed40-4cb9-97c1-6038268d5231"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "115d635a-957c-47a4-86d6-c4e035995d03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "239b0479-b0a3-4382-b211-851818a563d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5b9fae5-31ec-44de-841c-e685f6296bc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbd47362-2880-4b42-ac60-3fa22e6c225c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d17ad06c-7c3b-40b0-a949-eedf92b4edb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d24fc10-aaf0-4411-a14c-b10d30a57e2c"
                }
              }
            ]
          },
          {
            "id": "3891638c-e7db-4b2f-87ad-96b6f1617534",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9cbeebf1-7426-4e47-933b-960958084928",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d610008-226f-4a04-aa43-5fe2db62d102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61b475f4-d631-4a8a-8503-d8da6324f3e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6f1011a-d3ed-4783-b47a-71a2c5d09b5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cd19d68-778e-4598-abb0-98ce59e9102e"
                    }
                  }
                ]
              },
              {
                "id": "8c26742a-d514-48a4-b48f-2d10e4ae207b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "964fadc4-17e6-40f7-aebb-f2bd922fcf6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "afdd612d-4413-4004-b2df-b8a5891e763f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aabdc95f-c93f-4bff-b421-2644fab59f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4917d226-d8c3-49cd-b609-e6341a199eb9"
                    }
                  }
                ]
              },
              {
                "id": "bcbaf5dc-0f42-4051-86f7-bfead5739e1f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73fbc233-0322-4cdb-a8d1-47a94509af8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18a2b8d7-5edf-408b-a78f-36727c18a6c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0901d493-bce6-44c6-8db5-abda92e2ff83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "069b87ae-fc4a-4dee-b985-e6a8214efb94"
                    }
                  }
                ]
              },
              {
                "id": "4b404284-cc18-4198-bf8d-a71c238c56ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61adb0db-130c-481a-b671-ca27bf9340f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d2e994f-a6dd-453d-8a5e-2b8b47f6cabb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fa59406-5522-4a3a-8d82-8c51b5ffdbd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "66c0bf00-0ea1-474d-8f30-6768933ec3e2"
                    }
                  }
                ]
              },
              {
                "id": "6eff34d0-b419-4215-a655-b314a9be898d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0429e38-c305-4d93-a62e-0201ef26d279",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c48140d-3283-4d98-aac3-d01c4aca0a8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de7f5639-5889-4a43-9204-2f1c0ce3747a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "032e96bc-07ce-46f8-8c44-6b90b5b67514"
                    }
                  }
                ]
              },
              {
                "id": "d7705a69-82df-47d6-b977-cc3c964deaf9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "189776a1-2bc5-4b87-978d-afc31eb1a628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50874114-20ea-4af1-a7f1-6b43bc02ae2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64536a40-341d-4874-be14-17aa004ef14e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8262ac2-8640-43d2-bc25-22a9c7e617b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17950781-d474-4937-8930-3a378785306e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3753afd5-6295-4023-8a54-1b5ab4a61909"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9fb723d-716b-4eb8-8e5d-a6b3fd7da645",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1256c9b-066a-4f63-966e-59fdd3de9f3f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd15ccb0-2c67-4214-9647-2fbf8340da8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e18fe1ba-8f51-4b2a-91b2-d0bf39499887"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "decba711-f549-4a3a-80f7-91579377cea4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a2d7c40-c8f2-45a0-af02-a87db3221ddf"
            }
          }
        ]
      },
      {
        "id": "b847af26-ed22-447e-a15f-560a94de5671",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a060f83-d1b6-4ad7-bb66-d72f2042f307",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7191d83-122e-48c6-8b02-763278974f59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dcacfb80-003f-4491-92f9-c1371cc3560b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c008057-8c97-47dc-832f-07ae5064deba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecf8cf5-d6d3-4360-a76d-ba1d0016dbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fafc777-bcd3-4892-9c16-2bb8d6fee834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3384209e-e09b-4350-93a2-2990deb276e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b3c33b-65f3-4b30-a14b-644e63e5b121",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef0a57b-1ca3-425f-bc01-d4f2756e06dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a537c4-fa3e-4188-88ed-ac2153df7ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8463828c-aa08-4aab-9357-704e646458f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a370b4-b7f5-4bb9-b60c-380d98bdd22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912d497d-3139-438e-ab8c-cd5096fb356f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e02f3b-a5c9-4d9c-96e3-41cc37dcbf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499657d3-e706-44a1-bd4b-cf59470281f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc82a25-6df5-4ee2-8ce2-e888c74f58e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d92de0-9f97-4666-aaa3-60f42d192ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fe1e5d-f981-4782-958c-f5d28d6f311a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ff38ab-0ef0-4eb6-8e64-535e81b60786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed572541-7615-40fd-a875-19e9ce384a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55808e08-ad22-4bc0-859d-fb508a7764d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1b8381-1d4e-41c2-a1b4-a22b6a8b9dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97d6cad-dca1-409e-aa21-e0a0e5e4d747",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d17f5-10ef-438b-9899-613303c8279d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4e3378-4b97-4a30-aea5-50072221a10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43af3889-90ba-4b52-a274-16e97a41c9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af311e71-7eb4-4e5f-895d-46be136a09b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077f2d72-e675-44d0-9c8a-5ce811d49a2b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c8acf5-30e8-4efd-b69b-10e2ff5d974a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f98f7fb-54d4-460b-8350-776df1e33775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83e6df7-dd85-4ce9-9764-5181979bda7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "935d8b13-0341-4c51-9831-27a06dad7472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368540ef-1d07-4344-941e-b3e37c0e616b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e94d28-bac9-46f0-a252-04da6568b5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f0bac0-7bb6-4794-9b5c-b1d4c185c5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c262b437-68b3-421f-a0af-fb33a0b8df61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd5c925-1602-47c9-98af-38a014aadd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d46e28-8d1e-46e8-adb0-555889a78694",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8d0238-7879-4f5e-a7ea-0034512e8efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76863093-b848-4c8a-9b33-f91fc145fd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181dea3c-68eb-4b1f-b469-ca3e97e6f7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebae6692-1ff0-49b4-85d7-688f8334fae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a6a189-db00-456d-9425-c70720622f92",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfcd765-5d1d-45b4-b583-4377ffbbcdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf6251c-10e9-4f95-8973-ed42a7d8dd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fad5f58-1d18-4c2a-aa96-12aeb4cc3ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e275cd-e755-4f08-80f2-fc15d6ce4aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cccc8b5-b174-4d1a-bada-f74a3dffd0bd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc14787d-df05-4f84-8718-ba1a5a1d53cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a405befb-d41c-42ab-8bb9-7c1ad2e5b838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0ce393-df57-40e6-96f0-5416edd93ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8fb721-d71d-4a7f-bfb0-8113925f3628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eb1828-2e3a-4579-9979-4143118c941a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0b0582-36e8-4aa3-aa72-8be404a47833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14470a0-4fe1-45d2-a113-de4e1c8cfe4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1083df42-dab1-4013-9611-97d638654f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b0bf6b-1e3d-4850-944d-66078caef5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936522f1-d0c8-48af-8c3d-4b52a78117ca",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f88dce-9a67-4153-a837-088f8e91896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25289634-b73d-4c38-b624-a12d424ab225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9967c0-c297-4a74-9997-d96b66dd0fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "897f21d7-a13f-4cb3-8b41-67909ee623c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ee436d-a441-47ca-9869-21ea51b7b719",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f598de5-2e30-4aab-8645-ebd745c929e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b97663-573b-46ce-9596-20b19eac0018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ae1dbe-5fad-45d2-b695-b1249fa30ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d5eb02-4686-4e38-b898-91f6ecb02e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf851ab9-abc9-4fa5-b4c6-95b674adf025",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf7c2bb-02fd-4dff-a05c-01cfc8cd01d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90b7690-987c-4eba-9020-51c9e4720f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780e26fc-5058-44ba-9ecd-7b92dd729ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72520ff-f6a4-458a-9767-44dcb6c6dffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d607fd96-653f-4d4f-96f4-49c4df5d8c46",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8e787f-4cec-4579-95b1-3085c5e5d8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b331f97-685c-4b8b-90d1-1b71219ff12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca64530-bccb-46e2-a679-1e4fe452f0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "79451fa4-8209-4825-af4b-1ad2525cd686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5d425b-3cde-4020-82d5-07a2856d5763",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8807de-3ee9-49a1-8116-2d6e8dfa4bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159aeb08-86f2-48c3-9b39-d59f517d5891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7995b42a-4db4-4d6f-8205-dc655226c7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea0d21e-97fd-4171-97c9-de2c568b29ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52553cf-466b-4114-96df-6d183f91a9f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6524798-2817-4e83-ab03-c392937cde13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdecddb3-5576-497f-9886-35dc4765a52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b302944-71a6-456f-81d6-5c11b653c772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff0b86c-0eaa-4a43-a604-5709eabd68bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8b0adc-d584-48f4-83fe-21e24dad3372",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e90db0-4f66-4ed7-bb2c-cae183a44dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f23f487-df85-41a1-97d6-d4bfe8e35d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58210960-72a4-4b02-89de-eae0b87ac137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0157680b-4466-4bfe-af17-bc4c6d7f7992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec53957-5559-45b5-b646-7bfab462cfa4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79205be9-db04-4025-b378-a4319d19ce0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01652a38-4807-4ef7-98c5-34909ea7a446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be2c4c6-d29d-49a6-b40d-d27164b548da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a29a48-c026-479a-ab48-a2f0d571adc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d40dcc-0df8-474e-8da6-039cd2a769e1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7236a0f6-7773-4a2b-a101-175addf30d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbc4307-9386-4717-bef1-223a7a0209dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41a8228-9c04-4c8a-8187-48a929fdc678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81afabc-16d0-44a4-b76e-5a1df80aaa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18a484e-8767-4910-af1d-ad4e2e743c0d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775c33f6-4419-431d-9c9d-3f567fa836ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1206089e-fe6f-4a5e-a96d-224939872271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0693a0-b8fd-4607-9c90-aea15427ee54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "793f2559-5d9e-4b0f-b4da-8af710464b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d249a429-92e9-4c71-9052-95f87653a17d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac047bc-1b11-4968-9a4e-282e2d15db1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7addf0-bfa8-4eb5-bc46-7a7a9d928693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b43a2f2-efad-4da7-9e97-fa85cae7faa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17aa723-7883-44c2-8b5d-733420b6f97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d6aad4-469a-4a67-ada0-47a2cbe729db",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a1c413-5b95-477e-bbca-ccef90e4bed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0819b6f0-91bb-4930-98d5-d617e3c46f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42741582-3d25-4716-9d13-c17a0b6c7da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7eaab6-358b-43b5-a640-a1f5a2f34503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb8472c-77c2-4cfb-807b-691b8e167f85",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58965858-a799-43d5-882f-2f7cf494962d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3aa0247-793d-4a25-8d83-5bce400bf0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2340d5b4-e9a2-4f9e-8a52-316f8c5734a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93da0422-7b22-4e5f-80d5-4cde68a8374f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316eddd6-e424-4c0a-9441-eff0392ed2e1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b69062-45a8-4630-82fa-81b7cf2f11d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8171d73-7e65-4844-b7a5-81f0970a7596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c46193-dcd4-4823-b0b6-52e83e42d1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c12104-2a05-47a7-8c6f-bda08e5a11ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46811a6-5bba-49fe-93b1-aed4c37a1f93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8901c3-55e6-4a27-b801-1c48ea502901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e5c64e-d009-4b19-863a-a7f8e51db482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866acac1-3401-4633-8fce-a811e9becb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb5e4dd-ebc3-4949-863c-d97be033c839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca14fd53-f5dd-4ada-bba2-362a7177ffd7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819bd224-7b59-49cb-8f85-7d203a4b405c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab341c65-5269-436f-9894-51013aa5c99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbd820f-40a0-402b-b11b-beb4ab4f4f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a32544a-e64c-4a2f-8e22-2d98fab400db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ade677-1aff-4473-842e-0fbffa17d555",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a8fc3f-8b65-4543-97df-e11e4a26e1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e577ca-2932-4f12-8a27-5dc99c3c47b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acfbd82-6f35-4fdd-9ccb-1d5ade7dee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee93b7e9-0eaa-4784-9cdf-f4bbc0032210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1a13cf-664a-419e-8937-4c147b880846",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2574fa54-1827-4373-91e3-609a382ffdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3a8443-bf71-4d65-9235-b69bb6bc63f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262dc1b2-0f73-4922-a963-46e7aa2e92f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bd2add-4287-4f86-b8c3-715d7607952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386085f1-85e6-44df-aede-bcf9dc40b253",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3deabb-dc14-43ff-a100-dfd0bdc8942e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e11663-f361-439f-b34f-34df9afe8c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b301bf-9c85-483f-b7b3-692a40b9ec45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6efa809-0d55-41d6-a141-524d0d01bb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20bddd9-5aee-4901-989e-fc1d8a686c9a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8174be59-c640-42fa-94b7-0d267c068ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d464f9-036e-4d1d-84d4-d2d893ec05d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49db8988-65ea-4e9b-a46d-7b3129b945e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b4cc81-9438-4788-aad1-c164dad8c9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a9ca76-fbd6-445e-9047-599a09eef3ea",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78294e5f-7790-452a-a3d5-d37798ba2ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da878a5-a605-453f-a2e9-d8c3f42af57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffdb3ce-0d3c-4869-8708-19435606bc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea616bf0-e1d0-4bbf-9f09-53e6c8ad4d7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b145bb60-b7fa-4c37-96d7-590e03558470",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32ca9f7e-50a1-496f-aa0d-e8c9c63e5f43",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa0a821-60fd-4a09-9d77-0af9f806b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbb37df-20ae-43e2-95fc-73cb99209aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac79e4fd-2231-4597-9553-0c52097421ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3823a72-0dca-4366-8dc7-554008ca8a85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ca4e6b4-1f9b-47b9-ad6f-4c9ce8f27b9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e625498-17d5-4e62-bd99-d780264520ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0e6c84d-3832-4377-8905-5643f0a7bc8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a149f9d0-104e-4b06-bef3-ea99efaf45e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f85a59b-a561-4fbf-a0b6-a5259638b770",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9f9b770-fd3e-4fbc-8a9a-fd59936d00c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfd89d38-f4f4-40c3-8bb8-8a4726053e17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c74e238b-9f9b-4868-b8ef-4c5cdbdc7382"
            }
          }
        ]
      },
      {
        "id": "e6ba9df5-6fa0-404c-94c9-48c26c533cce",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9b80b3c8-1f66-42ed-afb7-5d353a3df31e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58ce6f81-a036-4977-b3c8-f1e84eaec676",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92c5ff36-a857-4374-b5f7-e19c1959e21b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096ae8c0-febb-4349-b810-3f4f9a959d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812105df-363c-43b5-a520-e44bfc9e726e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc356ed-6a49-4970-bef2-714ab783cdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeffcf8d-8fda-4120-a3e4-cdf27fd5d903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e92d0f8-e2b0-409d-800f-80de73172601",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e34517-bdd4-4034-ab6d-39c7a87f8b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc175c51-b01b-4d37-8a63-d7b75233b3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e4f0bd-b8f6-4383-84ab-f7fe63c2060a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b0e9ec-df12-4d90-b620-8d7eecaa2917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d20b81-02a7-458e-a178-44d425a26c3a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a311fbfa-f8ce-4c93-bf62-a2c49872e042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3691190-e929-44b9-870a-7403a48d6d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d93439-01a4-42ae-8901-4afd3c3e7259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6f83f0-c304-465f-a080-ce9e60b9230a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d979c1-a2d4-4d24-9c72-026cf2f0888e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed31bb7-4d1e-42c2-9d53-f93f47dc52d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5a880f-e496-47cc-a9d8-052eaed3db3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f669e65e-b581-47b2-9a0d-0186daacd2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a15cb52-d90a-4225-be7f-d05d222a7bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7b6ee8-c2bd-4d04-b34d-320406465158",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac040296-5ac3-445f-a25b-29441ced8506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfffe3a-509b-435f-9637-8fed694dc1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e988860c-7ded-4b73-b9cf-e66be70c87e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27760a46-dc32-458c-8d7f-4e0756f199b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fb0f95-bc6f-47ea-b10a-55f980d1cd67",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66848dfe-cb48-4f77-b9e6-34f33daea77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb9f571-61b0-4bc9-842d-917a37ddd335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc2fc68-c712-4b19-b558-5529fdf8851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f0aab6-2d0b-4209-b4bf-ac0b19e56d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1040d361-108a-4806-ba3a-f48c8286ec95",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15d9847-649c-4657-bb46-75b533a9af7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39d64e3-9e96-4f1a-bf92-3ddaad49d347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d0d899-51ac-4737-9b8a-de4df2eddc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "89666f6f-505a-44be-9b68-402041758ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e8e5e0-2f8b-4fc9-b35d-f0a4157b4fe8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7ca02c-3321-4c10-9504-54409d9f6571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d40abd7-4f67-4f44-a193-f720728597a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e451d0f1-1b21-46af-bc3f-f979009b189a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1931862-6e74-4435-bcf1-99655cfe6d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4de7f51-df61-439e-8d3f-e8047a136f17",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9d1f26-e089-4ba5-9295-29cc431c9ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fe657f-5601-43d5-9957-5674c05fd71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d423848a-5453-4c07-9ffd-f00e14002159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a864710-9b7c-4518-a3f1-428ec9c829a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77551bb9-36d5-4128-9814-0ccb96beb507",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7517d281-c72b-4c32-865e-11c85b11a474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cdab10-b090-46ad-9093-9dced472d824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a2385c-b259-48d1-8d49-1657fc247dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "080735ab-dd71-48f6-8be2-8101027c7e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07602885-9d42-4f1f-96c7-ccf084c08e21",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b258fa9d-f81a-46dd-891d-decc9f2108a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed87807-4404-4ec5-b83a-f5360906363c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d1a13d-186e-495e-bf8e-99c27fb0a15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4734275c-3798-440a-a48d-838f4bcb2a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd8017b-6ebc-457c-b1f9-9bd76a805f2b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e6fbe7-4925-47ba-b59c-c39e4838cc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82469e2f-6823-4c51-9c28-1713ff0c8c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebf2d9d-5d08-4e4b-9596-89fc2d70cded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd319b32-2908-443a-97a9-41f5b7f52580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ae96bf-f464-43c9-805f-df212b915481",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4ce0b2-519d-43ce-9463-c17cde53a82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7ee4da-4fee-4ca0-b62b-13188390ecf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b548edda-d9c6-49e3-a81f-2ccd206c0e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13fecaf6-a170-43ef-8798-4f8ca1925e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f615325d-58b7-4fb7-9c1b-66694449a08d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db6b031-592f-451e-9ad2-99d2ca2a69da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eea18de-e8e1-43d5-b3b8-1d7c73b351e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec58d608-7d1d-4aa3-9ce0-7d28ad46687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0ca924-080a-4fdb-a9f0-b1b345ce69e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750ff942-6a0c-4eb3-8f01-f76026b64ee4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764e9c03-065d-4953-8012-19ed9402496b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ce761c-b6b8-4580-a15a-10a56b49e6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2f62ac-4693-4b76-9ef3-07ea8376d5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b54c0d-2429-42e9-9478-527a8e962c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedf1efe-a525-4f5f-a03e-294568dbf536",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce0ef23-518e-47ea-bfbb-9d51332d0605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609cdbba-3779-44a6-8f02-c19325871a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb76da8-1260-4ee4-9493-53ceb39d5c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7781651d-6e0b-44cb-8261-28a0b0f8712d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4c4e5e-63d3-49a4-8081-c98222e2a0b3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07da39c-540e-47fa-9305-5e4fa52cbb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93406b8e-fd75-488d-8275-7bcec280f72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120f8d0b-3d79-47c6-9900-a81fd8eea022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "978d307c-ce72-4317-874b-be7786ddcf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f382a4-2a1b-4c0a-82a9-3dbbe0c7cc1c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cad757a-f772-435e-82ce-01316a86653d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e49541-3692-48c7-9ad5-838ecdc504a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71025ff-60a9-4389-bc8d-19e876311034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b6544e-2360-4ef6-84b1-9b1456f7d099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925d604e-16cb-4a6f-8405-ae4d9d099cb8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc61012-954d-4801-9ab8-79e9550f6f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1f45b7-7cbe-4333-a6b0-0265828216a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d7f8d0-918b-4838-9173-abbee12cff86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67a42074-f055-405c-bf42-9e2145dce02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1101e6-9785-4962-b3c6-4e64bd0a5624",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275e418a-e7f5-40e3-bd70-a3baedbe9db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ba0f5c-1a46-4b14-842d-7df0028aa83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83401e79-34f5-493b-9d41-385da2245a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd02819-66d0-4cca-b731-8c2fc0275b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b62224b-7f24-4fc9-a2bb-ab346ba62c59",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5ffdc1-458c-4a53-b587-59dac88637b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13098ffb-ce61-448b-a6cf-047f3737bcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efcbd85-d176-4dc4-bcb8-15a938be63cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6140c5-35e9-4f51-91b5-b16af64b664e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23dd3c4-20ee-4488-ab91-551a40fa9d26",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1a5011-4447-4726-b6c2-6c43693e4f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70fba27-7498-4766-8a1b-44e4c6d84922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7279b814-ccd9-4cf9-84bf-d649e06bb02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38737436-5728-4924-895a-ac71fc9b05ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf9c77a-b27c-4054-b397-e4c1c78d8f5b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c46776e-a945-40a7-aef8-bfc710c8e834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bdfdb8-982f-4ab3-b0ec-5d86e761ffc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fda8d70-5292-4154-b68b-3b8440120ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "138d7827-5aae-42ac-b429-0c47cbee16ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1744170-0355-49b6-8a9a-659c47b24b56",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5498fa80-b2ef-4b7f-b54d-6021f038208b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1052cd-1ccc-48e8-b951-d0bc8d1eb82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3192f26c-84b5-45ca-93d5-64e7721f6010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c037d812-86b1-45c8-b3b4-c917f7f51206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7e0f98-1429-4968-8fab-a6190e2fc9d9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a846a8f-a395-4949-afc8-fbc3a0bdd079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da66903-107d-4be4-bc3f-192229f68e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4e45db-76d8-489d-ab49-15dcd157ecee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbeef53-9767-4558-915f-d2fac628590c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ff3d8a-db6e-4a3d-9803-10229d66075c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32dccae-7c44-4ca9-86f8-5423e45f3f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1bab7a-23a7-4974-b88d-411405cbd814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541b2220-1866-4e16-b0e1-94378fa5409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02362bdf-34e9-4b8a-818d-1cec769d95ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a2a644-5d5d-4418-8025-fcc6709ba343",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0f6d0b-238d-402b-8595-9e2eef9cb3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d73f6a-3486-42fb-9dae-5e2d323da425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192dccd8-59d2-4ee2-9701-5614c90a82e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "099ab12c-6ab6-465d-b2b5-b2769717f4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d6fb1d-1427-485d-85c3-2d9c54f6e51a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b774c46b-c9d1-48af-8ca8-9a534b0009f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8077b00d-31b5-496e-b906-d9fe4ead8613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a068574b-4003-46bb-a817-fa2e940911b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9564002c-e872-40cc-96ca-c1f4b761827a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d5263c-feb4-4bba-a809-64c3716f8c07",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465d12ec-b98f-4f2a-a2dc-565973caba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f965f1c-813a-44a1-abf9-a803b370d869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fafe03-78ab-4e04-9b86-021e94c3748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02c15178-f92f-4825-a786-db4f353bb4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a488f1-7a44-43cc-81c6-853f3ab1041b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee84f35f-d807-4bca-9120-a6842da2f88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b582ff9c-5310-4828-a6d2-7245a5616d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a52eee-43c4-4c0b-8d0f-46788596b438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51cbd07f-396f-44c8-acac-aa133b6a2d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a395808-abdc-4092-8662-85be565c6c92",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f717f3d-3098-40bf-88bb-e5d829837b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebac3e5a-6b90-42b5-aaa8-4517b970e7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e97b31b-dbb4-4731-8541-4a6e5f21856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf07982b-72c7-4863-924e-43bb7b65ecc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f99af7-287f-41a8-bce8-2b7d247a5223",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23ba255-3117-42da-97f1-a9644800d532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dca95f-2ed3-4da0-8892-53f3ff448258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0b047d-b968-47a0-b5dd-d710af40966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd450d2-5344-40a6-a7b3-5c8ca50041f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d590048f-67d0-416a-ac51-9b1913ba268e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7630ec-d2c3-46ae-a4d9-111f86108a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803a5630-2058-4bef-b12c-e4c57e487284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930867a3-f35b-4052-aae7-24183932966f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "015f5b28-2460-481c-87c8-77f2b62ff202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b3fdb0-26ad-4157-9cfa-3374e43541e1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ca0f0c-1120-481f-a175-263f761e5a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2d2924-ce56-4ef4-831f-27642a5414d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39655a2-cd8d-4b4e-9e47-ff6cba32ec9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "392bc5a5-cd1e-450a-8c0c-72aeb787c789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da428fe-1b7c-40c2-a5e7-ecb08930f02d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c89075b-a0b0-4725-ae21-1a13097193a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c70102-cbc9-4d5f-a1a7-dbe5650ff029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c600b2bd-7cbf-45af-8aa9-b11e80824bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "776c2ac3-3c1e-4226-bd81-0d36281a5010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6542def-f242-4f4a-90b5-cb0450e8318a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b46e78-978e-484a-b1f8-7bd653c9d556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6288e1-78e4-4855-8a77-866492dc1b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8d2617-c24b-4124-8e9f-44ad8332e5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfa80c3-1e78-479d-8e4d-9a1ced9ecd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e91480-14d2-4f1a-b145-21bae0f9ca50",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff888e63-20e3-40ef-8551-d27f008e9242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d24f56-57fc-4fa4-ad6f-206f41636306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544600bc-12cd-40ba-9352-e2505947c0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62fb0ab1-181b-4bda-841c-87f0ea22cb80"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7dfb727-a9c1-4917-abeb-3dd8e8efcbbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16af46fb-fb30-45e2-b89b-fd6ee8a32f45",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3399ae2b-3be6-4a18-9827-9653e47e02db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "45c53f4f-d70d-41f4-96a5-1eb778245b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937d7fc5-0955-44dc-9bbf-aef9f52f289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a43985c9-a8a5-4e81-a58a-c76c8fc9ea4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd3e7eb4-d9fd-4126-88ed-e42408a14c01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaba2b06-ff72-4a7f-a096-bcc35fdedad1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e732bef-8e82-41ba-aa36-52ce110dd664",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c40fb163-610d-4c0a-96c2-bb220baabd0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "405d1971-7ffa-4db3-a5db-55350b92018e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01c2c2ef-059d-481f-ac8c-e0993c03af8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8a86963-5108-4df4-b4b8-e4986df9a6dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0d0d4ed-6a63-4a1d-b104-8264c2959054"
            }
          }
        ]
      },
      {
        "id": "ae94130e-0d12-47f1-be9d-76cda742b8ee",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a8ab97eb-31d4-4a8b-b736-6659896b52a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a986456d-f28d-41ed-a63e-f9cea768b8db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2002ac6-3922-4b2d-871d-6d409eec46f4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96f3150-78df-48fc-a07b-f77f56a5c0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e976d43-6b68-4364-af6a-99aa080d1274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6660ae-45be-40e7-958e-c0cd853deec9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885becf4-8aac-4df7-8299-a69f93247203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585b4eec-6079-476e-96f5-ee2bd44d7318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c533ad1-ec4a-4e6e-92fb-652d376a57d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c67b00-c63c-48a9-ab08-d4a860427e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6e5233-4fa8-4009-bff4-440f40da8f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b9a442-262f-40ef-a7c6-8683e0dfc91d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d9f006-2db9-4810-81af-745215126159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01799c2-ccb6-444c-98a3-d55f0f0bd577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84119c1b-3803-4ac8-9a7b-08e5210e4c4b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f051a4b7-621c-4742-942e-cd2fe598ef34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55aa7088-c489-4595-92d9-901a944411c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf08544-424b-4639-bb9a-28167425eddd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b93309-f029-4b97-9775-5ddc9aadb848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c22189-c000-4c59-aea9-5a59a5395bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c50f90c-b8e4-4488-93b0-0d42b6cecdb5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108194d1-73fc-4696-a6f5-2a65b6dad38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0264e5dc-e189-45b7-bdb8-2a6ddd1f220b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7e06c7-f7c0-41bb-b7a8-a16e5ec3d99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fb541b-6425-4139-b594-4f795e3807b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73734845-9d1c-4e9b-ad6b-795188b9b83a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c536c2f8-5ec9-4383-bc8f-2fd9be567cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df204130-f1ad-4c1a-8810-24fbc709476e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda58365-db48-4380-b304-c8f842e9a168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da51e6bc-14c0-499f-9f8a-f60fe1da2329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe58b14-6c1c-4fa8-9e77-079920535eec",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0028c3dd-9cdb-45dc-bb6f-a7f4ba6f248b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb0afa07-36fe-4a57-8a1e-1cb45449d696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339c68bf-d4bd-4085-85a3-a9e84b0c3e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6247376-5df4-47e8-8a40-91628859f4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0221d944-f588-4e13-a264-3888f7f0a166",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc696bb-fdc3-4d52-9955-05e71bb2708e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d2acb0-fda0-47d7-bb1e-80266e213b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce520ae-73f1-443b-a553-1bfedd852ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a937c2ce-356f-460c-9107-485664782ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97708b14-0cda-42bd-9650-112c16460487",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b9a840-7962-406e-aa96-f074bb1e607c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f736c24b-6d4f-42c5-ba89-424e5fded111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736dc421-fb81-4d61-b047-747df235a370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1aa8f56-aea5-44a6-bad6-32caec49eb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a715843-cbba-4764-ac0d-f6a91176a3bd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb465d-f61d-4bde-b230-8a4ad815ccd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e71c25-93c5-40c4-b9b5-dccdde151bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef2e729-36df-4bc3-8793-bfc9f5fd577f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4c7bde-ceff-4684-a553-4e3ae2aed39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeca8af-d327-48ad-8e04-95dfae5a799a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cf2b16-63ab-4618-a3b1-ba8a5cbc1876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0acd18d2-90e6-465a-a153-6d3b382e4b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a83de2-43b8-4523-b45c-7a63a0f1a857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c5eb19-3053-44c6-9deb-5a1f86fdb0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3122b1fb-4ebe-4c9e-90df-5c9a1372114b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1325e5c6-2420-47a1-958a-3f1f4774641c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54b3a45e-7277-428a-9193-48cf1bd43a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c90d89-9167-4f4a-ad0e-3998f2cbbbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e40d13-ea51-4f27-ac1c-1169acf6bba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9238179b-740a-49ec-b097-004939b27128",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363ea8db-6707-4f9b-b3ca-ea1593aecf41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61549359-7842-40d6-b444-78cc0db4ebd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3a92cc-779c-408e-b366-2418e28e642b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d868bf-4508-400b-91eb-7d4d45f19900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a0f6ad-8458-451c-901d-e0b556c9af3c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e981bec-7476-4024-beba-852b64f146b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6e4e0a-415d-4241-8383-5cfad8bb8da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d8920b-39f0-4fc0-a53f-28173e0cf57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27731975-3f4d-49dc-a132-b4a38aab1620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c9dc65-6567-483b-ab39-27a7c39598f0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db49529a-c746-4899-bcac-f4a77329ae75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f863df-cd57-420c-9e1f-ee5195427bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bf7c41-6cf3-46ee-bffc-92f7ca8e57e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b76cbf1-2a21-4a10-b496-17e2735feed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549039a0-1426-4442-af01-6fcae7246907",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d20378-eed3-4638-b7f2-5e38afcc8b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf547041-96fc-408d-b62f-643077271ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86c3b67-2384-4e0d-a56b-89a786f48d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f133acf7-6384-4e5c-88b0-7e2fc598d1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f9e56c-210a-4608-9c7d-fec2050b1ee5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede571e1-d290-4a0d-9e80-476c0f6277e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac912c2-c0cd-45f9-8d53-75d5bf473906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0f97ba-b264-45b7-b934-568e3d3d92bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1f96bc-e130-4ecd-abc9-dd99090e66d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a00b07-a873-49c7-b45a-1eb1dab55a51",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1691ecaa-a9ea-43b4-8682-5f7b2b623318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a1b8a7-5a0c-414b-a98e-a70ddb1c4066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384972c9-889c-4406-b31c-5ccc0b64f179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14f755a-efa5-49ea-b768-1fa2d27bd205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af6f1bc-4665-4f37-b580-5fcecd11cd6a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbb7ecc-4925-47a0-a96a-5cc1a08b3dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a94fd5-76e5-4475-8d5a-20437d26f933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47922a7-ede4-4dc9-a3a9-9b7543102536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fa5ab4-8075-41f6-8809-a5aa1e4ba017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe894cf-0db4-43ee-8ffb-6297e5cd56b5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68659ede-efdb-4619-8d2b-bc6e2dadf9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183cf4fe-bffe-4ce2-aa1b-0c6e61452117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d9b978-aa31-4509-9e9c-a10c27a4ce9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23fb1ab-1617-4097-9894-0379eec3d04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd19fb18-5790-4cd2-8fa7-3d81d210cf58",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c699a416-1cfd-45c5-9a74-c7e518873a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3e5b59-6c2b-4151-b331-46a3d0a68580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d6fe1c-0f97-4250-9a64-190d793dfa16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d924ba9-4a6c-4a38-905f-26bfa1fc4449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15048494-b6ea-4a12-a9ec-39a2e25b505d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25aadfee-7577-41ad-a001-c863e64081a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548e45ad-32c1-46c1-b2fa-a7e99ce9d4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cf32bf-94f1-4f63-bf8a-8fb018c776bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6ad45d-90b3-42ed-9c69-9fc5b972f05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe7bed3-d487-4186-acfc-46bb72334a8d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f471162b-6a9f-423a-a13b-870afae9faec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b18ab38-ef1f-4f76-bdbb-f55443368d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d589ca5-f609-484a-a742-48b75ef562a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb1815b-2c0a-4e11-957b-c678572ecb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9299bbb8-3db3-4d11-8752-57d2850764a2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3198ca-d1cf-4f50-88f5-af62ccd886b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ef42da-2962-417f-8ee6-fec043740db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7817a5aa-7ceb-4c39-8e0a-2fe37cb9d215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf19609-ddc4-4fc1-b298-4e631c9ae40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2817398-83b3-46ee-b431-3277f44b974f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60dc2a8-51ca-4686-b9ec-d9b8da82c630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7cca92-d7f7-468a-9eae-051e8d7fade2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8ea9ae-a2d1-48f5-80aa-d0321439aeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb53543f-bbbf-42f3-a0e9-5ecd62c969ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ff4951-dc15-4962-9253-a543f83be1fd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e70f4c-b3c2-48e8-978a-2f88e38f4f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a8c941-4eed-41ca-9781-d2f46d1fd5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae434bf-29e5-4058-8b3b-2599adb79f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14adfc1d-d219-4c27-a259-ce49f8dd0524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efece689-93f2-40a3-a917-46533a324014",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abf28c1-86e8-4a6d-acea-6ba532985ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a299e91-db06-4716-bbe8-e71885e0119d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1ece0f-7f48-49cb-99b3-baf611d58fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3ad565-0e33-48d8-b8e1-ee553b3cc02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e274db-5288-46c0-80f0-56999eed4969",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a82549f-f68b-4650-9190-83e897b238b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdce7740-0fd4-4f84-95b6-a96db36d6e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c758ee-4cbf-4d47-9586-9a345abb68e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c01ba11-c7ee-4342-99f0-88fedcddcb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813a2084-51fc-4711-bfe1-901ab353e2e2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aabedbc-4599-46f8-b176-7c71575f6079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07f6f7e-c69e-43b1-978d-637847bc37b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff8760-23b6-4aff-b218-8759cb6b18d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6e03e4-28e8-44e3-9242-8fc45bab7143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16688ffc-24cc-417a-b327-2eca86fc3bc4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0ed9a7-058c-4d0c-90e6-42dd581e1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d31e4add-8046-4c15-b1bf-525566700432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98be6c25-1731-4582-98cf-194458751a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766a50e4-1a7c-4efe-ba40-31deecaba8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3179c64f-7123-4b3a-8d82-0b229a821af3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2396a97b-880a-47dc-833d-2afbe14a46db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc7e0459-e0cd-493b-b4fa-bd37ddf3eae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5682abb-238f-484d-a83f-81634e608b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5944d5a0-ba89-43a1-a9f5-7024546a0994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f4296c-3245-4e1b-9a5a-ce61c96e8170",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8867c0ad-d5a9-42e0-8f0a-198a40d564ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7172fe45-07ad-446d-91f9-0494b7326f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188302dc-96c5-43e6-8e5f-8cef6e460492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405f3f5b-3ed2-491a-be8f-35878f5f549e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18115e8-9719-4e36-9f88-eb36664d7856",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304fcdf5-dde6-4729-b3e6-8cbdd4c08587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad13b931-7ca6-44d4-8b13-4841138269c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbfe2be-f82b-4919-a146-59b1bf8561e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c0682d-7743-4338-92e4-502c27b8b87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ae20f1-f282-4e76-a051-44d622e93e93",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c2b75f-f0ad-4f4f-9470-288147c2b806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0baecd43-05bc-4afe-964e-ca45032b63ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bdd414-c285-4e9c-a1cd-eccef52369cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a380e692-8ea8-458a-a710-89d56354a307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0164ed-9b97-4a6c-ae8b-40ea4f0d4793",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9ed235-8cc7-4997-81f3-93a459eef05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9f9606-8329-4362-9678-636a6729affa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af903313-c0f5-47ae-9213-5232ea97d1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e14615-71d9-4bde-a90b-2838899b4094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a3dddd-3194-43c1-84e1-92d7453938b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb0db61-075c-4bb5-b564-c95f1d2c49ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712b6c62-13e8-466f-9dd4-6a7efe508818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825f5b67-53bc-4c59-ad1c-ab050e329438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044fae44-24dd-448a-bde6-7ca851aa7fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fbb0ef-70e4-4d50-be89-75a55ce715f6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c0061c-6302-4ca2-bd10-1171fb4f90df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ca57e6-f86b-4ac0-8657-d3b52ecb65d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe05be6-1efc-412e-bad7-fcc7235fff23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eb781d-d1ff-4d3d-8880-41fb28481c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818d067d-2da4-47af-864a-02ca513aa92f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f72f1ca-503d-484b-82fc-30dab0397648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a272f183-6154-40cd-aae3-5778900dfe96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157e388c-ab1b-4c24-be26-edb61482afa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597b1ffb-2443-495e-8e58-8fbf07119f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3669ad38-8557-45a5-bb27-1de2009c5839",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd385ba0-f5e4-479b-9be1-415717aac1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ba1238-fd14-41f7-900d-f1d60ab966c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abbc9f9-0415-4f6e-99eb-958125ab4d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0543ac85-52aa-4839-92f2-770f691820f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f361a203-f084-45f1-9d9c-b07e5abbd90c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1157f36-4718-4dad-a0ae-2ecd16ef06d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fde6c6-d595-402a-8f09-d362221527e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abba78f8-b96d-4187-8fd2-1845f3489c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3537f1f0-0eb7-4b4b-9b3c-5223c4ceb3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1007b5a8-1a75-4a0f-9f50-8e209721f791",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3171e87-622c-4503-bae6-788ff5b79918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585fa9d7-0ce6-4d79-91e2-99f173e31f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e18a1a-9409-4e4f-a464-3270765f1c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15216039-0208-4a05-91e9-e75c314217a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84298c3a-53c7-4239-84c4-4dcd0bd66d14",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afeae08-24a9-45f9-b093-807f6141ee39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94089426-de99-4c9e-b09d-c772a1fce7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c72d92-cd6c-4868-bd67-ef092df46c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c9d3e5-17e3-4b88-94e3-26d76f985ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df2ce99-b68d-46ee-b4ea-5d5bc0c401d4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa0d117-91a1-47ec-9f85-2e8d61df6a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c119d880-379d-4643-9692-de9d89e5ffad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9206e7aa-5b99-4af7-aaa8-b6b8fc0e4821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28743e7f-5677-423a-92ea-ce099debd116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5a626b-2d83-4616-ac51-7bd054376860",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5f1c03-ceec-460b-bb5f-b4af9e019432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f9f39b-5b9a-4bcb-b3dc-92369770eae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d27dff0-3ad2-49b3-9326-feb139ed884d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25d6cba-5e13-440d-8e44-80732e8a12fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d69078f-c950-47e5-a833-0237e594f715",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c622d6b3-5d02-4b63-8ac7-c628c646deb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56004012-de25-44c1-8dd6-ec6db44a43c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e8e1c4-7aaa-4eb1-bf5f-a0f68836192c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd543ff-7bb6-43fc-bf7e-eebbda38ec4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7b9b31-94da-48e5-aa17-a8fbf293689a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88970f5-9782-4ae7-b234-f0e89b5d0b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5682377-49c1-45e4-898e-0ec031444886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fb1c64-f70c-4195-8722-aacd5f31de4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2321322-9340-4a87-82e6-4bb6cbd9b984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a38a98f-1204-45ad-a119-3c808d855dc9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d395dd-5aab-4637-bd02-65aa4bb44fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e882ee36-97e3-48fb-8cee-a0453797220b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaddd2b-60e6-4708-a529-91ef9a4b3404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bfdd73-647e-4c1d-b5ed-5bee8e67d172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba091685-9d7b-4c1d-9237-453dcb33ed1c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0004c3-eb65-46d2-b994-22ca0fab852b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0531fa92-db03-42ee-974d-3a7e448bb485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ae5860-c2ca-40f6-96df-712d8c5ec2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55290116-2f81-400f-8c5c-efbf4f649cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755a8910-a4fd-41ea-b85f-ee2a7519ac04",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68cca90-3216-4859-b636-951f8712bc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2b5701-4a95-46d3-a88d-0578c584a062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf333c7-d1d0-4636-9d43-0c2fe737b70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76368e13-3e71-4159-b716-a65ef5ec65b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa093cd6-5a26-4b56-ac39-7a9bcc03572c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fbe5a8-a515-4f34-9ba2-e0601431f8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ee24d7-e12c-45fb-80ec-b3a15d709367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d985e2c7-2728-4ade-bd32-e318f2a557d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbeab23-0fff-4b54-b9a3-a8dd4f99c9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dbcf79-9d03-4795-a124-f188974a029e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12476dd4-b84c-48b4-9e1b-80cc6adba9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d99d2b-8a88-4c83-9841-d4df5d9a18d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803f55be-85a6-49f4-aeff-ab01827d3cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a503ea-11c0-4fe5-9db9-62ff3b0a4b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0854b21b-01d1-4618-82fb-fce48c9e57a6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4c0004-997f-4f0e-b5c5-22c12366961f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289e3c09-6db3-4c01-b479-6365a369b852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3872a3c2-9107-41c2-bff1-ac3c24039389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f3bac5-38a8-4631-91b2-4e870c00540e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4ac035-6c63-464f-8c84-d9614cc81464",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1000206c-0127-4aa4-8025-8ebc41a057db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8873c48e-d99a-4fa4-ace5-13a7402a5bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cb1803-0ed7-436d-aced-8ed04a0c8eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf793ad0-190c-4027-b106-3b3a3fd87bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52203aba-58d6-4e31-9a2e-af10f8bf6376",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263f10c9-049e-4afc-973f-23cd8785db45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2db567-a7a4-4206-afd4-d3e3cace9db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b03f446-5575-49a0-807b-01b2782c1fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf982165-1f68-49f2-a0b5-e3d38613e2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01ec28b-fa08-4592-9ea1-1847cf52023c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440130bf-ad2f-4786-8b97-115f78abb037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b14250-4b17-4446-9391-de34c53b5740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1713440-e6f6-47e2-aff0-2bf23c9e089b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9c75b1-a9e4-4d67-917f-2b17b6abda5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d5fbea-c0c5-46fb-a49e-3327f7cbd985",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0db3c5-277f-4706-bf01-fc37acb48e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2541aa7d-fcdd-4fc4-a69b-eb0dfa7ff385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e84867-b08a-451d-892e-569847fd6e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b8682a-a784-4775-b3cd-47549b84e4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b600057-615e-454f-bf70-a0b1c2049eee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20d0450-d3d7-46fc-af3e-34fea9d9e75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1e8790-eb01-400c-9762-8a37db2786ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f37e1e-f138-45db-b2ac-b2b69a1c97da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d8e78b-ee6f-4f1d-a664-3a06b370867d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d1f385-5b07-47fb-af63-9230e08c7ac3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb622992-1e31-4ad9-ac6e-fb32003277d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704ad86c-6579-4eb8-b899-34d1ae610112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a463105-d0b1-4aad-9139-6b827b0aefbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe491d7c-eeb3-4611-8c5f-7fa22ca84ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b8b1a7-4a58-49bf-8d3d-4458e81e21ed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ee2329-59cc-432d-90a1-06c0ac4afc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef87864b-aff1-4169-a3b8-a7d05a014cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a932fd05-4f00-4698-8297-42685c995fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a932aab7-0dc5-4b6b-badc-0682b8887ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6204d5-e97e-4490-ac32-1b0bd11c741b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0198479b-6d07-4ea0-b320-72682b5ab2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507939f0-f43b-4599-a5a0-c7d80fefbe4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6c96bb-f18f-460b-8f2e-fb2ad36bb0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c1bfca-76b5-4128-96a0-09151db9a98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea90306d-87d1-488f-94c2-8e793d2e29f8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d948c9f8-52cd-4195-8431-0009364d486b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b22e54-2929-4b1c-acc4-24a51a69be5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab69da50-bdcc-45d8-9e56-ab7dec27cc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb42e84-1d28-4069-9d07-34bb3023d99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9f3f49-6ef1-4106-a34b-2349f8c942e1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c37dd2-6aa7-4fff-8b98-7ac1658b7562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e61b30-bda6-48ed-b56d-a42771ef998b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab74d4d-ae21-4b7a-9309-16dc577a3f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5373436c-cfd0-497f-811a-c59480dfa74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceffd11-3278-4981-b81c-c528436462e2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12599a-5f89-43f2-86db-00317f14302c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdbf29cf-b85a-488d-b1a7-a0abb901d880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51515fa-84fe-47a6-aab3-05de07b19bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6809c47-d3ed-44ad-9bde-d2df1f457edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c000d1-05ee-4fc6-a7dc-f2a40f0777b7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4982dd47-3f4a-443e-8193-62dda6bea132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce78071-3a7b-41a7-be24-02121e11d6ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b1aec6-e05b-4add-b3ae-19ee145dffdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594ad65c-513d-4b38-8181-a50769af411f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a691580-e3c8-4219-9341-4650975c7999",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6d637e-641a-4dbe-a58d-d589b19f0944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fa89e92-2e5d-49d7-8c2c-0e3dbbfed3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ce2b96-0a90-435b-b9fd-3b2bb25724ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5091cafc-f576-42ef-8b1f-ea95db247a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aaba195-ba6b-4fda-b4cd-0161131d8904",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbc799d-b2a8-4a60-8ccd-8bb030e36657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad9c10c-a496-4456-af7a-a3f17937683f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7564c4c-646b-4d12-8cc3-60869dd97029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348a010d-1651-4ac3-8011-f9871c5ee268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967fc1b9-c2e0-486d-872f-3323b1e36505",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbbcf87-fb44-4e4b-8ac2-c08286cc6372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec6cd93-e524-41f0-b81d-2008dab5fa9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02611ae-6bd2-43c0-9418-70e2945cdfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78042abb-50fc-45dc-8efb-1cd8b41cf8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252657fc-8f84-4ff2-897f-1289d3136416",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2536c712-4b3c-439c-9221-723b5c9a9232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "394ad1f7-dcd9-40f0-9d7e-d2a1528ef2de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d217710-2695-4c54-85fc-45feb574d9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374f0d75-1ed9-4ddb-8b12-0a4f0ea607f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e376ecb0-e947-4b45-bc3c-d2b675ef2127",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33cf1dc-b09c-46f3-b508-dbd684e5a716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ad1ccb-fdbf-4caa-9f7a-31a8fb946621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f916152c-681f-496a-8bc9-bff40d0eaad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b8bb7b-6059-4cb5-b760-756a96c93a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b48ef3-9569-40a8-abc6-57b662cf769f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f689a6-2794-4aa8-9584-2360b7c6deb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a04913b-c19d-4042-aeff-bed4c0d1a8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bbfe68-a52f-405c-8862-ba65b5cc52ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a548c1d0-ab33-402c-b586-738826a6971c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472b4a89-4824-4416-9f21-168fe7f6eaea",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d6c42e-9a4a-4a94-9d0e-c2555cbd14d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "433f11c2-1a32-4bd9-9db8-16577dd154c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc86af95-6377-4046-8159-ad42e1c55958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f463d93d-5580-4d37-9ffc-3c636d589679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9b7948-6509-49f7-9716-7fd75d93a2fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36f4840-d104-4de8-8ac0-4dbf9bd933dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e076b253-9ae4-4f63-9db7-20ffe6f6591b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f411d1f-88a3-44b2-a03e-63f9aca0cad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe6c994-4790-4232-85d8-cffe199c2bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a8f810-4e85-46cd-b563-20b1fe814ae8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefbb9c6-f9e4-418c-90d6-cef2e9227874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb1c2f6b-dac6-4603-9751-79209ed4c97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca148f78-3b55-4802-a1db-d43e2fec5e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f3519e-292d-4ac4-a92c-3f3669e41ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdcf4c1-c2b4-4a93-9e8d-4d203c64f470",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433b1531-0097-4e4f-b05e-a3a1b3604fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d66e44-2f01-4ef5-9d3a-ae550d3d1995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9944a85-314d-4376-9cc0-c7118138eaa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1cf0bb-cc39-4c26-b077-234fa03df8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22587909-55ad-4d21-babe-6f3b30224b4b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bd97bc-ebab-468b-9bc1-8e18469d08fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa01145a-e379-424d-9963-d988384b2df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650c1dca-54ea-43d4-b7c0-162c1800412a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b0bbfc-1348-4520-b005-386ccff852cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa444440-b52e-4f2e-bed7-b8f8c42fc552",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10627c8c-13f8-468a-8aaa-b8cb123e5f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a7723c-08c2-427b-9216-8cb4a74477b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc2a40f-c9d9-4ac9-b37c-09aa1d7f2fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee5a8f0-184b-472b-95bc-ba463281d00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55b58d2-2477-4fcb-9a12-dde36a67e5be",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f20037d-c537-4d21-8023-20e029975317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f70fa06c-e22a-4ae7-8b14-9c73ca49993a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9e2037-4e5e-40d9-a9fd-4019cac777d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1867b002-f57e-4fdb-b7b1-716e3cfed250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a83db8b-1d37-4d97-9f37-0023db259d09",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc02a77-d4e6-4847-a674-ec01fafebbfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e52ad29-c2bd-40f6-b429-b575134c8c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822066dc-a1ff-41b3-83a5-05f5f1ad31d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6c056f-e3ed-4443-baae-5ce2758ba50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddae56d-7b7b-49d2-8469-190b9bc34b21",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b41a56-8e73-4262-9ac0-7ffd6591b075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f67cfa-2e36-4f32-ab5a-1200235616dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d622fd-c1f5-4310-94c4-1f06cc262b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761d5b90-953a-41fb-baf3-577b7156bebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa846040-190c-4859-94f1-aa4bd8609bb1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01c0f4c-022e-4465-98b8-76d9e0f9545d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d2e497-544d-4a1b-980b-3d7819f15fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3cf2d4-737c-4951-87b7-84160bb7c6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6592fd42-45a9-4d52-b467-229e7ab43806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfc7398-9c79-41f9-9b32-0b71a68a1e92",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d632419-c27e-418f-b2b9-03137efa5f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd522cd-497f-4683-8458-ef6f2c9899ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed016e64-ed69-457b-b033-47c6851af851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d6e4a1-101d-4d26-b0c9-13e5fe7deb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb38954-4dab-4482-8407-3b8b0ae7987a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe2d789-28d9-4fc5-9e04-83fdf3947b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8538d376-0476-416f-afa8-d82cc8de5670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55809429-98d7-45ea-99ba-034cb02670ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c03f67-d561-45fc-ba1c-c51de0fbc3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bb3b6f-e9a0-4872-abdd-b3f56955a063",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ffa9a6-8ba7-4518-93f4-1e86251d3ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac32fef3-fd2d-49a9-8a83-43d43c666b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc70ec2-83d7-4d34-a9aa-648f33a9b291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f2e712-b64e-4edf-84dd-f1615e1c248a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9933e8-bfcf-4244-a333-608baec8cbe7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755dbace-952a-4883-82a4-4ee59e8a8e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e3a5c7-e02c-4872-93a4-4576c4167f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48af912-8041-47fa-b8db-434015922084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7723192c-7338-4b37-bedf-26392399ed25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1605745-6e9b-44c2-9413-0487349fc230",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbed415a-454a-4815-87e9-dc1dabf01dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b251d71b-298c-4e68-922a-fe252a8aa7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02701aa7-2761-401b-907a-34402cb9370f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949ac9bd-7261-4551-ab2e-85cfc9596e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bb0b35-afa8-437a-88a2-9135a56b045c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6671015-7514-4b56-ac18-04297f7b0c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6cd0a23-fdc7-463a-b44f-267cd0add05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baddbb0-c511-4ff4-90d3-658d31fc243c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703d50cd-75c6-4481-b4d7-fa1d78b120be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd4f5ed-81d5-4b91-8b5e-cc67e0c40859",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2e6bf3-4dfa-486a-b478-2079b20d029a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c16a73d-e68c-40d2-ab30-98d7fc08d68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acea9f3-e3c6-4eee-95b7-00a1caf63192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c4eb66-b5c8-4d4d-abd9-b9c2f080815f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e39acf-7927-4639-87ae-9dd8d69251e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497487c8-25f8-4200-abdf-3a0ef325515e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21142e40-37e5-4de2-9448-437842871162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9369a702-d517-478d-87fa-314018c201af",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcd68f7-9f2d-40d8-9bac-d0449af08e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71c531b-979a-4247-8179-9f0d1d52e54a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8511f803-eb67-48a2-8172-5679487da71a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afbfcd7-6336-4af3-95b3-15ffa3de163c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f64e9b-2b5a-4d0b-bb6f-c5545d52b602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77387ee-8902-4f52-bc1f-5fc5dc3abaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e4768d-4441-457d-b331-51f6a83db315",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856450c5-a155-4b46-81ec-59cffdf475e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25342db1-5246-4d55-9153-8cef113fff09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638d2519-8003-4a03-aca6-a364649d30f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab1a5d9-534f-49cd-99e3-a6fcc2823250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a792d0f-cc4a-4651-9b0b-1f39de84d453",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81419882-938f-434c-83e6-7006b2aecbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eb2a7b8-3682-44cd-a56a-514c771c0343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83075bf0-3ccd-4c83-8146-ef7c740a43e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73042f7-400c-43ac-8848-2c0be7077b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8115a196-35ae-4a71-94f7-722f7eed05e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2383939-61c5-4a1c-a151-264a35c131d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3b4c8e-eafa-43eb-a967-3bc0c6b4aac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d33bbed-8734-4634-bcbe-3f0a50f4e1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6c3968-2bf7-429c-9cb3-e1c767560a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89444574-c6e6-424b-ab26-21947ef5641c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd828f67-2e1e-42a7-ad5b-da9c194c17be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176df8fb-3601-49c6-a8a9-b234fe39fa94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1227e4a-e8c7-4734-8812-c09bc73ce450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83becd8f-2981-4554-b0f1-4559101edf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f45986-87f7-42df-a6cb-f08aa4567af7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc2a572-b5dd-48ae-8a7a-91baf4cf702d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298960df-022e-4f8a-9516-a6421b5756b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b43338-e59f-44b1-bf32-e788a9eb9207",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acfd5f4-5e96-4a1b-b381-5ee0a14dae61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76c3710-f83d-4662-aaa6-fcf9812c3d38",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b0b419-46f0-4d2a-89fe-0b2d4526b288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4d97c10-4fe3-4f99-9f3c-9c47b7a2bcde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7895c9-1b0f-428c-b099-eb22d9a50657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc1439a-7852-4a56-8e94-e226e74e767f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffb54884-bd48-4374-b698-6116fcda6cd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3e62fa5-35cd-499e-a7d9-484f4e2b2fe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "614c83fc-dba3-4597-8863-64aa4295ebfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c3fc93b-5553-4310-92f3-6a6c533ff7a0"
                    }
                  }
                ]
              },
              {
                "id": "3ca2ebf2-ed3b-4fc4-8a2b-f744f2a0aecd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f55a0bf2-1cf7-4bc1-9762-990004c1f707",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484b8393-a008-437b-b103-174fa93916fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "681b75ee-25ac-4897-b7af-4c1f3dce7438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f8a791-4107-4907-92f5-2c84f70ecd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cf8529e-af58-4a1d-bfa0-aa5057b3b8c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "210c3c31-908d-4605-ab9c-8e85320ed4be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a502924-e3f6-4efc-9e7d-c5bd1cd5f7e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77a4e0f2-fdd5-4a8c-a595-b26c1135a481",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e4b6eaf-3ad5-4acb-a500-e8f314cbc603"
                    }
                  }
                ]
              },
              {
                "id": "2723eb50-3680-4d86-ae3b-5aac49d7474f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c4d31076-b73f-4747-b6c2-66ff71b58345",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d2fb01-f0bb-47c7-a886-0adec0530c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7fe49a7e-d9a7-4031-930b-a17fb1f74641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d63fe8-1a2e-433a-91b0-98626d47cbe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98969b7f-a3ef-4cc8-965f-45b2f2d96867"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68ddcb17-f89a-4b28-be8a-ed90257aa2eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d5ccaf3-1d61-45bb-8fe8-3bdc1b10853e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5be81302-daea-4c56-9864-be36cc28d03d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "530db26b-5bf9-443f-99fc-e5fe15668c08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a30ae6b2-3fc7-4fe5-8e76-cb1340d59e92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73f0a357-578b-4927-91dc-1c573b933902"
                    }
                  }
                ]
              },
              {
                "id": "49975982-9b5e-43eb-98b2-75a2a830a695",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bba750d-01ce-4ab1-91c8-862537f5efe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49aa7530-dd83-4c37-9745-cc9a5c98b7ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acd70a77-4c62-41da-b5ad-6378774d15fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3935dc6-0950-498f-be8c-7b17da6551c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4237144d-6c95-47bd-882f-ce6c8ff3b882",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8e3214d6-39e4-48d4-a8da-ed42c0ea474a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da95e55d-9e48-4ffd-950e-b5a24eaea0d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "207b2cf5-c6e7-4206-9f9e-3cb0c3ed7079"
            }
          }
        ]
      },
      {
        "id": "5b6c0450-e92b-48ee-a428-3b14e55f4796",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "789204e8-e4fa-4bb0-8725-7908a7f156e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb446149-031e-48d1-8cfe-0d5c4ab4c8d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c847f1cb-99d8-4b65-bf34-3772be6c193e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ed21a1-64f9-4492-af48-f9413cdcb886",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bd5e00f1-9da8-472f-b7fa-0e3f8a3be183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95689413-1b51-4528-adb3-c940acec9fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cb089eb-4aa7-4b1d-ba1c-c73fba67139e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c117fa0c-f154-49a3-91c7-132794931ddb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77ee680b-f408-42f5-b0a7-7e441b7ad3ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50158e89-29c0-4f94-aca0-ba5835c01cfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28d37f39-8feb-4a76-b643-cbc8c5368c02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f037c40e-0d76-49fd-9d2a-d680d91b3f1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e3e44f68-eba7-43d6-b535-90cf235690a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0537057-ea46-4ed3-9f8b-50f19da257fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56115154-73f3-4ef4-93eb-100a7265d309"
            }
          }
        ]
      },
      {
        "id": "f306c256-dd9a-48a3-ae44-599263ab379d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "69762d63-19d2-4b15-84f2-4a14fcdc9958",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1397be9-fe05-4b66-a528-ffd2f09f1245",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "781b84ee-1f9a-49ab-98bc-ea68dd57793a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fd7774-cdc3-440c-82ea-f7fe1c344db5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "976ea24d-d2cd-4cc2-8215-10ed103f95c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efdc3ea-9014-4718-8c4d-250a5eb78cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "674b901c-480f-4b02-a83d-2631e866a39f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2504034-cf97-45e8-b66b-3fb3dd2dcd53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d258d1df-db0c-442f-9d6c-7b7600016c84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46df2209-bdfa-42a8-a0d0-a82490ab092b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "137e1a96-d2aa-40ea-9e6d-281ccf5f1b0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de0f9494-7e61-42ba-a8ae-1ecfa9fdd6c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ec298290-8a96-4d2a-b049-94eb69c4c0d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87881d4c-7fe7-44dd-ad22-5c8adb176972",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "771b91db-4d8e-44f1-88ff-a81008795289"
            }
          }
        ]
      },
      {
        "id": "f0a2246a-9f8b-4538-bf1b-5819dbe37106",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7185b2b2-61cb-4b13-a2b1-df14626c04ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "171b0279-cfd3-4d4c-bf5a-f4db178d2507",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01394fc4-02e6-4836-8768-e003e9bc3d1b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f129546-df57-4734-bf3d-c738c7fc393a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f88b7670-aa98-425b-a54f-9f6389bec11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18f178d-af4d-459a-a125-84208ce0daed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab1da87a-5ddb-412f-a573-9511ba2a8163"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5fc24e3-0914-45a0-909c-1976ab09cc9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "219f652c-b58a-45fa-80d0-ac59732429ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "124de88d-a832-4e84-845c-554e98f94c1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5c04e0e-4d66-45bc-aa02-417a8a66aba0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d89492f-fd6f-44fe-902d-9204aeab514d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a2c06d3-392c-47bb-bf91-55588e48f520"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43fbd422-7e3b-4f91-97e6-8f542586d355",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b73f6675-55e0-408b-8cf5-9910b03b4d08"
            }
          }
        ]
      },
      {
        "id": "870ba7c7-e153-43fe-b699-526249fc3c4d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "255e022d-97aa-4912-afe4-0ef06c9f7937",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64966276-d9c6-449d-9fa8-8958fa58b261",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b0657a43-b5de-4d57-97ef-20a4b49ef7d5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cbb2605-363c-44ae-b49a-8934119d26d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d2af88f-2e3b-4ca2-9fc9-f58401635013",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 354.5352112676055,
      "responseMin": 22,
      "responseMax": 7553,
      "responseSd": 942.1968908643955,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695602030343,
      "completed": 1695602143410
    },
    "executions": [
      {
        "id": "3cb6dd54-191f-42d8-9535-d0189e875bce",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eadea964-932a-46a1-a274-2068375026b3",
          "httpRequestId": "47a962b5-1fda-42a4-bea8-a1f2a1ce1519"
        },
        "item": {
          "id": "3cb6dd54-191f-42d8-9535-d0189e875bce",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f91f0694-c9c7-4890-8857-ba19e3cead89",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "cb73521b-6d62-4a6d-8ab8-3f12e829c61e",
        "cursor": {
          "ref": "29dee281-32bb-4c6d-8b73-fbb88b759e7c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "291d28a6-d2c4-463c-87fa-e90216a50ba7"
        },
        "item": {
          "id": "cb73521b-6d62-4a6d-8ab8-3f12e829c61e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dbea4a1b-c282-4707-805a-7540448f6480",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "296eda87-68b3-42e1-83a8-99baafdbf4d9",
        "cursor": {
          "ref": "b50ce8b0-77f4-4d6d-b7d8-f60930373d2d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9aa4b27d-1eb8-4ac4-8fd6-fc31fda51f2b"
        },
        "item": {
          "id": "296eda87-68b3-42e1-83a8-99baafdbf4d9",
          "name": "did_json"
        },
        "response": {
          "id": "992864e3-52a6-4b12-b9cb-959652e7c254",
          "status": "OK",
          "code": 200,
          "responseTime": 1491,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9adbb7d-0629-4b4e-8980-12945d5709be",
        "cursor": {
          "ref": "f489683b-b03a-480f-8e0f-df84baf3de82",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7603dd99-1236-4694-a071-ab1970f7f05e"
        },
        "item": {
          "id": "c9adbb7d-0629-4b4e-8980-12945d5709be",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2bf2f8c-d69e-49c4-aa9e-9dc474c5e935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9adbb7d-0629-4b4e-8980-12945d5709be",
        "cursor": {
          "ref": "f489683b-b03a-480f-8e0f-df84baf3de82",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7603dd99-1236-4694-a071-ab1970f7f05e"
        },
        "item": {
          "id": "c9adbb7d-0629-4b4e-8980-12945d5709be",
          "name": "did:invalid"
        },
        "response": {
          "id": "e2bf2f8c-d69e-49c4-aa9e-9dc474c5e935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5516a725-5b0b-48ba-b0c5-fc49348be22a",
        "cursor": {
          "ref": "5644751b-b301-4d73-8434-3189e15e898b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a88ba7e2-a743-4907-a16a-881beb8d43a2"
        },
        "item": {
          "id": "5516a725-5b0b-48ba-b0c5-fc49348be22a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d0872abd-79a9-4f8c-96a0-de09e05800df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 367,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6e0c5c-4eb1-4bef-acef-c8771dabc464",
        "cursor": {
          "ref": "8e44a1d9-9ab8-49ef-a8d7-b4e78de02bdc",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c1e9752c-298c-4d80-a712-54c2191facc2"
        },
        "item": {
          "id": "3e6e0c5c-4eb1-4bef-acef-c8771dabc464",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "884861c6-0023-4aac-96ad-319668cdacf9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 393,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b618ad-50e1-4c58-9bde-340d2af323e1",
        "cursor": {
          "ref": "388cbb51-5c52-471e-adf4-af8947a086bf",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c0101895-44bd-4430-b0fa-f65c6610b313"
        },
        "item": {
          "id": "03b618ad-50e1-4c58-9bde-340d2af323e1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3f7cc39a-0937-4e71-987b-c9d87ba5dd4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909ac4c3-62d4-4e2a-853f-c5396a7940fc",
        "cursor": {
          "ref": "aa6b7cdd-37e2-49a7-8d91-040560cc8224",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e48f7720-cacc-497d-ad60-69830d823f4a"
        },
        "item": {
          "id": "909ac4c3-62d4-4e2a-853f-c5396a7940fc",
          "name": "identifiers"
        },
        "response": {
          "id": "4d6d39cb-7a25-4ece-8eb2-0ba167be9a8c",
          "status": "OK",
          "code": 200,
          "responseTime": 1377,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c02b72-f1c2-46ca-aebb-ab5eaaf1ce5d",
        "cursor": {
          "ref": "5986cce1-df7d-4c35-b9a6-6325d34960ce",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2f974931-1f88-43b4-aba4-0627e497711f"
        },
        "item": {
          "id": "f9c02b72-f1c2-46ca-aebb-ab5eaaf1ce5d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "40752e40-ece4-4a47-b2ba-26504e42ec57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74156371-6306-4f9d-835b-74daca9f708c",
        "cursor": {
          "ref": "da1ef9c8-3931-4a1e-8db5-3e07f032dd42",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6981b299-d329-4d55-96ea-b4c7f9f72d76"
        },
        "item": {
          "id": "74156371-6306-4f9d-835b-74daca9f708c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5cdeade2-9c68-4366-be7a-d1101c479e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9611d78c-df01-47b5-98a4-1c90555739f0",
        "cursor": {
          "ref": "658e41d0-9c45-4ba0-b300-3bc720426bb0",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "40fee125-6865-4910-8950-4e1908f6f2f2"
        },
        "item": {
          "id": "9611d78c-df01-47b5-98a4-1c90555739f0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "66b6f0f8-59e9-4b28-adfa-e4cf84e52315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7169ef-4b9d-4bd3-b3b3-69609f2e34c4",
        "cursor": {
          "ref": "6261ad03-fb80-48dd-8b6a-df6fef6fb08a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a703e9f9-eed6-4bc1-82c2-cdd0f88c0ad3"
        },
        "item": {
          "id": "dc7169ef-4b9d-4bd3-b3b3-69609f2e34c4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "de3aa9f1-4450-4521-a71a-4ee908a1a78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1db6b3b-c2d0-4e75-b8ce-574a91fe52ce",
        "cursor": {
          "ref": "74fe31a6-5652-48b2-b682-88679bdd8f64",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "09d5541c-1c79-48cb-b3c4-3e63f9026500"
        },
        "item": {
          "id": "f1db6b3b-c2d0-4e75-b8ce-574a91fe52ce",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7e829728-9d3d-4f8f-8bb2-8272ae94fbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67781fd-ab81-4e08-a25f-f0f0652bafeb",
        "cursor": {
          "ref": "ee3d6158-40be-4a6a-84c2-333a3c9395cc",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "24507ded-4114-4f7f-8a14-b7a94ffef21f"
        },
        "item": {
          "id": "f67781fd-ab81-4e08-a25f-f0f0652bafeb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2f738729-5084-4b04-8211-b306d0cecf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855a5f0e-f0b9-443d-bf88-ca94668601b1",
        "cursor": {
          "ref": "117eb66b-894e-4bfa-aa22-d10a9da4570b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0160d976-02f0-4924-8145-7d9b7180702e"
        },
        "item": {
          "id": "855a5f0e-f0b9-443d-bf88-ca94668601b1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4044576d-bea6-41fe-8aac-847aabd8166e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9171bf65-c94b-4315-aae0-e41fd8bf59e7",
        "cursor": {
          "ref": "a50f325b-c0a0-498f-b2b4-2b6a79d72ce0",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5a679ec6-3c19-4cda-850c-e8af586a5b05"
        },
        "item": {
          "id": "9171bf65-c94b-4315-aae0-e41fd8bf59e7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7b377657-6d77-4952-94a2-abc2fceb8553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bcb34d-dd6b-4621-a0f2-f4091d9172c6",
        "cursor": {
          "ref": "a430053c-1e56-44a4-a139-cf9f022c7181",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7de41d29-776b-4d7d-8832-804176adc1bc"
        },
        "item": {
          "id": "65bcb34d-dd6b-4621-a0f2-f4091d9172c6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "59cd691e-12aa-411e-8d75-a067a36f19e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c24e70b-64ee-48e2-9afa-810033ac583e",
        "cursor": {
          "ref": "4e11b958-277e-43b0-a886-a957bc284bb5",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "996b8725-2386-4cd9-b620-8f4be18a6e61"
        },
        "item": {
          "id": "0c24e70b-64ee-48e2-9afa-810033ac583e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fa294033-1d94-4067-8a29-5ac7debbcf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3adf6c-8ba2-4224-869c-6081615cf7ef",
        "cursor": {
          "ref": "8817a447-fb7e-4a11-a570-5beab898408a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "250a3342-d880-4e81-ac06-bc0093b54f9e"
        },
        "item": {
          "id": "3e3adf6c-8ba2-4224-869c-6081615cf7ef",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0606821e-8eba-4e58-bd5f-aca5a26192d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c984b3f-7728-4e71-8dfc-dd1398e2a93d",
        "cursor": {
          "ref": "f1df53b0-f5e3-492f-8bd9-27b9db830f46",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cbfd093c-2558-4803-b541-be73929e89ae"
        },
        "item": {
          "id": "2c984b3f-7728-4e71-8dfc-dd1398e2a93d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "207152fe-85de-459a-8c87-b3ca710dad29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2871ccb5-3830-43e6-a7c5-f0bfa93eb03e",
        "cursor": {
          "ref": "f0e7eeb0-2649-494b-a9c7-6348243a9270",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "29885d98-7894-4095-9ec3-0c6ed402ee24"
        },
        "item": {
          "id": "2871ccb5-3830-43e6-a7c5-f0bfa93eb03e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d449e519-59e9-4b07-a357-d1b1afda566b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a287a0bd-03dd-4007-83b4-928a48c19afa",
        "cursor": {
          "ref": "0fa2bfba-cf87-44ac-877d-893e896e3171",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "33cf627d-530a-4f37-9084-0440192d5aac"
        },
        "item": {
          "id": "a287a0bd-03dd-4007-83b4-928a48c19afa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5241946d-54b1-4003-908f-da324a81572f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505ce87e-135c-4681-8803-ef40192c371b",
        "cursor": {
          "ref": "0038fe54-68d0-453c-a72e-4833d6050562",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a4f84f05-f955-4f24-9060-5d8a7d5ca3a7"
        },
        "item": {
          "id": "505ce87e-135c-4681-8803-ef40192c371b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1646efa5-f109-4cec-bf2c-dcf6cd522f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829432c9-73ce-4ad8-9fbe-f7d6fe363bdf",
        "cursor": {
          "ref": "1a48a301-8499-40ca-9431-ebec44173a41",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dc3d13f2-bc4f-4be2-b1fc-451a8be8432d"
        },
        "item": {
          "id": "829432c9-73ce-4ad8-9fbe-f7d6fe363bdf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "15ed62da-35ca-467b-acc5-8449704715ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e5c8d3-1d59-44a1-a311-52ac2df50914",
        "cursor": {
          "ref": "1fb97df8-f021-4e82-a508-2f11cf57e3e3",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f9bb1ea9-511b-4ab6-a717-de73dc5c4cb9"
        },
        "item": {
          "id": "58e5c8d3-1d59-44a1-a311-52ac2df50914",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e0b354cb-fcbb-4e6a-b1d6-c4e2fa5c8c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abce44fc-0893-4d49-a3c7-97561f790a87",
        "cursor": {
          "ref": "1949b12e-b262-4e93-99cc-78d682b06da8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5c6ce365-219b-4010-a837-4baf2bc6fd8b"
        },
        "item": {
          "id": "abce44fc-0893-4d49-a3c7-97561f790a87",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ce9432cf-27c5-4807-a516-0db6da509b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d003e3-a902-4e52-99de-d295d3b26035",
        "cursor": {
          "ref": "022b802c-0742-4d53-9f14-6a0dfe45900b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fc045602-9ef3-49f0-bf8d-550cfa6029e0"
        },
        "item": {
          "id": "d9d003e3-a902-4e52-99de-d295d3b26035",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "32245c5f-7d1e-4c69-94b7-b81274727e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6872742b-bbb9-4902-81c8-8a1a7690a421",
        "cursor": {
          "ref": "f2a5c609-68f7-45c5-a316-812ab27a927e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a0d735ef-c5df-4793-b08b-5eba5434e245"
        },
        "item": {
          "id": "6872742b-bbb9-4902-81c8-8a1a7690a421",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5da2f0d6-ab6c-4305-be78-c6ed68c08bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a5ccf-f521-49d2-8af6-eca6229573f7",
        "cursor": {
          "ref": "d2eaa474-2a76-498e-bb7f-5b8ee6a182e3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "03d36b18-ac76-4f0d-84e3-8b5f15e3282e"
        },
        "item": {
          "id": "324a5ccf-f521-49d2-8af6-eca6229573f7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e29aabf3-d076-4c79-9ab4-1b88bf43ce1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fa986e-d980-4b0a-b4cc-d0c2609a451f",
        "cursor": {
          "ref": "9792b3ea-5ab5-4268-834f-cc18da8e3480",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d03b7e87-ac06-4b33-bf16-1de43cc73bba"
        },
        "item": {
          "id": "73fa986e-d980-4b0a-b4cc-d0c2609a451f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7db8ff4d-28d6-4bbf-a4f9-f3366154d499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39a6ac3-138b-4a79-a854-d8c5aba41484",
        "cursor": {
          "ref": "d165560f-249e-4fde-9092-a0ea081021e8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1b4889be-f518-4c12-9f8b-83e074643a55"
        },
        "item": {
          "id": "d39a6ac3-138b-4a79-a854-d8c5aba41484",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "96ccb13e-1b7f-454d-9eae-d89dcd7784a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66436d05-2e84-4f2c-b9cd-aaaaae7e4ad3",
        "cursor": {
          "ref": "e157b73d-9aba-4d8b-b0ea-c862936ab59f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c94620ca-bba9-42a7-8d6d-db5ae15d64e2"
        },
        "item": {
          "id": "66436d05-2e84-4f2c-b9cd-aaaaae7e4ad3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a43aa9ba-543f-4873-9952-78f30d1f9d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe1f8a5-aed9-4cb6-9390-16645a74ce9e",
        "cursor": {
          "ref": "ee543b9e-1468-4910-b883-d5b79de2c6a3",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "65cde78b-bcad-45ef-9ef2-1d31da90c86e"
        },
        "item": {
          "id": "dbe1f8a5-aed9-4cb6-9390-16645a74ce9e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1e3139a0-89ff-4651-9e6f-0d9af574b22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16196b1-c654-4300-bc76-dbb510a1d8bd",
        "cursor": {
          "ref": "eece762c-ae26-42e0-8d7e-88c5be5ef2ee",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c04dc7e7-7381-4642-8f36-e15824444bf3"
        },
        "item": {
          "id": "c16196b1-c654-4300-bc76-dbb510a1d8bd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5238053a-da36-4270-abe3-0b28afc1bc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9516b046-333f-4384-b57d-f435f2804943",
        "cursor": {
          "ref": "8900f708-09f8-4fba-a00f-002bb86a59d4",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0829948b-353d-4229-9923-e08dbc8fa498"
        },
        "item": {
          "id": "9516b046-333f-4384-b57d-f435f2804943",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "353f28ca-8f43-4a5a-9f54-0ad416e5cfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a335d-494b-4e2a-bc7c-8ab9f307c2ee",
        "cursor": {
          "ref": "81c29d43-ba48-4b28-afc7-738788fdcda9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9f427915-c639-4cee-b85a-aa34d75f3482"
        },
        "item": {
          "id": "706a335d-494b-4e2a-bc7c-8ab9f307c2ee",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "15692e11-4718-458e-8a4e-ed55efd37f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0665187-e72f-4872-b87f-2545d0923e1e",
        "cursor": {
          "ref": "f679be80-ae64-4b42-84c3-90d6499ed9b9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "541dc945-2acb-426a-819f-c6c770e1e8a7"
        },
        "item": {
          "id": "f0665187-e72f-4872-b87f-2545d0923e1e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "50a41ffd-dcd7-4e30-a4b9-d4213e2b81f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482b6c91-9d93-4f56-8a4e-78f56fffc391",
        "cursor": {
          "ref": "06943508-e590-43c4-bf02-81234f085265",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "de9791b3-c127-47f3-80b4-b4833f1c9b74"
        },
        "item": {
          "id": "482b6c91-9d93-4f56-8a4e-78f56fffc391",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1eab7f39-6891-4f2e-99d2-763a72861b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abd2296-d78a-44ae-9d37-651ce65eee87",
        "cursor": {
          "ref": "ab2f49fb-4d85-467f-be5e-ed0aa92e1f20",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "791307cb-231e-406f-85d4-0bfc6ee93ed7"
        },
        "item": {
          "id": "4abd2296-d78a-44ae-9d37-651ce65eee87",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b4a15449-e714-4ff5-a22a-c33a455c954b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6302f2f6-c5aa-4d59-a39d-e430b5310c39",
        "cursor": {
          "ref": "db89305b-9506-41c2-b834-57c7b82e226f",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a421efd4-40ea-4eb7-af18-9f0a03c6348e"
        },
        "item": {
          "id": "6302f2f6-c5aa-4d59-a39d-e430b5310c39",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f6a22a99-e739-44eb-a17c-3785ae2dcef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60494945-4c41-455b-89ec-2ab241fddbfb",
        "cursor": {
          "ref": "0edbbd02-8edc-4b5d-acec-352ddc87ac23",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b5b90465-41d8-4f09-9f7e-4fcfc59864d4"
        },
        "item": {
          "id": "60494945-4c41-455b-89ec-2ab241fddbfb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "44d72074-22c4-4bfb-a64e-9beebe344a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe976c6-9192-42ce-a1ae-dd66a6ac623e",
        "cursor": {
          "ref": "b0461e7e-7b4e-41e9-9192-a2dc1fc6c449",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "84411d69-de6d-42a8-bc9c-39a0c7f8277f"
        },
        "item": {
          "id": "cfe976c6-9192-42ce-a1ae-dd66a6ac623e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e063f3ec-c6ba-4386-aff2-3d0f99b478fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daad0ac-b4d8-4454-8df6-bc78e9017754",
        "cursor": {
          "ref": "290962ad-174c-4ca5-9d5d-bc6c2ac8144e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a14495e5-abae-4d49-8ed8-367c53a8e0d0"
        },
        "item": {
          "id": "7daad0ac-b4d8-4454-8df6-bc78e9017754",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "061198ea-1814-41dd-ad09-4baefb141be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd43b55-6474-4856-83b8-39c897fe3a64",
        "cursor": {
          "ref": "8b5ef89d-eb1c-4349-8a0d-a403f92f0fdd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f427de55-8ce5-4a55-a3ce-d036ed3660dc"
        },
        "item": {
          "id": "dfd43b55-6474-4856-83b8-39c897fe3a64",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "564e4885-eb11-4ac0-8609-73db4e8b2558",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 636,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadc740a-fc06-44c4-9f03-c89df45fba12",
        "cursor": {
          "ref": "c68706a8-add4-4ad9-bc95-33a4ae3cf6d0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "53e1888d-49d8-4df9-a88b-bb73f0ee11ea"
        },
        "item": {
          "id": "cadc740a-fc06-44c4-9f03-c89df45fba12",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5be28447-1835-4cb2-a60d-57977afcc7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfecce81-88dd-41d1-9da9-120681718561",
        "cursor": {
          "ref": "9399f3a9-2abd-44b6-afe2-e55db43aa986",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "57894395-404a-4863-941b-d47251869132"
        },
        "item": {
          "id": "dfecce81-88dd-41d1-9da9-120681718561",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "82566826-8b83-4ba0-959c-ffb665295b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565ddb1e-8f89-43ea-ac4b-f909a580f677",
        "cursor": {
          "ref": "a94c8883-0ff9-4b24-a5d2-e729ad54fb75",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "17d755c7-b050-4383-8fca-a51ff4d9c4ec"
        },
        "item": {
          "id": "565ddb1e-8f89-43ea-ac4b-f909a580f677",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "74d6fce9-8acd-46e3-b072-f4eaebd28256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb47d79-d0db-4b00-9afd-cbf1b507d0ab",
        "cursor": {
          "ref": "cd081bda-08bf-4958-90fa-02e330a54270",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fbc00fb2-42e4-4590-aca8-522d94f70bd1"
        },
        "item": {
          "id": "2eb47d79-d0db-4b00-9afd-cbf1b507d0ab",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ac24e601-3e4f-472d-9a8f-a7128feac7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c88edd-ff49-4e5a-833b-b49697a89bee",
        "cursor": {
          "ref": "2aeb8f40-34e8-4c76-a55b-479e3354298c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9570a912-6ede-46f6-af4c-ac38814b9024"
        },
        "item": {
          "id": "53c88edd-ff49-4e5a-833b-b49697a89bee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "71a2da70-832d-47f3-aeac-cc4713d275cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb72dea4-963e-4f97-b2bd-795d45a89825",
        "cursor": {
          "ref": "1e1417e8-1101-4b30-a096-48c3bfc75b84",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "46b5133c-26af-4ec7-aa76-d6c8b68d02b4"
        },
        "item": {
          "id": "fb72dea4-963e-4f97-b2bd-795d45a89825",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "700e7782-9d8d-4e2c-bd33-3360b5035fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acc8d85-670e-4853-b332-7c567d80f19a",
        "cursor": {
          "ref": "12e535fd-ca60-4221-a25f-0cff410d30d9",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0bc6129a-967e-4632-b74b-b4b9583d6a21"
        },
        "item": {
          "id": "0acc8d85-670e-4853-b332-7c567d80f19a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9da8529f-56f8-4222-a51a-e2aacce050cd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 616,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1163bb-bb30-4b9f-82e0-04cc3fb93b51",
        "cursor": {
          "ref": "a747b5cb-8a6b-4b8c-828e-f0db85bff05d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8250e3a8-23a5-47ad-8719-ede59cc9d090"
        },
        "item": {
          "id": "2a1163bb-bb30-4b9f-82e0-04cc3fb93b51",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a5374403-3f1c-4481-862b-400d8474dfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ed1880-9d81-40f4-830d-5f9566d1e8d6",
        "cursor": {
          "ref": "97392d33-2868-4dd4-84ca-65e0866d84a3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d475be3b-f6e9-4fb1-99b7-07d7c8db77a1"
        },
        "item": {
          "id": "25ed1880-9d81-40f4-830d-5f9566d1e8d6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c4d4d2e6-a219-4af1-8195-18c2218baa8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d62e0b-fa75-4c5f-b0b0-62219c0443a5",
        "cursor": {
          "ref": "88c9caea-8c0d-4e11-93e1-ba3fe5c50192",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7ef92002-8b7b-485f-9f91-6afed4d39472"
        },
        "item": {
          "id": "a4d62e0b-fa75-4c5f-b0b0-62219c0443a5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ad8284d6-040a-404b-9c6d-0f8c198c76d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01392c5f-0d40-4a48-ad4d-dafb74f63467",
        "cursor": {
          "ref": "13f28aa9-c67d-4872-8915-7329bfecf801",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "73b0bd60-bb91-4b1a-9cce-fcf7cfc84f84"
        },
        "item": {
          "id": "01392c5f-0d40-4a48-ad4d-dafb74f63467",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7df696d3-351e-474b-a1ef-7bda25281ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f349af02-8b7c-4959-9cfa-df42e3f03b9b",
        "cursor": {
          "ref": "b6dc5043-370d-4959-b75e-2c532d2a08f3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5bc479e9-4b2f-43b8-9a63-02f87e3f458a"
        },
        "item": {
          "id": "f349af02-8b7c-4959-9cfa-df42e3f03b9b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c24334f7-39f9-460b-bf3d-d39adab8e0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6acfdf0-7abd-4a9e-b691-55c9d4abc82e",
        "cursor": {
          "ref": "5a7e457b-6a8d-4c3d-9439-04d13a980406",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df2d71bd-0a54-4b1e-875c-b3e235ac25de"
        },
        "item": {
          "id": "f6acfdf0-7abd-4a9e-b691-55c9d4abc82e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e3a23600-66ff-46a9-b37b-faf677fab640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda3e0e7-03c3-4e24-a2ff-4f3182b60668",
        "cursor": {
          "ref": "1d670ef1-31e4-4e42-98e0-c7d477b33b9f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c6e752e8-5ce2-43dc-8ae6-84a56a411444"
        },
        "item": {
          "id": "eda3e0e7-03c3-4e24-a2ff-4f3182b60668",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e666d23d-2bf5-4b0f-ac7e-e6ea7e61f0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cf232e-510b-4732-a4e5-50ff0c14dfa9",
        "cursor": {
          "ref": "6f5227fe-f5dd-4dcb-8199-10a1132e4610",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fee02a9a-4f34-408c-bae5-4d78daa8aa6c"
        },
        "item": {
          "id": "57cf232e-510b-4732-a4e5-50ff0c14dfa9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e7c99af1-1d7b-428f-ad56-1cfcd7e2174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700a9d73-bedf-4997-a052-cda122dc2180",
        "cursor": {
          "ref": "26586d9e-5dce-4174-87ab-bdeb6a6f5c6d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c72ddec9-5a7d-410b-afe5-f72f0efdcc02"
        },
        "item": {
          "id": "700a9d73-bedf-4997-a052-cda122dc2180",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f576c49d-109f-4215-ab7e-c20aa5e4093d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bbd54c-ffcd-4303-9da3-383b89541fb6",
        "cursor": {
          "ref": "6091a8a1-11c4-4c55-85d4-cb5739e22390",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "92156c94-abab-45a4-8dac-1e1a805356a3"
        },
        "item": {
          "id": "12bbd54c-ffcd-4303-9da3-383b89541fb6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "981ca119-5098-418b-8952-eefed40dfcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7487fbff-0a30-4ea8-861f-5e874dda0751",
        "cursor": {
          "ref": "52f23b1b-3273-4b5a-af3c-71c7f5c30630",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2abfae33-bcdc-43ac-8dbc-077869a6cf72"
        },
        "item": {
          "id": "7487fbff-0a30-4ea8-861f-5e874dda0751",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "93091cd2-a5f2-44dc-bcbf-c2fe66baacfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0979a184-5f5d-43c5-a9a8-87af29c9cfc3",
        "cursor": {
          "ref": "e85819e6-39f0-4a7b-adb7-13d87fe54d4e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1192503b-dfea-4495-b50b-5abd55cc9051"
        },
        "item": {
          "id": "0979a184-5f5d-43c5-a9a8-87af29c9cfc3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3b042052-b9a1-4aad-9a56-2cf85eaf4ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fa0e77-f05a-47a4-ae53-a54caf60e85e",
        "cursor": {
          "ref": "2e670edf-0c85-4da5-82da-c4fd3b4cc633",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5c54112e-e4c6-47a4-ae4a-60bcf679fde2"
        },
        "item": {
          "id": "01fa0e77-f05a-47a4-ae53-a54caf60e85e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "324dbd21-aed2-4025-8357-130b3827b496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e3d989-2da3-403a-88da-ab3e532fd18d",
        "cursor": {
          "ref": "264cd4bb-eebe-43f0-9296-04592bb14fd0",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0d359acf-db9f-4460-8042-966808ce16cc"
        },
        "item": {
          "id": "31e3d989-2da3-403a-88da-ab3e532fd18d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "361661d7-8e1b-4298-b470-5fc179b8ed39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622709a7-3cb2-4402-8573-e3142224cc73",
        "cursor": {
          "ref": "ea8b30e7-97c6-4e3f-8d5f-bc44f5e1be19",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4f53c371-fd23-4a77-8d85-4db69086a5de"
        },
        "item": {
          "id": "622709a7-3cb2-4402-8573-e3142224cc73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "de3a7f42-400c-41d8-b19b-1c3fcbe07198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758eb533-98b0-46c9-a1f2-d8273dca3ad8",
        "cursor": {
          "ref": "cb3392b1-d8ec-432d-8d04-a910c5d22e8e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d4221f4d-af46-4b8b-8165-75fe5cea9bdd"
        },
        "item": {
          "id": "758eb533-98b0-46c9-a1f2-d8273dca3ad8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "20445a02-272c-4bc1-8a40-76b19ebcbc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409cd82a-a54d-447a-bafd-9049dadbfe99",
        "cursor": {
          "ref": "e69a6c20-8489-40d0-aab6-33ad9a191924",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b8bce9d1-ba1c-4f45-b90c-9f39b3d12e42"
        },
        "item": {
          "id": "409cd82a-a54d-447a-bafd-9049dadbfe99",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "687b1f09-5db7-4008-ac4d-37b60bf5debc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb28081-99b6-4304-85a8-36a0e04021bf",
        "cursor": {
          "ref": "6cfefcd6-5acf-44fa-a05c-0222b0f029ad",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "88337c2f-f4ca-49b0-b386-71363f9ba76c"
        },
        "item": {
          "id": "fdb28081-99b6-4304-85a8-36a0e04021bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cad41a22-80e0-48ac-9278-e54b1949894b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4a7a44-2aed-4a1d-bb3d-a16bad09215e",
        "cursor": {
          "ref": "1dbe7e61-f437-4122-99f1-c331ccd34065",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "85b20417-c6c7-435e-b0a2-6816cc428a62"
        },
        "item": {
          "id": "fa4a7a44-2aed-4a1d-bb3d-a16bad09215e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "341f8679-68b5-4458-a1a0-98dca5278749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf0fa2-d0e9-4e87-acbf-5c542198b394",
        "cursor": {
          "ref": "98f7ba9d-c881-445b-9dd2-555791b5279c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f38b48d2-bc6b-4bcd-9366-cbe8580118cf"
        },
        "item": {
          "id": "d8bf0fa2-d0e9-4e87-acbf-5c542198b394",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "80c446bd-4db2-4690-853a-fc461c2e31c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ca0b83-a266-4a9f-a252-0808bbe19b91",
        "cursor": {
          "ref": "b34f169a-bbc6-456b-9c9b-9eecdb44788a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ddd09701-ef98-4bce-8f7e-4279ad0f8b7e"
        },
        "item": {
          "id": "a3ca0b83-a266-4a9f-a252-0808bbe19b91",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c750479b-7f4a-408a-b9b5-0fb12c954973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d685cd57-9d92-4959-abdd-c16e3aaefdc3",
        "cursor": {
          "ref": "e7354973-64c3-4139-8f11-8c4d9ffc76a3",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7cc91088-29cd-4c41-8d01-5337a6403956"
        },
        "item": {
          "id": "d685cd57-9d92-4959-abdd-c16e3aaefdc3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f00d9426-a323-4d92-b4fe-11e015933530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c781c7e9-d6ee-419e-a65e-b4dd59d9f9cc",
        "cursor": {
          "ref": "63201f96-f82e-4b44-9565-cc1af0f3cf01",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6b6e189b-43bb-4efe-b342-f3261e876dea"
        },
        "item": {
          "id": "c781c7e9-d6ee-419e-a65e-b4dd59d9f9cc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e1f6b010-1209-4103-b060-85f2b37979a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844ff302-01e1-4f72-9270-c4faf9df4dfb",
        "cursor": {
          "ref": "fdd3ac14-aeaf-486f-8dc1-26f76f725107",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "72e1aeba-b020-4692-a36f-1c72fb33087d"
        },
        "item": {
          "id": "844ff302-01e1-4f72-9270-c4faf9df4dfb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e73af8e2-1923-4425-8846-9787a1e7ab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc9faf6-c2dc-4257-8371-9589e4ae9028",
        "cursor": {
          "ref": "6ef4d8e9-e5bc-42bc-98b2-418034c1b9d8",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "717995c9-aec6-4488-9c91-871dbfdac60f"
        },
        "item": {
          "id": "fbc9faf6-c2dc-4257-8371-9589e4ae9028",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "41c81f2c-a379-4e8c-ad5f-8a6ef0dea0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d576e6f-2b4c-4d55-b858-c091d451adf6",
        "cursor": {
          "ref": "eba323f8-1fe8-438e-83b1-e1fdfdfd257b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4d547169-0f19-4049-8b3f-b037adf4edc3"
        },
        "item": {
          "id": "7d576e6f-2b4c-4d55-b858-c091d451adf6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a7eb8b3d-b3f2-41ce-996e-ef81e4fc66e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55a7ffa-0f12-4b24-9d6c-ed200253a24e",
        "cursor": {
          "ref": "79af1e44-015c-45ba-a879-bf17d5014da1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c3a781b7-6187-40fe-a3e0-d1ca658f770c"
        },
        "item": {
          "id": "b55a7ffa-0f12-4b24-9d6c-ed200253a24e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "35aaf392-8cc1-4dfd-a439-3bc206ee4334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dfd6a7-200a-443b-800c-a7055ea38c5a",
        "cursor": {
          "ref": "17da1016-ef95-4ba2-bbda-769f8a89c623",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "734c154c-6af3-491d-8fb1-363177eca97d"
        },
        "item": {
          "id": "25dfd6a7-200a-443b-800c-a7055ea38c5a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "60f6f7ac-01b2-4a39-801d-9a438666d35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f2631-2905-48c9-b653-91ab9daab41f",
        "cursor": {
          "ref": "1c29f807-ae06-40fe-a106-23e28a1d31dc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dcf124f3-cadb-449f-90b1-2d37912625ae"
        },
        "item": {
          "id": "5f4f2631-2905-48c9-b653-91ab9daab41f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "579e9a5c-0aaa-4746-b446-d7f62bb6f858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91d6c3d-a72e-46ae-9bce-d8ed87b210d8",
        "cursor": {
          "ref": "25876fe1-a3ff-4960-8459-504b61fe132f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f9c928fe-72b1-4853-932b-2487af5ae946"
        },
        "item": {
          "id": "f91d6c3d-a72e-46ae-9bce-d8ed87b210d8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5df3726f-a467-4443-8424-38877a274ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c810f6-9048-4f50-ad34-047e25bcea5f",
        "cursor": {
          "ref": "94098bbe-4c7f-47ae-8f50-fb74be082393",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3d8664dc-1314-48d4-a2af-e4a5ac78858a"
        },
        "item": {
          "id": "67c810f6-9048-4f50-ad34-047e25bcea5f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "65bd330c-1c58-42ce-893d-05bfe89b4d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a81bab0-5634-43d5-8fe0-81108ef585d0",
        "cursor": {
          "ref": "03d36fd3-fed6-4681-9f05-8da74f39a959",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fddc891c-59ca-420a-b8da-ec150c099629"
        },
        "item": {
          "id": "0a81bab0-5634-43d5-8fe0-81108ef585d0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "13850f84-4fcd-48f6-851e-d0a205076b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7da66a-02ff-4292-96ec-f4b2c2ae11d4",
        "cursor": {
          "ref": "fab0ba28-c298-40f5-ac88-13f2a8c64ce8",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "01fdb89a-a1c1-4139-808c-ced3d9333afb"
        },
        "item": {
          "id": "cc7da66a-02ff-4292-96ec-f4b2c2ae11d4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f255b107-d134-4b4d-9d58-c5f0d15c2123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48cd4fc-1fd6-4ad2-87fe-bd53da0a40f0",
        "cursor": {
          "ref": "a3488e52-61f9-4196-b44a-44c716d9bc5b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3886c920-cc61-45d0-8a90-db98691de7a9"
        },
        "item": {
          "id": "f48cd4fc-1fd6-4ad2-87fe-bd53da0a40f0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "68e9d8b1-951a-4329-83ee-59542a02e408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6850f58-e6eb-4045-8999-fc8aa416bd97",
        "cursor": {
          "ref": "54396fc1-cdd1-45a8-8c4b-152287d7ecc8",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8cbb4070-5fb7-4cea-a65f-5563b8afb8cb"
        },
        "item": {
          "id": "a6850f58-e6eb-4045-8999-fc8aa416bd97",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3a324248-9e45-4234-b826-d994adc07d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399588f2-61b4-45ba-93aa-ccb763eb6d2c",
        "cursor": {
          "ref": "7b26c523-0540-47c2-a812-65a032e8a1dc",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "62b8d577-374b-480e-9116-564e7771490b"
        },
        "item": {
          "id": "399588f2-61b4-45ba-93aa-ccb763eb6d2c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e8a96801-0325-4133-9231-e4eccfa0a384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b74db23-23cb-4da5-b151-2eef251ee1ee",
        "cursor": {
          "ref": "78d9116f-796f-4574-99fb-b210dd4212cd",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8c1c3d1e-5774-4720-9a6f-3f5eaaade049"
        },
        "item": {
          "id": "1b74db23-23cb-4da5-b151-2eef251ee1ee",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "006c1ed7-4f66-47d8-a7ae-09bca878ecd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847de379-916c-42a1-9877-080fd105cdcb",
        "cursor": {
          "ref": "1514f828-f8fc-4e2a-adf7-ae1aa20a5a72",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c4af76ba-2e74-44c0-8e0f-bc85f9710dce"
        },
        "item": {
          "id": "847de379-916c-42a1-9877-080fd105cdcb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6f6aedb4-3f21-4814-9131-1d9ff7e67e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1083d276-48b0-4f1e-9853-189a549ef6bf",
        "cursor": {
          "ref": "4ce91254-94a9-4a3a-9cf0-abb85fc08469",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "44761555-cf36-4aee-a71f-1a86e0f591f8"
        },
        "item": {
          "id": "1083d276-48b0-4f1e-9853-189a549ef6bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "05f65ec7-1524-4914-84ce-531ae1554faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc1533d-32aa-4801-ad2f-33d1b66e1b2d",
        "cursor": {
          "ref": "910b3c9a-3c43-4e77-823f-639b0c6ee606",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ad7b11ce-5e8b-4eef-9657-7d33b170bb81"
        },
        "item": {
          "id": "8fc1533d-32aa-4801-ad2f-33d1b66e1b2d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "17077307-a0a3-4b6d-b6c2-f135b56ae40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31830a03-1d8d-4c85-b215-d9142f9dbf3b",
        "cursor": {
          "ref": "2446c905-88d1-4661-9e37-d73d2b65f4e7",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a8fc788b-78d4-4476-ae9f-640b06163437"
        },
        "item": {
          "id": "31830a03-1d8d-4c85-b215-d9142f9dbf3b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c1151d6b-13a5-4b70-a486-1328ce218165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1972af50-a059-48bc-b05d-7b43f10cd7da",
        "cursor": {
          "ref": "f24f84da-dd93-44d6-a93c-4615c335fde5",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8eecb37e-88c5-47b3-a863-cdde8313effe"
        },
        "item": {
          "id": "1972af50-a059-48bc-b05d-7b43f10cd7da",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bc5f55c4-f8d3-4a11-9db1-7aed0cfb1b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c43713-475e-45c3-9c34-0f46b987f0f5",
        "cursor": {
          "ref": "0dc09bc0-aebd-4a37-9a9e-f2a2639e6e17",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "43e31964-5c67-4f02-9691-5c2a1f901975"
        },
        "item": {
          "id": "63c43713-475e-45c3-9c34-0f46b987f0f5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8b716745-55fb-4a46-976f-797f4f2b37ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3280d0c9-5d65-4849-b313-fd9b98b8f684",
        "cursor": {
          "ref": "b70a91c2-2750-4616-82ec-48b12c82bd6a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f5f9cad1-32f4-4262-b0d4-5a7256414451"
        },
        "item": {
          "id": "3280d0c9-5d65-4849-b313-fd9b98b8f684",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e8966fd3-afba-40a0-b635-9ccd26eb1dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61d7a1c-77b7-4461-8ad9-92895ca349af",
        "cursor": {
          "ref": "bf27dfe5-1885-40b2-baa4-9a26d8ac3037",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4be389f1-c607-4f03-9172-28d91f3f5d61"
        },
        "item": {
          "id": "b61d7a1c-77b7-4461-8ad9-92895ca349af",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5ef76ac1-3f26-4b4f-be13-0e73c9d49973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6dc185-a899-4e51-9fec-f20642ce3178",
        "cursor": {
          "ref": "2e0c6ee3-2b7f-48c4-8ef7-d59795435b8f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "955d1d7f-af58-4b08-8e1e-666bf763e983"
        },
        "item": {
          "id": "1b6dc185-a899-4e51-9fec-f20642ce3178",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ee87fc69-880c-4d67-a273-c7850e6abb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869500dc-69c9-4b7b-9853-5de3d4b47112",
        "cursor": {
          "ref": "266248b8-024f-4f66-9fda-c0351fc0df0f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "77b35878-17b8-4527-af15-f2f0fe98b33d"
        },
        "item": {
          "id": "869500dc-69c9-4b7b-9853-5de3d4b47112",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1a9aaf11-b6d7-4d71-823f-b3501fbaea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd0a30a-9c2c-4fc4-a3d6-9142ba204892",
        "cursor": {
          "ref": "0ea631a0-2d29-4e03-8190-83f05fa2cb58",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b7e27efc-c292-4567-8f77-a133fdd9e2f2"
        },
        "item": {
          "id": "6fd0a30a-9c2c-4fc4-a3d6-9142ba204892",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "95b26124-70fb-4957-8fb7-9243e80b52f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c5034e-c8d6-4509-babe-5ef76b6a6644",
        "cursor": {
          "ref": "4e472f04-2277-4987-ac2a-3d7ada16c227",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f95e906b-bf52-4a7d-aba4-d4fb763809dc"
        },
        "item": {
          "id": "a2c5034e-c8d6-4509-babe-5ef76b6a6644",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e9a6b9c8-508e-4838-8004-032601424f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780a4bcb-459a-4cb1-86b5-a4d4d20199a5",
        "cursor": {
          "ref": "da6cb880-8bc4-444a-b1fd-1f5b486aaccc",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1a8058d5-3879-4419-8693-861976504b00"
        },
        "item": {
          "id": "780a4bcb-459a-4cb1-86b5-a4d4d20199a5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ac958969-6b89-4cd3-ae8b-87521f168376",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbeebf1-7426-4e47-933b-960958084928",
        "cursor": {
          "ref": "614e22ae-db67-43ea-a9d5-287d25def66d",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "525f1f99-adab-4ccd-b6f4-798ac0c1be39"
        },
        "item": {
          "id": "9cbeebf1-7426-4e47-933b-960958084928",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d6c19348-9ce6-4fa6-8bcd-80f35971408d",
          "status": "Created",
          "code": 201,
          "responseTime": 7176,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c26742a-d514-48a4-b48f-2d10e4ae207b",
        "cursor": {
          "ref": "9350362b-6e7a-4f9d-b2bb-d620c49030b3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9a64f5ce-b335-46d9-a10a-cef008e06832"
        },
        "item": {
          "id": "8c26742a-d514-48a4-b48f-2d10e4ae207b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6b20af2c-c58d-4528-bdfc-a67e765615c9",
          "status": "Created",
          "code": 201,
          "responseTime": 7542,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbaf5dc-0f42-4051-86f7-bfead5739e1f",
        "cursor": {
          "ref": "aa3a266e-b526-42bc-b141-cc417b7684a7",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "973bafb5-4cb6-477c-ad81-e2b0bffe4fad"
        },
        "item": {
          "id": "bcbaf5dc-0f42-4051-86f7-bfead5739e1f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "65637963-71b4-42d9-9b8e-a5791e8f2ad7",
          "status": "Created",
          "code": 201,
          "responseTime": 6999,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b404284-cc18-4198-bf8d-a71c238c56ef",
        "cursor": {
          "ref": "abf9c7b3-57b6-4235-b99a-5eb52a47544f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5731f3fd-f44c-4ee9-a2f9-f2a565e686a1"
        },
        "item": {
          "id": "4b404284-cc18-4198-bf8d-a71c238c56ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "53d40a4b-511f-4bb5-9bf9-1d10dcce9ccc",
          "status": "Created",
          "code": 201,
          "responseTime": 6817,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eff34d0-b419-4215-a655-b314a9be898d",
        "cursor": {
          "ref": "48758b2b-3e61-47bd-9786-ea7076d64f3e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9cbfb1f0-a6d8-46b6-9218-6592c36d32df"
        },
        "item": {
          "id": "6eff34d0-b419-4215-a655-b314a9be898d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8bc5cf08-a99f-4fe3-a2c4-e888f6618c08",
          "status": "Created",
          "code": 201,
          "responseTime": 7553,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7705a69-82df-47d6-b977-cc3c964deaf9",
        "cursor": {
          "ref": "70de9a3a-67c7-4774-b3d2-b2275d9765df",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b87f190b-1fbe-4748-9196-68ba270df254"
        },
        "item": {
          "id": "d7705a69-82df-47d6-b977-cc3c964deaf9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cf380aa9-8209-4b85-ae6e-72fe28c2c6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "dcacfb80-003f-4491-92f9-c1371cc3560b",
        "cursor": {
          "ref": "3f985d5f-a132-45c2-8ec6-ff7c946afbf3",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b66bba99-c23b-4d4e-8e07-241b39a56b26"
        },
        "item": {
          "id": "dcacfb80-003f-4491-92f9-c1371cc3560b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "89bb9c51-a9cb-45b4-a026-f08b79d14f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b3c33b-65f3-4b30-a14b-644e63e5b121",
        "cursor": {
          "ref": "4c2e4209-a5f4-46b8-abf4-2cf52452c641",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a909e085-45ae-460b-90fb-7600001788f9"
        },
        "item": {
          "id": "a1b3c33b-65f3-4b30-a14b-644e63e5b121",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "05a18c80-ae41-407b-af1e-4633a4199895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912d497d-3139-438e-ab8c-cd5096fb356f",
        "cursor": {
          "ref": "1232febd-a26c-4c93-859d-e0a7a4b542b4",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bc192bf3-721a-4bd1-923c-2d6ae3acfd0b"
        },
        "item": {
          "id": "912d497d-3139-438e-ab8c-cd5096fb356f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "37b0bab1-a009-4bad-961b-55646bbe2195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fe1e5d-f981-4782-958c-f5d28d6f311a",
        "cursor": {
          "ref": "463c479d-6439-4023-b359-156cabeb946d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "aea875a1-dfde-4b31-a893-b70efbf524b2"
        },
        "item": {
          "id": "98fe1e5d-f981-4782-958c-f5d28d6f311a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "73433e55-e8b0-40d6-942f-133cbb6ad3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97d6cad-dca1-409e-aa21-e0a0e5e4d747",
        "cursor": {
          "ref": "8da2138f-1e19-4e51-be1f-5b76b2eb65fa",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b61eccfb-dcbc-4aa6-b2de-53039789a51a"
        },
        "item": {
          "id": "d97d6cad-dca1-409e-aa21-e0a0e5e4d747",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "55522e9c-ac2d-4e70-be91-10f2538a6283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077f2d72-e675-44d0-9c8a-5ce811d49a2b",
        "cursor": {
          "ref": "f5d7189f-245b-4dc4-8408-4c7ba9bb9d50",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2fcff99d-c951-402b-823d-22d32036ef17"
        },
        "item": {
          "id": "077f2d72-e675-44d0-9c8a-5ce811d49a2b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "38663d39-b2b5-4356-b292-23eab1345ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368540ef-1d07-4344-941e-b3e37c0e616b",
        "cursor": {
          "ref": "9361ae0a-5535-4d01-aea2-183168afa70b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c7b928c6-8912-45d2-a11b-c213a974fa67"
        },
        "item": {
          "id": "368540ef-1d07-4344-941e-b3e37c0e616b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8aa85aab-54b9-407e-9bb8-5a8892a6e94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d46e28-8d1e-46e8-adb0-555889a78694",
        "cursor": {
          "ref": "1d0116e8-cc42-4b28-a89d-d113ea96ad96",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bef89d9f-8467-41ed-bd2f-ad627dbc28fa"
        },
        "item": {
          "id": "71d46e28-8d1e-46e8-adb0-555889a78694",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d772bbc7-9669-4564-854b-45b93ca824a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a6a189-db00-456d-9425-c70720622f92",
        "cursor": {
          "ref": "b64dfd7c-ce25-4ae9-b8fb-a72e2557f84a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "141022c4-ffbb-4e38-a7a8-46bd7cbb960c"
        },
        "item": {
          "id": "c1a6a189-db00-456d-9425-c70720622f92",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b662935f-919b-4828-879f-a1853b8af631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cccc8b5-b174-4d1a-bada-f74a3dffd0bd",
        "cursor": {
          "ref": "f50f48ca-8731-4e02-af0e-4876954b9ca4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1533883e-1267-42a2-860d-1570095ccdca"
        },
        "item": {
          "id": "5cccc8b5-b174-4d1a-bada-f74a3dffd0bd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c671a520-2da2-4397-9b29-fa2f0053bc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eb1828-2e3a-4579-9979-4143118c941a",
        "cursor": {
          "ref": "068106d8-1fca-4502-8edd-76e1a18417b2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0bdcf0b1-71b2-4ff0-a6c7-ec8567db0bf9"
        },
        "item": {
          "id": "47eb1828-2e3a-4579-9979-4143118c941a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4306542a-35f3-4ab6-9b7c-0cbb54624aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936522f1-d0c8-48af-8c3d-4b52a78117ca",
        "cursor": {
          "ref": "60dc6eb7-1bcd-4c1d-ac31-d28b0d087534",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "92e4e6b1-cc13-49a1-be19-f4262962b3b8"
        },
        "item": {
          "id": "936522f1-d0c8-48af-8c3d-4b52a78117ca",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ca0a3021-ad1f-4472-acd3-43251a9304e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ee436d-a441-47ca-9869-21ea51b7b719",
        "cursor": {
          "ref": "305227cc-d5a0-44b3-810f-7b188e1a5ec9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98d14625-1906-4a99-93cf-73e4a7677d6f"
        },
        "item": {
          "id": "74ee436d-a441-47ca-9869-21ea51b7b719",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4c640f8b-1199-420d-b954-6c2a4535f9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf851ab9-abc9-4fa5-b4c6-95b674adf025",
        "cursor": {
          "ref": "f31f2e8c-8d2d-4db8-9e95-4290ae24f3fd",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2ff4fae9-71cc-4f14-9c60-235ea367092c"
        },
        "item": {
          "id": "bf851ab9-abc9-4fa5-b4c6-95b674adf025",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "470b4e12-8ce0-40ac-9ef5-534803f228fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d607fd96-653f-4d4f-96f4-49c4df5d8c46",
        "cursor": {
          "ref": "a44aed15-4ae7-4b18-ad35-3c41c7c9baa1",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "08ac2298-cfef-4d31-8209-8e0c1abfd6dd"
        },
        "item": {
          "id": "d607fd96-653f-4d4f-96f4-49c4df5d8c46",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9485b9cd-a1fc-4558-b82f-2b89b3438948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5d425b-3cde-4020-82d5-07a2856d5763",
        "cursor": {
          "ref": "a433dca2-75bc-4e87-8023-f6b08a84588c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "095890ee-ba3e-4c71-94f1-1601a1663030"
        },
        "item": {
          "id": "4c5d425b-3cde-4020-82d5-07a2856d5763",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db657fc7-05f8-41b3-a459-4227ac5ebdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52553cf-466b-4114-96df-6d183f91a9f9",
        "cursor": {
          "ref": "ae03ac4d-573f-439f-821e-117c1e375899",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7d95ae90-940b-4bf6-8ecf-38da53905370"
        },
        "item": {
          "id": "a52553cf-466b-4114-96df-6d183f91a9f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ca5b6e0-4255-429d-93fa-fb000b0d085d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8b0adc-d584-48f4-83fe-21e24dad3372",
        "cursor": {
          "ref": "2a06aa4e-cb9c-459f-a5b9-a1d9cecf9f31",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ba10d13b-7dee-4bd9-92b7-649ca5862c16"
        },
        "item": {
          "id": "1d8b0adc-d584-48f4-83fe-21e24dad3372",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "81b15c39-7a66-49f9-bb45-4892332f7197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec53957-5559-45b5-b646-7bfab462cfa4",
        "cursor": {
          "ref": "26275e9d-5474-4d56-a396-e25e92f95a03",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eec1ff18-5e9f-451c-a46f-e663a656b0ae"
        },
        "item": {
          "id": "1ec53957-5559-45b5-b646-7bfab462cfa4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41f0168c-5625-493c-ba46-ec9dfb763f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d40dcc-0df8-474e-8da6-039cd2a769e1",
        "cursor": {
          "ref": "9189e994-b506-4b26-940e-e79c733c08ad",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0c19d4e8-1d20-4f37-99ee-37b40cd883e6"
        },
        "item": {
          "id": "41d40dcc-0df8-474e-8da6-039cd2a769e1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d625b5a1-9820-4c02-a1ae-efeb61253c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18a484e-8767-4910-af1d-ad4e2e743c0d",
        "cursor": {
          "ref": "35d411af-2eb3-4552-9bd6-c917b62f5d9c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dc1a95b2-1707-48fd-b71a-92158c649395"
        },
        "item": {
          "id": "c18a484e-8767-4910-af1d-ad4e2e743c0d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "de5996ad-ce61-42f6-a524-c0828042edc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d249a429-92e9-4c71-9052-95f87653a17d",
        "cursor": {
          "ref": "faf89604-2e94-45ab-98e6-d80909b280af",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c66cb0eb-3bd1-4a9b-8818-196597675ec0"
        },
        "item": {
          "id": "d249a429-92e9-4c71-9052-95f87653a17d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9ed83dcc-a9c4-4d5b-bc6d-2c831e2cea87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d6aad4-469a-4a67-ada0-47a2cbe729db",
        "cursor": {
          "ref": "c5cc8e9f-2417-4f3b-82ae-91f2867fce82",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a0b2c23d-ef08-4663-9ede-43cc0ba07681"
        },
        "item": {
          "id": "27d6aad4-469a-4a67-ada0-47a2cbe729db",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0af428c8-ac6d-46ab-8fb4-40ddb8fabd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb8472c-77c2-4cfb-807b-691b8e167f85",
        "cursor": {
          "ref": "77dfc931-4045-43b9-b6d6-33d65d6b7227",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3f79d4c8-53ab-4046-aa58-c15f973284f7"
        },
        "item": {
          "id": "6bb8472c-77c2-4cfb-807b-691b8e167f85",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "92a8bd0a-e73f-4f9b-93c5-8f74cccb6dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316eddd6-e424-4c0a-9441-eff0392ed2e1",
        "cursor": {
          "ref": "cbe86e43-257a-4b59-8e37-b697ae5c2329",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4b02cde8-003d-4973-b76c-657140231333"
        },
        "item": {
          "id": "316eddd6-e424-4c0a-9441-eff0392ed2e1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c8ad3614-fe0a-4407-babd-6dbd0b99763f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46811a6-5bba-49fe-93b1-aed4c37a1f93",
        "cursor": {
          "ref": "4258a8be-68ca-45a3-8c8b-1d4cd186a3b5",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4376693c-5918-42cf-ac19-c4dbabeca563"
        },
        "item": {
          "id": "f46811a6-5bba-49fe-93b1-aed4c37a1f93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d3f4098c-145c-46af-bb4c-4581a3d3e037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca14fd53-f5dd-4ada-bba2-362a7177ffd7",
        "cursor": {
          "ref": "31970bdb-dc54-4557-a945-a91099052b57",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "25dab22a-2b22-4005-bfdb-bc0d332abb14"
        },
        "item": {
          "id": "ca14fd53-f5dd-4ada-bba2-362a7177ffd7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b351ee8c-d5f4-4ae1-8c44-73f022594fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ade677-1aff-4473-842e-0fbffa17d555",
        "cursor": {
          "ref": "d7537140-7bde-453a-81e1-80524db19d56",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c596915a-7a6c-491e-89f6-76598a6b9093"
        },
        "item": {
          "id": "19ade677-1aff-4473-842e-0fbffa17d555",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f1e0ff7-2872-4d95-aa74-a2c90cd73b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1a13cf-664a-419e-8937-4c147b880846",
        "cursor": {
          "ref": "fbb6c4f1-a4bc-4154-a0b6-7ab11bf6b7ae",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ba2c4dbd-045f-416d-85cb-cd9826c89dcf"
        },
        "item": {
          "id": "7b1a13cf-664a-419e-8937-4c147b880846",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7b9f2ad0-d109-4b38-a789-f6eada0ba81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386085f1-85e6-44df-aede-bcf9dc40b253",
        "cursor": {
          "ref": "a674bcb1-3751-439c-a683-0765b7e9155b",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a3054d31-4dca-4092-8985-2bde577fffa2"
        },
        "item": {
          "id": "386085f1-85e6-44df-aede-bcf9dc40b253",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f1bdb787-2011-44c4-8cf0-49ea3402878a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20bddd9-5aee-4901-989e-fc1d8a686c9a",
        "cursor": {
          "ref": "7b2bd7d2-4278-419e-8114-143678de9ac3",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e743938f-b9a2-4b7d-b94e-478d366c4a7e"
        },
        "item": {
          "id": "a20bddd9-5aee-4901-989e-fc1d8a686c9a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6b967dbb-a419-44d4-b378-fdf97e0c918d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a9ca76-fbd6-445e-9047-599a09eef3ea",
        "cursor": {
          "ref": "8eb8167c-9bb3-4705-999d-b25a89d6d13e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "746fd711-ab9a-4ba4-b7f5-18f1079d75a8"
        },
        "item": {
          "id": "27a9ca76-fbd6-445e-9047-599a09eef3ea",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5fd75192-eb33-480c-8dd5-f8d12c18ba93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ca9f7e-50a1-496f-aa0d-e8c9c63e5f43",
        "cursor": {
          "ref": "d510ccad-afb1-4417-8bd3-c791b55e9e26",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4532eca8-e0a7-4156-af4e-1c1cc433b498"
        },
        "item": {
          "id": "32ca9f7e-50a1-496f-aa0d-e8c9c63e5f43",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3fafe5ff-3e3d-4b27-91ed-9be49f980be2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c5ff36-a857-4374-b5f7-e19c1959e21b",
        "cursor": {
          "ref": "916aaf2a-4d79-402f-876c-a3c6a67b1020",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8bac0071-a25e-49dd-b653-196df6fc1bd4"
        },
        "item": {
          "id": "92c5ff36-a857-4374-b5f7-e19c1959e21b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fd6dc8f9-025c-458e-a0fb-065d5f9b7c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e92d0f8-e2b0-409d-800f-80de73172601",
        "cursor": {
          "ref": "3105f094-8cbc-4754-bb84-6961b911f2b0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4dc446ec-549c-4458-bf9a-a69121694d1a"
        },
        "item": {
          "id": "5e92d0f8-e2b0-409d-800f-80de73172601",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dceb6020-f288-4939-890f-a92126836e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d20b81-02a7-458e-a178-44d425a26c3a",
        "cursor": {
          "ref": "7f066774-b693-4be0-aaad-0df53647c317",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d4e7b619-e05a-4f4a-8d3d-d7ad06421458"
        },
        "item": {
          "id": "03d20b81-02a7-458e-a178-44d425a26c3a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d3cecbfd-7aed-4b46-b11a-48c420bed6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d979c1-a2d4-4d24-9c72-026cf2f0888e",
        "cursor": {
          "ref": "a02d27f0-f8ec-479f-a49a-ddac7cf97527",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cd462ac2-271e-4754-8545-ff83344ad502"
        },
        "item": {
          "id": "d0d979c1-a2d4-4d24-9c72-026cf2f0888e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df623ced-347c-4762-8608-eae9c48f5318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7b6ee8-c2bd-4d04-b34d-320406465158",
        "cursor": {
          "ref": "d0c36958-8200-48e8-b080-552262979620",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4848f4aa-5763-4f31-910d-b64bb09e0fc7"
        },
        "item": {
          "id": "8b7b6ee8-c2bd-4d04-b34d-320406465158",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "645ad746-4098-4bb9-8783-d257d5b1aec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fb0f95-bc6f-47ea-b10a-55f980d1cd67",
        "cursor": {
          "ref": "36a1750f-e400-4bc8-a57d-4707a54287f0",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d5f3e337-6ee4-4ecf-8272-58b0fe7afa85"
        },
        "item": {
          "id": "14fb0f95-bc6f-47ea-b10a-55f980d1cd67",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d61f1569-5487-487e-b721-47e775bd0a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1040d361-108a-4806-ba3a-f48c8286ec95",
        "cursor": {
          "ref": "0bfd2934-4eb2-4313-bd2d-f2861d754020",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6ba94310-4aee-4de0-b2e6-6a9820aed866"
        },
        "item": {
          "id": "1040d361-108a-4806-ba3a-f48c8286ec95",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "815915b4-2a78-43c2-9f04-73501a9a625d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e8e5e0-2f8b-4fc9-b35d-f0a4157b4fe8",
        "cursor": {
          "ref": "d5bdf320-adb0-464d-9b6f-55bf25b2f5f7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "30966726-6cb1-45e7-9e2c-30b7999a4854"
        },
        "item": {
          "id": "f8e8e5e0-2f8b-4fc9-b35d-f0a4157b4fe8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c74b8fdc-1a87-4c01-aed7-52f1a5777add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4de7f51-df61-439e-8d3f-e8047a136f17",
        "cursor": {
          "ref": "c527216d-9792-4d06-944e-93dbbf2f5d10",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9f3fb1a0-aa5d-446d-a67f-4ea97d57453a"
        },
        "item": {
          "id": "a4de7f51-df61-439e-8d3f-e8047a136f17",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e2fa90c5-af0f-4b7d-8b37-d93bcec7138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77551bb9-36d5-4128-9814-0ccb96beb507",
        "cursor": {
          "ref": "a0826cbb-f343-4023-bec1-d8ba99d3071f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0bcb6a63-b29d-430b-84f8-b62e676c907a"
        },
        "item": {
          "id": "77551bb9-36d5-4128-9814-0ccb96beb507",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "59344f89-7537-4c19-a2f2-609d564395be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07602885-9d42-4f1f-96c7-ccf084c08e21",
        "cursor": {
          "ref": "867a6b56-7b3a-4127-a5cc-c73af4f5c3ba",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7c27f2fc-de01-45cd-9d09-119606351b6e"
        },
        "item": {
          "id": "07602885-9d42-4f1f-96c7-ccf084c08e21",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "103a025f-ffde-4835-9680-db31c1511905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd8017b-6ebc-457c-b1f9-9bd76a805f2b",
        "cursor": {
          "ref": "1e4ab3dc-d6cf-42e1-9de7-f4e3e955da5b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "46b209fe-11f3-45cb-a9e8-43363a5c107e"
        },
        "item": {
          "id": "9fd8017b-6ebc-457c-b1f9-9bd76a805f2b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "81d9a0c9-6762-40e2-884c-b69d3aa2cd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ae96bf-f464-43c9-805f-df212b915481",
        "cursor": {
          "ref": "6e2e7604-af5e-4acb-ab02-77e7a705b06c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2ff6b997-cf92-4bfb-9f80-20c06905f63e"
        },
        "item": {
          "id": "72ae96bf-f464-43c9-805f-df212b915481",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "890cde8c-19e6-48b0-8b37-fbfc319dfe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f615325d-58b7-4fb7-9c1b-66694449a08d",
        "cursor": {
          "ref": "f229c62a-deaf-4d9c-868d-f2e606289fdb",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d9ea5745-56a0-4426-93c9-71f06d714a91"
        },
        "item": {
          "id": "f615325d-58b7-4fb7-9c1b-66694449a08d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3a87e699-bd57-4221-ae36-06f680c21584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750ff942-6a0c-4eb3-8f01-f76026b64ee4",
        "cursor": {
          "ref": "c53f3881-07dc-4a5a-8f95-fb3d8b578600",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3f648988-65c6-4499-b28e-aa17140d756c"
        },
        "item": {
          "id": "750ff942-6a0c-4eb3-8f01-f76026b64ee4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ca0331fa-873d-4eee-a8e2-2aa809de793f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedf1efe-a525-4f5f-a03e-294568dbf536",
        "cursor": {
          "ref": "200a980d-b69c-4d44-bb6f-4d95b510a7ba",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "226b32d8-2a4b-48b4-a0e5-2805379b7196"
        },
        "item": {
          "id": "aedf1efe-a525-4f5f-a03e-294568dbf536",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f4b34c7b-bdd0-4f06-a955-5ba32be1f592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4c4e5e-63d3-49a4-8081-c98222e2a0b3",
        "cursor": {
          "ref": "2a54032f-af50-4273-98aa-9e9f7c8f7a51",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f08634e2-671c-4208-bba7-c3e8c6dcf899"
        },
        "item": {
          "id": "1b4c4e5e-63d3-49a4-8081-c98222e2a0b3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "63b7e88d-1ef5-4edb-a33b-e31023477aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f382a4-2a1b-4c0a-82a9-3dbbe0c7cc1c",
        "cursor": {
          "ref": "91ff1781-813c-43c4-92a0-537d3f50bdfb",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "93d75b04-5166-4df7-8b66-6f0d0ccb83c0"
        },
        "item": {
          "id": "d3f382a4-2a1b-4c0a-82a9-3dbbe0c7cc1c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b5c6f5e4-35de-45d2-beb5-d29f9c97e87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925d604e-16cb-4a6f-8405-ae4d9d099cb8",
        "cursor": {
          "ref": "57fc5551-fa97-4c2e-8e09-6086008c4d16",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "026da5c2-dacf-4e02-8728-d69d5c1fe4f2"
        },
        "item": {
          "id": "925d604e-16cb-4a6f-8405-ae4d9d099cb8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "adb09ce2-204b-4a71-b194-fb177a31adce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1101e6-9785-4962-b3c6-4e64bd0a5624",
        "cursor": {
          "ref": "96419623-3434-44c2-b05a-f2add0e5548a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "00c39202-c8f0-4b6d-8da2-ae76e3d6208b"
        },
        "item": {
          "id": "9e1101e6-9785-4962-b3c6-4e64bd0a5624",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b90e10dc-fc3a-425a-bd8f-7d1de4695d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b62224b-7f24-4fc9-a2bb-ab346ba62c59",
        "cursor": {
          "ref": "c4c6fb58-314e-433d-99bc-63cdaa9a34f8",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c5d10032-6a84-4931-8486-030d7b910987"
        },
        "item": {
          "id": "3b62224b-7f24-4fc9-a2bb-ab346ba62c59",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "603d9577-d5ac-4f84-b637-903d64191f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23dd3c4-20ee-4488-ab91-551a40fa9d26",
        "cursor": {
          "ref": "f0f6ca5f-9474-42ed-ba8d-2d4db57d955f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "114c234a-88d2-4d71-b8f9-cefdc689516d"
        },
        "item": {
          "id": "e23dd3c4-20ee-4488-ab91-551a40fa9d26",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3d73407f-ad4b-4028-a6a9-44c3ab3efce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf9c77a-b27c-4054-b397-e4c1c78d8f5b",
        "cursor": {
          "ref": "a43d4d83-36a4-4d4b-af2b-327cdc088bd7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "61d607de-8da7-4fae-92dd-6469858c8157"
        },
        "item": {
          "id": "ddf9c77a-b27c-4054-b397-e4c1c78d8f5b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6ef64788-c663-4a85-bc25-2bcff6c18390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1744170-0355-49b6-8a9a-659c47b24b56",
        "cursor": {
          "ref": "7d6b6dad-794d-49b3-9798-65c320e8973a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "18cc50ef-a892-4807-83ce-5b51f7f3538d"
        },
        "item": {
          "id": "a1744170-0355-49b6-8a9a-659c47b24b56",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a29a6033-cf67-499c-affb-34e9cd347825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7e0f98-1429-4968-8fab-a6190e2fc9d9",
        "cursor": {
          "ref": "b86c57e8-3d00-4ed6-a215-c2a0b9f711cb",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4e452123-7c54-4bda-a251-268f20b33e73"
        },
        "item": {
          "id": "cf7e0f98-1429-4968-8fab-a6190e2fc9d9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "13f9773a-6a83-44e3-b64d-09dda62fec23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ff3d8a-db6e-4a3d-9803-10229d66075c",
        "cursor": {
          "ref": "d76d08fc-0e23-487c-a742-503171cf5f78",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8b73796c-1e74-408f-98e3-d528b0e84b11"
        },
        "item": {
          "id": "70ff3d8a-db6e-4a3d-9803-10229d66075c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "018f7b35-1c80-4d16-bed6-2b9ec3346324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a2a644-5d5d-4418-8025-fcc6709ba343",
        "cursor": {
          "ref": "ed01700f-9cec-4d6c-8224-a6d9c53e588a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "96cdc28b-bac9-4122-a80b-e54f61adcbf2"
        },
        "item": {
          "id": "00a2a644-5d5d-4418-8025-fcc6709ba343",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1a75b727-5c40-4723-bb82-003178f59d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d6fb1d-1427-485d-85c3-2d9c54f6e51a",
        "cursor": {
          "ref": "4d69532a-9a03-4a3e-90dd-06cd3f32c49f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "374ae801-bea1-4b88-b6c5-0601d55f8a4d"
        },
        "item": {
          "id": "a2d6fb1d-1427-485d-85c3-2d9c54f6e51a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f17972e7-fac7-42a5-9569-4e365efb5139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d5263c-feb4-4bba-a809-64c3716f8c07",
        "cursor": {
          "ref": "bf07edf7-c429-49fd-b7cc-70a559df0cc1",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b4b2c130-b002-4abe-a41c-1bfc976779eb"
        },
        "item": {
          "id": "e0d5263c-feb4-4bba-a809-64c3716f8c07",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "260c2848-23c4-4e64-8412-16ba9e39d7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a488f1-7a44-43cc-81c6-853f3ab1041b",
        "cursor": {
          "ref": "36e7fc0f-a077-42ec-aa58-4fb325f52074",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "82624223-0ff0-4164-bed7-091709c73d6d"
        },
        "item": {
          "id": "f9a488f1-7a44-43cc-81c6-853f3ab1041b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "669d6012-0a2b-4cf3-ae6b-604281d4737e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a395808-abdc-4092-8662-85be565c6c92",
        "cursor": {
          "ref": "ffdf1d3b-2e58-4d24-9f6b-6225cb3e0b95",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5b2493cc-cd1c-4c22-8e52-12ccb5b0bbe7"
        },
        "item": {
          "id": "3a395808-abdc-4092-8662-85be565c6c92",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "693dd2db-ef5a-4c7f-abbe-4a89bd438566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f99af7-287f-41a8-bce8-2b7d247a5223",
        "cursor": {
          "ref": "85452f68-0eaa-4f33-a794-37eefa613b09",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "01a97df1-796b-4db0-b758-fbd4ea141ab1"
        },
        "item": {
          "id": "e9f99af7-287f-41a8-bce8-2b7d247a5223",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "054ddb89-b2f6-4bb2-811e-c2fe03a6b32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d590048f-67d0-416a-ac51-9b1913ba268e",
        "cursor": {
          "ref": "5ff25a44-1f4b-4fc6-89a0-5357022a404f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "647b16e3-985c-4fc5-9b53-147cab985e5e"
        },
        "item": {
          "id": "d590048f-67d0-416a-ac51-9b1913ba268e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e973f222-0a87-4254-bc97-bfaa5bb48b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b3fdb0-26ad-4157-9cfa-3374e43541e1",
        "cursor": {
          "ref": "956ce33e-2d05-4cc6-a46d-abe60515920f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1547977f-8151-4488-af35-904a72d2d57c"
        },
        "item": {
          "id": "b0b3fdb0-26ad-4157-9cfa-3374e43541e1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "10328f90-0485-409d-bd4a-cae62e9a4841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da428fe-1b7c-40c2-a5e7-ecb08930f02d",
        "cursor": {
          "ref": "a598c3db-6082-4ba9-bbb1-438d06d16509",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "19c4438d-4b2b-4dde-bc44-7a9f8e716c37"
        },
        "item": {
          "id": "4da428fe-1b7c-40c2-a5e7-ecb08930f02d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cbf62d00-5d3b-4221-8317-a1615b5b1870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6542def-f242-4f4a-90b5-cb0450e8318a",
        "cursor": {
          "ref": "8ee98711-a557-4fd4-908d-d3c57d67ec90",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d8fd5c36-7cb7-449e-9752-32a212797789"
        },
        "item": {
          "id": "f6542def-f242-4f4a-90b5-cb0450e8318a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f1ddbcda-bdbb-47e2-b398-c90b3022810e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e91480-14d2-4f1a-b145-21bae0f9ca50",
        "cursor": {
          "ref": "1f985b3f-d288-46f6-b699-2f3a5d0e2d24",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "853184c5-4ee3-4e25-bd77-5e3431355b0a"
        },
        "item": {
          "id": "72e91480-14d2-4f1a-b145-21bae0f9ca50",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5039d14e-b538-4664-a137-4b7a677597a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16af46fb-fb30-45e2-b89b-fd6ee8a32f45",
        "cursor": {
          "ref": "d10598aa-c17d-4b90-832d-19e7a46b7a15",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "02d0317c-e014-4ca7-9d00-d8205de3b3b6"
        },
        "item": {
          "id": "16af46fb-fb30-45e2-b89b-fd6ee8a32f45",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "48a8a032-0404-4713-b78e-85609104d738",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2002ac6-3922-4b2d-871d-6d409eec46f4",
        "cursor": {
          "ref": "c1c9e94d-5695-4b84-9469-45a1f07cc2ec",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e4d7ad34-c144-461c-9685-2c0930b39654"
        },
        "item": {
          "id": "e2002ac6-3922-4b2d-871d-6d409eec46f4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5dde2b92-e76f-4cc8-8d32-58b201832cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6660ae-45be-40e7-958e-c0cd853deec9",
        "cursor": {
          "ref": "2e5400ce-7f44-4a5d-8945-3193040051de",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9bd08920-58fa-4902-a8ee-a1b144c51f6c"
        },
        "item": {
          "id": "de6660ae-45be-40e7-958e-c0cd853deec9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b810df2b-de24-460b-8a79-65d7b30d8006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c533ad1-ec4a-4e6e-92fb-652d376a57d5",
        "cursor": {
          "ref": "16ef40f0-7a39-4df6-9ed9-a323000fb988",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "37bf919a-0727-46f9-b9ea-b55aa24e5ddb"
        },
        "item": {
          "id": "5c533ad1-ec4a-4e6e-92fb-652d376a57d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ea9b74d6-29d0-4e70-beb1-059041f42dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b9a442-262f-40ef-a7c6-8683e0dfc91d",
        "cursor": {
          "ref": "63a1fe37-d062-409e-8b9c-7485fd4348f8",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9f8c4fda-19f2-4a5a-91fd-69c99959dbcb"
        },
        "item": {
          "id": "e6b9a442-262f-40ef-a7c6-8683e0dfc91d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e6d11647-20f2-4e04-800c-51e42a6d9920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84119c1b-3803-4ac8-9a7b-08e5210e4c4b",
        "cursor": {
          "ref": "a4409797-e4ad-43bf-bd42-351f10ea9526",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c628ddfd-6b7d-4c1c-bd62-9eeac7691420"
        },
        "item": {
          "id": "84119c1b-3803-4ac8-9a7b-08e5210e4c4b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3e73988f-6ccc-4e23-ab58-a4a2fee565d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf08544-424b-4639-bb9a-28167425eddd",
        "cursor": {
          "ref": "1106e19a-8853-481b-a6c8-b957b77c1f33",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "74bfa969-4652-42c2-9b44-a569456cc469"
        },
        "item": {
          "id": "fbf08544-424b-4639-bb9a-28167425eddd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "85902e85-32ea-4462-b667-17e6680c2090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c50f90c-b8e4-4488-93b0-0d42b6cecdb5",
        "cursor": {
          "ref": "c4e1b320-831e-4f48-88a6-00d7d1d20526",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "62b322bf-f786-4ef2-a55d-a57952d662b8"
        },
        "item": {
          "id": "2c50f90c-b8e4-4488-93b0-0d42b6cecdb5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f9b43ab6-a346-4c57-9eae-efae1b3942c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73734845-9d1c-4e9b-ad6b-795188b9b83a",
        "cursor": {
          "ref": "4eb72ef4-ffd0-4ef6-b02b-951bfca1db91",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b40bf2cf-2188-4c45-b2de-66dbaf5e9539"
        },
        "item": {
          "id": "73734845-9d1c-4e9b-ad6b-795188b9b83a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "36804a16-e014-4593-8e7f-e8e9d648c8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe58b14-6c1c-4fa8-9e77-079920535eec",
        "cursor": {
          "ref": "9df196c5-0dc2-4933-831d-b611e71d62ff",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "34e28054-07e3-4469-839a-14e378ff5534"
        },
        "item": {
          "id": "cfe58b14-6c1c-4fa8-9e77-079920535eec",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b3526344-8062-478d-80e4-5b067746e23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0221d944-f588-4e13-a264-3888f7f0a166",
        "cursor": {
          "ref": "76cf0189-6a09-4bc4-963c-2836bb6bb50c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "09484294-39ca-4dfc-8577-52781e7c6945"
        },
        "item": {
          "id": "0221d944-f588-4e13-a264-3888f7f0a166",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9e030698-bf52-4cdc-a1d9-65b754a7701b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97708b14-0cda-42bd-9650-112c16460487",
        "cursor": {
          "ref": "58496e8e-ddf9-4a01-9f24-5dd63f9bb6f2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "755c5cfa-cae3-45df-b7fc-26cf1acb2d21"
        },
        "item": {
          "id": "97708b14-0cda-42bd-9650-112c16460487",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f67b6466-3fd3-4ae9-85a8-fc24b54636ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a715843-cbba-4764-ac0d-f6a91176a3bd",
        "cursor": {
          "ref": "1ad3abe2-336c-46e2-ba2f-0f6220a07f49",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "944f8ecc-f28e-4336-a81e-bb07c2e1e01f"
        },
        "item": {
          "id": "6a715843-cbba-4764-ac0d-f6a91176a3bd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fd15f6e7-d067-4303-85a5-6d8c3f9fc5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeca8af-d327-48ad-8e04-95dfae5a799a",
        "cursor": {
          "ref": "d4afc6eb-abbc-42e8-b7e6-6589f349fb3d",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e465e323-de0e-4343-b79b-8e1a1d44a0cf"
        },
        "item": {
          "id": "3eeca8af-d327-48ad-8e04-95dfae5a799a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e9a029fe-881f-4149-b428-b540c9eda288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3122b1fb-4ebe-4c9e-90df-5c9a1372114b",
        "cursor": {
          "ref": "92deb2e6-019d-4ff6-8a2c-48394982f2e1",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8d1d78dd-d8af-4669-876b-d5ff298bed3d"
        },
        "item": {
          "id": "3122b1fb-4ebe-4c9e-90df-5c9a1372114b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7e1434bb-d6a8-4c65-a36f-941a96962fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9238179b-740a-49ec-b097-004939b27128",
        "cursor": {
          "ref": "9550aa5d-75c4-4a79-b32d-87b4fd8e0818",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "18984fa8-e471-4524-88e9-f48d0e89448a"
        },
        "item": {
          "id": "9238179b-740a-49ec-b097-004939b27128",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e87bea53-0065-4d4b-9461-013b3c4cacc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a0f6ad-8458-451c-901d-e0b556c9af3c",
        "cursor": {
          "ref": "bd89a06d-26f0-4087-80e8-2722b430d9f6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8e90b956-d69d-4dae-8033-bd2a5bc1642b"
        },
        "item": {
          "id": "e5a0f6ad-8458-451c-901d-e0b556c9af3c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a63f87ce-c037-4e2f-b338-0f4c09cbf103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c9dc65-6567-483b-ab39-27a7c39598f0",
        "cursor": {
          "ref": "e603461b-1f74-468f-99bb-7b4e7edd56ce",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "000ab378-6768-4e56-b859-8e422c099e87"
        },
        "item": {
          "id": "31c9dc65-6567-483b-ab39-27a7c39598f0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2b36fd89-19c8-4370-9376-e38f194ae030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549039a0-1426-4442-af01-6fcae7246907",
        "cursor": {
          "ref": "6d0594ec-31ae-462f-ab7f-aacda59294d9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b07bc11b-dbaf-4675-8d3a-9854356c145b"
        },
        "item": {
          "id": "549039a0-1426-4442-af01-6fcae7246907",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8fc0d009-3a47-471b-8a66-228f581641a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f9e56c-210a-4608-9c7d-fec2050b1ee5",
        "cursor": {
          "ref": "ab25b13f-e99d-43b2-aba7-0f298ca5e23c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7688df44-e23e-4089-b7de-e6da7d1ac9af"
        },
        "item": {
          "id": "71f9e56c-210a-4608-9c7d-fec2050b1ee5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8835a8b6-8a64-4d2d-8b9c-61debdda1205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a00b07-a873-49c7-b45a-1eb1dab55a51",
        "cursor": {
          "ref": "a71fedf9-cda1-4cfb-8a71-594dbddbb850",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "25b611ae-b91e-46bf-9187-842110f7ccd3"
        },
        "item": {
          "id": "07a00b07-a873-49c7-b45a-1eb1dab55a51",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "574f4e78-fd9a-4cb3-b475-3a9d2cc1f7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af6f1bc-4665-4f37-b580-5fcecd11cd6a",
        "cursor": {
          "ref": "991804e2-f4bb-4480-8e2b-338e2606ae65",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8326aa54-8cab-4d51-a709-18a6d9cd309f"
        },
        "item": {
          "id": "8af6f1bc-4665-4f37-b580-5fcecd11cd6a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6faa4734-0f0d-4ffe-9dca-4793d8f00ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe894cf-0db4-43ee-8ffb-6297e5cd56b5",
        "cursor": {
          "ref": "7bd2688e-0923-4638-969f-88f3627ed445",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "932f1fd5-0051-4b14-a4c1-42ea5297b34d"
        },
        "item": {
          "id": "dbe894cf-0db4-43ee-8ffb-6297e5cd56b5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f8a8027f-8f68-421f-ac62-e221b6585074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd19fb18-5790-4cd2-8fa7-3d81d210cf58",
        "cursor": {
          "ref": "891862d5-c7e6-4496-a87b-2e88f2011884",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e5be36eb-ad78-4bfa-a0d4-48cfff65ebb1"
        },
        "item": {
          "id": "fd19fb18-5790-4cd2-8fa7-3d81d210cf58",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ef63adda-fc86-4d5e-8ead-aed7cea19d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15048494-b6ea-4a12-a9ec-39a2e25b505d",
        "cursor": {
          "ref": "68e34340-1f3f-498a-9ce2-7638e4cc97c3",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "77c934d4-9bb7-4b36-996e-6ec3ee1216ee"
        },
        "item": {
          "id": "15048494-b6ea-4a12-a9ec-39a2e25b505d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "77cc6e53-1c1a-4b10-a767-581726f53490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe7bed3-d487-4186-acfc-46bb72334a8d",
        "cursor": {
          "ref": "bb25288e-3740-4c6a-a42a-d82b5c254d42",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "331f353d-2770-49c3-b018-4b3811c92c2e"
        },
        "item": {
          "id": "ebe7bed3-d487-4186-acfc-46bb72334a8d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "76375a7f-8861-4620-b764-0a1985cd2ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9299bbb8-3db3-4d11-8752-57d2850764a2",
        "cursor": {
          "ref": "a14b653f-56c0-4be2-81c2-d090cda8097f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cd798401-38ff-43ab-b887-ca0f889cf2ff"
        },
        "item": {
          "id": "9299bbb8-3db3-4d11-8752-57d2850764a2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "653e3cd1-3fe4-4614-add1-1100e19a433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2817398-83b3-46ee-b431-3277f44b974f",
        "cursor": {
          "ref": "2ead665e-0ac9-4032-88e1-7f94318aa7d7",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5d9befa8-a805-4d36-bbe4-70a5e22ed71c"
        },
        "item": {
          "id": "e2817398-83b3-46ee-b431-3277f44b974f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "54a46f53-0b85-4ed4-b230-82242578b020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ff4951-dc15-4962-9253-a543f83be1fd",
        "cursor": {
          "ref": "7527755e-e66a-498a-a1b4-4cd6cae5b7f1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2fd3ff6f-9e7a-44d5-aed1-30b5f8e1eb91"
        },
        "item": {
          "id": "14ff4951-dc15-4962-9253-a543f83be1fd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "71ff9643-f191-4858-a8e9-94caa492138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efece689-93f2-40a3-a917-46533a324014",
        "cursor": {
          "ref": "5b4a0ea3-f193-4642-ad32-18bcb4232d29",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4843af82-07d7-415b-a2be-2ffd7ce583fc"
        },
        "item": {
          "id": "efece689-93f2-40a3-a917-46533a324014",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "38f4092a-d6fd-4402-a6d4-49f7ed8558a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e274db-5288-46c0-80f0-56999eed4969",
        "cursor": {
          "ref": "5b1e2b83-3324-45c1-a074-8489f9420b93",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "859d5b7d-2db4-4092-9fd9-ca7f1ba09b04"
        },
        "item": {
          "id": "71e274db-5288-46c0-80f0-56999eed4969",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2989b1c0-f59b-437a-836b-00a2a96eafbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813a2084-51fc-4711-bfe1-901ab353e2e2",
        "cursor": {
          "ref": "d25a9ddd-dce0-4a95-af54-a227ef5b0aa8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aa45ff5d-775a-420a-a9e8-1a34f1816747"
        },
        "item": {
          "id": "813a2084-51fc-4711-bfe1-901ab353e2e2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb1b8cf4-b547-4e2f-9687-5ce2be337b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16688ffc-24cc-417a-b327-2eca86fc3bc4",
        "cursor": {
          "ref": "c565b012-5f9f-468a-b93f-339f9da34e97",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dac8ccdf-eb33-410d-a39c-0fda50b80236"
        },
        "item": {
          "id": "16688ffc-24cc-417a-b327-2eca86fc3bc4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f889ede3-e0b1-4974-99df-89dd961951cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3179c64f-7123-4b3a-8d82-0b229a821af3",
        "cursor": {
          "ref": "80aa0584-034d-4602-b475-2054784cc5c9",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d9e20d5b-e60a-4e85-a8ba-b9aac448b1e9"
        },
        "item": {
          "id": "3179c64f-7123-4b3a-8d82-0b229a821af3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2d8e3f33-29fc-469e-bea7-6f2ddc7dde05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f4296c-3245-4e1b-9a5a-ce61c96e8170",
        "cursor": {
          "ref": "f9c0305a-debe-43c9-a654-3b86f5e297da",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b51efd3b-e155-4c57-afb3-a2e55a9f92ef"
        },
        "item": {
          "id": "d7f4296c-3245-4e1b-9a5a-ce61c96e8170",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b6081b27-1a39-40f0-9fa6-1c3fa6054bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18115e8-9719-4e36-9f88-eb36664d7856",
        "cursor": {
          "ref": "7b4b0490-ac24-48d7-93a0-ef17c76d73e6",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e7c61dd6-9469-4ffb-8059-eb22a83699e5"
        },
        "item": {
          "id": "a18115e8-9719-4e36-9f88-eb36664d7856",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5f7d631f-9ac8-40d0-a2c0-eda7a14c0720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ae20f1-f282-4e76-a051-44d622e93e93",
        "cursor": {
          "ref": "4ffb40b8-205a-4a38-aa54-ab6fc17016bf",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7393f66f-44f3-4d00-8671-f1a7db0dd07b"
        },
        "item": {
          "id": "30ae20f1-f282-4e76-a051-44d622e93e93",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e787beaf-e8f4-471b-9c84-4f232df288f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0164ed-9b97-4a6c-ae8b-40ea4f0d4793",
        "cursor": {
          "ref": "c98e9025-77f7-4dd5-81c6-d20f432b2c19",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f09366e7-3831-4896-858f-bbfcd3e8e057"
        },
        "item": {
          "id": "6f0164ed-9b97-4a6c-ae8b-40ea4f0d4793",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9ca5294d-a342-4edc-88a0-ccea77b93171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a3dddd-3194-43c1-84e1-92d7453938b1",
        "cursor": {
          "ref": "0a9a2b91-f34e-4a91-9d2d-f9e309d0f939",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7624bbcc-a563-48cc-ba71-f9d50ad8823c"
        },
        "item": {
          "id": "61a3dddd-3194-43c1-84e1-92d7453938b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "365425fb-0d1c-4c5d-8507-a95436c8d74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fbb0ef-70e4-4d50-be89-75a55ce715f6",
        "cursor": {
          "ref": "6d7ec633-7c0f-429a-952c-72d768d72cf8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0c5e9f1b-028c-4dcc-92e7-4cd35fe91b8a"
        },
        "item": {
          "id": "f6fbb0ef-70e4-4d50-be89-75a55ce715f6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ad02c2fc-5225-40f0-af52-5100c5b2140f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818d067d-2da4-47af-864a-02ca513aa92f",
        "cursor": {
          "ref": "f6a627a7-1780-47bf-be4f-0764ddb2f3b9",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "020351ea-7c1a-4264-8589-b73e7209017f"
        },
        "item": {
          "id": "818d067d-2da4-47af-864a-02ca513aa92f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cc175a17-2395-43bf-8aa3-ccaa2e42269c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3669ad38-8557-45a5-bb27-1de2009c5839",
        "cursor": {
          "ref": "2d3738aa-e0a4-4968-9b8b-d2c8298eb45f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3ccc7d43-385a-468f-88ee-431edece35ed"
        },
        "item": {
          "id": "3669ad38-8557-45a5-bb27-1de2009c5839",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "87097d01-5d13-4096-bb49-f7208a516859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f361a203-f084-45f1-9d9c-b07e5abbd90c",
        "cursor": {
          "ref": "fa35f124-96f5-4554-9974-8f990bd653db",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4bdeaa84-65eb-4062-8026-ff7feab89d7f"
        },
        "item": {
          "id": "f361a203-f084-45f1-9d9c-b07e5abbd90c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c5017540-dac1-4d09-ac94-e90c8846610c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1007b5a8-1a75-4a0f-9f50-8e209721f791",
        "cursor": {
          "ref": "9ff9297d-d5a4-40d8-8d86-c912c1be8f28",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a1bcec8d-3566-4726-b2c4-1899dd0c0d90"
        },
        "item": {
          "id": "1007b5a8-1a75-4a0f-9f50-8e209721f791",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0b02f01e-98f1-4def-a7f1-3c45e57b5900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84298c3a-53c7-4239-84c4-4dcd0bd66d14",
        "cursor": {
          "ref": "0152145d-8441-4393-a787-2d5d2c2b7a28",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "614c4053-6ce3-462d-89aa-b7b9ee0b42c5"
        },
        "item": {
          "id": "84298c3a-53c7-4239-84c4-4dcd0bd66d14",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ae70b764-adc5-40e4-8137-060b33f39ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df2ce99-b68d-46ee-b4ea-5d5bc0c401d4",
        "cursor": {
          "ref": "a357405f-c33c-43b9-b625-db79d183a657",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8432163f-db33-4f73-b638-c8010bcf2210"
        },
        "item": {
          "id": "0df2ce99-b68d-46ee-b4ea-5d5bc0c401d4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3244317e-1191-4542-8b71-2225c8da0315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5a626b-2d83-4616-ac51-7bd054376860",
        "cursor": {
          "ref": "0fa13e8f-b01d-41ec-8c42-5597247b1ce9",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c7024c81-6b9d-49df-879a-916ef1d01ee2"
        },
        "item": {
          "id": "8e5a626b-2d83-4616-ac51-7bd054376860",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2d55cf0a-1904-4434-be23-f6f0d759d257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d69078f-c950-47e5-a833-0237e594f715",
        "cursor": {
          "ref": "6a68574e-de57-48df-8b4e-18f5d4b49dc8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8fea1720-399f-46b9-9842-4abe0e5a713f"
        },
        "item": {
          "id": "0d69078f-c950-47e5-a833-0237e594f715",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7fb2876e-cfea-41b7-93d8-0c3459e76848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7b9b31-94da-48e5-aa17-a8fbf293689a",
        "cursor": {
          "ref": "a5d32390-253c-4586-b431-df1bf0464fcf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "15f24f53-f9ae-49ab-9b02-d387f661cefb"
        },
        "item": {
          "id": "de7b9b31-94da-48e5-aa17-a8fbf293689a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4f45a833-ecff-48e9-9098-49728b226052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a38a98f-1204-45ad-a119-3c808d855dc9",
        "cursor": {
          "ref": "7a73e4f8-36e4-4081-902a-d2ef10f28a85",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6961c1f7-328a-4647-adcb-9ab8fe7d6f69"
        },
        "item": {
          "id": "6a38a98f-1204-45ad-a119-3c808d855dc9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "165f1a00-901b-467a-94a0-5bd8a90f5784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba091685-9d7b-4c1d-9237-453dcb33ed1c",
        "cursor": {
          "ref": "b38490af-320c-4869-a6d1-1c1eeb8e3601",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4077debb-628a-442f-83bc-3186f8929a59"
        },
        "item": {
          "id": "ba091685-9d7b-4c1d-9237-453dcb33ed1c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "03331508-f0c5-4cda-b1f4-f1aa168080cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755a8910-a4fd-41ea-b85f-ee2a7519ac04",
        "cursor": {
          "ref": "cb43625b-56b3-4672-9532-cbe47f95d2a6",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "229065b2-1a0e-40da-85db-528fafe83642"
        },
        "item": {
          "id": "755a8910-a4fd-41ea-b85f-ee2a7519ac04",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a87fd5b2-8fdc-43f5-9739-734452edfa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa093cd6-5a26-4b56-ac39-7a9bcc03572c",
        "cursor": {
          "ref": "f874083b-9427-4c4c-8e13-d34630e492b1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "70a792d4-3273-4e58-9ea3-8277307ed0fb"
        },
        "item": {
          "id": "aa093cd6-5a26-4b56-ac39-7a9bcc03572c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b976c704-a972-4e3f-b657-f6ed48294ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dbcf79-9d03-4795-a124-f188974a029e",
        "cursor": {
          "ref": "08e71610-a25b-4026-bec4-2adc1f27d5c3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5deebd17-13a7-4de5-a035-3fcfa5851d0b"
        },
        "item": {
          "id": "e4dbcf79-9d03-4795-a124-f188974a029e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d09b2d31-5ae8-41f4-8967-d083c31dce75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0854b21b-01d1-4618-82fb-fce48c9e57a6",
        "cursor": {
          "ref": "87307e49-f50c-402d-9570-6e8ecfa4a372",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6ccb3a3d-fb7a-4b6c-99aa-a65dd2300171"
        },
        "item": {
          "id": "0854b21b-01d1-4618-82fb-fce48c9e57a6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "531e2c99-6a76-44f1-bbaa-9d55ab0cad6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4ac035-6c63-464f-8c84-d9614cc81464",
        "cursor": {
          "ref": "aeaa6f25-2965-4a07-9f25-7d1feb517c64",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c92e397f-b5e6-49f6-b8e8-46f98283eeda"
        },
        "item": {
          "id": "5d4ac035-6c63-464f-8c84-d9614cc81464",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1d178e78-a777-411c-b5f2-9eed3734baca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52203aba-58d6-4e31-9a2e-af10f8bf6376",
        "cursor": {
          "ref": "786e2997-cef1-4f6e-ac29-937975d8bb3a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eacf200e-67ae-4db0-8255-bcc9216419cc"
        },
        "item": {
          "id": "52203aba-58d6-4e31-9a2e-af10f8bf6376",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "53d5687e-bd82-4765-8b79-9d911d724d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01ec28b-fa08-4592-9ea1-1847cf52023c",
        "cursor": {
          "ref": "1a308119-b789-4c3c-987b-3bdcb3aaec15",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3bc1dc00-fd32-487a-ae50-dea33b6b97d8"
        },
        "item": {
          "id": "a01ec28b-fa08-4592-9ea1-1847cf52023c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f040a65c-e6d1-4966-9ea3-501a0426a16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d5fbea-c0c5-46fb-a49e-3327f7cbd985",
        "cursor": {
          "ref": "543ec727-3942-4b5d-849d-dff683aea635",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0a9b06cf-8de5-43a3-a834-b0d21d48938b"
        },
        "item": {
          "id": "b2d5fbea-c0c5-46fb-a49e-3327f7cbd985",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4b965f50-52a8-446e-a40a-84ffe12e8b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b600057-615e-454f-bf70-a0b1c2049eee",
        "cursor": {
          "ref": "f30214a7-d58a-47dd-8e27-a179ea6d80c3",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7b58ea76-4604-4a63-8aed-f9ad90db018e"
        },
        "item": {
          "id": "9b600057-615e-454f-bf70-a0b1c2049eee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "44422981-ff42-4048-bd7f-b13c86048972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d1f385-5b07-47fb-af63-9230e08c7ac3",
        "cursor": {
          "ref": "4abc5d91-d035-4717-b6d4-9bfda2b15241",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6f7cee00-a4f8-4a85-8aa8-5796026e8c30"
        },
        "item": {
          "id": "e4d1f385-5b07-47fb-af63-9230e08c7ac3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7e89530e-1aa8-413a-ba6f-01fddadd92ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b8b1a7-4a58-49bf-8d3d-4458e81e21ed",
        "cursor": {
          "ref": "e202f90f-d2e5-4d78-afc1-b56a07d9dde7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "064cd48c-f82f-48fd-93ad-556cad6ba43a"
        },
        "item": {
          "id": "26b8b1a7-4a58-49bf-8d3d-4458e81e21ed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0418312a-a3fe-4966-9cf7-c242a5d9ab59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6204d5-e97e-4490-ac32-1b0bd11c741b",
        "cursor": {
          "ref": "39f5eab3-6735-4eea-a2ec-7441b2a0055e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0fb2c747-bc7c-49dc-b8fe-544d4682ecaa"
        },
        "item": {
          "id": "fc6204d5-e97e-4490-ac32-1b0bd11c741b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "87961ac6-41b5-4871-acfc-1d8f1974beee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea90306d-87d1-488f-94c2-8e793d2e29f8",
        "cursor": {
          "ref": "dc07aaef-d457-4334-9744-ef00261e2825",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "08291efd-92a1-45d2-bc16-db54b0f2ce40"
        },
        "item": {
          "id": "ea90306d-87d1-488f-94c2-8e793d2e29f8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7a76ff50-8f9c-446f-8029-b29f75165b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9f3f49-6ef1-4106-a34b-2349f8c942e1",
        "cursor": {
          "ref": "8e9c8180-026b-4247-b537-1dca823a1a4c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "efbf7852-ac55-4fee-86ce-03c9c265ab4b"
        },
        "item": {
          "id": "1f9f3f49-6ef1-4106-a34b-2349f8c942e1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ed6eab5e-e8a4-4125-af7a-6f642d676dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceffd11-3278-4981-b81c-c528436462e2",
        "cursor": {
          "ref": "a9e62c44-ebe6-417d-8989-ed4021c7fd72",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e198893a-c5a3-4666-807c-277d22a88f9f"
        },
        "item": {
          "id": "dceffd11-3278-4981-b81c-c528436462e2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3d818b55-a186-4b4a-9bd0-1fc2c9fa0f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c000d1-05ee-4fc6-a7dc-f2a40f0777b7",
        "cursor": {
          "ref": "4ad7d6cc-9578-4164-b60e-5f9384b80853",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f83d4404-1250-436a-a1f8-cc124c365ade"
        },
        "item": {
          "id": "81c000d1-05ee-4fc6-a7dc-f2a40f0777b7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "80dfafbe-d5f3-449a-b1b4-911b389b3d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a691580-e3c8-4219-9341-4650975c7999",
        "cursor": {
          "ref": "d74ff2c7-9f55-4534-9563-11e6a0370c9c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dd04a778-4150-4e8e-96a4-44d633375cfd"
        },
        "item": {
          "id": "7a691580-e3c8-4219-9341-4650975c7999",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "aa46033d-6d2b-4b6f-b4d5-b4af006ac4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aaba195-ba6b-4fda-b4cd-0161131d8904",
        "cursor": {
          "ref": "b5218bc4-e8d4-447f-b630-6b4232e166a8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c8530087-fa22-4975-a2d2-862b0d185e30"
        },
        "item": {
          "id": "2aaba195-ba6b-4fda-b4cd-0161131d8904",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "40f9d3f7-4d82-48f6-bace-fe6d19c44ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967fc1b9-c2e0-486d-872f-3323b1e36505",
        "cursor": {
          "ref": "9586b67d-0d5b-41f4-8d23-e95d31d89012",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a7f86ea0-62a5-438a-8388-faffd40825cf"
        },
        "item": {
          "id": "967fc1b9-c2e0-486d-872f-3323b1e36505",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a1620b5c-ebe3-495a-af77-257846741557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252657fc-8f84-4ff2-897f-1289d3136416",
        "cursor": {
          "ref": "7f8cdbf9-76cf-4c1c-9be4-f4c3b6fb9279",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c21b217a-8c22-406b-86d5-d53722e13c86"
        },
        "item": {
          "id": "252657fc-8f84-4ff2-897f-1289d3136416",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3d966469-999e-4fbd-8124-50595347598f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e376ecb0-e947-4b45-bc3c-d2b675ef2127",
        "cursor": {
          "ref": "258f7e79-3709-447f-9bf1-60ea0c590a99",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "57057471-8fec-4731-a53b-9381c9679067"
        },
        "item": {
          "id": "e376ecb0-e947-4b45-bc3c-d2b675ef2127",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "068caf28-26cf-4fe3-81c6-5227a946a42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b48ef3-9569-40a8-abc6-57b662cf769f",
        "cursor": {
          "ref": "ae3990cb-5362-44c9-bebf-7a098ce1bb74",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c65b4eac-8130-4c4d-bf96-b65e431d64fd"
        },
        "item": {
          "id": "12b48ef3-9569-40a8-abc6-57b662cf769f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2e038c96-4508-497e-bce5-ee7f3988e653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472b4a89-4824-4416-9f21-168fe7f6eaea",
        "cursor": {
          "ref": "1f4858f2-31eb-4e0a-a7db-480cdd2ae353",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fd118bc5-bd1e-4b9a-962f-2ed4c9cec94a"
        },
        "item": {
          "id": "472b4a89-4824-4416-9f21-168fe7f6eaea",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5350d8fc-d7d7-4821-a834-567069ec506a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9b7948-6509-49f7-9716-7fd75d93a2fa",
        "cursor": {
          "ref": "d583bf50-5574-419c-8399-eb2e51e0743b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4e5c0fa5-ac56-4023-a5ce-0612d50096a2"
        },
        "item": {
          "id": "3a9b7948-6509-49f7-9716-7fd75d93a2fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "108dbd88-b880-4cf7-ae0a-12400337e8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a8f810-4e85-46cd-b563-20b1fe814ae8",
        "cursor": {
          "ref": "7172042e-d39d-4f3c-a095-12c18febedcb",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "764c14dc-03ba-48fa-860b-2e473aa49722"
        },
        "item": {
          "id": "e5a8f810-4e85-46cd-b563-20b1fe814ae8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "881ccec7-c610-4be5-8bbe-3660b83be4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdcf4c1-c2b4-4a93-9e8d-4d203c64f470",
        "cursor": {
          "ref": "811304b8-1f35-4698-b85a-b09e29184138",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8d2a5224-89c0-46b6-ab52-ee2cc0647e28"
        },
        "item": {
          "id": "abdcf4c1-c2b4-4a93-9e8d-4d203c64f470",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a62364fe-d5c8-4d77-80e0-a909a729ecb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22587909-55ad-4d21-babe-6f3b30224b4b",
        "cursor": {
          "ref": "444c25ba-4b29-4b02-a0bc-358c07fc2477",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "603093d0-f0c6-4f5f-8b36-f0297e1b363a"
        },
        "item": {
          "id": "22587909-55ad-4d21-babe-6f3b30224b4b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2160cbfb-e42c-428b-af21-da72b10468c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa444440-b52e-4f2e-bed7-b8f8c42fc552",
        "cursor": {
          "ref": "90e35f52-9b20-4822-924e-14cffd6d9339",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "78b30078-317e-4a1a-bbe8-a39d718fb5df"
        },
        "item": {
          "id": "fa444440-b52e-4f2e-bed7-b8f8c42fc552",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fc007596-8d0a-4c78-92a9-7aa27a326f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55b58d2-2477-4fcb-9a12-dde36a67e5be",
        "cursor": {
          "ref": "dd772ca7-293e-4d5c-a922-125bf7711139",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c24e927f-5439-4866-982d-3480495be076"
        },
        "item": {
          "id": "e55b58d2-2477-4fcb-9a12-dde36a67e5be",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "075638ef-a70d-41f7-9634-f9abbfce12db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a83db8b-1d37-4d97-9f37-0023db259d09",
        "cursor": {
          "ref": "0e7f8b1a-6ce1-4d28-be95-6ffef34df68d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "cf2376fb-ce89-4af6-86a1-708145ab2abd"
        },
        "item": {
          "id": "1a83db8b-1d37-4d97-9f37-0023db259d09",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "919c2ae8-c917-4742-b024-14021799d652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddae56d-7b7b-49d2-8469-190b9bc34b21",
        "cursor": {
          "ref": "f07c0e19-5d29-4a23-8806-830e3f636103",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c7f82d98-aa4e-4cd5-b444-e8be227bf607"
        },
        "item": {
          "id": "5ddae56d-7b7b-49d2-8469-190b9bc34b21",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "889d2bb1-dcc6-4713-b420-7e758746f231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa846040-190c-4859-94f1-aa4bd8609bb1",
        "cursor": {
          "ref": "78cc6bdc-aa5f-411e-a04e-04cb029a24b2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d4196415-33ea-41ac-b5f8-9e95eaf93655"
        },
        "item": {
          "id": "fa846040-190c-4859-94f1-aa4bd8609bb1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ec81b615-d501-4af0-8f01-8c57020748da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfc7398-9c79-41f9-9b32-0b71a68a1e92",
        "cursor": {
          "ref": "e6bd1eaa-1491-4956-a185-b3f42db4e972",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "702ec34c-1dd4-468d-9e54-b819011593eb"
        },
        "item": {
          "id": "4dfc7398-9c79-41f9-9b32-0b71a68a1e92",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "41ede4ff-da72-4e6b-b0d9-99d11a14389b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb38954-4dab-4482-8407-3b8b0ae7987a",
        "cursor": {
          "ref": "d04f2128-f891-446e-81e7-ee6e2e9ea6f6",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "11b88dea-5978-4417-aa70-8b13305489b5"
        },
        "item": {
          "id": "9fb38954-4dab-4482-8407-3b8b0ae7987a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e1eccb19-66b7-4552-95a7-2353e837a906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bb3b6f-e9a0-4872-abdd-b3f56955a063",
        "cursor": {
          "ref": "243fe0c3-ca28-4122-8fa3-d869d7d7090d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e22cfe08-a039-4f28-bc02-9f8d4280292f"
        },
        "item": {
          "id": "a4bb3b6f-e9a0-4872-abdd-b3f56955a063",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "825c2940-0664-4fe7-a111-79321a1095cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9933e8-bfcf-4244-a333-608baec8cbe7",
        "cursor": {
          "ref": "d5c69b3c-518f-454f-a896-50aa171020c5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dc824363-2bca-4436-997c-7281a07f3699"
        },
        "item": {
          "id": "5a9933e8-bfcf-4244-a333-608baec8cbe7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f17852b6-a0af-4ddd-80be-61fa53745399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1605745-6e9b-44c2-9413-0487349fc230",
        "cursor": {
          "ref": "30274a03-9db6-471f-b71c-56e72abb2859",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1a7e396f-d558-4af5-b4a3-cdf68dab104a"
        },
        "item": {
          "id": "f1605745-6e9b-44c2-9413-0487349fc230",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f6904825-19b0-49ce-89dc-1b687658f934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bb0b35-afa8-437a-88a2-9135a56b045c",
        "cursor": {
          "ref": "f5326bae-5c22-432d-82d7-00fd8c7221e8",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f0f556fa-22a7-4ca3-b80d-c9c4644d2e1d"
        },
        "item": {
          "id": "d5bb0b35-afa8-437a-88a2-9135a56b045c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1ad1c170-2eda-4ea5-9b41-67c8f641c2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd4f5ed-81d5-4b91-8b5e-cc67e0c40859",
        "cursor": {
          "ref": "018e5b4d-4034-40f1-8094-a9fdd22244f3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4dd1a4d9-f642-44ac-bfd7-d6ac99c4a117"
        },
        "item": {
          "id": "8bd4f5ed-81d5-4b91-8b5e-cc67e0c40859",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "abf9f924-26d8-49fa-abfe-f4837cc65301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e39acf-7927-4639-87ae-9dd8d69251e7",
        "cursor": {
          "ref": "fe884e7e-019d-4f72-92eb-a00aab576e87",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ece0c5a5-f842-4390-84d3-08d78a19d622"
        },
        "item": {
          "id": "a4e39acf-7927-4639-87ae-9dd8d69251e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "475bca62-4a6e-4784-9c85-5d7ce3fa6389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71c531b-979a-4247-8179-9f0d1d52e54a",
        "cursor": {
          "ref": "ca305f28-3d56-475b-b3f7-aa3969cdb422",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "18ac9d1c-689c-4006-916a-5c4fd828cb1e"
        },
        "item": {
          "id": "a71c531b-979a-4247-8179-9f0d1d52e54a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b0db9a0c-bc1f-46ae-ab0a-3d0b0668da70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e4768d-4441-457d-b331-51f6a83db315",
        "cursor": {
          "ref": "94b8ee68-58fd-4c96-8b5a-acaad00be93f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3da9ff11-e42d-4d6c-ade7-26da56742209"
        },
        "item": {
          "id": "f4e4768d-4441-457d-b331-51f6a83db315",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "269c94d7-d889-40ca-9941-1b51f95b8903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a792d0f-cc4a-4651-9b0b-1f39de84d453",
        "cursor": {
          "ref": "5bfa5b08-ab70-4299-9c06-44ec7968bdcf",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "58105879-7041-4558-ae7d-a0d9f16d42c1"
        },
        "item": {
          "id": "8a792d0f-cc4a-4651-9b0b-1f39de84d453",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "22221ae9-7ff9-4a8f-9aaa-fdf82ac08355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8115a196-35ae-4a71-94f7-722f7eed05e3",
        "cursor": {
          "ref": "7cb231c6-6985-42ab-a2da-48730abf6db7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ad261ee1-f251-4b54-bc06-c5b8a6b34514"
        },
        "item": {
          "id": "8115a196-35ae-4a71-94f7-722f7eed05e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f253a146-0c8d-4654-b7bc-c64f61ad6abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89444574-c6e6-424b-ab26-21947ef5641c",
        "cursor": {
          "ref": "4e91b115-2fbf-45cb-8004-ca788f93f711",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c6165009-0010-4aa1-822d-1f5b1f21f072"
        },
        "item": {
          "id": "89444574-c6e6-424b-ab26-21947ef5641c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "357f9cd8-abcc-4ac6-ad10-cef62b53e144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f45986-87f7-42df-a6cb-f08aa4567af7",
        "cursor": {
          "ref": "ead8e43f-bfcb-44a5-9b6e-40c532f825cb",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e9d0cb56-4798-4238-8e49-f8280771e27b"
        },
        "item": {
          "id": "29f45986-87f7-42df-a6cb-f08aa4567af7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "76cbe8ee-1608-49b5-abf6-078dea06d050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76c3710-f83d-4662-aaa6-fcf9812c3d38",
        "cursor": {
          "ref": "ebe04f0a-8c90-42b5-8e7e-5e7efca2040a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "50b4588f-89a4-4bbc-90bf-b8fb00a9d454"
        },
        "item": {
          "id": "d76c3710-f83d-4662-aaa6-fcf9812c3d38",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c64daf05-ff0b-436a-b3c5-376b44e8804d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55a0bf2-1cf7-4bc1-9762-990004c1f707",
        "cursor": {
          "ref": "c21c08a6-6e68-4ddb-adfb-2585a580cff6",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c13cdc0d-be03-4148-a597-104b9df015b1"
        },
        "item": {
          "id": "f55a0bf2-1cf7-4bc1-9762-990004c1f707",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "622736fc-74e7-4554-bb74-feb5af84faba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d31076-b73f-4747-b6c2-66ff71b58345",
        "cursor": {
          "ref": "74cb1ba4-23e6-46b8-801f-2cc2824fc690",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e98e36b8-329e-463c-b4a3-3c2964ba4b7c"
        },
        "item": {
          "id": "c4d31076-b73f-4747-b6c2-66ff71b58345",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7b9cac3e-985c-436d-a4a8-1ff1d68afc93",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5ccaf3-1d61-45bb-8fe8-3bdc1b10853e",
        "cursor": {
          "ref": "3737578a-692a-4f3c-b524-11fbf7f84f44",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "54ed3118-1eb4-4bf0-88d1-7170a333b304"
        },
        "item": {
          "id": "7d5ccaf3-1d61-45bb-8fe8-3bdc1b10853e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9265fb00-5d1e-414b-9434-8170c0024183",
          "status": "OK",
          "code": 200,
          "responseTime": 1988,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49975982-9b5e-43eb-98b2-75a2a830a695",
        "cursor": {
          "ref": "4212c165-1224-4650-80ae-0dc4c7025edf",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0da0831e-1bb3-494b-beba-fa9ef517da52"
        },
        "item": {
          "id": "49975982-9b5e-43eb-98b2-75a2a830a695",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "93e498bd-459a-4378-846c-cb1d50a58602",
          "status": "OK",
          "code": 200,
          "responseTime": 1717,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847f1cb-99d8-4b65-bf34-3772be6c193e",
        "cursor": {
          "ref": "14a85359-ac9c-4990-a294-643c6b68c2fa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d07bee07-48b9-4aab-a45c-390a6b5320de"
        },
        "item": {
          "id": "c847f1cb-99d8-4b65-bf34-3772be6c193e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d9d4c82-4465-4870-965a-7b0287e3bf77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c847f1cb-99d8-4b65-bf34-3772be6c193e",
        "cursor": {
          "ref": "14a85359-ac9c-4990-a294-643c6b68c2fa",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d07bee07-48b9-4aab-a45c-390a6b5320de"
        },
        "item": {
          "id": "c847f1cb-99d8-4b65-bf34-3772be6c193e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d9d4c82-4465-4870-965a-7b0287e3bf77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781b84ee-1f9a-49ab-98bc-ea68dd57793a",
        "cursor": {
          "ref": "ad99ba85-3e40-4880-8961-eb5564e55e13",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a6b5b532-03d1-4d06-bb3c-f5204c2d80e7"
        },
        "item": {
          "id": "781b84ee-1f9a-49ab-98bc-ea68dd57793a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6599968b-6b3a-407b-bac3-ae5c60cb5f37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01394fc4-02e6-4836-8768-e003e9bc3d1b",
        "cursor": {
          "ref": "0e534992-801f-44bb-ad76-77faf1e9a520",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "75206500-80a1-41f9-9d2f-84425a94e0b8"
        },
        "item": {
          "id": "01394fc4-02e6-4836-8768-e003e9bc3d1b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f365cb07-1a8c-4f09-b29e-7de6e3f4acf0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}