{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "389d1d25-7cfd-441f-ba13-062a83bd165e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5d01234f-237e-4cc2-ac21-3102e88a80b3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "088ec962-e5b4-4fbb-8620-23dc3b2daa1f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3ef18338-cc0c-4f59-95b5-6d46b647656e"
                }
              }
            ]
          },
          {
            "id": "f5787e50-c431-4d4b-9e02-89295d4d1f44",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38a6866c-acb9-4aec-9462-0136e4f648f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cddc44d4-787e-4971-b56f-16f89cc69a62"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c4f23cec-69d0-4605-8ed4-e27375b9d483",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "eb42a28b-95b2-4f0d-ac1a-4e65235e035d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6822a513-7cfb-490a-9782-acfc53fa1284",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "795c3f79-d429-4cf2-a4e2-86102e3c927d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4ac24b2-3710-44b3-983f-8a317ef56f28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39291811-5b70-44a5-bcd5-afda69516550",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "703edcbb-14ac-4440-b841-5506b8173c12"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54a09c52-8b87-4349-9b71-c20f2018bb20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5f19141-08b8-4012-9cb3-942cbd936204"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2008525-2b4a-4e69-b2d0-f9eda6e1f152",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8b5ee252-901c-4a5c-bdc1-3a352000eb70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faf14ef9-f807-437a-9135-4c9f58ca1f90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8fcdb8b-d601-45e8-b961-6491cbb1d870"
            }
          }
        ]
      },
      {
        "id": "cb97951c-589c-4f5f-b406-115db647f1b4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2cd7d917-fbcb-401e-b332-14dc37072973",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fab2bbb-62b4-422b-8268-ab81df920819",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa34553e-3293-4802-9375-7b5a312dfa9c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174bfc31-c375-4f60-9d9c-288a218ea4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6362e0fd-4e03-464b-b07d-454a305cc4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a457135-cef1-4e7c-8455-80e2c8b1120e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e435121a-1a02-42c3-bd51-1e0d658b12f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2173d4dc-f3b8-4ae9-a692-8f7e3fe62562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a709c021-015f-4110-a94a-bf96eb8d69e7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98b7f2a-1dca-4868-9ef3-d5765a743cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a54d8b66-a70f-4bfd-8cd8-66bd53452ff5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee28caa6-8b9a-4a37-bc42-4684f3a82ab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76a47a6a-a7b4-463a-a032-9bf460f66194",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36824e2c-a357-47c7-81ff-29448d18c92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b2975a1-aa0a-4cb2-b6e6-7a3e6b394161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2bd552-a833-46c8-8e9d-5cecdebf3f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7ba8ed-bbf4-465f-add8-8c27dbd150e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1946d481-6a62-430f-89ee-d316bf672a3e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af64d787-6218-46e9-b7ac-c9ccffffca30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e846a16-685c-412c-82a5-3e09312d90e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5168740-ef05-4392-9924-d2f35099984d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "412382c4-18fb-4fc8-b9fd-ae75830ad898"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "763cb2ce-41c5-47ad-9db1-debe7d0562e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb476eeb-d103-4464-9007-9dbdf1390844",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b26bce3-accd-4043-ba51-872e0dfd8316",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "631fa0e2-b17d-4006-a197-af798f79ea17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26b4fd40-6c26-4b79-8847-d6a1eed32551",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "5ca3be48-2d50-4a70-bcfa-117e81fadb0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a76eb30-c446-4895-ab0c-9a21ea06337f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b16a5839-55e4-4eb1-b7c9-77f9df48910f"
            }
          }
        ]
      },
      {
        "id": "bfb24b97-428f-4b01-af2c-e26a546f853c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d84f0c9d-8513-4a78-ae7f-6728df0a6e9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a66e2238-ed84-4b65-9fda-505a116f8d97",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9003bcc5-089f-4537-bc63-ea71e7fe4588",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374b2d9d-87b5-4fa8-a8b4-1766942d11f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c022cab-72ca-4790-b56f-e2cdd049861e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443414cb-430d-4e89-bd0b-930e24c37ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dd5ee1d-1fe3-4846-aa79-c9dc3b736118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd66a75-9525-4c6d-96bc-a0acb078174f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49810a2a-23ab-48f1-95aa-9d3a44b506e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d517b7c-8468-4285-b7f1-20ca6152de0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bb9663-2101-454b-9a65-23e66a3e18ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46d478ae-8a20-4ef1-afad-3b35b2d67e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c8a65a-4347-4c41-b61a-6e52fbfb8360",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e2efa2-0344-4509-8206-2c87e769a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af785a0-86a4-40d7-9c66-90903feffd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5f6218-7785-42a5-8b71-921ca224c4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c432ab94-831d-4015-994f-0b3c103bd442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef87390-7a0b-4a54-97ac-a71e6ad2cf52",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6f1b7f-c543-4afc-b752-b82a329471f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4aeeac-f599-4bdd-84ce-a1f591901492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b399b7-1461-4eea-9282-161b88d9fe50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "085430e9-5cc6-4864-81f4-4286958dace4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e701e60-c07e-439a-92c7-bbf1306a7e55",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb60e2c8-7653-4645-ba4d-360ff2f1d8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05aafdd3-5231-417c-8dc4-32bdffba55f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d0e866-de66-4d8d-8e3b-30916f460a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc1feac-ca4b-4bba-8fb2-b3e3026e9600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f700ac-6f34-4560-9da7-a699dcd81745",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba892438-96a8-472a-9fc0-85194a100504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0bf4b7d-7155-4e1a-a193-979162bb652e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec25da6-ea31-489c-baa6-ff60b9bdd61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fcbcdc8-d82b-4d3a-9e6c-162b1e45953d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b4e1d2-743a-46a5-b284-eb1ab1b76694",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d61f19-08c3-4d18-85b9-d825baf88ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3f6ed0-7b2f-47d0-b783-d2ca8651bf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3531f9bc-8fdf-4170-92fa-af97e1060ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42bf346c-22af-4ab3-ac1a-7fde2990b9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe05cff-7afe-4fab-8176-7d58b310441a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b1a1f7-99dd-461f-a197-058f2312018b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca473c5-7007-49e3-8816-bcd160804775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ebdc66-cd91-457a-b6af-e894c112636a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2e1c42f-daf4-4e75-a4f1-d7b5989d6b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98328947-e31b-408a-9de6-d0b8cbfa2013",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3c7631-dc52-494c-ab78-46f2506f8db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e40b77-66d6-4cb6-bd37-f19669b564db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8af8a3-0f5b-4a6e-9d6f-be66136e904e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82573d86-aa1b-498d-aa82-cb44cb677181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db44c951-3e25-4e3b-becb-852a75efb01b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ed1eda-0517-498d-8cc8-f8f2a873f69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223e5f2e-e4d3-435e-a6d7-da215431653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282b41a9-c12f-4fc1-aea7-fb6a7a53ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b0de8c6-206c-48d7-99d0-4a721740b0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957e8932-b03c-4ba2-b9d1-dc76948ac8d2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6506bb-fa6b-4775-9f28-9b5af279f8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea780cc-5d95-4194-9eeb-e0dfa88f95b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a6c118-6163-436c-a1ac-42735d0ace4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a53bed4-0ac2-47d6-b2b9-f0a1915bb4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612fbb9b-1231-4275-9e63-8bccf5631c3a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55088617-0294-4ffb-8f11-8e5d9a574861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d40b9a-61d8-4c17-940c-2c3017c58f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36040956-adc9-4d68-aa23-c9b49e7eaa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac93dd21-7d60-44b6-a55e-81f207f7007b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894c6e2b-2b0a-4e7c-acac-12e9052c05a9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2831913-ff8e-4b3d-9a3b-340c6639fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a4111f-dd9b-4eb2-9e98-92455515346d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36b6baf-043a-4aa2-a27d-c922bc9432dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4bd6ae6-e049-4bd8-bfb9-0b6924a885b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827aafca-70db-48fe-a16a-001000bef794",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a679af5b-6c7f-4715-a57e-2ccdfc0eccc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e92b892-5acd-4730-b31a-20a327d0e868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc728f45-17af-4da5-88a4-1b5e6935f03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8b428c3-9135-495b-9f21-9553de959867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4631cae-51e1-4a47-8aac-26cd373f1a3d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b2e1eb-904c-40cf-bda6-dd79db4df652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d09210-aaff-44b7-8f22-993868518bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797eb399-e541-47d4-ad4b-5609b619ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8e8ad29-9f60-45c8-8dd2-0e5e82cbc7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b60e516-a5d9-4b0b-91e3-af83c22cd741",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5850c7a0-88b3-4c0b-b71b-f4927b7a6029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f6a40f-e6dc-4579-b2e1-226f922e11ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ceb75b-00ef-4c1e-862a-759b13d3acb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02c36f25-5eff-4f25-a5cb-f3e022f01b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4861ae2-6b0e-49f7-85b1-51255e2941cc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b0a05d-e8d6-496d-a549-68744450a778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7805a478-71f8-4af6-a425-7d39a41f3238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7139cf38-a322-406e-a318-23cf2850eb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f5b0821-712b-4c21-b420-9da10e0380de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca458ba-0f53-4f58-897e-d8a289985da6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee3ad98-7575-4fa6-85c1-cbffbf871b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30e78ca-f623-4443-9d8d-7398cd565b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa0ec2c-c3d3-49b6-93f5-f1ebdd7566e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5fe94f-b396-4ff1-bf5a-09c53dddd85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c45396f-7a48-49dd-9f86-0748dfef3797",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1751e574-7d7e-43d2-b82e-a801b06cbba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d3f19e-6ff0-4c54-8de7-b9fa71c93a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415d0a6c-cb4b-48e3-8f6f-ff4c6046b7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf84d49-63d6-4c7c-afd9-0505bad288e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca60563b-ca67-4532-8046-7983410dfdba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48b910f-5cf4-4c76-a65a-39d64b6694c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f2fbbb-d45f-444d-87d0-4255de3cb3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c0e9e3-8eb1-4980-92cb-bb45674b4b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc624340-af28-440e-846d-a4a4095f59f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a396eb1-184b-4bd7-a787-f66696f6efe5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161aca1f-2ff7-4395-a9ae-3fe8afd83467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2d563c-28f9-4fe8-984d-20071ea3a9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153cff32-db46-494f-8b2f-79bedac92c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa44a58-b4a2-4b16-adf2-5ed2f0e3b485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973c9440-809a-4bcb-9810-d2951d76be58",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92cad0d-5903-42cf-8806-579de02aef04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb92027-e916-4b0b-9a74-752f5229f175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c2d9e3-976a-4b4d-8b17-aa9066da9c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f9c86c-f4ce-4ffe-aec5-e4dd394e6046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d0a88f-f36b-4bac-ba9a-f87db2458f56",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a182af2-2970-4aa0-a096-e3bb80f503ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ed141a-f038-431f-873e-272036a2948e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3270c5d4-5f22-4292-a354-cc8c3e870a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b3eee2-44a3-493b-8313-1645adcb5041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f985bb-4247-4aa0-add3-b01753508bb3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32877b7-788d-4e61-9444-28e215717ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b350194f-28c8-4aab-8215-dc2f0fca0d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c12468-bc99-4a38-93e0-c89e9e080b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9df5d58-fae9-4d0b-9d10-636475ff56bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6159879a-2583-47b7-86e0-537657312561",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6f73f4-cc30-486e-864b-0bcb9e671708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de54802-f929-48ae-80ff-0540b30a781e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56034edc-b868-41fd-93b7-a04397801645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f636288-080e-4e88-bbd0-0d863df28b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2389fcfb-63d9-4911-a480-f76563d3eb8d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5269980f-5c99-42fb-9a57-a364eaf7bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c03848-8cc7-48c8-9d8f-b5a151b98d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8f3ec4-6813-46b5-9fc6-919fe03ff3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c47f6d-e6c5-43e7-930c-63b292993b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ca8cbe-dc38-4538-80f4-220d62ce49ef",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a76608-729b-4b1c-a8a6-670c3d7403d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3b26d1-f512-4c18-89cf-174d723aed44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f794c4-f2a3-4962-9c18-6fa22a9c5ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1569e373-d503-4f87-bacb-6f6cfad041a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa19255-b578-4ce3-a316-e9fe2992f6f6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2aae59-01e9-4350-a93e-7e312be7296b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737f6ca7-97ac-4403-8137-720ebb8b4bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31578f03-1cc8-4e97-8968-a5d07255ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b7514c-3893-4299-908d-61d3a977fc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8e7105-706f-44e1-965a-ec50f969f79d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec85c8a-4783-4757-8664-6d61820956be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f829d73-a1a7-4149-bd3e-66b4556151ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddada68-7a59-488b-93e8-7bf1ce3a1bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c5c12d-ea17-4903-8b37-f03ac8e03ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ea52f6-53c5-40c5-9d5c-9cc5f4d8a1c5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e971044-d3db-4ced-ab5d-3b1ec414f0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8824c5c-2aa8-44a9-9d50-5cc0adfdb8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d305a4c2-3f81-4083-945e-a16c328513bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e91c2b6-7d87-4a03-ac50-3affc752f133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9ba7c9-c240-4b0d-bb4a-2487a86930f5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5dc02f-8de8-44cc-a117-ccffc980a6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad191c8-4010-4421-a460-783f5f4d5d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5815648d-6087-46a7-8fb8-99379a53da84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c843bfd2-ed9f-4c64-be3b-7bdf31222e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1f8c1f-5912-4580-899a-a823da76788d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033ff8de-d41e-4933-8765-b17e57fde78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e9ae0e-733e-492c-9f5c-aa5d2f89f1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21798dc-4325-4888-8581-aca4e7e7e3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a1a3f2-053a-4fbf-903b-417f7b82aa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e04fa0-aaab-4f54-98eb-6e85bc959fce",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b0816d-a7b2-482d-8307-5612dd7bd601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e89895-1036-4e84-9963-8fa9ab440dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ccffc4-1249-4ee7-b1a3-b95f93a3c799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "518fde53-f2f4-43c8-a4f8-a4977058167d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f770588-aac5-4749-b3d9-de277a361810",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da37bd03-715a-4fbd-86f7-fe91ec3b00f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8599f76e-b90e-4ccc-9fce-4731c3c60eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec37dfb-da91-47f0-9ec0-19df9842be67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cde738-b87b-441d-9f88-76fdc78e80a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae12c63-d8d8-483f-ad14-f949cfb68c08",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fa37dc-b7ef-4737-ad93-6e731ef23373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b915c401-50f8-45a6-8b67-b3d4aa4e93e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b223bdc-733d-4660-a218-b36a7970d6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d506feda-80d9-4b69-ad26-27f0a52f0d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d65c45-827f-4f33-addb-07470fe86dde",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb399644-baf4-4c56-9e53-789eef202968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e3ea87c-ada5-4df9-8830-7780d6b8d558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4b28b7-d589-4fab-a738-4af00ab5bbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfe2938-9960-46cb-ae51-13d86f8aecfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d17093-65db-4b08-aca8-0596d55ee219",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d379137-0b2f-4c8b-b6ab-4c60d9ec59c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5312e0-1cf1-445c-bf46-1c34599fdb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1804c54f-533e-41ab-99dd-8213659e89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ee3cb1-f261-42bd-8039-ec54427cbf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab423380-ca57-4f97-a498-3bd70c331962",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc6a63f-3699-4264-9660-25e6b0f3d267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6570da-b7fd-4cb4-ae73-ac719c8dbd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1688abf-a384-4160-bc48-45f12001b3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db6cba63-1f0b-49c7-9a44-57c235d18deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea9c7db-ed90-463b-8bcb-f8e780664e52",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413bb002-013a-423a-895e-3bb751d527f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a37f21a-44fb-4a87-b388-e4adf7f5befc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe992ad-930b-441c-bead-68e0795db4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46c1f53a-88d5-4a34-a0d6-8d4a9599c98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8003b289-d238-4e1a-8d62-1558fe39f565",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be3a59d-d59c-47cc-aab7-1ae7a95346c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93375585-1400-4a00-a2fc-79c46c18aa9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6edcfde-145d-48d9-a367-a1c893a09716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0bb005-3f29-4db9-bc2b-7239eb20f712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fc3cac-5cf0-462a-98ba-227d8246dbeb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85559df-2eaf-45a6-a9ed-755fb3784e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87ead30-0394-4122-9a7c-d62a9da30fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5a2192-4de0-442a-9f09-5553530b4125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32fdf61a-9931-4755-8287-6319d2ed2189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6637bc8-6836-4bc6-a2d9-a1a9bf786be5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c7e01a-eb0c-40d1-ac5a-eccfef4158a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55d4ed7-cac9-4fcb-ac5a-14001e2729ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4248a0-3963-4f97-8237-20a1eea87fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b95e96c0-bf07-4991-8cf2-d6767cc9c29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b805ca72-e6c3-4f21-8a8e-bc2b863c7cbd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd6c0b3-1d6c-4ad8-9683-5b248d89df0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047ac1fe-0eab-455a-9012-5f6d41fd88fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b6a12b-22b6-432f-825a-1fe0bb568da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb90403-e63c-41a1-8cb4-aca7e98302bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd9909c-1d56-4a4e-a184-3f6d426a9cd6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf5e56b-ce77-4219-9269-48287544434f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d9ebd7-798a-4b88-b315-d7385c9c294d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18325714-e10c-4453-b1e2-5a807e772098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3fc7ee-5a66-48cb-bb67-8673a3f0f805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732156bc-6f81-434a-946c-864f31280922",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf665c0-e4cc-4787-8c47-8cbf0cba2827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edcf255-4f57-412e-afed-221177ce1b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf2fcf6-7f80-43ea-a017-85cae7e0792f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb9cefa-5e61-437a-9e93-dab7eb48edef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e2eff5-5f5e-4d34-9d44-2d9047a309de",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88be9c01-96c5-439f-8167-10ce43c020e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fb043d-b757-426e-9018-7716155fe4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cc9687-9fdc-4113-b915-89c09349366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd575f6e-16c3-4401-9317-11228c5478d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b0acb1-b0c1-48f6-a77d-275430d9d22b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55150dfb-387b-49a2-8c6a-c1f69269fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed907e83-7e98-4b1b-af26-620485531607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4f0dea-4842-42c8-a9fc-a384c18fea00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c27f642-bdea-49e0-8fbb-d56bd5b18fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4a6ec8-15b6-4831-87e2-c3c4cb48219b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3672f15-260b-4d6b-bf5b-c720388f3a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f2c71b-5df5-4d5b-8bd4-0289a86f8b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b877530-55ad-47a4-ba45-74f0e279b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87bd8875-7e7b-4094-8281-d5e4ffeeb064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18fdbd5-6794-4c52-a952-319a9e47895a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d0e2e1-b366-4010-9645-1a3175b5068b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e0df68-b967-448e-ad44-298e5f7690d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dbd469-0705-4164-931f-4bedf1ea372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad79f75d-3876-4a51-951f-3754e674fbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bad420-11c5-4d07-a628-8ae43d3bc5c4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea2b9db-075d-43c9-8aba-6f763c06026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12fa7b4-f8b5-4941-9a04-961da06fc4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abef119-2178-4977-a93d-69cacf4fd20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c540dcc-06f6-4848-a795-1b59ff03e4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbb1164-9762-4f48-9c28-eb6d9410ff18",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7d77c0-78d9-4b3f-8035-863b5c772534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d06354-7951-445a-ba78-1fa0f4835075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabd8c1b-c6a8-40a7-bbe4-8bdc42fc9638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "852b80a4-32da-4de4-87f4-091503e1a134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e0d8e5-dadf-4075-ba1e-3b8a8511a4a6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1790d1a3-5e2b-41a1-baee-5621aed0f614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa4cacb-f082-44d5-933e-4e7692ae6a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47fb0e0-0a96-4921-b610-20a5562aa060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "156b6dce-02b8-4f00-a451-48a194f52329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0d5f62-9d0f-4bf4-9df1-2bac3f203b52",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777c854c-2c8c-4cc1-90e8-b2fa56cee42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b37114-eb2a-4345-b4da-c43a979e6bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2691225c-2b28-496b-9b98-236e12d064c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "890abc7d-550c-427f-8e13-8d6728ffb363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591b9707-d198-45c2-8a19-292037729bd7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ade5b8f-bd1a-4134-b3c1-3ea060d75fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51449b91-c882-47d4-ad29-9201ec3553e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef9a7f6-a04b-480e-8f37-9e0fc3321a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd0fc32-c366-4ecc-bdbb-42219336d74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae46c40-01b1-46e2-9ca4-3207a49a2af7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12cfb7f-6234-4267-9a64-c3318e0ad55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9b5932-7f23-478d-8590-ff07127da0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b80e8c-e06d-46a1-a22f-769e08047ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba434fe6-b2e8-43ef-ac76-39d4a1fef68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4490f3c2-b95f-462a-a85e-5b329f008feb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47e49d4-c83f-4760-8dd9-edc648f9ce6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5f79ac-e5db-45d2-a7f2-d95ed9f57006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc3dc9e-b579-4954-a1db-b79f88d4a437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "35af2ac1-5a87-4060-a5e5-a554b0d5a71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca074aa1-58c7-4613-a1ae-39cdc6702249",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63970c55-2c4f-4ec1-b3e4-a9524f693028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b924da5a-14a3-4cbc-b723-5df3d2cf7777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6588f6d4-1e88-4fa8-af77-08d046b17d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "59d1db74-3e83-4827-9e01-5d2fe67b2449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bfe7b4-4ba7-4035-9b04-c6d4cd72acd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a394b05a-3ab1-41eb-83ef-8aa97c3f5834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170ad96e-848f-4a3f-bf17-6db716b59ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2d8fc4-410f-45ad-821c-a1da049a1215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83ae9667-7183-401c-a314-142de006b620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c236f9-dee3-4fc4-bbd5-93120a04bdb1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0ffb05-3170-48dd-a796-125038e65d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51022be6-0870-46d5-a4f0-a3585e5a5a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ea6300-3b66-49f3-81d5-97257609ce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc18aee-352e-4306-8f76-050f8fca3e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4b25bf-aa5a-469b-ae0d-00a60ed1ce45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7e3885-a368-4e3a-8417-932a69d6f951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9ed238-7701-4858-9205-8e9f034a4b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc8a73b-addf-42d6-835e-2b106ebc24f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76c8c441-27b2-46c1-a203-bf7c719bba47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae4141a-43fa-4ae0-afce-34d55a131c1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9c5773-d6de-47a9-b380-859ca2403b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004d6e3c-1c9b-4917-9249-65fa8d99aca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcca75f-5cf6-4054-9bd8-96e1baf557b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3955b902-0c2c-4f7a-b654-eab06f6c1ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ab3a67-9c32-4a5a-84d7-2280f5a52662",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989e4c6c-2791-475d-a253-867494a5b7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2872c2f9-3514-4e9f-8a09-af2da48d7c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff916305-f26e-4978-a25b-b1cd80600a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "989370d2-651f-4949-aaf2-12e69697a8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b173b3-9644-47f4-b42d-b54b8588bff4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58a1cb1-41c9-45d1-9204-26e305e2049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134ba1de-14c3-48d6-bd1f-6ae8801ab74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74570d14-a72c-463b-bbc7-97b60296680d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d628041-77ea-4cf8-9367-c8d0a2d81a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d6da28-35a4-420b-ae2b-31c9e9a4a6fd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47a32ee-d279-431e-b89a-ee722857d669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7186c5d0-7158-4a26-bb67-edaf4c2a552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6d6fe4-d7d6-4902-aa5a-1b2fb6e876d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f6dff5-f81e-40f2-9c5e-8813da8a3a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b31cce-4cec-4afa-93f9-fbd056075d75",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2383657f-66cc-4895-bdf5-481e38d63e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0715a862-f515-4d62-a109-ad2563a71609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056ecc06-6c75-4d93-938b-d0df2166b8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfeb951-df4d-49f8-be80-e902872af203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db13c851-cb73-4891-9da9-de9c62e30931",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3035bfe-2bbe-4714-8986-4026f0c452e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d12c957-6ce9-436c-9e05-5ff70718d4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f62b74-57e4-4ee1-bc13-694ec37db135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6876f1-fb6f-4c30-b50b-38833ddfcf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9f88be-ecd3-45e8-ab47-ee6da95d550d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1779034-c875-499c-94bc-296114eaabaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cac9d7c-26df-49ce-bdc6-e34b691e4957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cbbead-2565-4081-8bf5-9b8540047e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a49cbc0e-6829-449b-af66-b8691b679a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68de0cc5-80d6-4891-9500-92e4dc07f24a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc02b198-affa-4f86-b9f1-19f39c1f82e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b385bc6e-7ccf-403a-a0ec-974ab9042e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3167deb3-5a29-44e9-bdc4-6c245191a40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b9a11d-49ab-439a-af4b-cbb39657657b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0929b6-d835-4808-85bd-6fbf8fde434d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caf5f82-eca4-469c-a44e-cdc6f09a0feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1474185b-d502-41fe-9c08-fee77019134a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0acf607-834b-4e34-8a0d-fdac51fb0265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4d3ab7-2eab-485d-970b-9afa567df7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e6a7ad-ec7a-4c77-9f07-032051644d05",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8fb526-c897-4ea2-aed3-4e294f8984bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2192d8-bbef-4936-90aa-9be949bfc9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62c06f7-8803-454d-93df-6a76686f3c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "186b0356-e560-493c-85d2-4af495af5007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0691c5a9-742a-46c3-8f05-ede6c6af2637",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe3f8d9-6bac-4716-9adc-33a903b0823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbda387-fd2d-43f4-8079-9d4bfb66d2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9caf72-3ea6-4299-8c17-3d67e58c72d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "456df2a9-f554-46ac-8a0d-084919698ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe24485-7974-49ef-8e92-9ecc24ac1354",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2486c83-0307-40f1-b43d-dd86986f7670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3512b21-9baa-4cd6-b597-b396d93bbc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0841946-75ca-4c4f-8cf3-b45324d06542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d88b88-2617-448e-9854-a83f5da4ad2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c95e48-b61a-4740-aafa-7f6e5accf025",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573a15a5-7a86-45fa-a680-727deb9f21f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e0708c-ebc0-4588-879b-1d4843be030c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c145b7ac-b393-48ea-a830-2374d3cb47d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a702d69-1d81-4f09-bc36-d3ba5ad07b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6435f465-9bc9-4945-bc05-a45ab7ac1a41",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c875f7c7-6466-47f3-9f15-b6c29d62208b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd8d3bd-514a-41ed-a50c-109ea07ebdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e192061-cd5c-4913-9a2d-f399ac25502c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "addacb98-96a7-4dde-9746-dfe9e3debe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0328815-5ef8-4684-9703-caaa312006e1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7163b05c-0782-4131-afc3-e35f394346dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e29d56-8c6b-44d9-bae7-d47d7d9d1fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25397690-483f-449b-b990-628222df1d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1607d6-1be3-475f-aeb4-21276225e9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de99d180-d847-4b7e-be7a-4063856b1fd1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce30bfc9-c073-4c35-86c4-90d1d979af31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb21bf2a-32ea-46cd-bf46-534d195e9323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c02281-d1eb-43bf-a11c-b060b91dedbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "add6ba1c-9e5e-42b8-add9-b183fb209d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea50091-73d8-4f90-b46b-a08bb91dd678",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1db21f6-c85a-4887-a4e3-c3f07a2e9e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c3150e-79a5-4a56-819f-db1b44354667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3138ec-d068-41fc-9c13-98ead6ab6cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f47d5eed-8a0f-4fad-94d8-cba97364c15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59fba44-d61e-4ebc-89a1-4c71fa70d804",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a831e005-a227-456f-a15c-b64f039d62b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846c343b-a7a5-4583-9d10-35f6f69d366c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91d629c-bb5a-4693-8100-d7f49d1e282e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4445b563-bd71-4295-85a8-a0b8592bb008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a54622-8fa2-49b2-9760-f5150730b0f3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df07919-b5e5-4cbf-b44d-43afbe83f64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004b50e0-9b72-4c7f-a0e1-e02cc02bc2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5e2ae0-98c8-4e0c-81f1-39f48e1b2f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39c6ddc0-82e9-4a59-a7e6-16a3988a50de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cb6eac-e2be-4e52-814c-72ea1f77fe75",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f013f4-a09e-4aed-a1be-e22ab0d094ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0618b58-6d67-4162-94eb-58ffcbf36cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed2bbfc-68c1-4c37-8f79-24b82866408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6055b7-f5ea-4b76-bc39-705c2ac29fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9fe097-cd04-4d8f-a6ad-be9154de59ff",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebb6e29-9149-4b73-a20b-0e0c7efc8a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61ceedf-8a96-4a96-bbc2-978f4d0cd97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71907cc-cbea-4748-bca1-8952338fb83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d93279-1343-4449-b0a8-16add696f462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8a0521-35a2-45c7-bff4-066337202d9b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdb5d31-c63f-4eef-8c17-ba3251d73195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e28ed5-1ddd-4a2b-8698-277ced4174de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f704163a-f4dd-44c4-ad1a-f341a4343128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ce9491-0bb1-4e40-9e2b-937e32b7636d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a4abf7-8210-4023-875a-799e44fd67db",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3959dfc1-3f6c-416a-a5e1-14d6e00ca94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5491b595-567f-4ba1-af5a-c6ab5b6a7a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8026aba-f59c-46cd-a71f-c5af738faac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f19fb40-acb2-4525-9000-050355e1d027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902b2348-b4d0-4301-846e-967e41a02577",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856924b7-52e3-43ad-9c28-6f5a238668a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aba85f-a2f0-4089-9ca8-d0143b2434f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d854757-4e7e-430e-ab39-1dab5ae38359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b01d5b4-62be-44ba-8dbf-898d25dc834f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d835cf16-1300-429c-9abd-655cff4a23e7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d90dacd-306e-4af4-abff-7b7e924ed702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804a3d04-7252-4360-b737-aeed1c26e67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa38ba3e-6503-4dc1-a7ab-86aae5952e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a6d41b-f44c-4dc1-9acb-e64c258d8a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a6163e-6c52-48cf-ab28-9184d00879a5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3631ec37-cd4c-4456-bd00-047a25dc53c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72dbbb9-acbd-473a-a64f-f2d3e2882bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421bee8b-91b4-475b-b49c-a0c970a86b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4a5377-5a05-4285-968c-687cf93b23fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0b2d3e-2d24-472f-a185-baa8c8f29440",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d184c7-f07b-426e-8c32-ec27cdf6c9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92918836-50da-4314-8986-a3bde7e023cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22148bc-869b-44f6-85cd-a855d53b9528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54eed4cb-e73a-4539-b9e8-e1a54dcd8e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61422acf-2829-4989-babf-46f15a53acde",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a896fae2-3fa9-4163-9022-95d69d38e624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2872efef-0942-4231-8d8b-7b50a20c556d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a692f312-384d-423b-b20e-863f869d8d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffeb59fe-f89c-46a3-9c52-dd3868ebdf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9428417-57ef-4ca4-b8df-6fe4ce4063e1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9116c5b-5626-4fdb-99a8-2229e0846e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966be1ad-4670-4810-8760-b1275b2de6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b34dd4-cfc2-41b9-8e79-30e37658d2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05ed847e-f135-4631-be9e-222096c0377a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0df870b-a1ea-446d-a5af-794b9acb8ada",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1441a533-2f41-4a3b-8f49-d6b948f99349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6dfbbe3-eed7-4fdf-b0eb-b2e80a04e680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cb558b-772b-43ab-a2d5-6851b7776b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf678f4-595c-4629-8537-0152e0cea3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f625498b-7e54-47de-88cf-524666d9fd55",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9e3fe9-a928-4c22-b321-389d507b0f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6a14bb-16e1-492c-9c4a-3fef1ea649bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e13c52-3752-475f-975a-18873c976c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2de29927-872d-4452-b9f0-fa16e918a18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5e9c41-446c-4069-a5f7-0053f60fd2ce",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07049761-8a9a-4c73-80c4-057c8fee24c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b45bddb5-b879-4b2d-9388-4191309f1e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3c31f3-3c7e-4341-bb11-6926c4d35d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2108f952-bb8d-4ea4-ba87-ea754516aa62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b8fde2c-4a84-41fd-9016-3700018eba71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa886c34-bba4-4416-8441-9eb2fc6d8cc5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e4eebb-7054-4d52-b31f-34434d97fcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e56ac84b-0174-44a5-8631-30e1da1d900e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f21c152-09d7-4696-8019-26ef817b3463",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a63a6ee7-0e48-41cc-b910-b4ec57cf336f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b758c3a5-28f4-4789-a8eb-96de0b8bb40a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448a1224-6803-4bf3-bdc4-349d1fba12e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79b63c70-7dc0-47f2-85df-04de637453ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215d7965-d18b-43ad-8ccd-0074ae77a8c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89450d8f-3f00-44e6-8af2-ea246e317738"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "402356e6-c459-4ff9-bb83-b94b8516d4d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97a435a9-1e5a-4d25-882b-fc2c0b11f389"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9efb5440-174d-44ae-9b50-bba3834096c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51db3ddc-15b2-4588-a7e7-7c72d53db6bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49b55ac4-a7c8-4ed6-8ea0-b2c0d641de00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13dc2a60-9d4f-45c2-9d4f-ce9b9759c1b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e413d17-6d12-4d6f-9529-4e671a092992",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "473665b7-dbc3-4589-9142-e44a6ff6375f"
                }
              }
            ]
          },
          {
            "id": "cb3304a7-d944-4fb5-bf30-569a291fdb94",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0580a7da-538c-4fc2-b5f8-21cd18123718",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a017af3f-e5ac-44cb-8521-fca65e6fd7b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7a0bfe6-e4c0-4eac-9efb-c0be842cb336"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e031afb-07d1-43a3-a804-cd2dad43e3a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a4db5d0a-994d-4f3a-908e-1e14afb196a7"
                    }
                  }
                ]
              },
              {
                "id": "47256c29-615d-42bb-b679-8458bac5e1e2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73f2ba87-85c7-4c0f-9431-155aa0127398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c03a6d40-4aa3-416d-9a2b-71d436023347"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "272c3dae-36be-459c-a6a4-050f1a2874eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac26aad2-c28b-49a6-a825-6c25a10a29c0"
                    }
                  }
                ]
              },
              {
                "id": "8cce3f67-cf00-414f-a5cc-48ff60b130e7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75725ce0-208c-4974-956b-57427fac56d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98aad615-2f09-4249-b92c-7b660debc510"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a969605-89a8-405c-8354-03aad1b37fa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c94e7ec-1e13-41c5-a948-ae26e492d03d"
                    }
                  }
                ]
              },
              {
                "id": "8d265694-79e0-40b0-bda1-f56fa20508f1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "501843ed-2040-4b6e-8920-d25880d74cae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de52b883-49de-49d1-b985-30a6f2399c0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ccd2268-680d-4f4f-b0b5-771d1b0a79b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "707d6d23-39ac-435c-a459-54d33190ae01"
                    }
                  }
                ]
              },
              {
                "id": "7f238aef-879b-4457-b66a-a7c694a82771",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c9891ae-3199-49f0-8bc0-04971a9e8790",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1cc39a1-7b28-4547-8122-13c878d9cb20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b66dfca9-9e94-46ee-b69a-f73edd8b7c3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f97e019e-7362-4fad-b0e4-726d9a602737"
                    }
                  }
                ]
              },
              {
                "id": "29e5ab87-c120-4677-9f0a-7699715ca5ed",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2f51576-8ca8-4146-9ecd-0593a07e3b08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e39a1495-7d35-4375-a5f2-d7332af4d22d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1d94eeb-34df-4336-95f3-ee6732eac9e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1fd39e73-eea5-48a4-99e6-199e36968976"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7632b308-2636-4b4a-bf66-fc556b961343",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d13e4070-9ff4-49c6-bc43-96bead4f5404"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d8e355c-a213-4ede-ad21-2d1b38a089d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f63eb5b4-8635-4c05-8cd9-5a49bd245501"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c012d86a-603d-4b4b-a844-4ce7e306d940",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "14fc5b7b-e797-4947-ac25-f07cc44c8fec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2a966c7-557f-441f-b202-2c484a606d37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b3cafe9-d3e4-47d7-92c3-7f7f15f5b227"
            }
          }
        ]
      },
      {
        "id": "c0425b7b-97fe-4d01-a2c6-a30e2f2029e3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f0ab8ec1-470a-4aa0-8997-e6a8b800f38d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bb39b95-c3ca-4890-aa27-f1d3c22abbf1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e4f0179-7413-40d2-8a43-387fdb0f9855",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8832a5fa-ac05-42fd-87b5-a4f06fd78528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305ec2aa-bd40-4311-8d7b-f9e11230c10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce026a81-d6b7-4b38-8052-a88fcc95fb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b079dec-e970-4e0a-a87e-ce65ce29d65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031331d5-4fb5-471f-9c1a-12b89da1d88c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89655ab0-964f-44bb-9aac-c2140bf65a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf03337-0ba6-4886-bb91-5ed4c6c4012a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5575324b-6a67-4cd3-8e21-4923aedea5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8e236e-c06b-432a-b8f5-73e162780295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c70562a-466c-4764-9dac-f1e7e8a4d531",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7880bf87-1bdf-4c91-99bc-6adb1ec94ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fd16b5-cc30-4d90-a0e8-413a3b4e1492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92442e53-b4fe-4d5e-99e4-c6f802594d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0269c5-ddbc-4463-847a-eb320fac618d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ddfe4c-33c2-4ba3-a889-3995d625550a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12207c2a-f91c-4ef1-a563-12de5d12ff74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11700cb8-d6e2-4a4b-bff1-610e54ac0bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3c5dc2-2234-44a2-b556-5cfe58d70d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64c2605b-45b7-44f9-9adc-335fb332c674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bd9d56-b31d-464a-9142-b917626a79e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0195656c-5f02-45f4-af7a-c5c688448b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2e28ec-3e64-40f5-a082-fc9e17d835f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39361d5f-1032-412b-86e4-734796b38cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbf6f6d-ada8-43d8-89d6-8f5328492285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88aa58cb-b177-48cd-8840-d8414dd8820e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77008167-2896-4479-a22c-6bd15ed48c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2358011-2efa-42b4-9088-79662363f495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34479fbc-679f-4cbd-9a57-8c325ccecb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "049af8bc-2e2f-431c-b936-9da3bae01a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b653dc5c-13e7-417f-932a-bcedf37415fc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7ff0ba-b836-401e-aa0b-46dfc18d6a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de830b3-5f5a-4fd1-bf54-af68d66562e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567bb29e-45cf-4a21-865f-04e5e55320d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c50a1ff-8239-4813-8f02-5b4baf53a2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1870cd-346c-478e-9c73-62ba0e84dca1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307724b1-4180-453e-b27b-62d2117bd206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66224aa2-9fe8-4d0b-bdc9-8d92804661e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba560f5b-a46b-457a-88d5-da0420bc1768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b338f7da-07b2-4286-a6e3-38995ca2aad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08c282e-df50-413f-95c1-496f470092f9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3478206-ff6f-49a5-86b3-6fad9e50519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628cae23-e104-4600-8af2-5c0c619f39be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1765fcc2-b1f0-46fc-9fc3-b2db1f74bde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fbe0e0-3a4d-4e20-bf8b-632288fd5ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd813b27-5950-4116-a409-6a5c4f3fae62",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b031d29-49d5-43be-8f6f-3a14c32329b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f3b32c-d255-452b-a9c3-d247fc6c7dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da42bbf-585f-4427-af89-c0b4188e7591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8623c4cd-7404-4a05-8a64-55946600f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc033de-8f09-4d81-bca4-579ead513ea5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47eb7e89-b9e7-4575-8ef5-9ca05b9d2120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746c71fc-3105-4fb9-b85b-e1304435a51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da679358-7e0e-434b-8054-092acff3f21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdfb90d-7d66-43bc-915e-d52a1171edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc64d7c2-b6fe-40a5-9f6f-d1f3bc5b2011",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426f5ed9-07a2-4fc4-adaa-b84d504ec1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4098d3b8-19aa-4a23-853d-6458c86a5352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f227eb43-c942-46e1-be21-7326293265e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb31fd8-b5a2-4905-88c3-a84bd0bcdcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829705a0-71ed-4079-82e0-b1f0c4ec10d9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be838c56-fcf2-4682-803f-c358dd6bd53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a68665-5fc7-41cd-b4f3-c47a25f7d9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4257411-ccae-47bc-bed9-4fd9d9b0e878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "322e7a45-c1ad-45bf-96ba-c8876df5a2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc8fef4-caeb-4e92-800a-0158890f817a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443a4f85-9232-442c-8c75-8b8c4a3c03e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b051ff3b-8bb4-4ec1-bc0a-0189bb6ea1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf58d72-586d-48b2-90f3-eade20023ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd231bc1-5d5b-415a-9469-ad749c37c602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cbcbc7-fd37-4516-b483-a412341fc26d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3113314-5f58-4daa-a8e3-b97bff258461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcae7ad-14e6-409e-877b-bc60a4135045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b87059f-7822-4ae5-83d9-9a4b1c89265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "066d05ec-0188-404e-9cb6-36f7688057bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c2d234-db50-4e39-8915-1ac07ebcd557",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56715eda-ead4-40a9-869c-abbf4c38e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005ecd78-3e0f-44f4-883b-5e42aec9b20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2d86ee-38da-4272-9c22-390b3acb9349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "54eff870-038e-416d-ac46-c1ad4d88d7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54669f7-d1e4-41e5-9952-46c3768862f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864dd72c-2c9f-48d9-8a65-f12f32ef87e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b7fe81-a71e-40da-8fe0-b9009c4156d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd87f4e-417a-4496-8331-2cc6325e6f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8adf0a-df86-4ff8-bb13-f3b6e5835d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea79778e-45e8-4e78-b40e-61ac1aa7586e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9767ad-3410-4d93-8f18-48e473a74dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600a8653-a48d-4e72-94b8-c7cd5caa916e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1a2493-2d15-4a7e-8d4a-55665a7f0ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41750fd6-b093-4444-9682-2b8c85c49fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fd1d99-51f6-4908-ba8d-d358e3c2530f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ff5156-db3c-4bb5-82a2-95fe57610678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f70aac4-a84c-46e8-9b0d-554ec8c6e1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27de988-a101-4389-a981-743325e5cac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67030d9-5961-4432-87d7-b5717f923e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa21034-d693-4d55-b532-35aa4c2f17d6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a164dd7-d17b-4bbd-b438-fdca6c18efcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce733ea9-c7ca-4ae4-86f4-630fab03decf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab0f95c-ecfe-4c8b-ad4a-b12015ea70d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "383e5feb-5770-45d0-8bce-a74cebcc362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52753fe0-e420-4f27-a52b-d80759b31d34",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26696628-1ff9-4364-9ea4-4a0d2a0e22b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baf77af-a6f7-4b06-907a-5b1fe66b6a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d67bdbc-9885-469b-a9af-b6fa2e0019ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e98e93-d415-45a6-a30c-75b394337085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7d1840-be78-491f-829b-55de5d3e086a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bad12d-7a1b-4696-a9d5-ffd6cc330d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6db730-16dd-4173-906c-0123c2bc1b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb63b64-46c1-4d78-aa84-724f0c55cb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "141fd90f-ce1e-42a1-876d-b4a452eb0863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8b354a-1da0-48cb-b3c1-702b43eb4626",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c1d3bb-b62d-4038-b7d1-3d53ef0e3e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7d4998-a07d-466f-9285-3f23fa68ea64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176ce9de-f847-4089-b88b-b701849edb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5c1fef-50d7-4d66-b189-158eb32b3cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dd760c-9702-45a0-91c5-39c7c6eb0604",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0007c515-3e24-4729-ae3e-647c89103c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d711aab2-16d0-460e-9a33-e09954f460de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e834531-209d-4748-9202-f185af85d1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff58a763-aa1a-4b89-98f3-c8e3a14bca95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facb8d03-a157-481d-aee7-f971b673f81c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e4e572-f652-4d02-9654-01f6beb7910f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefaa02c-33e7-4d98-a433-115d8069e33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afe1626-5307-4a4a-a1c5-6228bf1cf1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a961ee-0ac8-416f-9f80-dc2a6608d0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa6c2c9-b112-44f7-a722-6efac78caee9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8032754-41db-4295-b36a-c6daf161d8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec88894-f4fb-4cf7-b7b4-b2f2f840a45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b1e2e6-2605-4223-9b8e-28b99cd47296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2405ab-9e13-4c9d-97fa-3f47ae9a72b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b71dbf-8816-4019-9d90-ce5d5745c419",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daa269b-f9f8-4fb6-8d5d-f81d304d1385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4feaf4-7e98-4df3-a628-db44166aa1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0713a19c-195a-4371-8ca8-38ed42113845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b84532e-6b4f-48d3-b5cf-8b1931223cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f20226b-dc40-4b32-b1b2-fb558c5fbef7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5fbf05-18a0-4308-80db-e49774257287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5ebe3c-d14e-46ad-8b30-c819f6e3ecc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da534d62-f4c8-4bc7-ab5e-154c42ec3927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2a938f-a3c2-4d69-8458-658f0510d662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea1167e-2abe-45e4-a6ce-0628e9304244",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479fe407-91f0-492b-b34e-2938348f3bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059633c1-e916-4e2d-9df0-da4d72c7630b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81086283-57ea-4d00-b419-aaf696c2bb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6d07a5-8d57-4745-815c-5a6cda67d1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2885d89-9625-45fd-b75f-9db205cebc8c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e1797a-97d3-44e0-8418-d6a940ca1bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235d4c45-86ab-4321-beec-53cebfd615f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab2dc1e-acfd-4625-9bde-55ac1080042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b9c20e-f9c0-4a0c-9127-6e2716e07993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c586159-4e0e-4e39-8302-b7536b10de4c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfaa5b9-26e4-4976-9236-36a2d64937f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e53f7b-853a-4839-8b0b-d575579dae1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e910c61e-1003-4bce-acb1-ebc1429c04c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "978a48c9-0771-49e0-9585-f37fb41f81b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a3e9d1-15e3-48eb-82c6-7b6af6a39e91",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf73486e-c720-4658-8b54-c0dde2eec2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f4c600-97de-42ec-a055-456f532ef21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5e7923-6be3-4a2c-b17c-bd4983419355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c6b13e-203a-48f6-8859-23a3c1bdcee0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "721ee2c6-32ac-4951-8dc3-6e83d7beb9e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "968243b3-82a6-46bf-a398-6c4539e6f601",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed106def-2494-4926-866a-757f4e273697",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7672fb79-ad73-4d87-9eff-858eb78af90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38eed7c3-aa64-448d-b4a3-c57cb0aa0f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc0c0ed3-7e23-4b9e-8a2c-339641375d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11648992-7d8e-41f2-9a6d-08e8ecca3311",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0eeec7-30cd-46e0-8dc2-9da5189eaa2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "524052cb-737f-4d9b-99c8-7ee1e3a5c883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea2d3ad-7d4e-40d0-a810-f26088272909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "566444f9-40b2-4bb4-b8af-1dd585c03125"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30448921-b3ad-4196-ada5-19f4b47fa6e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05e8a4ed-b08e-41d0-aeee-99f514974ebf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32701598-1e7e-48ad-bad0-089731ac3335",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daa1757b-a45a-4b82-9e53-8e91f9e711bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e02d3d0c-38d2-4422-abb2-9dc555a52a26",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ee78ece-4f2d-4e06-b9f4-95845cd471d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8abdc02-0b4a-4d21-bcde-0e3afbd1ab64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adb6b502-780a-4d51-bbd8-68ffb4b65802"
            }
          }
        ]
      },
      {
        "id": "0d5eb691-95ba-4246-99fb-86eb325603df",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "945d1d8d-d3ea-47b3-aa08-1b7e1424365c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05b882b6-f901-4ad2-a7c3-423328fab136",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5daa70ed-e89f-4192-b254-80db6952f84c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371f354-bbb0-442c-ac0d-3dc6168ed830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8d0bf9-6722-4858-844e-56ff58f4d1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac71c435-aa71-4b72-bda1-a5326d874d07",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8de87e-ef1f-4e7e-99a0-44d6205cc4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769d245b-4ce4-4295-96c1-ddfd604173a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b463865c-54de-43bb-b308-ad8d341f52d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c8a2dd-bc80-47ef-84e4-ed309806c240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caeee89a-ea32-4de6-86e6-a66564630244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f31a8e1-8c6d-4b9b-9889-7cf3d3aed148",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b678173-6e0e-49e5-9568-65d955b2e316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b6966f-8507-4f22-b72a-f36b88ac3376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ca261c-ee9d-4668-9bd4-2eb90d98bc82",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fd2715-bbba-4fde-96bb-9caec7f33483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdaa7151-f1ec-4429-b381-53ad67fdbf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb139de5-f695-4c24-8882-1ffff88b9e80",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbb42f7-8b2f-47b5-a017-b4da22466126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc09021-5a56-4dec-a25c-8a56b032d1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d0e435-6547-478e-b49d-1ae44f5e898e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807b809a-088d-4d8f-846a-3fc9581ec210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a71ba3-2682-4615-9adb-0541f227b4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86a2c27-9439-44ef-9e44-1b629f7ae965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06f3db0-e4c8-4512-840a-e28cccc2c60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d6c2ee-efc2-4143-9ba9-5462f7ef6451",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97719315-d7b6-490c-a86d-ade83d6cb3b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64bf3cde-713a-4602-aeea-8c1a403f72ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca293894-7939-4742-8da9-4cc64065fc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7859aad-e9d5-4f8c-b0d5-eb5a9033ff49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881e1de2-079b-4208-8836-4d0c21eb0044",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7107f39a-7368-410f-b012-a93a18b1d4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83648d10-9c27-4ee1-aad7-1db20f5d48f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668b9984-5624-47b5-a9ce-05d231e96010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cef64ee-ab60-4983-a166-7da175a014c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db00ce6f-bcfe-4587-a3e3-d5ea0af40e30",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d660ef25-0573-4280-a184-c0d0474f4fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c8e253-9fca-494f-852e-2de768f6124a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73221529-3a6b-483c-bf5b-6b22ea62c7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e4a805-1f0c-4cd6-8760-d7b054b5ab48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504653b1-fe61-4eca-8684-e722b6569c2c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbada1c-7218-4b18-8378-2821c49f7ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f11ab94-db5e-4f30-96b8-c7803dbf2335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eeae9b-5d7a-4d94-bdb3-0aef186c3719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e58ccdd-b708-486e-9c5f-e6d3861b641f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e737b0e7-2b5f-4fa7-82ec-c9620275d141",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4e0c31-edc7-4ec3-bec6-e92d3596dedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f56426-1b24-4d9a-9f90-f23c1848c461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aa65cd-33d1-4f64-977c-d5ad3df4c3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712492e2-2178-4eea-9a48-c5db71604c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7aaf34-134f-4a6f-9378-9aca11103a61",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0a231f-610d-4725-a108-b3b36c06c9df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ad6b47-fd2c-4468-a942-564cdd4a0f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf45230-7ff4-433b-8ac5-ee9c7a96260c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6993b80a-279e-46a7-ba9e-3ff2bab084cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82de9f5d-6dbb-4a51-859f-e9205d5ea806",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af194367-bccb-4b88-a258-c5928a9f9c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b080486-ae81-4d85-90e6-9fb00d959420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a553b9fa-9d84-45fe-8906-6e0f74a95df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ce3e74-511f-4446-9f39-ed33529efad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cebd97-513d-4e32-a324-509f0acc8269",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87091b1d-7ea9-4038-b0b1-e548e5f0bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e915193-d9ab-4b5f-be07-3371686823ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ea2647-021c-43d1-acd0-8d3739abd287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ce8a5d-2ca1-4d5e-a778-e10b4e0e1369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244abebe-c521-4ea3-aaf9-492d263f1a46",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b1aa6a-95ae-4d66-8a05-76aed824a391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e549df-8853-4de6-a947-a65ffaafaf21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df125079-13da-4e2a-97e8-176c0283e415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740617ed-8322-4940-af73-55703ca39273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592da84e-8b4b-46c9-8357-1e5bf261f2bf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff629af9-ded3-4a63-873d-b11e13fd5f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bf10b0-10c0-4cf9-88c6-e3e50cbbd59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ff02e8-f0cb-4ea3-89c3-ea78784d258e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec82752-7763-4c54-a552-9acc5e67f553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5537b343-3d7e-4f94-8190-5c27ca3350e3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1295a64-9236-43db-9bbb-6ee3ed0f7113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf62b2f-38db-4775-852f-4267e06b10f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a142a263-b282-412e-aafe-bb024bfb2a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0000212e-bc23-40de-ad74-a671795dda71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23130435-248c-409a-9bbb-3129306775ec",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8586f89c-3c9e-4d08-9d50-969005bd2b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b77eb20-6f24-451b-baf9-a013d644ae8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b1df29-214c-4042-aea3-c267711f6484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8a0f60-6869-4e56-ba17-fc605f309277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0d48d-448b-4fbf-88d5-2dd8b84bb3d6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd85f1f4-0396-485e-8c2a-ae7c2e1ae8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c869b9-f397-40d7-aef9-2b036f0fddd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3befd09d-864d-4b76-9d29-8144a54207d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d29fda-f775-499a-9da4-754e61ca4643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c59e529-2bc2-4a6a-b83a-334120594d01",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d634dc-36be-4cd7-9e0e-79ad4dcf08db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84420c6c-310e-4a20-8ef9-bd16888a9bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbd39fc-2160-4204-a4d0-d689e2edc51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8243ae61-08f1-4e97-99e2-f08eddb35d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77a18a9-95ca-4bf2-939a-824c711054c0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13cdacf-2d48-42b5-a344-0b258ced094e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8cec4c-37bb-45c1-917a-6b9010244252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f85e402-96f7-4a12-b7f5-af6310bb6e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a4cfad-3c69-41ed-b0d8-9418714f122a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cd8610-586e-43d3-9aaf-2acb7f1749b2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d26905-df29-4b9f-90a9-086394b1fa6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49815430-fd96-4525-8bb3-a2b9901325ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec3c10f-b6cd-4072-aeb9-ceb6fac6dbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eda6dbf-b899-4f98-994d-8ce59a747e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae156090-eca4-4f78-92a8-089fc33f6c2f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fa0c5e-052f-462a-9092-5a17518815b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f68905e-7c0e-4cbf-b473-eb5447e2f4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fb2099-1047-4c8a-9d02-dc8b19917702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9b3f3a-6305-4f92-8044-cefb77a8a830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed583e12-62b9-4eaf-bdab-2b4d90622fd4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938a2612-1101-4577-ad5a-c041bc551421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64563961-3374-48f8-bd95-24feaa5e4a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edcc67a-d323-41dd-85c3-cd2303cc6569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c494ac0-a37a-4ff8-989a-2d02c00e29bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de269dd-6cd2-4274-93dd-c5e8ba7c1089",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e319406-0c81-45ce-9886-cf880a9c91ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b6ad59b-3eeb-446f-a82c-6646f8db399a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a1c8a7-e150-4c2d-b44f-a71fd12359cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88933702-63e5-4104-8890-7d4788e5ae9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98c3b28-2589-4ecc-8ada-37bbddb8d905",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d543b3-833d-4aee-a89d-8702d35e9575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe7f1d3-7c64-432d-a612-70cfb094fef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d64e49-cf16-4bbc-8c36-7520e1bd6d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184d5847-60b0-4dd0-9ac4-66772e412df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fdfbe8-bb2d-4f29-b4e7-c410cd4f65be",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb45b907-0bbd-4dc4-aec5-435ac7906efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6e8a8b-ea31-4680-9263-7271678ff679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24fb766-2440-460f-afe0-3eb51697a016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b751eebc-f245-41bc-87e6-1f5917d3cd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb62156b-74cb-4e88-a4d2-a492e0e4e6d8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab85abb-b4e3-4d69-a48a-6587888b054d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7866802-814a-4e53-baa6-f1d4db6d8ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e4c681-a7cd-40fc-88b3-375c3ff12ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0886002-e33f-4510-9bf9-4fbb7df04191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05548ebd-48cb-4749-abd8-dbdb33603ea5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e47434-5bb2-420d-ad89-747e328b6d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96dd3732-2d0f-46e3-b148-e4a0ed19e3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9544614c-b162-4285-8f1a-f7bf4e85d584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641859d7-970f-4dbb-98de-dd138825cfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba25bf6-23ae-47e5-ab42-6cd68819182e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d7dea0-0634-402d-809c-a40c58ec5ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0288b293-c1b8-49f6-965f-7835d0a7d21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512a05ac-9ab8-490a-b5df-2956254b2890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7af2b0d-c366-4e1e-bc03-9fb5dc70e7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242432f6-1626-45d1-926a-897f0e1c818c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe19188-8624-49c8-bc14-b721aed074fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327b1c32-8b4b-4e3a-a909-4717111995d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b5f437-b9e8-454e-a5c0-00dba62ed9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80b6654-cb71-464d-96a0-213c1f2ec7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c41d9de-fa3b-4967-8b0f-9f546b45b51f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2cddbf-903b-4694-a790-1ec71dd7017b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b71bf70-5d7c-4c2e-a3fb-69b9188c47d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b59c23-f9b6-43c4-83c1-a3ea9084900f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869fa6f2-8bd6-4ffd-bc58-a9fe0392cb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3463a9-a8ff-4e67-a6fa-e1e4217eccd7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aba78f-059d-41fa-9116-7616c5728304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d83868-4978-49dc-b61a-1bbea87b0d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af14f22e-75eb-44b0-808e-91ffc72610b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e042d8b5-ac17-444b-9374-5a5ed18571af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d60e84-9ec4-4aa3-97fd-7e4f3f7d71fc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24835734-f9b0-4099-bcc0-69c58194995d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c61feb5-adfb-417a-8f42-4bf007ddb841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9a0455-c269-42f6-8262-3a885a38df14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09918306-a81b-43eb-b185-92ce233c2ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e358368f-6f79-4c78-8139-16f1094f433b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1786a7ca-5e80-4f17-a4cc-8b8f7e6063fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6137fda-146b-4ccd-a4b0-557b7f34e634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456355be-ca43-49a0-892c-9f277f24d23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc661ef-b3cd-45cd-b065-017734ac6e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac24332d-5b56-4fb1-8783-a871ebc3949d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690fb17b-a1bd-4435-97e3-159091893324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2926c0-3195-4ce9-b1a5-8f66f6b43793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddf0335-73e8-4637-90e7-2b37ab9e777f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce2626d-b174-4c73-ab89-18ee84b5b45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43ae5c1-71cc-46dd-9ef2-b6703920d684",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dad7ca-b0d1-4da7-be8a-2a565e02e543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2597827-a084-4c75-9825-f61368864624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b3a334-51cb-47f0-ba06-fd912e81c238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512b4d0c-e80d-466c-8bfc-181a24f346de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ec5559-1852-4bc6-a4a7-2efdcec8fd89",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9814a9b3-b1b1-4f6a-9b9c-a7f9e477ad20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11677e2-a80e-48cf-9e17-675d53962d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08370c69-7ed7-454b-8770-25b25d22b761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69d52b2-d1a2-4552-8fea-deccea372a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922d8acb-65bd-4eb8-ba64-b8fad18bd172",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83c35e3-3de2-4bc6-b1a6-1b5cdb1f0e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cab0f9b-aca9-4549-9b13-816dc2c6afbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cd834e-4230-4022-b0f8-be940e7f7973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e422744-5cc0-431d-9719-10893c0ae60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b78f61f-a221-4eb7-bf15-bbe72429eeea",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e27527-b99c-4ca4-8901-4b2022a9b814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f5e00a-04d2-40bf-a81b-2aabf692e7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a984b8c-6aa3-4c8d-b69b-4be1ead46e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ff1664-8492-437e-ac4b-3bb642990883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879fb9c5-aa4a-4e39-b6ef-3d07ee1958fe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f87b000-0c60-474d-ada7-4ee84c494f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbfe037-e4eb-469d-a7c2-7e9d8a166c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a300b9e-6bdf-4838-8c46-5407e10ee99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a23f9a-df71-4944-b285-0cd0ebf01c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8512d690-2eff-4fe2-9f7f-b441e551a1a1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8b4eaf-8f05-43c2-9d70-ab391e02fa99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9acd43-b19c-481d-a769-4d6fd6c65fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5977a6-f925-460e-ba2c-651829ddd9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94778e79-09ee-494f-a931-af38fd88142d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79230d8-494e-4f7b-a69f-054c7b718417",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d5819d-5daf-4c25-a987-f046d79ffcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26160062-00e1-4980-a140-1ca6407620c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3366a72-b01e-4ffe-8562-c3b3c20af224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c34601b-788b-424a-9cc5-d029fda58f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e71f14-8526-4db7-800f-c72bfa94ca18",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74dd77d-9abf-44d1-afb6-70f5357609b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7883592f-952e-45ef-8ef7-85851164fb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99532146-d908-4013-8e6e-3b3b288feae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26019ab1-9860-4fd5-bae7-cf1ee38e84c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9360f702-a08e-455f-ab05-a9fdeb3729b1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2622fc81-7b0a-49c8-a6ad-03ec0d689e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fc054f-e361-4f91-9b6d-7db7742aba64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdd6f03-1dd0-4998-ab3e-71272518eadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff955e9-a853-41ca-8c27-b2ad25e34eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f51d185-6d40-458a-ae69-e8223c89d4b1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4782756-a2db-4983-84d6-aafefb2f1fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f466297-67e4-496d-b611-41574029a281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dccb30d-5a99-467e-8fd8-a9f870d2a340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8dc50a-00b4-43fa-8c89-60c55f4ea876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd9916b-d186-455b-a15a-81a20955b60a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fbf5a6-6940-4966-99ae-3e779d7dbec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c63d26c-f0fb-4f44-b69e-6548a9c211ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c97a324-3c55-40b7-abd2-2b573e79c911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb719fd-8643-46e2-b6f6-c5bfe30ab490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d1d749-65dc-4570-8ca6-559a131400e2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518cb3a5-bfdf-4ae7-b1a7-f8d668ada89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7149b23b-6b82-457c-8bea-57e632802781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6931be57-befd-4087-b1d8-aae5fab166f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50659475-e64d-4954-97eb-4a67f813edad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24939172-30e1-41b1-a9bd-0fab2e6c171c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193f0c05-4c5f-4530-b65e-b517b47dcd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28496ff-062a-4379-aa0c-c17010d1c566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02584706-58f9-42e4-a68e-3d1432e74897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a07286-481f-488e-9899-f50f52a3604f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b571d922-6be5-47b8-98f3-395f526edf14",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea8c8e7-6926-4d18-b41c-fa862c0d1eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0997df7b-6cf7-4eb8-ae07-3fb3e5e2d5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6f5efc-d2ea-40f8-97b8-1fbb69f6848e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39edf15f-fe61-401a-a431-4ff8f0218987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9000f2f9-ca62-4c94-98ea-a26ecedb9425",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1da4354-60d8-4128-9752-95aaca9f481c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfc3fc4-4a6d-43a3-a021-7e97d7a5e676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f62a0b8-e4da-4f1a-a49d-8e6873be6edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887e0c0e-5cfd-4578-838b-44dd44e58d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969023b3-042d-46c3-8048-b106c31b0d42",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5762e4ec-f170-4795-8a94-af5f62ed006f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156079a1-ebd4-4494-b90c-e1e4fd316da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0148fd-2d0d-4ba3-9d9d-6d99cc804195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de44b50-63b5-4b8d-8858-78fd62cc1393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd336a3-81d8-418e-8ad2-468f08895bba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a008a27c-e08c-4270-908a-09bebddf9441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062069a7-1b23-4f48-8e47-24104e6cd4e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d530ae80-f68a-48ce-9c08-9d16e34891ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c73022a-e155-496f-9595-9c7b9f0d420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8658bf92-ebb9-4b2b-94ea-92cac1228014",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543a7d82-4ce3-45b1-b34a-40206c5fd50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d30d047-69f6-4445-af00-a00e15e8a71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae352b55-25aa-4976-9078-d9ffa1cb2fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e627cdf7-d44e-4089-9614-dfe33d05cc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f66320-2feb-4655-9dd3-5c73fc2e4e85",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3eb4aa-0226-404c-9573-e6fbb5f9c345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71df644-a164-489b-9164-24140349c63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09993f7c-ceca-4d0e-8980-88fef61c0226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9b6c56-9b8f-480a-bde8-f5341f8ab98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c24047-fd7a-4f9e-93d3-1f81249502a0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e08192-5f60-48ef-91dd-a22bd39ad5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9704214f-eecd-46b1-937c-3500dddb0931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8808d5c-d56b-403e-922b-18e3400d86f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f96f4e-780c-467f-a551-3ee47191144e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7384d104-66a7-4630-a0e2-8275a187493e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7a72c2-a293-424c-ab66-2d340356c3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8e1cbc-12bd-4c81-8f8a-46f330c7614a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da270eaf-b742-41b0-ba47-c509a96f91fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607fa2e8-858b-4c11-ad02-4b55e6419695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a878f7-20bc-4c02-97d5-28e8fef5016e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337a095f-2619-41aa-a27a-c3bab1efa7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d86989d-c9f5-4318-a055-9ec2e4b32646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f61b488-db25-48b9-b18c-e46b00ad2219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3993f5b7-3134-4560-84e7-6f3b1de61148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33728184-6d40-4ee1-9ed2-2ce9d2cccab6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd23b78-e077-4d39-95a9-5565e9c5541e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a647e4-d1a4-4811-8ab7-bc3a093ad9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385a2838-6163-429d-915e-5b7639e2e59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a082629-ea13-489e-a8b6-5ff8da79ef20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c41cf6-f074-46d2-9c7a-a4fd9557daaf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4510494-748b-4b1d-b5b6-0b5d77211e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f17d948-d5af-439b-a7de-547f4c781808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9c9ad9-23bd-490c-82fe-e32f29473b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b175419-7b5c-4372-9bc3-5e74f9f5f7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf85973-1257-4ae3-8f55-64fe89bfbbe5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f27ae7-e984-4cd8-9a2d-c61d101cc743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168025a7-d28f-4751-bef7-b723319abc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22629400-6fcf-4e60-a450-239d20bd8c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f97745-ed09-4620-9722-8d9ecd00f90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2be956-b43e-40a5-b9e6-36debdbbde13",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bde295-937e-4d8a-8bf0-38b2841b4e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77b3b5f-e3e0-482a-b1b2-e6f54ae62dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcacbed5-8faa-429b-9cf3-da2c628ac7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e33f46-c3b2-4de1-8da9-6534414b925e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca8492-29ab-4087-9a59-92131facf15a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4042443-d8be-4e71-93a0-dff09d9800e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99493e27-a1b5-449d-adcf-d296beaab341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d73f65c-adea-4d3f-9d5e-9f9d70ae2060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c864b2-00c5-4416-aeb8-dd00b3121587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19e94f4-6312-4af5-9e31-16686786e3c6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a680599-2a07-4774-bd81-7e49370b537c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd3d51b-045d-4109-a690-a56d9671ffca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bff9fa7-0b49-4a3c-a145-8712ed5e0520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2c0280-1b99-452c-9f8f-a3feae767eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fed81b-1c47-4a8b-96ed-770913e44b46",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81389c53-1678-4fd5-b2fe-62a6db8504b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba55955-5767-46e1-9892-0a933502bf8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301eef3c-68a0-45fc-acc0-28f0629151e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85ad8ed-f06c-4458-a074-7b7334a462f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eafd27f-0d6e-490b-8ae1-09716586e4dc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160e911a-aeec-4b36-a764-b24923de6289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e05b59-164d-45ad-89bf-bd395188892e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a27f636-83bc-4bac-8358-b03a28180e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263fa052-5941-4e70-b3df-879726d41fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9c2582-4f60-405c-a0ba-d3c6538b07cc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a52cfe0-1cc5-464f-9971-40cfbce15711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "343cdc1a-a31d-43c6-84cf-abde121c947c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5fc72b-b533-4497-bd0c-8530afbd972c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33f8a87-edbf-4dc5-8701-cad9a11a849a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37780c86-93f2-48fb-8e48-879520031abb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaede41-f0ec-4f5d-973b-9156e8984dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b999774-79f0-439c-bb29-9fb57242c47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423dac17-f652-43e0-a8e6-f75342136a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c20d372-8787-4c89-9b7b-9492241b7917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3875cf9-95e3-4010-b774-22b1b7910ea7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edde91cb-b93d-4324-a63c-fc39b05d1ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e583e86-6cd0-4c72-ac23-9baf4c10d759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b71cf8-e09b-4a5c-9aca-5a599c2a24cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f157471-e368-4c59-b7b5-bfa7e4dc52dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbe1cb9-e223-4488-8a28-5887f555a539",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9b07da-12f7-495b-965c-2bcf0848faf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aee0d7c-3517-4496-954d-1fb01621f65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1367f34f-99ad-4a38-b77a-f76ede1b37fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39a5a2a-2bb3-4991-b25f-50c57acf1e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10484ce9-cc0f-4b5a-8f8d-e98994efc8ee",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1fc660-a0b2-4be7-ae40-7fe9b42a14ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39099a68-6386-408f-8bb4-44cbe7908451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1133ebb0-7240-4fb7-b324-13e156a92d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a66cec-0f57-4205-bd6a-5664a5c095de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32085187-87dd-4116-993f-394f5570e5d0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05abcebb-3a61-46a1-ad46-050d5213e857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df2d527-4618-4937-a927-a919df8aeb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d485bbb1-6385-4c4a-bb12-7fc2143d6e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f45b0d-ac32-4c4b-a0ee-61069e5defae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e9cd56-6a25-4643-b715-5d92126a5b28",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809ce83f-172d-4ebb-a40b-11eb85204b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45453cf9-55cd-4f09-a4c9-2659e7c6aa7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e33993-121f-4daf-976a-35b32a485377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90dfa4b-ede2-48b6-bc83-81f0281ca291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7133451e-32fb-4557-9774-81895cd1dc9a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e2d448-249d-4194-8ed1-5bfe5d7d7cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333633a7-3028-404a-a7e5-87789d3c85fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70500bc0-98a1-4665-bc64-47e136a9b81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538a53c5-afa9-4e70-aebb-029f79807edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01befab5-960f-4889-8dbc-8bfa23d1a8f7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f884221-2afb-4e35-8d09-1ce90b8459bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c2f210-1986-4e50-be74-a183ae662095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2073af-f7b1-47b9-aacc-03cdff83c81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add16d7e-6614-433c-a4de-54ed4a3fc084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf3d94d-0c11-4e5d-af5a-7e34ec4205b2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3d621e-4565-4792-9274-19b0169871a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1806a042-61af-4d3e-8a75-a628592b77ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088153ae-13b4-421d-9f5b-de6429e1b902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdb391e-04cb-4276-adf4-01b839bd9960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055a01f7-c154-44da-a451-98d315c04394",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d7fd5d-9f66-4659-804e-b3c8fe73a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e4fb5c-aa1c-4d6b-8f0c-ae72caa5ff8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ca4bcd-5fb7-4b92-b095-94d5d727c6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fd288a-e6dd-4a19-a8d0-bbca76574d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04095b7-4019-4d89-8d1e-d2bced1d5099",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ef02e0-0c4c-434c-b85e-cd692017f70b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46085da8-1a30-4cf5-ac58-cad69230ef9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d70bf1-8be7-4ca0-890d-0dc99e038e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d818939-fd8c-43a9-a95b-9b18914bbe75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2974b3b4-077e-4c3b-bcee-94136babfec4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c8bb89-9bfd-44dd-94e9-f6a39f52179c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9bc5f42-f119-4d67-9dfa-cf187423a779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc69be28-e9f9-4c04-84a5-18956ced515b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141107be-fb05-4c18-b924-3dc54f70f768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81a4587-18f1-4b3c-ba5e-b2c14b2e59ed",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170008f6-e9c5-4cfc-8479-884011fffa19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34a655b-a8fc-46be-936d-9d3d4d102909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c6c345-9a96-4820-af72-7b9060be280b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae280a1-5127-4ae7-ab9a-5dd430b7bc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9788156-b28f-44df-a7b8-c2e085bd403a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7da55c-9825-46bf-82c2-9b02c0df5aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28080374-ae9a-4ce8-8828-6b58ad30988c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f349580b-d1de-431c-9eff-98a9316f85da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7f61b5-0b12-4d23-8f21-c2710bb03e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd4e14a-5723-43cf-bed7-168160605b50",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32865150-7e9a-48c8-bf97-5130c8136f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb846d80-01f0-48d7-b95c-248cdd5dbc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ab4397-5d8d-4d17-9d9e-f555aba35660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5518e8c-4ac2-43e9-8bb6-a74dc12c2912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e87301b-35b9-4027-9693-9b6108e2c36c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579954d4-439c-4b82-9548-30be4e7303d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad2c77c-6424-4314-a535-a9f1fd9f715d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad110b8-5ce6-4f4b-9356-e939b87405b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77291981-0c9b-45fa-a37b-8610908d9bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b8dabb-68ac-4ec8-994f-336ce3ad99eb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014f953b-16eb-48b9-bd34-ab52ab9359a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf67968f-d2bf-4b82-a6c6-9c5717358f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082420a4-a6d3-4c8b-aac6-a85f9bba59b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5629c3-fc3b-4aa2-80cc-3e5b60bfd230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a780a68a-4854-4805-8ce7-ba14f86aa66c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f9471d-c8b4-4ec5-899e-16852f98ce9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60eee197-4491-4ccf-8e59-29b2dc438caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee861b6-4eb5-4b03-8893-19b2ac9c801b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc79dc1-4fb9-4cac-b191-36f81c24ca3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e6f4e2-0477-4e7c-89ee-82cfa0c9a754",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd039098-783e-4f64-baca-fbf38919171d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae5357b-f2c9-4266-bc0e-2c1be856d725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76deae0b-ef7d-42d3-88be-3af1f7ebe31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b79bd8-cda2-4f8d-913d-3e3604853f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32d74e5-e923-41cb-a278-4ece6c31df62",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c699e2f-ebfd-46e5-8c35-8b0cd9589c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6c166c-0407-440f-8e8b-afa7ce9928bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b834d904-6656-42cb-87e6-2ba0c1797079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa08ffde-f97e-4d3e-90af-201e426ceb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd513b33-529b-44ab-82b1-49b81f0df632",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844ae628-693f-4e2c-86ae-8156954a23f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "819ba15c-62de-42eb-b5e8-b6f3ba8b0c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9729909-1406-4319-837e-8d262f6f280f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79252f01-5145-4fef-99ab-e8afc978f6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392a934f-602c-4de5-8049-eedac443224a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c7efb6-f7f5-49c9-ab88-53fab9972c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e883bea9-e19a-4377-a4ba-71ee376ad4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b222287e-2cef-45d9-af41-293fe0da9b1a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b4452e-835d-4549-a576-8d4a709415fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a021229-bf19-4de9-9c40-27bad639a1f5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ec9859-a9ae-44b1-9648-562bbd1252c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e1409d-8673-45e5-a28c-e47ff4b32573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deda1e3c-a94a-4299-9f67-11c23cab0151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d086dcc-b72e-45da-b3ac-346d65566f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a918c3-d6b2-41d0-8afb-955d49ca6752",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794eb660-2257-45aa-9db1-ce53c278b066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36e5775-4156-48bd-919e-4076b0c2261a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0767fba-3e21-4fba-b974-ded019763a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c07449f-912c-4342-8f39-b7ad83bd9824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d110ceba-c1bd-4b65-b8c4-f4ffcf7c24d9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99855b5-b4d0-4b51-9653-04b420c20c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e657321-b697-4434-93e1-197391a3c750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57140023-2afb-4ce5-89a6-cce11d457340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd276f7-30c5-4b8e-ba72-358f0a09ff09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d06e3d-7acd-4f66-91f4-4ac325e5e770",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487bdc19-08d5-4102-8a70-20733be5d6a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37790de-3028-4633-9706-448b99673467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d637f2-4ee4-496c-80ff-be3e2d491a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01720a72-c1c1-4a06-bd7a-90366e7346f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c4909b-8633-4e05-bed0-4690a1f9daa5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924d32d4-a5bc-4577-b1a8-f0b14b649f03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a86a1bf9-59de-4145-bf44-26a3d7f09dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d41226-950d-4d97-bdf5-60ade8a8d4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceb0731-329e-47a0-beed-77f7d00312d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22db90ea-efec-415d-8502-6d5c0f74824b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4ef5a-89aa-4b13-8bea-0278056a2703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014262f3-3c3b-44b8-8060-80f1955d766f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6fcb66-d22d-4afc-8476-6d50814c6daf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ae5361-85eb-4dd7-9bec-e8680a39a02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815db126-4d31-4f17-be81-2310a0597ba6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d3a15a-e135-4620-ba92-32b21ca42121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "448009a9-b057-406a-8ea2-85ed0acbbc7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eef6bf-d0c2-43d6-b47c-99790cde98b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee37bcc-f72d-479c-ae05-74e2717fb12e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a9c24a9-5e80-4b81-b1d3-36960a778d91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4603e03c-63b1-4dc3-ae80-e0ff624b3889"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c3df601-10cb-4736-8623-e7ee35fac901",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91f0cc8a-6d35-4b70-85b6-c075f9d0d032"
                    }
                  }
                ]
              },
              {
                "id": "da44e020-ef79-48da-8e9a-35037815e237",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "199da2eb-2112-433a-8cc6-986079f08c95",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6f09a1-1554-431c-b481-56e865f6afcf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5503d6a4-659b-48c3-b8dc-2e06841dbf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16fcefd-9e3d-4080-8d6f-c4b192e57d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86edfa53-5b27-4aa8-9a69-15fad3e37065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7742a71c-9645-407d-bca9-66ca1f7198c3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4d8593-59c6-4072-99f3-e7fe9cfac806",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c0b3de9c-bcb0-40d0-8bf7-860774724ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1951a80c-b651-4755-9e13-f98a74ef1c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76c0afd3-496f-4ca9-b921-023f58f8fe61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "187caa82-607f-4d0c-b239-d07004931e8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cb976e8-43de-4913-8930-e527c442aa5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b71f81c-82ef-4482-bcc5-429aa9be03f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d435e2f9-bc8d-4e5d-8d8b-230cc88515ab"
                    }
                  }
                ]
              },
              {
                "id": "f81b5f32-cbfe-4054-b5b7-cdf8da3093ca",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8d66fc71-0422-40c5-8867-fcb15d712f3e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac7218b-29fd-41b0-ad35-65034f8e0d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "831b2cb3-fb09-4a40-9392-c2476e79ebbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d37c7d4-d5b7-47d3-87f1-788b114dde43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede1afad-8d5f-4996-96e8-4913812876a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8dc0bb18-86f4-466a-a380-e214f6c26c54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16b951c1-f6a8-40fe-872e-1f1f94ed20c7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d1f3fc5-5e2e-4780-9a28-a9c72ea5bec6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "175f4bc7-d15a-4889-a42e-4261fa01d032"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b08a30db-fcfe-410d-bde7-81f25b263704",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98e5bdb9-fc48-4f1f-aea8-02108a949e52"
                    }
                  }
                ]
              },
              {
                "id": "dd40cca0-d9a3-47a0-8161-c2a248505363",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c121612-2b5a-44f6-8307-fc8a8abbab35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "191cb88b-c3a8-4304-b216-b05713605bfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee8caecc-d5c6-4f42-a5ad-8cacc0164a29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25ed027f-c4bc-4516-bba3-25395176aed6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36260719-3cdf-4de3-8621-d084fc6621d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "24890297-b1a0-4720-8a24-b837e6b02e87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "755ac27f-7d12-4e2e-bb9a-746203148807",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f1a384e-f0ca-44c9-9819-6678c4596bf7"
            }
          }
        ]
      },
      {
        "id": "5757c3f7-4250-4d68-84af-245f39fc4c75",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2d47e418-b3ed-4371-a95c-564a3bcb33dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "931f56a2-223f-4569-8a60-561dc0a16f70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d87519f6-6ad1-4f97-b06d-bc8473f3c155",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e74a3a7-acd1-4912-b6d3-ddb380df6bdc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6ca3b897-be7f-4f07-84a1-806133be831a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dfe6ed-8005-4249-bb25-58393539bf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d611a54-212c-4d00-8046-70c708b3a2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfe60be-6886-4d27-bd91-466899b1e922",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe23f213-54f0-457c-a041-41f9b35ab52c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ecd5a615-4bab-4117-970c-dd16c9db2051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8197f9eb-54af-4c5e-b921-fcaa5ea37496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dbd3a10-f3ee-477d-bdd9-eb2234405bef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "072edab7-fbbd-4cd9-8e26-301f4b76ea19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75385435-674c-4f96-abef-85b6f2c37f4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf022a66-76e6-4ef6-a194-12c97aac1005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "424cd527-8447-4c08-a44e-1d0a36ba3ca9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3315744-3972-438d-bd0b-b8ca90483241",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7759457c-120e-48d5-a310-cf0f498ddc66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60fa0379-90e9-4174-b71a-7b3f51de6325",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fcfa638-aa1e-4573-9fae-cc7c064ead96"
            }
          }
        ]
      },
      {
        "id": "0f2535a2-416c-4a45-a207-9d42266ae7d9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c990a036-7f9d-4a85-a3d7-085891290857",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bb0f046-3364-418c-97d8-9871eb9e9308",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4aec6b98-2f84-4ba2-a1ef-ca8956bccc39",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db96acc-ab07-4a53-8461-ee57132699ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6ff9ffc-bbaa-451c-aeb3-6b6cd5a52b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6583412b-e30d-4808-a258-92035038ac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ea06162-4381-4a7e-a7e7-cfb4227b9d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f6ab1d-d6e8-4604-aff6-14a733f2951f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1a8923-16b6-404e-ab37-a4742f7f2897",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0d96da5d-7182-4eb2-a2e9-22608cc615aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b7d1d4-127f-4c24-bfd2-7cc6bb8ec4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baf115fa-a0ac-486d-bc81-ee49ebd7f1e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "568ccfac-7242-4757-856c-b4f994629f4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c301904e-5129-443f-a97a-cf9ea81dc4c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54b8aae9-dbaa-4163-b1f7-2c0b00117c5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89175738-e187-49a1-a4ce-8a1d3606b4b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c6f9cb6-3fb5-4f03-8b01-797ff8d6bd81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac08c3bc-d952-4e71-a033-53643755bb46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fb751de-caab-44aa-b4ba-11813b8ce4bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "939e7144-4195-46f9-bc96-7f04dd010fcf"
            }
          }
        ]
      },
      {
        "id": "e847f11c-a911-44bc-b57e-d7b2152ba2ce",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c90b95ab-297b-43c3-92db-7e93ea989228",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16917eba-afbc-4509-ba4e-c78c4550bd52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dd6fbb3-2fdf-413b-a8ec-09402ff2c05e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960a059e-da0f-4cfa-982c-70827079633f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7798afab-5398-48f7-b2b7-35007ad8563f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "526b34d4-4f8a-42df-bf9f-74422314fde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4330be9c-75ee-44dd-9b21-d49856542d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235ea503-2c7a-4280-b8eb-89d1e4b40773",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe7ef78-2c2f-4869-8642-09eb01952afd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "970ffbc0-8580-4925-8f56-9e930d9928aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43aa8811-d6a5-4d3f-9d67-4ef98454e01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cce12a3-7cda-474f-bcb5-ccb5fffe5c62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a096372e-7e3a-4880-a769-c7632c97a556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23ec77a4-7f56-4df5-8e3b-e3603759ae1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a671d81-b128-46cf-9425-7c1bb7da9e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "220ffdc6-456b-4220-81b2-a2d747d4d9a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8ae8121-5f50-4eca-ab37-14bfe8a794af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f780883-950e-4760-96e1-6ed6a4f59ad5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afdd29ab-7cd8-42e0-a32b-067eb83755d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3944e93-165b-475e-8a3c-d827cf91b4ed"
            }
          }
        ]
      },
      {
        "id": "3e0aab2e-1afa-4dc4-ada2-fe5d971aa81e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d747953-486f-472d-9962-68bcf5f03480",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c956b932-2c3c-4ce9-b4c3-eaf8a397d36e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6054d6d0-3f92-4f88-842c-6d9a639c3995",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "386c1355-844c-4fd5-94d5-b0f33e59bea4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d78bda3-b7e5-4a9e-b74e-59dfbfd6734a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 18.68461538461537,
      "responseMin": 7,
      "responseMax": 414,
      "responseSd": 43.43731728070205,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679186583923,
      "completed": 1679186599241
    },
    "executions": [
      {
        "id": "5d01234f-237e-4cc2-ac21-3102e88a80b3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f13fb654-ade8-4377-9505-caf3eaba1cfb",
          "httpRequestId": "32d0a174-76c7-4ddc-b258-4307a03e4f80"
        },
        "item": {
          "id": "5d01234f-237e-4cc2-ac21-3102e88a80b3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f4b1c96b-ae40-425e-b5ff-e8be13407f88",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "f5787e50-c431-4d4b-9e02-89295d4d1f44",
        "cursor": {
          "ref": "37deef3c-b32d-45d5-94f8-46a7e4c93d33",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "77cae792-d8ef-4b27-b48a-5c677af6d919"
        },
        "item": {
          "id": "f5787e50-c431-4d4b-9e02-89295d4d1f44",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "01e53bb5-1f0b-4482-a899-05266671fe36",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6822a513-7cfb-490a-9782-acfc53fa1284",
        "cursor": {
          "ref": "17fe78f8-c9ca-4913-a2a8-d76868eccfec",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "94cd9274-28a7-4ab9-888b-e6e9a49c5a88"
        },
        "item": {
          "id": "6822a513-7cfb-490a-9782-acfc53fa1284",
          "name": "did_json"
        },
        "response": {
          "id": "b3570aa8-2800-4f24-8f17-78e9b7e6563b",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa34553e-3293-4802-9375-7b5a312dfa9c",
        "cursor": {
          "ref": "593bd224-551f-40ed-94d6-7969b76f2bbd",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e8bad914-317e-4d94-96a6-3b7fa888ee30"
        },
        "item": {
          "id": "fa34553e-3293-4802-9375-7b5a312dfa9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "0141b1d5-ca2a-46e9-bda8-bf4baeeaf373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa34553e-3293-4802-9375-7b5a312dfa9c",
        "cursor": {
          "ref": "593bd224-551f-40ed-94d6-7969b76f2bbd",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e8bad914-317e-4d94-96a6-3b7fa888ee30"
        },
        "item": {
          "id": "fa34553e-3293-4802-9375-7b5a312dfa9c",
          "name": "did:invalid"
        },
        "response": {
          "id": "0141b1d5-ca2a-46e9-bda8-bf4baeeaf373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a457135-cef1-4e7c-8455-80e2c8b1120e",
        "cursor": {
          "ref": "e40341b0-1a41-464b-88c7-d9afd2e6e78c",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3123d906-c654-4602-b23c-f39d86086ba5"
        },
        "item": {
          "id": "4a457135-cef1-4e7c-8455-80e2c8b1120e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0f42e2ff-1728-4a70-aa73-74984490d4c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 107,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a709c021-015f-4110-a94a-bf96eb8d69e7",
        "cursor": {
          "ref": "211696e9-8292-4bef-b1f0-ee371a2f9464",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3b146de2-9180-4cf4-9064-067b4a29fb84"
        },
        "item": {
          "id": "a709c021-015f-4110-a94a-bf96eb8d69e7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2ee43f1e-c544-4a42-b48d-22097963bb85",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a47a6a-a7b4-463a-a032-9bf460f66194",
        "cursor": {
          "ref": "8e27c0ab-72e9-4ee6-aa99-34cc4fcbd97f",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8254cfd5-1f17-40ac-920b-2e5c1ebb538b"
        },
        "item": {
          "id": "76a47a6a-a7b4-463a-a032-9bf460f66194",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7b06e965-5cd1-440f-a929-6c9c1375ab07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1946d481-6a62-430f-89ee-d316bf672a3e",
        "cursor": {
          "ref": "067a2520-3dc8-485c-aba9-e277de3a5cb4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b086d5e1-eba8-40f9-8e4b-6e691361df11"
        },
        "item": {
          "id": "1946d481-6a62-430f-89ee-d316bf672a3e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b5fea898-9bba-4b9a-8cc1-cf6a5196758c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1946d481-6a62-430f-89ee-d316bf672a3e",
        "cursor": {
          "ref": "067a2520-3dc8-485c-aba9-e277de3a5cb4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b086d5e1-eba8-40f9-8e4b-6e691361df11"
        },
        "item": {
          "id": "1946d481-6a62-430f-89ee-d316bf672a3e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b5fea898-9bba-4b9a-8cc1-cf6a5196758c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb476eeb-d103-4464-9007-9dbdf1390844",
        "cursor": {
          "ref": "85b261fc-2145-4338-b636-0770b5ae54a4",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "de5f95b2-f49e-4f57-bb01-5956d90faa17"
        },
        "item": {
          "id": "fb476eeb-d103-4464-9007-9dbdf1390844",
          "name": "identifiers"
        },
        "response": {
          "id": "41c1f42b-b5c6-4244-b7c7-84221b973624",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9003bcc5-089f-4537-bc63-ea71e7fe4588",
        "cursor": {
          "ref": "9ebf110c-5d7b-445c-922c-89876ea7d7ff",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "977385e8-db86-48fd-8134-6607fd5e2a2a"
        },
        "item": {
          "id": "9003bcc5-089f-4537-bc63-ea71e7fe4588",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b54ccff-07dd-4288-891f-dd13eb48bd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9003bcc5-089f-4537-bc63-ea71e7fe4588",
        "cursor": {
          "ref": "9ebf110c-5d7b-445c-922c-89876ea7d7ff",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "977385e8-db86-48fd-8134-6607fd5e2a2a"
        },
        "item": {
          "id": "9003bcc5-089f-4537-bc63-ea71e7fe4588",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b54ccff-07dd-4288-891f-dd13eb48bd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd66a75-9525-4c6d-96bc-a0acb078174f",
        "cursor": {
          "ref": "0d3587c2-e12e-4f15-9257-e392d00fc6c4",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dd55682d-aacd-426e-b50e-74830d961fca"
        },
        "item": {
          "id": "5fd66a75-9525-4c6d-96bc-a0acb078174f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "188e3528-659a-4bc4-9741-d948cf0e4856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8a65a-4347-4c41-b61a-6e52fbfb8360",
        "cursor": {
          "ref": "1865ba41-9aae-41dc-b7d7-b9bcc0cd1b29",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6381e9df-0c7e-460b-adf8-c348cf7c795f"
        },
        "item": {
          "id": "66c8a65a-4347-4c41-b61a-6e52fbfb8360",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e5292823-ccc5-4a52-943f-3308e806b5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef87390-7a0b-4a54-97ac-a71e6ad2cf52",
        "cursor": {
          "ref": "04b82d70-fb0b-4945-9c0f-0c7e5b403373",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fa0f103e-ab27-4f2a-bd11-b646d537a359"
        },
        "item": {
          "id": "3ef87390-7a0b-4a54-97ac-a71e6ad2cf52",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0168c12c-5364-47e2-b271-ce43cd14b3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e701e60-c07e-439a-92c7-bbf1306a7e55",
        "cursor": {
          "ref": "5962a341-b302-4f78-984f-3c3a7c5bc363",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "42493fed-c1be-4b63-9b10-255468693259"
        },
        "item": {
          "id": "4e701e60-c07e-439a-92c7-bbf1306a7e55",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cc92899b-f7e7-471e-997e-1c290ddb3a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f700ac-6f34-4560-9da7-a699dcd81745",
        "cursor": {
          "ref": "5df56e2e-e475-4b11-86c7-fd09001a8ee7",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cf6091f8-28eb-464a-ab99-ac990af96489"
        },
        "item": {
          "id": "86f700ac-6f34-4560-9da7-a699dcd81745",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2642693e-7b3b-46a8-8a43-6df2d7cf53ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b4e1d2-743a-46a5-b284-eb1ab1b76694",
        "cursor": {
          "ref": "30b3e1f9-6a6d-454c-b372-75bebfaec715",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "83f0f13c-3083-4211-bd77-8ef820166b74"
        },
        "item": {
          "id": "c1b4e1d2-743a-46a5-b284-eb1ab1b76694",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4c5a894e-f248-45be-a6c1-f1261d617c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe05cff-7afe-4fab-8176-7d58b310441a",
        "cursor": {
          "ref": "5c0dc9f1-9dbc-4a6a-856b-b6c0e4da9ec3",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9f632edb-8be5-4699-88e5-f88925d09f1b"
        },
        "item": {
          "id": "4fe05cff-7afe-4fab-8176-7d58b310441a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1f2c334e-e1a8-4df9-b506-3bb71dfbc432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98328947-e31b-408a-9de6-d0b8cbfa2013",
        "cursor": {
          "ref": "b48fb439-5d2a-48af-9b50-8270caf6377f",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "91a7d7d3-77cd-4e67-8066-dd81c82062ec"
        },
        "item": {
          "id": "98328947-e31b-408a-9de6-d0b8cbfa2013",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6d6c1ad7-dc5d-4013-ba9b-045902d4987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db44c951-3e25-4e3b-becb-852a75efb01b",
        "cursor": {
          "ref": "ad0481fa-95de-4f3f-a3c1-cfc1d81fe6a6",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2c7af4ab-e9b8-4bf1-8516-f5c294536dc7"
        },
        "item": {
          "id": "db44c951-3e25-4e3b-becb-852a75efb01b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e5ff3a88-b966-4db6-adbf-ec6c0a46e4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957e8932-b03c-4ba2-b9d1-dc76948ac8d2",
        "cursor": {
          "ref": "93756937-5411-4f18-9ca8-459d826b76c7",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ae6ca715-0bbf-4016-90b7-af0a5c2d16d8"
        },
        "item": {
          "id": "957e8932-b03c-4ba2-b9d1-dc76948ac8d2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7c0c31c6-c05a-42fd-9b52-5eb7f293be1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612fbb9b-1231-4275-9e63-8bccf5631c3a",
        "cursor": {
          "ref": "e3f3dc72-cd3a-470f-ba0c-59e63ae8c57e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "257197a0-5a05-4a3d-9334-830c96c14112"
        },
        "item": {
          "id": "612fbb9b-1231-4275-9e63-8bccf5631c3a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a001c715-6b76-4ff3-9c58-307d799d4dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894c6e2b-2b0a-4e7c-acac-12e9052c05a9",
        "cursor": {
          "ref": "772b8323-244b-4686-820d-be6b547c95a9",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "62e3dd95-bc6f-4ea7-aa47-1ff147013f53"
        },
        "item": {
          "id": "894c6e2b-2b0a-4e7c-acac-12e9052c05a9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c450d46a-b905-469c-892e-61868e7eaa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827aafca-70db-48fe-a16a-001000bef794",
        "cursor": {
          "ref": "f09910e7-39da-4f52-98eb-868e31e807b1",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eba19324-ce9a-4bef-b2de-549b880337d9"
        },
        "item": {
          "id": "827aafca-70db-48fe-a16a-001000bef794",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8355f8bc-57aa-4b07-8506-909447edce08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4631cae-51e1-4a47-8aac-26cd373f1a3d",
        "cursor": {
          "ref": "f6600a9a-9e23-4c0f-9ea8-ec60857dfe7b",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7f275280-4b34-4081-927c-7c594ae7af31"
        },
        "item": {
          "id": "f4631cae-51e1-4a47-8aac-26cd373f1a3d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0b27d588-43f3-4601-88e9-eaa228433ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b60e516-a5d9-4b0b-91e3-af83c22cd741",
        "cursor": {
          "ref": "b2aacdc8-14b2-421c-b6bc-966ec4362b14",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "30b04e5d-df0c-40f3-ac6b-d333e04042f9"
        },
        "item": {
          "id": "7b60e516-a5d9-4b0b-91e3-af83c22cd741",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "60ad0af8-9436-42a3-be0d-5e63a5d7b5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4861ae2-6b0e-49f7-85b1-51255e2941cc",
        "cursor": {
          "ref": "b8b89d5f-3d17-4da7-9a03-daafd32a3c32",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8d8f8d11-0397-4616-bd30-6cd6b09c15fa"
        },
        "item": {
          "id": "f4861ae2-6b0e-49f7-85b1-51255e2941cc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b766b9db-da5b-4d74-8464-a74786ad7b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca458ba-0f53-4f58-897e-d8a289985da6",
        "cursor": {
          "ref": "810538af-4557-45b6-b1c8-3d984817ddd6",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e84d2980-1505-43df-8bf1-8c25b18077fd"
        },
        "item": {
          "id": "dca458ba-0f53-4f58-897e-d8a289985da6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "14f7a98a-70d2-47f3-8176-5e32ff8b9bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c45396f-7a48-49dd-9f86-0748dfef3797",
        "cursor": {
          "ref": "6fae54db-08ea-46d0-b248-1e7be15f88cd",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2a23e65b-80f6-41f2-a268-454a5744951e"
        },
        "item": {
          "id": "4c45396f-7a48-49dd-9f86-0748dfef3797",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "77289bdc-0395-4258-b164-ad211fe4924c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca60563b-ca67-4532-8046-7983410dfdba",
        "cursor": {
          "ref": "3a17a6a5-0db3-4ee9-a513-1c9b5b06e7f6",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2b7ef142-441b-464e-8ee3-29c8d2d3f355"
        },
        "item": {
          "id": "ca60563b-ca67-4532-8046-7983410dfdba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ca9f00fe-d8e1-42e1-9675-7a2454bea46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a396eb1-184b-4bd7-a787-f66696f6efe5",
        "cursor": {
          "ref": "3f794e6a-22e4-4cc6-bc6e-2c5ab0a2ca05",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bc06ebdf-19b0-43f8-8438-0c78213ce163"
        },
        "item": {
          "id": "4a396eb1-184b-4bd7-a787-f66696f6efe5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "24a5f0e5-b5c4-4501-8b3a-0e4e20227db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973c9440-809a-4bcb-9810-d2951d76be58",
        "cursor": {
          "ref": "7e303d4a-9ea5-4500-b08d-d751a6b2301d",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5764b1dd-4a24-41a9-8fdd-f83f18030e75"
        },
        "item": {
          "id": "973c9440-809a-4bcb-9810-d2951d76be58",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "77e2ba7d-aa8c-4020-8466-4e88b26678d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d0a88f-f36b-4bac-ba9a-f87db2458f56",
        "cursor": {
          "ref": "e998e231-df5e-4a1c-8458-c930ee9b6639",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7b8e5300-f153-4430-aed6-088dee1b0f79"
        },
        "item": {
          "id": "94d0a88f-f36b-4bac-ba9a-f87db2458f56",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1500c029-d8c0-48d9-9638-94a4e45d52db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f985bb-4247-4aa0-add3-b01753508bb3",
        "cursor": {
          "ref": "daf58b56-00ab-44a7-a948-36f3e72327ec",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8c36b3e8-22e3-4563-840c-445ab0025dc2"
        },
        "item": {
          "id": "d9f985bb-4247-4aa0-add3-b01753508bb3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "68e74264-0372-4801-a031-2562ebb546ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6159879a-2583-47b7-86e0-537657312561",
        "cursor": {
          "ref": "a181f7a2-a9ef-4624-a539-09f9669cbd33",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "edd89c13-020e-407c-bfc1-e8176cee7dea"
        },
        "item": {
          "id": "6159879a-2583-47b7-86e0-537657312561",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8690fe27-6cca-4723-9680-3cdfcdf9363a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2389fcfb-63d9-4911-a480-f76563d3eb8d",
        "cursor": {
          "ref": "a6f305e2-99ab-43c1-88cc-dedf6794dc1d",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a6e79763-0aaf-411e-96e9-918e21c4e400"
        },
        "item": {
          "id": "2389fcfb-63d9-4911-a480-f76563d3eb8d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8df69644-f757-49e3-99e1-1a4e99a52881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ca8cbe-dc38-4538-80f4-220d62ce49ef",
        "cursor": {
          "ref": "65ad5021-6852-4bf9-b49d-647e91f8a92f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7bc4c816-79b9-435b-b43f-8ecc897796d7"
        },
        "item": {
          "id": "84ca8cbe-dc38-4538-80f4-220d62ce49ef",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "796033d8-ec99-4813-8c0c-f1bba699dbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa19255-b578-4ce3-a316-e9fe2992f6f6",
        "cursor": {
          "ref": "70f989fa-5470-4d24-a3a3-12e87f3d81b9",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "94b55ee4-7e9c-4b78-a11b-5b3af099d922"
        },
        "item": {
          "id": "3aa19255-b578-4ce3-a316-e9fe2992f6f6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "192dbfb1-a174-4098-ac5f-9405b4c95076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8e7105-706f-44e1-965a-ec50f969f79d",
        "cursor": {
          "ref": "3f0cecd8-efc6-4b10-be4f-8fb8499e588d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "00f50bd6-7714-46d6-872b-2c3816e75599"
        },
        "item": {
          "id": "4a8e7105-706f-44e1-965a-ec50f969f79d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2ca00ce5-aec8-4886-b79c-7e4f106a019c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ea52f6-53c5-40c5-9d5c-9cc5f4d8a1c5",
        "cursor": {
          "ref": "b030a88a-f5ea-417f-a36c-b57e969f484b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4003424b-ce96-4026-8006-5e5de73bac1d"
        },
        "item": {
          "id": "14ea52f6-53c5-40c5-9d5c-9cc5f4d8a1c5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "19c4bcca-8c79-40b5-bebf-30526f69c8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9ba7c9-c240-4b0d-bb4a-2487a86930f5",
        "cursor": {
          "ref": "d23b7377-fc03-4ac0-8ae0-5c83b58de778",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c99f3158-d4e2-4c34-8c99-d1de60c9a7a9"
        },
        "item": {
          "id": "eb9ba7c9-c240-4b0d-bb4a-2487a86930f5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "841b0215-30ed-465f-8314-0af815add812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1f8c1f-5912-4580-899a-a823da76788d",
        "cursor": {
          "ref": "80bf37ee-0e1a-4546-8a6c-9de62382e659",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0c3fb0d9-c7f6-4e42-b02e-6eecb46d6f0f"
        },
        "item": {
          "id": "ee1f8c1f-5912-4580-899a-a823da76788d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "938fdd47-683c-4348-9add-30e68fe7cb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e04fa0-aaab-4f54-98eb-6e85bc959fce",
        "cursor": {
          "ref": "61bf168b-9737-45db-a605-40aaf07b9dfd",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5ee2082e-466b-422d-8a0e-785025853ecf"
        },
        "item": {
          "id": "44e04fa0-aaab-4f54-98eb-6e85bc959fce",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "69b5a038-8ce7-47ef-9856-d9045641a410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f770588-aac5-4749-b3d9-de277a361810",
        "cursor": {
          "ref": "ccbccd01-5e82-4366-8080-fdf9df45b7e3",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f24fb1d4-fac3-49e8-85e0-0adf1a228943"
        },
        "item": {
          "id": "0f770588-aac5-4749-b3d9-de277a361810",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dd716f6c-f24e-4c54-9117-e31b79a9fd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae12c63-d8d8-483f-ad14-f949cfb68c08",
        "cursor": {
          "ref": "2a3cd86d-e05f-49b3-8b5b-6d5b2b169d11",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "986df523-0ab9-4f18-bee1-98d6be999c11"
        },
        "item": {
          "id": "5ae12c63-d8d8-483f-ad14-f949cfb68c08",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5ac39c10-6634-424f-a9b5-8c9c6ca1d7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d65c45-827f-4f33-addb-07470fe86dde",
        "cursor": {
          "ref": "9a9355b4-ed53-468e-bc66-35d230c25d72",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ef46404e-bd7b-4cd6-9d4b-321252e62b2b"
        },
        "item": {
          "id": "01d65c45-827f-4f33-addb-07470fe86dde",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b1c2f18e-6342-444d-96b4-e5a06d2adc1c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d17093-65db-4b08-aca8-0596d55ee219",
        "cursor": {
          "ref": "8f709f8a-881e-4bd9-9120-8c708065ceb9",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "afa56aa0-d48e-438e-9e25-b4cac992db19"
        },
        "item": {
          "id": "d3d17093-65db-4b08-aca8-0596d55ee219",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a80e42dd-e769-4129-bb09-d5f864c368fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab423380-ca57-4f97-a498-3bd70c331962",
        "cursor": {
          "ref": "d1438c3f-dd43-4bcf-8179-49d2b2777574",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0851333b-d03b-4cd7-bb12-751749d4b612"
        },
        "item": {
          "id": "ab423380-ca57-4f97-a498-3bd70c331962",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b4a50dab-51fb-4999-a464-2e7bb11a5589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea9c7db-ed90-463b-8bcb-f8e780664e52",
        "cursor": {
          "ref": "e08b07ed-5169-4d66-afb0-7bf137e023e0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5073c22e-aca6-45a8-bbd8-37f5e9c85c60"
        },
        "item": {
          "id": "eea9c7db-ed90-463b-8bcb-f8e780664e52",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5dd05c61-0d06-4367-9270-81d2a1020d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8003b289-d238-4e1a-8d62-1558fe39f565",
        "cursor": {
          "ref": "5010ec2a-a753-436b-b67f-de5d5a879296",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b9aa425d-d857-415a-a9ca-adb31f86c93d"
        },
        "item": {
          "id": "8003b289-d238-4e1a-8d62-1558fe39f565",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "045f4498-8125-4a6b-9608-ad3e1380e2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fc3cac-5cf0-462a-98ba-227d8246dbeb",
        "cursor": {
          "ref": "2df2e2f4-fc69-4ff0-ab21-44ecfc88c8a2",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fba4be2b-fe4f-488b-873c-8253a185e797"
        },
        "item": {
          "id": "60fc3cac-5cf0-462a-98ba-227d8246dbeb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64f19446-113f-4bae-b2eb-cff36f9fa167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6637bc8-6836-4bc6-a2d9-a1a9bf786be5",
        "cursor": {
          "ref": "5afcb5f6-ebf0-4de6-9ffa-da13c030097f",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1886777d-1f5a-4848-9677-529aac2ee772"
        },
        "item": {
          "id": "f6637bc8-6836-4bc6-a2d9-a1a9bf786be5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5c05b22b-7b72-42e3-a227-5458cc595ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b805ca72-e6c3-4f21-8a8e-bc2b863c7cbd",
        "cursor": {
          "ref": "fe374ebc-7edb-4717-a54f-c0d71c3f176d",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6368ad42-09a5-4fc9-af86-bff90fed7732"
        },
        "item": {
          "id": "b805ca72-e6c3-4f21-8a8e-bc2b863c7cbd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d073655c-0951-456a-935d-1faeabb39d5f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd9909c-1d56-4a4e-a184-3f6d426a9cd6",
        "cursor": {
          "ref": "83b6eb6e-6bd1-4015-b69d-f0b8145776cd",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca2b5765-a408-4557-abc1-a1d504cc7678"
        },
        "item": {
          "id": "0fd9909c-1d56-4a4e-a184-3f6d426a9cd6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3904745c-9536-4903-b989-28483e4aecd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732156bc-6f81-434a-946c-864f31280922",
        "cursor": {
          "ref": "68c534af-c0b1-4adc-b4c7-b1003bc9efbe",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "51069be0-7b89-400f-9bdd-06635e1e6bb6"
        },
        "item": {
          "id": "732156bc-6f81-434a-946c-864f31280922",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "feea71a6-90ae-4c45-a07b-49d455c56993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e2eff5-5f5e-4d34-9d44-2d9047a309de",
        "cursor": {
          "ref": "f8b11369-e299-426b-bc1f-86cc35a53e6e",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ad27a557-a545-4bf1-89ac-c62d0cdada42"
        },
        "item": {
          "id": "f6e2eff5-5f5e-4d34-9d44-2d9047a309de",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fb16e684-7fd8-40d9-8f2a-3c4a39995035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b0acb1-b0c1-48f6-a77d-275430d9d22b",
        "cursor": {
          "ref": "7d92a32a-c9d7-4171-8298-fae8dff171bd",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a013ba88-7eac-4258-a71f-e3f2e1eccafa"
        },
        "item": {
          "id": "f1b0acb1-b0c1-48f6-a77d-275430d9d22b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fa27e801-848f-4044-b8aa-8b84e91c08a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4a6ec8-15b6-4831-87e2-c3c4cb48219b",
        "cursor": {
          "ref": "5c6f85e0-f842-4b11-bd52-8df4c9da4e60",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9f18cd1b-a042-44db-9cb2-29e95240d58d"
        },
        "item": {
          "id": "1c4a6ec8-15b6-4831-87e2-c3c4cb48219b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "eb2302aa-4a24-47e3-92bd-f7fe27908b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18fdbd5-6794-4c52-a952-319a9e47895a",
        "cursor": {
          "ref": "84e4c20c-5172-4561-8562-70ae5f9e2aa0",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "470b5358-62f5-465f-8f0e-8721b9ac9fe5"
        },
        "item": {
          "id": "a18fdbd5-6794-4c52-a952-319a9e47895a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b5b471ef-7419-4407-a6a2-68e024cfd9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bad420-11c5-4d07-a628-8ae43d3bc5c4",
        "cursor": {
          "ref": "8bc48b48-0140-465f-8616-a0842127bd39",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b528c9d4-469f-474e-8ab2-27736bb83a2d"
        },
        "item": {
          "id": "a9bad420-11c5-4d07-a628-8ae43d3bc5c4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "81ed0f4c-7916-4092-9881-0198e3d233ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbb1164-9762-4f48-9c28-eb6d9410ff18",
        "cursor": {
          "ref": "a68ae31c-db0f-4076-8412-cb0ce50716e6",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8be94aa4-7152-4be5-9f84-651e9b822fe8"
        },
        "item": {
          "id": "bcbb1164-9762-4f48-9c28-eb6d9410ff18",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "eefb08d3-f317-463a-b2a9-7c25024c4fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e0d8e5-dadf-4075-ba1e-3b8a8511a4a6",
        "cursor": {
          "ref": "fb30e7e7-19b5-4145-813f-143a73731c9c",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f3740438-57c3-412d-b96c-d9f60f426717"
        },
        "item": {
          "id": "61e0d8e5-dadf-4075-ba1e-3b8a8511a4a6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a5ab835c-ca5c-4a59-b75a-64d782eee777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0d5f62-9d0f-4bf4-9df1-2bac3f203b52",
        "cursor": {
          "ref": "1082eefc-f111-4755-a147-a3dc26ae9443",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5b0b4239-7ea7-47f2-9420-89de2c84f75c"
        },
        "item": {
          "id": "7a0d5f62-9d0f-4bf4-9df1-2bac3f203b52",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3869f2c9-e618-4d3e-86e5-5cde84152066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591b9707-d198-45c2-8a19-292037729bd7",
        "cursor": {
          "ref": "0de393e1-623e-4a19-b908-c2c9b1cebe23",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3208fa7a-c2a6-41a5-a7b5-339a54e69081"
        },
        "item": {
          "id": "591b9707-d198-45c2-8a19-292037729bd7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8e272105-c776-483d-a542-4152446ad5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae46c40-01b1-46e2-9ca4-3207a49a2af7",
        "cursor": {
          "ref": "e8814532-5a3b-48c2-b481-33cbf043be30",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ca95782e-4a52-4121-945c-800ee5fba742"
        },
        "item": {
          "id": "3ae46c40-01b1-46e2-9ca4-3207a49a2af7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "af18cc0b-11b5-401d-abf6-472d15940414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4490f3c2-b95f-462a-a85e-5b329f008feb",
        "cursor": {
          "ref": "b6f9c612-a141-4df6-96f2-9f8d9fd4adf0",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b97ec847-05e8-497d-a2a8-9ec7e1c75382"
        },
        "item": {
          "id": "4490f3c2-b95f-462a-a85e-5b329f008feb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "adac6721-ede2-4850-a6cf-65a2bff4c300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca074aa1-58c7-4613-a1ae-39cdc6702249",
        "cursor": {
          "ref": "381c5af2-1b0e-49a4-9162-d09b8276d9e0",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8bd1c4f5-77b2-4c53-a2b9-659a386489eb"
        },
        "item": {
          "id": "ca074aa1-58c7-4613-a1ae-39cdc6702249",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fba88733-78a5-4f69-95b1-0bdffe4eabfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bfe7b4-4ba7-4035-9b04-c6d4cd72acd8",
        "cursor": {
          "ref": "7980f53d-1afa-4ce5-9040-7ef530fe209e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eb295f61-bb6a-4d8b-bed7-f51ff55b42e9"
        },
        "item": {
          "id": "75bfe7b4-4ba7-4035-9b04-c6d4cd72acd8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5e14e62a-94f0-426b-93d1-7bd08c4ba662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c236f9-dee3-4fc4-bbd5-93120a04bdb1",
        "cursor": {
          "ref": "711e9606-71ba-43a4-95cc-d0bb5eb73677",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5c1786e8-6436-4a1f-8c42-85e2b61c0af5"
        },
        "item": {
          "id": "10c236f9-dee3-4fc4-bbd5-93120a04bdb1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2ce42ce9-a473-405c-aa41-54b1876aa031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4b25bf-aa5a-469b-ae0d-00a60ed1ce45",
        "cursor": {
          "ref": "15ce9f9f-0573-43fd-ba00-60c0f64e73bc",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cd163890-14d4-4c79-8a43-b460614110c5"
        },
        "item": {
          "id": "ce4b25bf-aa5a-469b-ae0d-00a60ed1ce45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "62f3d342-52bd-465f-ae89-5efba2f2a13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae4141a-43fa-4ae0-afce-34d55a131c1a",
        "cursor": {
          "ref": "e9e05fcc-d25d-4261-9f7e-93e07076c84c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b646b757-a73b-49b8-9b83-9b19b9e020f6"
        },
        "item": {
          "id": "0ae4141a-43fa-4ae0-afce-34d55a131c1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6a9a4ce5-7e2c-4a81-9eb6-8447207aeb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ab3a67-9c32-4a5a-84d7-2280f5a52662",
        "cursor": {
          "ref": "b6c1034e-d14b-46e9-9877-7d65cc229ac5",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "860fdbd7-21fc-4621-9f86-e23311208d25"
        },
        "item": {
          "id": "68ab3a67-9c32-4a5a-84d7-2280f5a52662",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b8ffe703-89be-4092-bf9c-a6b5fe684faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b173b3-9644-47f4-b42d-b54b8588bff4",
        "cursor": {
          "ref": "4ccb9df5-9b29-422d-9089-54d638dfc2c4",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "97edbce9-fcbd-47df-8fd7-7600d108154f"
        },
        "item": {
          "id": "d5b173b3-9644-47f4-b42d-b54b8588bff4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c51dc06c-440b-4df5-8520-c503be35e541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d6da28-35a4-420b-ae2b-31c9e9a4a6fd",
        "cursor": {
          "ref": "d4dc85b6-d3a8-424c-9d9c-89367b24d248",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "48a3eeeb-2d1c-4473-93cf-48def62d9294"
        },
        "item": {
          "id": "38d6da28-35a4-420b-ae2b-31c9e9a4a6fd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1de68ef2-a5be-4ea8-a1df-aaeeeeddec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b31cce-4cec-4afa-93f9-fbd056075d75",
        "cursor": {
          "ref": "48702d4b-3bcc-4b52-a1d7-1b26f012c760",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "66826224-b51e-4a85-8e09-b84819df5945"
        },
        "item": {
          "id": "98b31cce-4cec-4afa-93f9-fbd056075d75",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a7a94949-19b7-442f-8d47-7917676de381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db13c851-cb73-4891-9da9-de9c62e30931",
        "cursor": {
          "ref": "3e48b4a7-1c09-44d7-a204-58c84f6ab034",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a637c492-6196-466f-84f8-c8fbb6c0960d"
        },
        "item": {
          "id": "db13c851-cb73-4891-9da9-de9c62e30931",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5c131076-7ce9-4925-8bee-4899873a2286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9f88be-ecd3-45e8-ab47-ee6da95d550d",
        "cursor": {
          "ref": "318328cd-7344-4335-a88c-5897222eab47",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a90083c9-c3a5-4f5c-84cd-a22125b840db"
        },
        "item": {
          "id": "bd9f88be-ecd3-45e8-ab47-ee6da95d550d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "50a6753a-15ec-4f67-b7d1-ac8ba5d7fe5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68de0cc5-80d6-4891-9500-92e4dc07f24a",
        "cursor": {
          "ref": "b13e90d5-9e49-4c03-aca7-071244ed07d6",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "caa7819a-a791-412f-a64c-82c5fcc91827"
        },
        "item": {
          "id": "68de0cc5-80d6-4891-9500-92e4dc07f24a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "eb476f0a-5119-449b-b995-d6b146cb283c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0929b6-d835-4808-85bd-6fbf8fde434d",
        "cursor": {
          "ref": "a4fa33ee-bbb8-4f50-a6ff-9b43e0bbd757",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8587d8c1-d5eb-47ea-ad48-fedfc2f76049"
        },
        "item": {
          "id": "3a0929b6-d835-4808-85bd-6fbf8fde434d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "759df49d-d057-4ab8-9c46-f4593ba11b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e6a7ad-ec7a-4c77-9f07-032051644d05",
        "cursor": {
          "ref": "806c8d8b-9dd5-410b-8aaf-4f65d4827554",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "876b38e0-0019-4ce7-87b5-7ebe3cb16f22"
        },
        "item": {
          "id": "96e6a7ad-ec7a-4c77-9f07-032051644d05",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2cc35c23-4faa-426c-809b-06c19853d3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0691c5a9-742a-46c3-8f05-ede6c6af2637",
        "cursor": {
          "ref": "3d2a108e-18a1-4520-92c6-6dab39b8e845",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ac0c91f0-cce4-4b8e-ae1c-edf6d367c71a"
        },
        "item": {
          "id": "0691c5a9-742a-46c3-8f05-ede6c6af2637",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "09dfab98-723d-4c09-98f2-0679a0831956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe24485-7974-49ef-8e92-9ecc24ac1354",
        "cursor": {
          "ref": "0b9be9b7-0e1b-4490-a17d-5174943a02af",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d4f597fc-751c-4838-a59e-269e61105326"
        },
        "item": {
          "id": "ebe24485-7974-49ef-8e92-9ecc24ac1354",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ea35efa0-9147-46b5-93d6-7c09c8677a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c95e48-b61a-4740-aafa-7f6e5accf025",
        "cursor": {
          "ref": "c404bbcc-dc24-405f-8457-842b3e2fe65b",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fd5b8cd0-f71a-46a3-92da-b716d8cc6da6"
        },
        "item": {
          "id": "75c95e48-b61a-4740-aafa-7f6e5accf025",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4b654d86-3319-44c3-9111-902c22fedab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6435f465-9bc9-4945-bc05-a45ab7ac1a41",
        "cursor": {
          "ref": "c634739d-9eb9-4050-86a1-f060a64651d3",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "37138eea-3da3-4a00-bdbe-7079c0b49283"
        },
        "item": {
          "id": "6435f465-9bc9-4945-bc05-a45ab7ac1a41",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9996de8e-25ec-4c55-b86e-5e760bd7e782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0328815-5ef8-4684-9703-caaa312006e1",
        "cursor": {
          "ref": "91f78ea5-5953-4830-aab1-d7254e7e5c65",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "11ed3a8c-52b9-4483-af00-dd3d485ce5de"
        },
        "item": {
          "id": "f0328815-5ef8-4684-9703-caaa312006e1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c7eb8d6b-3cd8-414e-ae19-7b77785ac23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de99d180-d847-4b7e-be7a-4063856b1fd1",
        "cursor": {
          "ref": "7135307d-0830-4150-bf0b-7a0b037e62d2",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c69990a5-4c61-4b38-8929-b84e1598b5f6"
        },
        "item": {
          "id": "de99d180-d847-4b7e-be7a-4063856b1fd1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0b9255ca-fd63-431b-8728-af88dbfbb78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea50091-73d8-4f90-b46b-a08bb91dd678",
        "cursor": {
          "ref": "40a3e6c6-000e-4970-afe0-02d0f20e8056",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e8c310c1-517b-448b-ba85-1edc435451e1"
        },
        "item": {
          "id": "1ea50091-73d8-4f90-b46b-a08bb91dd678",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c0c1b7f8-258f-4d42-9eaf-829ce6a8fe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59fba44-d61e-4ebc-89a1-4c71fa70d804",
        "cursor": {
          "ref": "879a10a3-cd2a-4ea7-adaf-2c1e8720b9be",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4fafe35d-93b4-4a12-ab8a-71614665896c"
        },
        "item": {
          "id": "a59fba44-d61e-4ebc-89a1-4c71fa70d804",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "838222b6-1db1-4440-90e7-4874635e86a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a54622-8fa2-49b2-9760-f5150730b0f3",
        "cursor": {
          "ref": "82299f22-5c25-4581-8401-13ce237cb5bc",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "340ceaf6-557a-42a7-bf14-71937af64049"
        },
        "item": {
          "id": "46a54622-8fa2-49b2-9760-f5150730b0f3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ff8e0d9d-7e89-46c2-a8cc-bf24c05c67f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cb6eac-e2be-4e52-814c-72ea1f77fe75",
        "cursor": {
          "ref": "7154d55f-1059-4ebf-9aeb-d596d9acbf7d",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8e77f989-0b73-40fa-a4fa-2d1327ebad2d"
        },
        "item": {
          "id": "60cb6eac-e2be-4e52-814c-72ea1f77fe75",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e0bec98c-d996-4634-b05f-4cba0810adbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9fe097-cd04-4d8f-a6ad-be9154de59ff",
        "cursor": {
          "ref": "444059d7-d205-47f2-98b9-8ae020163736",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "424ce0d3-aa0e-42ae-b6d7-23b91fed7b9a"
        },
        "item": {
          "id": "fc9fe097-cd04-4d8f-a6ad-be9154de59ff",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "450006ff-39cf-4ac3-b981-a642127b4c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8a0521-35a2-45c7-bff4-066337202d9b",
        "cursor": {
          "ref": "4b5bf462-7c58-47cf-811c-4fff95c34a36",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7962a8cf-c9e4-4546-afc5-c586edd70bc3"
        },
        "item": {
          "id": "1e8a0521-35a2-45c7-bff4-066337202d9b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "07d46713-6b98-464a-8d1b-bccdb28fd680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a4abf7-8210-4023-875a-799e44fd67db",
        "cursor": {
          "ref": "c2b6cbd7-6e54-4c78-a2d6-c579493e0bbf",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "950f947f-a6e0-4177-98fb-bc2d86651643"
        },
        "item": {
          "id": "c2a4abf7-8210-4023-875a-799e44fd67db",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "45992d4d-bc7a-466f-9882-fac17f858c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902b2348-b4d0-4301-846e-967e41a02577",
        "cursor": {
          "ref": "680668f1-6750-4064-9f16-b3fdabe79ab3",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cd19d4ce-101d-449c-8e0a-50ded21b6e1b"
        },
        "item": {
          "id": "902b2348-b4d0-4301-846e-967e41a02577",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "23cb5e20-e0bd-4312-8e9b-3eaf7622c9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d835cf16-1300-429c-9abd-655cff4a23e7",
        "cursor": {
          "ref": "d8bb066c-1b7a-4c1d-9a59-7472805d6f91",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "69c44940-a632-44c5-9c0e-b36041f17a64"
        },
        "item": {
          "id": "d835cf16-1300-429c-9abd-655cff4a23e7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b87e7df1-b22f-4a68-9ebd-6c643b7bb771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a6163e-6c52-48cf-ab28-9184d00879a5",
        "cursor": {
          "ref": "452c3ed7-0e53-4b9d-b0ca-31315492a761",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1030783e-12cc-4fdc-b7c5-6844486f7b5f"
        },
        "item": {
          "id": "f8a6163e-6c52-48cf-ab28-9184d00879a5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b05a0263-3476-40ff-a0b2-16654754dec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0b2d3e-2d24-472f-a185-baa8c8f29440",
        "cursor": {
          "ref": "76986e27-d979-44fa-97bb-f8568545e839",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "19b1e613-1cf3-493d-bd14-88ecbd3b5585"
        },
        "item": {
          "id": "1e0b2d3e-2d24-472f-a185-baa8c8f29440",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d1ba3a68-a92d-4b88-be67-35b3ea26d5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61422acf-2829-4989-babf-46f15a53acde",
        "cursor": {
          "ref": "cd953c65-8bb1-4417-9c48-a3ed294db661",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0beb1640-37c2-4003-9cba-e0613ba16048"
        },
        "item": {
          "id": "61422acf-2829-4989-babf-46f15a53acde",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b582ee19-c471-46d2-bc81-91406a0b445a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9428417-57ef-4ca4-b8df-6fe4ce4063e1",
        "cursor": {
          "ref": "a927da6d-7303-4a60-b914-312b091a30dc",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9cfc1c22-c8e2-4a58-9911-4256eb61aa5a"
        },
        "item": {
          "id": "f9428417-57ef-4ca4-b8df-6fe4ce4063e1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d1701d6f-7349-4f4f-a3fd-98ec95860f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0df870b-a1ea-446d-a5af-794b9acb8ada",
        "cursor": {
          "ref": "15d193ee-cec3-4de9-8388-d000a0a52d7b",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "395bed0b-76d8-4aa9-a4d4-34bd4d8fa443"
        },
        "item": {
          "id": "a0df870b-a1ea-446d-a5af-794b9acb8ada",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c0d13851-937e-4a33-b095-60d9e9676f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f625498b-7e54-47de-88cf-524666d9fd55",
        "cursor": {
          "ref": "38ac2dcc-ef90-42dd-b919-f45fe086cb51",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6fd5a741-a0e1-4309-8977-2d854ab91faf"
        },
        "item": {
          "id": "f625498b-7e54-47de-88cf-524666d9fd55",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "961ceab3-d834-4994-abd6-2fe554d3fb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5e9c41-446c-4069-a5f7-0053f60fd2ce",
        "cursor": {
          "ref": "fe7816b8-8fc1-46cc-9acb-0df1826107ef",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "750298a9-85b4-49d8-911e-76cac524e152"
        },
        "item": {
          "id": "8b5e9c41-446c-4069-a5f7-0053f60fd2ce",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5bc2d4e5-ee73-49b0-98ab-8f49b3e35c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa886c34-bba4-4416-8441-9eb2fc6d8cc5",
        "cursor": {
          "ref": "6cd5f519-474f-43d0-b425-0a82baab1f1a",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "80037a5c-3abd-4369-8b3c-b1f0673f1a42"
        },
        "item": {
          "id": "aa886c34-bba4-4416-8441-9eb2fc6d8cc5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "50ad6482-e2da-458d-a2fa-0803e86d4dd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b758c3a5-28f4-4789-a8eb-96de0b8bb40a",
        "cursor": {
          "ref": "dc63ec97-27b6-44c9-8d99-9353e8b1adc2",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "161855c7-5271-41a3-a695-e9fdda8d943e"
        },
        "item": {
          "id": "b758c3a5-28f4-4789-a8eb-96de0b8bb40a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "45bd39df-4903-428d-ac1e-53f4b059c73a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 27,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0580a7da-538c-4fc2-b5f8-21cd18123718",
        "cursor": {
          "ref": "de1a1050-d347-40e8-9082-8d0ebdb557a3",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f9123712-341c-4302-87ca-b77524aece2f"
        },
        "item": {
          "id": "0580a7da-538c-4fc2-b5f8-21cd18123718",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7e95f81d-a0d9-4021-85a6-fdb67ae4a39b",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "47256c29-615d-42bb-b679-8458bac5e1e2",
        "cursor": {
          "ref": "2583668b-9a01-4d7c-9ccb-895bcb6347d9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8d3618c4-1dad-4c51-9c1f-c028dea28b08"
        },
        "item": {
          "id": "47256c29-615d-42bb-b679-8458bac5e1e2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7b1fbfb8-1c70-43e8-b099-243d64156630",
          "status": "Created",
          "code": 201,
          "responseTime": 61,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cce3f67-cf00-414f-a5cc-48ff60b130e7",
        "cursor": {
          "ref": "398957bc-e0e0-41dc-9fca-6188494c852e",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a1cdffca-17ec-4ddb-a6e9-fdf191470d82"
        },
        "item": {
          "id": "8cce3f67-cf00-414f-a5cc-48ff60b130e7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "84f2bc25-697a-40a1-80f9-b3c4b93d4068",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d265694-79e0-40b0-bda1-f56fa20508f1",
        "cursor": {
          "ref": "e1dbf1d7-59b9-4f1a-abf1-e8c92027feb1",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "74458a47-dc5d-4d84-a512-c14899a2e86a"
        },
        "item": {
          "id": "8d265694-79e0-40b0-bda1-f56fa20508f1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d9ea3d6f-e05c-48dc-87b6-6e75b1532dd9",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f238aef-879b-4457-b66a-a7c694a82771",
        "cursor": {
          "ref": "c5f32887-8350-452f-9f5b-24b634447a73",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e2835717-b14c-4b37-b71e-7adda662e24b"
        },
        "item": {
          "id": "7f238aef-879b-4457-b66a-a7c694a82771",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4596426c-7501-4f4f-984b-0e3b5bfc4f17",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e5ab87-c120-4677-9f0a-7699715ca5ed",
        "cursor": {
          "ref": "807ceba9-4a57-4cce-95dd-6142a581a2a7",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "77ec3079-bf26-460f-a386-05195cb01e18"
        },
        "item": {
          "id": "29e5ab87-c120-4677-9f0a-7699715ca5ed",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "deb347b7-312f-46cd-807d-5d40305c0840",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4f0179-7413-40d2-8a43-387fdb0f9855",
        "cursor": {
          "ref": "addf9f11-2c3f-407b-b8c4-8a38f7812ea5",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7ef5541b-6fba-4b55-81f2-ebeb6f5b8dd5"
        },
        "item": {
          "id": "8e4f0179-7413-40d2-8a43-387fdb0f9855",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7fb8a8f3-8807-4a30-8680-fb8ae83ba407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4f0179-7413-40d2-8a43-387fdb0f9855",
        "cursor": {
          "ref": "addf9f11-2c3f-407b-b8c4-8a38f7812ea5",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7ef5541b-6fba-4b55-81f2-ebeb6f5b8dd5"
        },
        "item": {
          "id": "8e4f0179-7413-40d2-8a43-387fdb0f9855",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7fb8a8f3-8807-4a30-8680-fb8ae83ba407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031331d5-4fb5-471f-9c1a-12b89da1d88c",
        "cursor": {
          "ref": "1a5770a9-2e91-43b5-9a12-4522cb2f4226",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7bc03069-6571-471f-bd4c-e28ac8f47e4a"
        },
        "item": {
          "id": "031331d5-4fb5-471f-9c1a-12b89da1d88c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7cea3c63-9dff-476c-bd45-b589a7802e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c70562a-466c-4764-9dac-f1e7e8a4d531",
        "cursor": {
          "ref": "e070dd4f-49dd-4c6a-a177-5dad157afee7",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "83a3fbb4-cb17-4486-a48a-b3af51e3416e"
        },
        "item": {
          "id": "7c70562a-466c-4764-9dac-f1e7e8a4d531",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c088022b-4b43-4c1c-8760-8de63b985246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ddfe4c-33c2-4ba3-a889-3995d625550a",
        "cursor": {
          "ref": "755b9300-1d07-4310-b173-278cbd3d1164",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6dfa393e-6fab-4bb2-82c8-7c3aa74beffa"
        },
        "item": {
          "id": "95ddfe4c-33c2-4ba3-a889-3995d625550a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5bcdee5e-2071-421d-b7a2-3d66955ab87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bd9d56-b31d-464a-9142-b917626a79e5",
        "cursor": {
          "ref": "e63a76bd-8f96-40b5-874e-4ed35d08569c",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "97ea4c6d-096a-450f-82cd-8e9d7900132b"
        },
        "item": {
          "id": "b0bd9d56-b31d-464a-9142-b917626a79e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e9972797-ce70-4ba7-a379-da95fd6c9252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88aa58cb-b177-48cd-8840-d8414dd8820e",
        "cursor": {
          "ref": "1c71c8f3-12b6-4243-bbe3-ce625d50e0f0",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dd3147ff-dedb-4e81-bf64-bee7ccef1996"
        },
        "item": {
          "id": "88aa58cb-b177-48cd-8840-d8414dd8820e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c6fc5414-493f-431f-bdd5-47eedc7139ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b653dc5c-13e7-417f-932a-bcedf37415fc",
        "cursor": {
          "ref": "a728d929-3fd6-410a-9784-2dd2cf849e88",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b0645836-cc05-4091-90fa-c02dd16a1636"
        },
        "item": {
          "id": "b653dc5c-13e7-417f-932a-bcedf37415fc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "de37eeb6-30d7-4c19-a3d3-0db39840b86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1870cd-346c-478e-9c73-62ba0e84dca1",
        "cursor": {
          "ref": "0cdfca2b-f94a-4477-8bd3-5970d16c0f99",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f18c4e3a-a4b2-432d-b796-86ee0aca7c17"
        },
        "item": {
          "id": "1d1870cd-346c-478e-9c73-62ba0e84dca1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "078c0927-d1ab-48ea-b555-aaeb743bab22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08c282e-df50-413f-95c1-496f470092f9",
        "cursor": {
          "ref": "2f896a82-ec31-4061-a092-b56f0482d9a7",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f0e11346-fb0a-4de6-8cf3-78a4bde8fbf1"
        },
        "item": {
          "id": "b08c282e-df50-413f-95c1-496f470092f9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "897db259-2461-40f2-9bca-e34e81642d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd813b27-5950-4116-a409-6a5c4f3fae62",
        "cursor": {
          "ref": "d75436d1-2c14-4eb8-82a0-c01295ef7aba",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ee2ebc2e-2b92-4384-9501-c0255ba01901"
        },
        "item": {
          "id": "dd813b27-5950-4116-a409-6a5c4f3fae62",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3968bf24-235f-4e36-a3d7-d0c0f1908f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc033de-8f09-4d81-bca4-579ead513ea5",
        "cursor": {
          "ref": "cc920b77-bf03-4b8e-978d-c5bc39883498",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f2ed9e42-db26-4544-845e-beb568dab5ad"
        },
        "item": {
          "id": "2fc033de-8f09-4d81-bca4-579ead513ea5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f967c52b-7785-4033-8ec9-15ee9d3f55f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc64d7c2-b6fe-40a5-9f6f-d1f3bc5b2011",
        "cursor": {
          "ref": "3b0c05cb-2165-41c7-939e-28a6dcda234f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3652b18a-10ac-4578-9c13-fe78b894263e"
        },
        "item": {
          "id": "cc64d7c2-b6fe-40a5-9f6f-d1f3bc5b2011",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "37e1da0e-69a7-4131-914d-570050461cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829705a0-71ed-4079-82e0-b1f0c4ec10d9",
        "cursor": {
          "ref": "a48104d9-1c54-4f8e-9f4d-3e0562ec9a6e",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9b25413f-8d26-41bf-8bfd-61fea335ea27"
        },
        "item": {
          "id": "829705a0-71ed-4079-82e0-b1f0c4ec10d9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "72e1b38b-03ff-4bb3-88b0-d2cb4b5ba258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc8fef4-caeb-4e92-800a-0158890f817a",
        "cursor": {
          "ref": "0163387b-b773-424f-9999-c4c3c99a244a",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6695c6a9-bfa6-45f3-882b-7ed0d83e650d"
        },
        "item": {
          "id": "7bc8fef4-caeb-4e92-800a-0158890f817a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3ec5f1da-6670-428a-bdb6-79eff8d09ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cbcbc7-fd37-4516-b483-a412341fc26d",
        "cursor": {
          "ref": "25944f4c-bf3b-4e24-b9cf-c6e3a012e78d",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7ce579cc-edcb-49f1-8934-e6934ba7e83a"
        },
        "item": {
          "id": "13cbcbc7-fd37-4516-b483-a412341fc26d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "372fec81-cdb4-4d05-aebe-9539eb7811cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c2d234-db50-4e39-8915-1ac07ebcd557",
        "cursor": {
          "ref": "7626fee4-3e63-425d-81a9-201dfa80036f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1409d343-9986-4ffd-9184-5b3981bb0cfd"
        },
        "item": {
          "id": "36c2d234-db50-4e39-8915-1ac07ebcd557",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "370600b0-78fb-4650-ad9f-05b6edef8f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54669f7-d1e4-41e5-9952-46c3768862f9",
        "cursor": {
          "ref": "873d690d-decb-4cee-a7ec-d87a340b1c95",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b2fb821b-8fd2-4c49-a885-71c166a68bd0"
        },
        "item": {
          "id": "e54669f7-d1e4-41e5-9952-46c3768862f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5789690f-1939-4052-a2b1-39c59a87aa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea79778e-45e8-4e78-b40e-61ac1aa7586e",
        "cursor": {
          "ref": "3cc7aff5-1f9c-4111-9e6b-f04fae397678",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "56c3b08c-202b-4857-818c-95f035f22306"
        },
        "item": {
          "id": "ea79778e-45e8-4e78-b40e-61ac1aa7586e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a524bc67-4838-4d3a-a2a7-9031aa757d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd1d99-51f6-4908-ba8d-d358e3c2530f",
        "cursor": {
          "ref": "6a780c68-33bf-4464-b168-edf4dba42d4b",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2c720c9d-10d9-4466-ac2d-718ae6ada9d3"
        },
        "item": {
          "id": "29fd1d99-51f6-4908-ba8d-d358e3c2530f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ed5a37af-6344-40b6-ab17-f83119f391b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa21034-d693-4d55-b532-35aa4c2f17d6",
        "cursor": {
          "ref": "8d5e2205-1e28-443f-b435-177eab3c0095",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a0c9ca0a-bd2d-4fb3-b550-2a794c306f0a"
        },
        "item": {
          "id": "caa21034-d693-4d55-b532-35aa4c2f17d6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8da44bf1-28fe-4300-827b-5cf21ac1ed58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52753fe0-e420-4f27-a52b-d80759b31d34",
        "cursor": {
          "ref": "88a65981-9e91-45d9-bc44-67d48bb0a6dc",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8de4d397-7061-4975-afd4-4b7cc1a659e0"
        },
        "item": {
          "id": "52753fe0-e420-4f27-a52b-d80759b31d34",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b6262ee9-d8be-44a7-b63d-e9be61cf9e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7d1840-be78-491f-829b-55de5d3e086a",
        "cursor": {
          "ref": "9a3d3a21-add3-4dbc-8232-4f17581b6895",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d5d9c038-8ed4-479c-896e-66e6b435d1d3"
        },
        "item": {
          "id": "7c7d1840-be78-491f-829b-55de5d3e086a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "628805ad-4f4d-426b-aa39-ca750c933833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8b354a-1da0-48cb-b3c1-702b43eb4626",
        "cursor": {
          "ref": "3a9565f1-368c-4acb-b551-eb0341f4be5f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4d3ab636-0d8a-45b9-ac71-5568c2f43bba"
        },
        "item": {
          "id": "4d8b354a-1da0-48cb-b3c1-702b43eb4626",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75c27edc-87f5-4725-9f18-90a3825b2b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dd760c-9702-45a0-91c5-39c7c6eb0604",
        "cursor": {
          "ref": "feb74398-3366-4e11-b3fa-da614f6b5a64",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ca0f2daa-dfe9-43b1-b9a1-953d383b56f0"
        },
        "item": {
          "id": "c1dd760c-9702-45a0-91c5-39c7c6eb0604",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6ebeb17c-3620-4aca-b768-19980b5ec686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facb8d03-a157-481d-aee7-f971b673f81c",
        "cursor": {
          "ref": "2d714ce7-a2c0-4cd8-b829-b49d43d39332",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d74eb3ce-6986-4542-a37e-2f28ae048a25"
        },
        "item": {
          "id": "facb8d03-a157-481d-aee7-f971b673f81c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "542c0f01-4cfd-4a85-ad52-c847504ae2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa6c2c9-b112-44f7-a722-6efac78caee9",
        "cursor": {
          "ref": "3e816c94-7d12-46b1-91bd-c36cda7d398f",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2a79cd2f-34ee-489a-a268-bd691de428a1"
        },
        "item": {
          "id": "6fa6c2c9-b112-44f7-a722-6efac78caee9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c1c9ee3b-fe61-4d3a-b8c8-b5ff05625ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b71dbf-8816-4019-9d90-ce5d5745c419",
        "cursor": {
          "ref": "5b3e2131-7337-4ed7-8c52-d5441b60fa25",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6be72b09-b829-4929-83f3-323d69bf3642"
        },
        "item": {
          "id": "d0b71dbf-8816-4019-9d90-ce5d5745c419",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1e7bf18c-6170-43e5-8f76-4dd32acfce5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f20226b-dc40-4b32-b1b2-fb558c5fbef7",
        "cursor": {
          "ref": "a33c1fec-c62e-44d2-ad0a-68a02f9b423b",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c22536ec-4697-4465-aafc-d00cb5b332be"
        },
        "item": {
          "id": "4f20226b-dc40-4b32-b1b2-fb558c5fbef7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6ee80f17-2a0f-45c7-8f96-df7f407fa470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea1167e-2abe-45e4-a6ce-0628e9304244",
        "cursor": {
          "ref": "577cb5b8-f22c-4517-9b8d-b331b0f9c16d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e5b50c47-856f-45f3-9107-b5a87eb9e8eb"
        },
        "item": {
          "id": "2ea1167e-2abe-45e4-a6ce-0628e9304244",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d4ee8a52-0522-4ef1-b844-00881e52b692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2885d89-9625-45fd-b75f-9db205cebc8c",
        "cursor": {
          "ref": "8071f771-4e8e-45a6-bbe6-be00022c88c4",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c05ce4ba-2335-4538-868a-c9f3b442cc33"
        },
        "item": {
          "id": "e2885d89-9625-45fd-b75f-9db205cebc8c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "94fa1996-abb2-4517-844b-36c413faba5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c586159-4e0e-4e39-8302-b7536b10de4c",
        "cursor": {
          "ref": "79876bc8-8433-48cc-94e6-ecf12286a67c",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "415823ae-f4af-45b5-a7d8-2ac38546b01d"
        },
        "item": {
          "id": "0c586159-4e0e-4e39-8302-b7536b10de4c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9ff9d035-60d0-44a1-95b2-6f24451ed4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a3e9d1-15e3-48eb-82c6-7b6af6a39e91",
        "cursor": {
          "ref": "369f99fe-47f8-46be-b8d7-9cdd35d56d0e",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "820dbb77-2316-4a4c-9b21-b68c0b82b64b"
        },
        "item": {
          "id": "81a3e9d1-15e3-48eb-82c6-7b6af6a39e91",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ea09366f-08a8-48c6-96c0-cdcfd4336649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968243b3-82a6-46bf-a398-6c4539e6f601",
        "cursor": {
          "ref": "afa7ced5-0558-4b5a-bb41-aab4d37b9c9e",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d23ee446-1ab4-4163-a185-501a369c3b66"
        },
        "item": {
          "id": "968243b3-82a6-46bf-a398-6c4539e6f601",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d0b0fbcb-5a21-468b-804b-03eab147b895",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11648992-7d8e-41f2-9a6d-08e8ecca3311",
        "cursor": {
          "ref": "ef599fe1-f302-4b6d-9185-79b9b94122f3",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f514ef30-eae4-4a77-94ee-ee720fdb2ece"
        },
        "item": {
          "id": "11648992-7d8e-41f2-9a6d-08e8ecca3311",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "061e22a9-dfb6-4651-9b20-5c34f11f07de",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daa70ed-e89f-4192-b254-80db6952f84c",
        "cursor": {
          "ref": "bad22456-67a9-4b4e-8937-452981bcc441",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "57c5f609-02b6-421d-942e-d731f26e548e"
        },
        "item": {
          "id": "5daa70ed-e89f-4192-b254-80db6952f84c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b5e458d-a908-4ca7-a418-18694d0a3f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daa70ed-e89f-4192-b254-80db6952f84c",
        "cursor": {
          "ref": "bad22456-67a9-4b4e-8937-452981bcc441",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "57c5f609-02b6-421d-942e-d731f26e548e"
        },
        "item": {
          "id": "5daa70ed-e89f-4192-b254-80db6952f84c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b5e458d-a908-4ca7-a418-18694d0a3f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac71c435-aa71-4b72-bda1-a5326d874d07",
        "cursor": {
          "ref": "cfbb005c-f206-4cf9-a672-fcf52e2d7b66",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3c2a3a77-d1a5-408a-a1d9-6b212319ff5e"
        },
        "item": {
          "id": "ac71c435-aa71-4b72-bda1-a5326d874d07",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1dfe586d-513a-4c35-ab82-e3d7af3c6405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b463865c-54de-43bb-b308-ad8d341f52d5",
        "cursor": {
          "ref": "59bbe66b-2a03-41f9-ad9e-4a10e961c19b",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "382e8849-f766-4388-82bd-ec85383990d7"
        },
        "item": {
          "id": "b463865c-54de-43bb-b308-ad8d341f52d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0c34fb3c-80a3-4c2f-b132-1bbf2a4e39ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f31a8e1-8c6d-4b9b-9889-7cf3d3aed148",
        "cursor": {
          "ref": "bb677308-9f2a-457b-9060-afd9d1bdcdd6",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d3551732-5953-4696-beba-17248ed01102"
        },
        "item": {
          "id": "5f31a8e1-8c6d-4b9b-9889-7cf3d3aed148",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "de97f5f2-ff84-44db-9578-2b9c39db3df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ca261c-ee9d-4668-9bd4-2eb90d98bc82",
        "cursor": {
          "ref": "2a1eff87-1131-4c27-a7f7-6285ee386738",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a77f5941-82a4-4543-912a-18fdd8bd3546"
        },
        "item": {
          "id": "a6ca261c-ee9d-4668-9bd4-2eb90d98bc82",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "22535169-418f-4025-aa6d-f5bed1c4c296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb139de5-f695-4c24-8882-1ffff88b9e80",
        "cursor": {
          "ref": "59759624-6bc7-45ff-8800-3a66d56cc3b5",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "782408cc-05fa-4c30-9ff7-b6362ab4c6ad"
        },
        "item": {
          "id": "fb139de5-f695-4c24-8882-1ffff88b9e80",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "828872a9-5b3e-4a26-92db-d20dcf227491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d0e435-6547-478e-b49d-1ae44f5e898e",
        "cursor": {
          "ref": "69167b2e-412d-45ec-a048-9d6ac5e65069",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4c4db9a3-6b53-4ca4-95e9-b4bc409a3d1a"
        },
        "item": {
          "id": "a6d0e435-6547-478e-b49d-1ae44f5e898e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5ff95b1f-e178-401b-9ee2-3b612cbf3a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d6c2ee-efc2-4143-9ba9-5462f7ef6451",
        "cursor": {
          "ref": "73ebc702-b1c0-45b0-af9e-97d16675fcea",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c83641d5-df73-4179-96c3-3c5f399c0f9b"
        },
        "item": {
          "id": "17d6c2ee-efc2-4143-9ba9-5462f7ef6451",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "603cbb83-7ba1-401a-a552-d24918bc3263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881e1de2-079b-4208-8836-4d0c21eb0044",
        "cursor": {
          "ref": "2a1c5eb9-b33e-463c-a30f-e7274acc83de",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e887783c-73a2-4a31-a665-6baba3e15c61"
        },
        "item": {
          "id": "881e1de2-079b-4208-8836-4d0c21eb0044",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "311b06ae-56a8-437d-bcdb-27ec9e5654d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db00ce6f-bcfe-4587-a3e3-d5ea0af40e30",
        "cursor": {
          "ref": "c35b5b62-5374-4bbb-9944-e3a755ca9504",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4232bfe2-e4a1-4541-9adf-bc87b19e6f70"
        },
        "item": {
          "id": "db00ce6f-bcfe-4587-a3e3-d5ea0af40e30",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "71031998-05f0-4bf3-8df6-0330dea741be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504653b1-fe61-4eca-8684-e722b6569c2c",
        "cursor": {
          "ref": "dcd90d30-1f2a-4a8e-9553-75d14a3d3051",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8119f776-d431-45c9-8e15-2e1f844ebacf"
        },
        "item": {
          "id": "504653b1-fe61-4eca-8684-e722b6569c2c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "01fc920f-8998-4b3a-92f2-b9c95aedaa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e737b0e7-2b5f-4fa7-82ec-c9620275d141",
        "cursor": {
          "ref": "04b79b7f-6faa-4c3e-ae61-a49edb8917ef",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "11c55d85-c706-424e-83ca-c0cdb31ecbf1"
        },
        "item": {
          "id": "e737b0e7-2b5f-4fa7-82ec-c9620275d141",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f19a5220-575e-4945-a514-9fca59aea446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7aaf34-134f-4a6f-9378-9aca11103a61",
        "cursor": {
          "ref": "186dcbba-cf99-4c9f-b09c-8c5f4dec1222",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a66b71db-fc6c-434d-ae2e-f139f32ec396"
        },
        "item": {
          "id": "8f7aaf34-134f-4a6f-9378-9aca11103a61",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5c0f3d35-7712-47d8-8953-50eb357fb15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82de9f5d-6dbb-4a51-859f-e9205d5ea806",
        "cursor": {
          "ref": "0595be17-2c04-4ecd-a4ea-c95aaedcd4d6",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "079a1db6-92e2-40b4-a0f4-944bcee34c7c"
        },
        "item": {
          "id": "82de9f5d-6dbb-4a51-859f-e9205d5ea806",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "09b5237d-8149-462a-b3ad-101b8e9cb84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cebd97-513d-4e32-a324-509f0acc8269",
        "cursor": {
          "ref": "b42d3942-b25d-462d-afd4-043374943b8f",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "274e5f5a-368f-41ba-8a22-4c635ec3bceb"
        },
        "item": {
          "id": "31cebd97-513d-4e32-a324-509f0acc8269",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2233edfd-8458-4aee-b6af-ad66a6888eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244abebe-c521-4ea3-aaf9-492d263f1a46",
        "cursor": {
          "ref": "61a4c567-3d38-4130-9b50-0b708b8c599e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "009ce7e2-8561-4ec2-b581-de1fc714395f"
        },
        "item": {
          "id": "244abebe-c521-4ea3-aaf9-492d263f1a46",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "80e3b625-cb28-4f68-8af0-76fd04ee8dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592da84e-8b4b-46c9-8357-1e5bf261f2bf",
        "cursor": {
          "ref": "cc7a2059-d5aa-4b05-b64f-40d2c49d7fd9",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e3664037-e170-4c09-a270-a345b06c8fc9"
        },
        "item": {
          "id": "592da84e-8b4b-46c9-8357-1e5bf261f2bf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "34357a09-71e4-4bf3-90c9-dd53a800e906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5537b343-3d7e-4f94-8190-5c27ca3350e3",
        "cursor": {
          "ref": "d81fc69d-f02c-45cf-b250-150d8b674284",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1edfbf8b-235f-4ba6-8c91-704936cee7fc"
        },
        "item": {
          "id": "5537b343-3d7e-4f94-8190-5c27ca3350e3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1fff58ae-868e-49dd-a04c-420bb38f73d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23130435-248c-409a-9bbb-3129306775ec",
        "cursor": {
          "ref": "ce384037-6ab1-4375-9583-f6ad9101918e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b5d8ed01-b40b-452e-8483-01aebfc222d4"
        },
        "item": {
          "id": "23130435-248c-409a-9bbb-3129306775ec",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "56eae109-a18b-4296-b060-1208694e8e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0d48d-448b-4fbf-88d5-2dd8b84bb3d6",
        "cursor": {
          "ref": "2ee10987-a772-4848-b866-b23c375c1fce",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "37ccc0dd-d1f7-47f0-ac2e-cb0208997afa"
        },
        "item": {
          "id": "c0a0d48d-448b-4fbf-88d5-2dd8b84bb3d6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "29387d9d-32e5-4241-8f74-3c30142445e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c59e529-2bc2-4a6a-b83a-334120594d01",
        "cursor": {
          "ref": "0c6f1825-0b39-4aac-a85b-60adc884038e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "70043333-551a-4ffe-9def-dc2f635b670e"
        },
        "item": {
          "id": "5c59e529-2bc2-4a6a-b83a-334120594d01",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "94f395ef-7704-4494-9924-00d42e8e93b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77a18a9-95ca-4bf2-939a-824c711054c0",
        "cursor": {
          "ref": "bff76c3e-80c5-43d2-8325-3b02e885e88c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9fc9dfc0-4381-4cd2-ae54-7474e4d68ed1"
        },
        "item": {
          "id": "f77a18a9-95ca-4bf2-939a-824c711054c0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dd71dc1f-fc75-42f3-925b-4351aa184910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cd8610-586e-43d3-9aaf-2acb7f1749b2",
        "cursor": {
          "ref": "7939bda5-8cea-4654-8b80-59b14d91674e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "af11ca69-b3b4-4fd3-8ecb-3a1a069e9ded"
        },
        "item": {
          "id": "06cd8610-586e-43d3-9aaf-2acb7f1749b2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "62a38278-3486-4436-b59f-b9e83a49a8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae156090-eca4-4f78-92a8-089fc33f6c2f",
        "cursor": {
          "ref": "04840294-85e1-49c0-92fa-32c81e0a4c28",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d80185e0-ab76-4cda-932b-3fe51e207e6a"
        },
        "item": {
          "id": "ae156090-eca4-4f78-92a8-089fc33f6c2f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5af63d69-9be9-49cd-899f-bb6631a42d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed583e12-62b9-4eaf-bdab-2b4d90622fd4",
        "cursor": {
          "ref": "590bbc85-cbc8-4e82-9aca-c93363fb31e1",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "61255d0c-e104-426f-a436-4d092b9bf171"
        },
        "item": {
          "id": "ed583e12-62b9-4eaf-bdab-2b4d90622fd4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3ecf16c7-87f0-4f72-a06b-4c5ef0a76b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de269dd-6cd2-4274-93dd-c5e8ba7c1089",
        "cursor": {
          "ref": "372e8e05-1c96-4b62-8d7f-a77d0ce3c5ef",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e9c42bbc-2eb9-4133-a674-efe5d66045c3"
        },
        "item": {
          "id": "6de269dd-6cd2-4274-93dd-c5e8ba7c1089",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c38d4e57-fb7a-45c5-9466-29cd05690cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98c3b28-2589-4ecc-8ada-37bbddb8d905",
        "cursor": {
          "ref": "7fe1cac2-41f6-451b-ae08-414ba1c39fdf",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "53a5706c-4cbe-4426-9745-2f32e864aeec"
        },
        "item": {
          "id": "d98c3b28-2589-4ecc-8ada-37bbddb8d905",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8e581ff5-0731-4456-a5ff-c44c7bd38571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fdfbe8-bb2d-4f29-b4e7-c410cd4f65be",
        "cursor": {
          "ref": "153f9b6c-017f-47e9-a1c8-f28d58e67656",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "273bff03-f310-483f-8dbf-c7bfece6fab7"
        },
        "item": {
          "id": "43fdfbe8-bb2d-4f29-b4e7-c410cd4f65be",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3c3caf00-b58a-4f72-97eb-3d7d3c240a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb62156b-74cb-4e88-a4d2-a492e0e4e6d8",
        "cursor": {
          "ref": "69ea5c5a-e7f7-4f8c-bd7a-2f4b9ab74603",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "65cb5378-5bf0-4230-b989-da245607c5ee"
        },
        "item": {
          "id": "cb62156b-74cb-4e88-a4d2-a492e0e4e6d8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ec70c148-7a47-4485-b98d-735d05b8c61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05548ebd-48cb-4749-abd8-dbdb33603ea5",
        "cursor": {
          "ref": "c612cc4e-793c-443a-bdf4-6aa30e37d510",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f336ec4-a457-4a00-a912-141506fefa45"
        },
        "item": {
          "id": "05548ebd-48cb-4749-abd8-dbdb33603ea5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2bb15d71-353d-4c8b-a6af-45d26f5174b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba25bf6-23ae-47e5-ab42-6cd68819182e",
        "cursor": {
          "ref": "de9b80a3-102b-43a0-8ac7-920d2dfdd148",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fed6f9ac-98db-43ae-af4d-913551cd0eb9"
        },
        "item": {
          "id": "fba25bf6-23ae-47e5-ab42-6cd68819182e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "691fe122-1c50-478f-a06a-6b38c52bda23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242432f6-1626-45d1-926a-897f0e1c818c",
        "cursor": {
          "ref": "d42e01b4-d379-4643-8be1-332b6bc6beed",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "79339d76-30ac-4d7f-8100-7beb706e9f2c"
        },
        "item": {
          "id": "242432f6-1626-45d1-926a-897f0e1c818c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "869d1ff6-6e35-489d-95bc-479548c64f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c41d9de-fa3b-4967-8b0f-9f546b45b51f",
        "cursor": {
          "ref": "b4c49c65-5154-4fc3-bdb8-d0802d9366c5",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "460a0538-7aeb-4093-a311-0a73bbefd4f5"
        },
        "item": {
          "id": "2c41d9de-fa3b-4967-8b0f-9f546b45b51f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ba23a15c-6037-4330-9935-e042723cabce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3463a9-a8ff-4e67-a6fa-e1e4217eccd7",
        "cursor": {
          "ref": "549f42bf-6d4b-4a9b-a282-cba6bc6a25cf",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "aae1eab7-d388-4bce-b000-0955cb1e6367"
        },
        "item": {
          "id": "8d3463a9-a8ff-4e67-a6fa-e1e4217eccd7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9111bb42-3fe6-44fc-b1c3-73a1cbdd8fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d60e84-9ec4-4aa3-97fd-7e4f3f7d71fc",
        "cursor": {
          "ref": "82b8e9a7-96c4-4c87-bb3c-bdd9c8f198e9",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2936cb62-01fb-472b-948e-8fbe100bf1d1"
        },
        "item": {
          "id": "48d60e84-9ec4-4aa3-97fd-7e4f3f7d71fc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "324d9a9f-868a-4d9f-81e1-e234739b471d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e358368f-6f79-4c78-8139-16f1094f433b",
        "cursor": {
          "ref": "983f5604-8619-4855-8da3-cb184cb2501c",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bf151bbe-ee02-4dd4-85b0-ed8626f92f99"
        },
        "item": {
          "id": "e358368f-6f79-4c78-8139-16f1094f433b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "91b72556-8c87-468c-86a4-c7667ed47d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac24332d-5b56-4fb1-8783-a871ebc3949d",
        "cursor": {
          "ref": "b2686c8d-e236-4708-b64c-a3b64cdc8b9a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "eb825090-4677-45fa-a036-3891147d8fce"
        },
        "item": {
          "id": "ac24332d-5b56-4fb1-8783-a871ebc3949d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7d91b21a-aaee-4dcf-9c38-1b1ed77a2a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43ae5c1-71cc-46dd-9ef2-b6703920d684",
        "cursor": {
          "ref": "9539ff30-5dd4-4340-9f2e-95adefb2b9c9",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "32cb0af3-2515-4232-893a-636ceee523c6"
        },
        "item": {
          "id": "d43ae5c1-71cc-46dd-9ef2-b6703920d684",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9a01c3bc-6438-436c-8404-ed0a9caf4507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ec5559-1852-4bc6-a4a7-2efdcec8fd89",
        "cursor": {
          "ref": "ee1927a3-65fe-411e-b36e-dabe773145b6",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e3217522-12ea-48e8-a5a4-055030c748e7"
        },
        "item": {
          "id": "69ec5559-1852-4bc6-a4a7-2efdcec8fd89",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "26f88327-0d35-4789-ad9a-d2a7f1876c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922d8acb-65bd-4eb8-ba64-b8fad18bd172",
        "cursor": {
          "ref": "63ca54ef-1591-4fb4-991a-da49f3f7de44",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "db573fa8-c705-4915-a89a-6c476bce4894"
        },
        "item": {
          "id": "922d8acb-65bd-4eb8-ba64-b8fad18bd172",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "239efd45-a414-4f9a-975c-574c631c8866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b78f61f-a221-4eb7-bf15-bbe72429eeea",
        "cursor": {
          "ref": "e291f08c-ec49-4f34-86ab-4fbd5400e08b",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "918cec92-4f58-44e5-b491-5c0d933430bd"
        },
        "item": {
          "id": "4b78f61f-a221-4eb7-bf15-bbe72429eeea",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "62bd598f-6a81-479e-a883-3229a986987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879fb9c5-aa4a-4e39-b6ef-3d07ee1958fe",
        "cursor": {
          "ref": "a3e90dc3-dff1-462a-81e3-2561300a0a16",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3f7cf86c-41bd-4676-a4fc-9c25d2904e07"
        },
        "item": {
          "id": "879fb9c5-aa4a-4e39-b6ef-3d07ee1958fe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1f6b8468-2fd4-49a1-9e92-8095c139065d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8512d690-2eff-4fe2-9f7f-b441e551a1a1",
        "cursor": {
          "ref": "39d19532-48f9-40a4-a7c3-07ad54cff1a0",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "70e344dd-d6e4-4e24-b494-219d30c9e00f"
        },
        "item": {
          "id": "8512d690-2eff-4fe2-9f7f-b441e551a1a1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d6441393-2b2c-4eef-8379-681cf8b61ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79230d8-494e-4f7b-a69f-054c7b718417",
        "cursor": {
          "ref": "53bac64f-36b0-4b18-ae59-b1fe8775a6ea",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "38aac5f2-06d5-48a6-93f2-4a3437d003b7"
        },
        "item": {
          "id": "b79230d8-494e-4f7b-a69f-054c7b718417",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f548465b-02ab-45c8-9c9f-208578283320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e71f14-8526-4db7-800f-c72bfa94ca18",
        "cursor": {
          "ref": "96921b29-f92a-4360-bc14-a283d386ba54",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "da03f8a5-1974-4704-89fa-ee36dfc0a7d1"
        },
        "item": {
          "id": "e1e71f14-8526-4db7-800f-c72bfa94ca18",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cafb6bb0-c7a9-481e-b3f1-6d96bead58a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9360f702-a08e-455f-ab05-a9fdeb3729b1",
        "cursor": {
          "ref": "e85e2e2a-c4fe-4629-a5b2-cb4732936768",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f2128573-9bd0-405e-bd07-edbaad4a8341"
        },
        "item": {
          "id": "9360f702-a08e-455f-ab05-a9fdeb3729b1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fd0c0a23-647f-4bc7-9db2-06e440838935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f51d185-6d40-458a-ae69-e8223c89d4b1",
        "cursor": {
          "ref": "bb27426e-adc4-4f41-b9bd-42c89a33d8e2",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "90e5b86a-4f32-4ffe-8eac-0df163ebc30f"
        },
        "item": {
          "id": "8f51d185-6d40-458a-ae69-e8223c89d4b1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6a6643d4-a702-4150-981e-e4968d86ed89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd9916b-d186-455b-a15a-81a20955b60a",
        "cursor": {
          "ref": "a296e25d-e4e3-4745-a276-babf7e669d87",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "361ea83b-d74e-42a9-8d70-abbfb03b2b4e"
        },
        "item": {
          "id": "3bd9916b-d186-455b-a15a-81a20955b60a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6fa3255d-5b9b-4b28-a263-618916d34c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d1d749-65dc-4570-8ca6-559a131400e2",
        "cursor": {
          "ref": "2bc6eb7f-7c63-4a74-baed-39bf400d32c4",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9407177a-0686-4391-a008-40063c760461"
        },
        "item": {
          "id": "90d1d749-65dc-4570-8ca6-559a131400e2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "475ff1f7-d490-4057-bc24-78156ef6cc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24939172-30e1-41b1-a9bd-0fab2e6c171c",
        "cursor": {
          "ref": "6f75ae8e-8178-4c4c-b459-83be75b84d0e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3471cad8-d289-4355-9e1a-85a31eae643b"
        },
        "item": {
          "id": "24939172-30e1-41b1-a9bd-0fab2e6c171c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ad9af9c6-1d9b-4b20-a9d3-cf650e571c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b571d922-6be5-47b8-98f3-395f526edf14",
        "cursor": {
          "ref": "b4d80dc3-d5d6-4b09-af95-3aacb0d767d5",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "441303bf-c741-43c9-905e-77edc9701e07"
        },
        "item": {
          "id": "b571d922-6be5-47b8-98f3-395f526edf14",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2b57ec28-2500-4d84-ae8a-91a2649087cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9000f2f9-ca62-4c94-98ea-a26ecedb9425",
        "cursor": {
          "ref": "bd28f60e-823a-4ab4-88a4-bc97d22cc06f",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9b8afd52-88f4-4a62-8af4-6ef63148dc2f"
        },
        "item": {
          "id": "9000f2f9-ca62-4c94-98ea-a26ecedb9425",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "93ab7788-7fbd-4d4b-ba22-33e1bf153201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969023b3-042d-46c3-8048-b106c31b0d42",
        "cursor": {
          "ref": "44c461c7-b7f0-40e1-b05c-d502850e1613",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7822e7dc-b2da-496d-ad71-99b7115023ee"
        },
        "item": {
          "id": "969023b3-042d-46c3-8048-b106c31b0d42",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a2781574-2c45-4b23-98e5-e2328cb4987e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd336a3-81d8-418e-8ad2-468f08895bba",
        "cursor": {
          "ref": "0f0d12c3-1cb5-424e-9b4b-bfd10dfc9657",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "50b1062a-7fbf-4c57-b8e3-2ef1a9a6580b"
        },
        "item": {
          "id": "9dd336a3-81d8-418e-8ad2-468f08895bba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "739944be-32a7-4b8d-93d5-f19d80923f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8658bf92-ebb9-4b2b-94ea-92cac1228014",
        "cursor": {
          "ref": "9ffa963c-2c25-4c42-b105-07627ea53015",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f78f5f07-123c-432e-b78b-a0c296ecce8a"
        },
        "item": {
          "id": "8658bf92-ebb9-4b2b-94ea-92cac1228014",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a37ffcb8-88c7-4cb2-a799-f013d3850845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f66320-2feb-4655-9dd3-5c73fc2e4e85",
        "cursor": {
          "ref": "b759794f-f690-41ba-92a2-157cce740b83",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0c059d76-351d-4a88-9685-cd198aaf86dc"
        },
        "item": {
          "id": "b9f66320-2feb-4655-9dd3-5c73fc2e4e85",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fd5ee8d6-2bb5-4aa2-b06f-227cebdbe0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c24047-fd7a-4f9e-93d3-1f81249502a0",
        "cursor": {
          "ref": "90057ac4-6e0f-4b6f-b8bc-611bde0977f2",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a7e1df9c-846e-4141-b617-99113ce15c6e"
        },
        "item": {
          "id": "62c24047-fd7a-4f9e-93d3-1f81249502a0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "da275c0a-b8e8-47c4-97fa-0018263a440e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7384d104-66a7-4630-a0e2-8275a187493e",
        "cursor": {
          "ref": "497923e6-2f4c-4a6b-a5d2-563f043d6139",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "628bc813-9043-4a52-a2aa-fa238054061f"
        },
        "item": {
          "id": "7384d104-66a7-4630-a0e2-8275a187493e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "51377fb9-30ef-41c5-a5e3-ced863843765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a878f7-20bc-4c02-97d5-28e8fef5016e",
        "cursor": {
          "ref": "5e8a7f5b-8000-478f-ab98-1d4e400c76cd",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ef9ac53f-6b5e-4549-8f2d-0935431ad57d"
        },
        "item": {
          "id": "e2a878f7-20bc-4c02-97d5-28e8fef5016e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "016ccf30-3fac-4c4d-a626-055f99882ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33728184-6d40-4ee1-9ed2-2ce9d2cccab6",
        "cursor": {
          "ref": "2026c44b-3cd6-4307-93b1-7a236802d7f7",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "562220b4-50dc-4869-8fcc-e15b04e21929"
        },
        "item": {
          "id": "33728184-6d40-4ee1-9ed2-2ce9d2cccab6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a9d6b542-f607-403d-9cb4-367220625753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c41cf6-f074-46d2-9c7a-a4fd9557daaf",
        "cursor": {
          "ref": "2568eed8-342b-4f61-9bf5-2ab55994731f",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "81ab3d5c-24d8-40c8-a2ee-472e1ddf3834"
        },
        "item": {
          "id": "74c41cf6-f074-46d2-9c7a-a4fd9557daaf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "526061df-acde-4007-b8d8-2efda995b1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf85973-1257-4ae3-8f55-64fe89bfbbe5",
        "cursor": {
          "ref": "a7e7a0fb-7e8b-4044-bb2e-69ba2d6fdcb5",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5b24be20-9101-447a-a77d-d240a2a5d4cf"
        },
        "item": {
          "id": "8bf85973-1257-4ae3-8f55-64fe89bfbbe5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "11dbd6c0-c538-47fd-9e39-5aad829708f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2be956-b43e-40a5-b9e6-36debdbbde13",
        "cursor": {
          "ref": "750e5353-8adc-4b08-9312-2307d6e6a83b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e6189294-8867-4b5e-848b-623eab6a0e00"
        },
        "item": {
          "id": "5f2be956-b43e-40a5-b9e6-36debdbbde13",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c3995ff7-f50e-491e-8c82-884fd68d89ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca8492-29ab-4087-9a59-92131facf15a",
        "cursor": {
          "ref": "3ecdfe96-62b4-4bdb-b214-24d8159aedc8",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "df118e8e-a31b-4e71-bf6c-26cd4af90341"
        },
        "item": {
          "id": "a0ca8492-29ab-4087-9a59-92131facf15a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8e67efdd-7260-4cd7-a54e-f721009f030b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19e94f4-6312-4af5-9e31-16686786e3c6",
        "cursor": {
          "ref": "fc528b59-9426-4e3e-9128-113530185b58",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d71e4cf5-ac26-4865-8cdb-1e847af773b5"
        },
        "item": {
          "id": "f19e94f4-6312-4af5-9e31-16686786e3c6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "75f58451-42ad-436e-aa9e-58326ec2b9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fed81b-1c47-4a8b-96ed-770913e44b46",
        "cursor": {
          "ref": "877e10fd-108e-4ae9-a8cb-e840394c5648",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3f91f9a6-2944-4636-9ea1-df0ae7337543"
        },
        "item": {
          "id": "61fed81b-1c47-4a8b-96ed-770913e44b46",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f2867aad-d287-45fc-94d0-184d04a9d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eafd27f-0d6e-490b-8ae1-09716586e4dc",
        "cursor": {
          "ref": "b6f4e794-9cd3-45ad-bd26-1c316d4503dc",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b2915194-f454-47b1-ab74-debb3a7d4cd1"
        },
        "item": {
          "id": "7eafd27f-0d6e-490b-8ae1-09716586e4dc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "749f40bf-dce4-4af0-b4b4-4dc8339a22d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9c2582-4f60-405c-a0ba-d3c6538b07cc",
        "cursor": {
          "ref": "33fd0822-b544-4ac4-b9b9-55d10796df98",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5c917aeb-4d14-48a0-8e1c-334167a8dae8"
        },
        "item": {
          "id": "7c9c2582-4f60-405c-a0ba-d3c6538b07cc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0f35f6a3-82a5-40bb-9be2-44e62378ba70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37780c86-93f2-48fb-8e48-879520031abb",
        "cursor": {
          "ref": "69622824-3f15-44e2-8429-c0b30a2ccf6f",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "39a118f7-227e-4ac7-be45-6900314043b7"
        },
        "item": {
          "id": "37780c86-93f2-48fb-8e48-879520031abb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cdea528b-9846-47d1-883d-e6edd762015d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3875cf9-95e3-4010-b774-22b1b7910ea7",
        "cursor": {
          "ref": "b53b27a0-e8e3-48f8-89a7-56277b28a066",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d4761209-d0d6-4123-b4b2-8cdc3e1c306a"
        },
        "item": {
          "id": "a3875cf9-95e3-4010-b774-22b1b7910ea7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0a68cc27-0841-478f-9fca-7b7a749d6083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbe1cb9-e223-4488-8a28-5887f555a539",
        "cursor": {
          "ref": "7f315c32-a598-45b2-bdb5-0eca795c3689",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9c4260b8-cc6b-40b8-becb-8350e56a44cc"
        },
        "item": {
          "id": "0dbe1cb9-e223-4488-8a28-5887f555a539",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3d333440-ffe7-4f16-8eaa-1bf7acfe6b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10484ce9-cc0f-4b5a-8f8d-e98994efc8ee",
        "cursor": {
          "ref": "05a76ae2-34ae-4384-9f49-9485a641d052",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "66f50192-7790-41bc-905d-73e0208d86ac"
        },
        "item": {
          "id": "10484ce9-cc0f-4b5a-8f8d-e98994efc8ee",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "334bd6b1-261b-4621-9474-a863a42e02f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32085187-87dd-4116-993f-394f5570e5d0",
        "cursor": {
          "ref": "b1e53d09-8e65-45b1-9ec6-9eea5ccfdfca",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e0b4fe64-e656-4caa-9f57-2f655e3a84cf"
        },
        "item": {
          "id": "32085187-87dd-4116-993f-394f5570e5d0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "82df829c-66e0-43fe-be6f-0b0392ab9735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e9cd56-6a25-4643-b715-5d92126a5b28",
        "cursor": {
          "ref": "4ba6fabf-b349-4815-9d7e-3cf7a493720f",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0ffb7956-657a-4ddb-8a79-ba621bee76eb"
        },
        "item": {
          "id": "d9e9cd56-6a25-4643-b715-5d92126a5b28",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2a48abac-ab26-4594-8036-8e1859540d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7133451e-32fb-4557-9774-81895cd1dc9a",
        "cursor": {
          "ref": "535dae99-323f-4722-855d-2a3faba3946f",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b5c2d705-f30d-4edb-b7d3-d55976c750cc"
        },
        "item": {
          "id": "7133451e-32fb-4557-9774-81895cd1dc9a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d46637e5-ffe1-43c7-afa1-72ca0a088123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01befab5-960f-4889-8dbc-8bfa23d1a8f7",
        "cursor": {
          "ref": "7fd4296d-fcd0-41fb-9345-fdbec73f3478",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "551cc7b3-73eb-49a6-a82a-0537555152d6"
        },
        "item": {
          "id": "01befab5-960f-4889-8dbc-8bfa23d1a8f7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fd0f05de-ccd7-4db1-9d72-838b38c8849a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf3d94d-0c11-4e5d-af5a-7e34ec4205b2",
        "cursor": {
          "ref": "513e71a8-1f1f-41db-b495-dbc160d41d8e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3d354aeb-1e04-4a12-955b-7aff15242cac"
        },
        "item": {
          "id": "4bf3d94d-0c11-4e5d-af5a-7e34ec4205b2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5686b499-9b93-42ac-bb76-219655df3caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055a01f7-c154-44da-a451-98d315c04394",
        "cursor": {
          "ref": "1bdbee6c-cedc-4dba-b676-983aad58cfa8",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2ab21b00-78c3-40a1-bfef-2db37078ab06"
        },
        "item": {
          "id": "055a01f7-c154-44da-a451-98d315c04394",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "47895baa-c4d5-4ccd-97dc-7a7da051c30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04095b7-4019-4d89-8d1e-d2bced1d5099",
        "cursor": {
          "ref": "4597c7af-fe1d-45b8-857c-23611f404da5",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7c776c6e-32a7-4d48-b462-c84ca57603f9"
        },
        "item": {
          "id": "a04095b7-4019-4d89-8d1e-d2bced1d5099",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "04b3cd10-c3f6-4c5d-b4ec-c87df58eeaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2974b3b4-077e-4c3b-bcee-94136babfec4",
        "cursor": {
          "ref": "f1895092-53eb-4774-976f-ca1e66e58fa4",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d43d2073-d063-4d39-947f-2ef4f344a027"
        },
        "item": {
          "id": "2974b3b4-077e-4c3b-bcee-94136babfec4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7035ca9b-57b4-4f1b-808b-96f8df23cb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81a4587-18f1-4b3c-ba5e-b2c14b2e59ed",
        "cursor": {
          "ref": "d3018d2c-4c4b-4939-862f-b67b7455c095",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "77e91320-7725-43a4-8aa3-bbd985248dfb"
        },
        "item": {
          "id": "e81a4587-18f1-4b3c-ba5e-b2c14b2e59ed",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8795852f-9b1a-4322-a87f-b6c8ca470dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9788156-b28f-44df-a7b8-c2e085bd403a",
        "cursor": {
          "ref": "5a20c263-f687-49ce-a554-48624e093057",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9661af0f-74c3-4e7a-b02f-b33bf38cdbe3"
        },
        "item": {
          "id": "c9788156-b28f-44df-a7b8-c2e085bd403a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ef7881e2-b565-4bcf-8666-299eef390b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd4e14a-5723-43cf-bed7-168160605b50",
        "cursor": {
          "ref": "110fdb24-b681-495c-bee8-d81f76079c74",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d4c04578-e4af-4065-b04b-b70993a58d48"
        },
        "item": {
          "id": "2dd4e14a-5723-43cf-bed7-168160605b50",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d53a5a72-d336-45db-9fe4-03472eb38e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e87301b-35b9-4027-9693-9b6108e2c36c",
        "cursor": {
          "ref": "58ed8cb1-e48f-4c4c-a672-3bc387735eda",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3265ea4c-4d63-4754-86ee-81de2de7deb7"
        },
        "item": {
          "id": "6e87301b-35b9-4027-9693-9b6108e2c36c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0dda5be8-0476-4bc0-893e-cc3225681767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b8dabb-68ac-4ec8-994f-336ce3ad99eb",
        "cursor": {
          "ref": "4ec5f0e3-ef22-4684-ad69-8916b58dbcdb",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4b3c04fb-14c1-4e59-b17a-048c05314220"
        },
        "item": {
          "id": "11b8dabb-68ac-4ec8-994f-336ce3ad99eb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e345817e-47bb-408a-86cb-f314df06c4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a780a68a-4854-4805-8ce7-ba14f86aa66c",
        "cursor": {
          "ref": "8c64d400-6151-46f1-a9b8-64ce704c8ba1",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b4494251-38fd-433a-a270-45ae6695f36a"
        },
        "item": {
          "id": "a780a68a-4854-4805-8ce7-ba14f86aa66c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "526c2a83-417e-4f7c-af13-8e97b96e70f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e6f4e2-0477-4e7c-89ee-82cfa0c9a754",
        "cursor": {
          "ref": "dd745d67-2d15-49b4-a0f0-6c301632bbac",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c05b1782-8f07-4870-aa35-48dbbf535fea"
        },
        "item": {
          "id": "53e6f4e2-0477-4e7c-89ee-82cfa0c9a754",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d639ffc9-f418-4282-b910-2a2d777eee59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32d74e5-e923-41cb-a278-4ece6c31df62",
        "cursor": {
          "ref": "1d3ae6b1-3870-4eec-af1b-f9b112601142",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "416037e8-c768-46c0-ba32-41a42933b1b6"
        },
        "item": {
          "id": "f32d74e5-e923-41cb-a278-4ece6c31df62",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3d557ebb-8f43-4ad8-86ae-68c2128763f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd513b33-529b-44ab-82b1-49b81f0df632",
        "cursor": {
          "ref": "8d3e93c8-43d0-4c9a-be60-01d9f3c385d3",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4ec8624e-c06b-4a90-8662-f1ad5c076a38"
        },
        "item": {
          "id": "bd513b33-529b-44ab-82b1-49b81f0df632",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "12832db3-ce6c-493d-a1fb-6e8af7e11176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392a934f-602c-4de5-8049-eedac443224a",
        "cursor": {
          "ref": "dc6646c5-4c44-45b2-b9b8-a6d7743c133b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6038224c-db23-4eac-803b-ed36727302ff"
        },
        "item": {
          "id": "392a934f-602c-4de5-8049-eedac443224a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0e898fa6-1438-4c75-a56a-06792c392690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a021229-bf19-4de9-9c40-27bad639a1f5",
        "cursor": {
          "ref": "3742c613-9417-42e6-ac6e-e2362acc0cdc",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9d624a1b-3784-4665-8974-462557961739"
        },
        "item": {
          "id": "1a021229-bf19-4de9-9c40-27bad639a1f5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "23098ac9-fce8-4b42-9f29-59943b01c110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a918c3-d6b2-41d0-8afb-955d49ca6752",
        "cursor": {
          "ref": "9740c81a-6208-48a9-8f19-bf0c4c869d4a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7b759aa9-a95d-4cef-a700-f8a40c70eaf1"
        },
        "item": {
          "id": "84a918c3-d6b2-41d0-8afb-955d49ca6752",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c3ebcb96-078c-4ad4-a13c-48827b97bd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d110ceba-c1bd-4b65-b8c4-f4ffcf7c24d9",
        "cursor": {
          "ref": "3546b046-df63-457e-8756-1bae33b52edf",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5674e58a-dc05-4920-b959-480f7bec100b"
        },
        "item": {
          "id": "d110ceba-c1bd-4b65-b8c4-f4ffcf7c24d9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d18347d5-28e3-4334-8178-9f3247e59bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d06e3d-7acd-4f66-91f4-4ac325e5e770",
        "cursor": {
          "ref": "12bc8b16-01d1-4e46-99f4-358e08f36fb5",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e91d0be4-55e1-4078-927a-d26de789a05c"
        },
        "item": {
          "id": "e5d06e3d-7acd-4f66-91f4-4ac325e5e770",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "371af6fc-cfc2-40b0-aa9b-38ef0fa9eb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c4909b-8633-4e05-bed0-4690a1f9daa5",
        "cursor": {
          "ref": "ef0f5ec0-280a-4cee-8b1f-ee0146b203b4",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5db4eef2-7fa8-45bc-8272-599990f6f821"
        },
        "item": {
          "id": "c9c4909b-8633-4e05-bed0-4690a1f9daa5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "39dfcec7-7a65-4b83-af05-5984e6e7908e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22db90ea-efec-415d-8502-6d5c0f74824b",
        "cursor": {
          "ref": "a89571fb-7f40-440f-bd1f-dc107c394fa3",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d5765003-6098-42e8-8dbe-728ec6c4504f"
        },
        "item": {
          "id": "22db90ea-efec-415d-8502-6d5c0f74824b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8702ee09-b85a-4755-8305-ceac6c589afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815db126-4d31-4f17-be81-2310a0597ba6",
        "cursor": {
          "ref": "26647a60-6a9b-4960-93a3-476002b2cdb1",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7175daec-16b8-4aee-9dee-b61236954dbc"
        },
        "item": {
          "id": "815db126-4d31-4f17-be81-2310a0597ba6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "993f5a00-9fca-48ca-8d9e-6d863563188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199da2eb-2112-433a-8cc6-986079f08c95",
        "cursor": {
          "ref": "b860352a-5e8a-4c83-adca-5261d7080ae3",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "36ed2b22-4094-45e3-9ccb-eccdd37bc6c8"
        },
        "item": {
          "id": "199da2eb-2112-433a-8cc6-986079f08c95",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5719e9ca-ca9c-4dfb-8fb3-37c14b3525a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7742a71c-9645-407d-bca9-66ca1f7198c3",
        "cursor": {
          "ref": "59be01d8-e46e-4c03-87e3-2b0ad65ddad4",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4a158952-d218-42c8-9c5b-a52c694e96a9"
        },
        "item": {
          "id": "7742a71c-9645-407d-bca9-66ca1f7198c3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a1cdc61b-3832-4650-b59a-457903a65ef7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d66fc71-0422-40c5-8867-fcb15d712f3e",
        "cursor": {
          "ref": "f0de7a17-fdac-4e87-a7fb-06eaf17e4fcb",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eaf68ff6-1a28-40d3-a984-494d957838a0"
        },
        "item": {
          "id": "8d66fc71-0422-40c5-8867-fcb15d712f3e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ad222054-fcfc-4f09-86e8-00878f10a5b8",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b951c1-f6a8-40fe-872e-1f1f94ed20c7",
        "cursor": {
          "ref": "37637d04-f20e-45e7-9a39-6ffe914a5c16",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f6fee9df-9047-44a2-8411-62ce4f97036d"
        },
        "item": {
          "id": "16b951c1-f6a8-40fe-872e-1f1f94ed20c7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c895d6c8-762b-4b82-898e-39459b465707",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd40cca0-d9a3-47a0-8161-c2a248505363",
        "cursor": {
          "ref": "126b32e1-1ce4-4100-aec7-9478eee41caf",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "151e81b2-1139-4e3d-abe8-60427f4f019b"
        },
        "item": {
          "id": "dd40cca0-d9a3-47a0-8161-c2a248505363",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dfd2b311-0a2d-4e65-abae-5d8bb8c6703d",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87519f6-6ad1-4f97-b06d-bc8473f3c155",
        "cursor": {
          "ref": "861b829f-8837-492f-b2e7-52615a9a42df",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c4e0fb49-fca7-4c12-a527-e6474ac7013b"
        },
        "item": {
          "id": "d87519f6-6ad1-4f97-b06d-bc8473f3c155",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b318bfc1-9b55-4bc4-acfa-10abe0be59f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87519f6-6ad1-4f97-b06d-bc8473f3c155",
        "cursor": {
          "ref": "861b829f-8837-492f-b2e7-52615a9a42df",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c4e0fb49-fca7-4c12-a527-e6474ac7013b"
        },
        "item": {
          "id": "d87519f6-6ad1-4f97-b06d-bc8473f3c155",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b318bfc1-9b55-4bc4-acfa-10abe0be59f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87519f6-6ad1-4f97-b06d-bc8473f3c155",
        "cursor": {
          "ref": "861b829f-8837-492f-b2e7-52615a9a42df",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c4e0fb49-fca7-4c12-a527-e6474ac7013b"
        },
        "item": {
          "id": "d87519f6-6ad1-4f97-b06d-bc8473f3c155",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b318bfc1-9b55-4bc4-acfa-10abe0be59f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfe60be-6886-4d27-bd91-466899b1e922",
        "cursor": {
          "ref": "7ecc74b7-0b48-44f7-88bf-e46a29066ddc",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "80df79b6-bb21-4a23-ac8a-8801336836d6"
        },
        "item": {
          "id": "8dfe60be-6886-4d27-bd91-466899b1e922",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "2cdbcef8-eb20-4726-abd4-4e07d7609a51",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aec6b98-2f84-4ba2-a1ef-ca8956bccc39",
        "cursor": {
          "ref": "25a4402e-79c8-4992-939e-9c830f6e8ada",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05d5ae9f-c5e8-4403-b366-04bba988afde"
        },
        "item": {
          "id": "4aec6b98-2f84-4ba2-a1ef-ca8956bccc39",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cf8b92b1-8f56-4bb0-9822-8fbfe979822e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aec6b98-2f84-4ba2-a1ef-ca8956bccc39",
        "cursor": {
          "ref": "25a4402e-79c8-4992-939e-9c830f6e8ada",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05d5ae9f-c5e8-4403-b366-04bba988afde"
        },
        "item": {
          "id": "4aec6b98-2f84-4ba2-a1ef-ca8956bccc39",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cf8b92b1-8f56-4bb0-9822-8fbfe979822e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f6ab1d-d6e8-4604-aff6-14a733f2951f",
        "cursor": {
          "ref": "38fdaabf-9260-4ff4-af60-fc7ffe6ae238",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9dfba2ed-24c0-48b2-a2c0-d4f02bf4bf13"
        },
        "item": {
          "id": "b8f6ab1d-d6e8-4604-aff6-14a733f2951f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "70ee34e0-468f-46f7-8e16-8c64c0e752eb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd6fbb3-2fdf-413b-a8ec-09402ff2c05e",
        "cursor": {
          "ref": "9c3c22e8-6fee-4aaa-9bce-a0970ebd6768",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c85548fe-196d-4f18-92b5-cc44053cb530"
        },
        "item": {
          "id": "9dd6fbb3-2fdf-413b-a8ec-09402ff2c05e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1b79099a-2a80-43da-8e77-c6a175ea895b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd6fbb3-2fdf-413b-a8ec-09402ff2c05e",
        "cursor": {
          "ref": "9c3c22e8-6fee-4aaa-9bce-a0970ebd6768",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c85548fe-196d-4f18-92b5-cc44053cb530"
        },
        "item": {
          "id": "9dd6fbb3-2fdf-413b-a8ec-09402ff2c05e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1b79099a-2a80-43da-8e77-c6a175ea895b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235ea503-2c7a-4280-b8eb-89d1e4b40773",
        "cursor": {
          "ref": "9e9a677c-e37d-4938-9664-b15ee35d26e9",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "517f1b48-466a-47da-8179-0a87ac0a82b5"
        },
        "item": {
          "id": "235ea503-2c7a-4280-b8eb-89d1e4b40773",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ff335e1a-cf7f-40b3-8b11-ffe8c1642515",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}