{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8c1ea913-7cb4-46e9-a63b-ebc685e418da",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cc05929d-12c2-4a63-9714-b96cf7c87f16",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68252905-bdfa-476f-9581-2641c46f3f78",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "709ec3e9-13cc-4743-a4de-d751c5db9c47"
                }
              }
            ]
          },
          {
            "id": "15634d4a-894c-4ea2-be88-51890128e0cb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6b067a2-7112-4ade-9e72-a990388dc56a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c22f2e52-aa5e-4d48-89b9-510df64dc42b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "550c2129-9271-4739-919c-0af6b7b1e47c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b547569b-0741-4951-b973-310cedad4895",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2008c3bc-1ac8-4f27-811b-6480f88b6f14",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cff30bc-6f77-406c-964a-74bc2335dec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a434e8d-354b-4618-9efa-e011d1705acc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b46c7e1b-cfc3-4186-aff1-8a6201891049",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f46522d8-7ffe-45b0-9b4c-28984b3937e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d7152aaf-a63d-4829-b97e-1eae76cad149",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12688502-9081-4708-bcf0-6a65f1157c2e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "442b8619-4b25-4498-b8d8-1afb0661c931",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "df05b169-7180-4095-a69c-cc0dc81d98fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63e72795-e558-4ee9-8aa2-40f8455f912e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af56a70d-b914-45d9-82c0-7ef7e564d0cd"
            }
          }
        ]
      },
      {
        "id": "d3430c8b-7568-4625-b94d-1d81c9cf2ee8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8eb5306e-073a-4153-bb81-bddbdc457c86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c2b1147-33f0-492e-a2a5-ce662ccc417a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "733a1e52-7bbe-4f00-92fc-7124b40603a9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6280d5f2-fb8d-44b1-9b50-d5c020f71062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1e4d1f6-3b29-4054-b602-480cce4067f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1382f31-491c-4039-9bce-9e308cf30f74",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d08643-a471-414d-9c03-73d8cb47d28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0e30a6e-caf2-4321-8ab8-ecb0667ef6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206a7e3b-26b6-40da-80e8-6efc7de28d94",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c0539e-13dd-40bc-a96e-064e894b9e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c3da85d-e3ba-4102-a442-3c11ca62af16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e4ca05fc-765b-4833-a042-ca58f22bb9f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "830d561a-2f0d-4271-890a-3706251f7c1b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53d8aab-fc46-4541-b3ab-575026cc9d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94fe09a1-503a-42f1-bf9a-23dcc510e998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc60409-21eb-4fd0-abd7-6d4bcf2fb57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69750f60-81ef-40d3-aa8c-9637b76ab8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce73fd5a-fefc-4749-859b-d596a83f9ecc",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a27372b-1fdc-43f5-a290-9a1d9e0ef779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f26af2f-cefc-4239-8dfc-d6ddc3e13cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2f7919-f867-4f64-8740-b2df844cee1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "6a51f3dc-2cf1-4001-89d9-9afbf35fbfe5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fbb79741-4029-4af7-a887-0cc17446ac46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf1581ae-bf57-4fb6-ace2-a25235360278",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2911fc4d-eb12-483d-bae6-80d4e38eac0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c10d76cf-a6cd-409a-9780-9335c11d6d76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76784a6d-5278-4557-a672-4eb13e6baea2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "3786cfea-5d4b-49e1-a3ad-86c85e49b4c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "607d816b-dc50-4305-bfd5-bef52eacb3b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a71d500-3f6e-49b6-b233-eb89d6152ad0"
            }
          }
        ]
      },
      {
        "id": "5073b0e0-7bf7-4cfa-8f29-ab019853c61c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3e8504f1-5990-4f54-b604-309efa9d56fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c7efd84-594f-43d1-b901-d84f51753fb3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c24d27cf-80cb-44a4-808c-514d39c87787",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e8114e-9f71-4020-b5d7-4601faf8992e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde7f2e7-c3dc-43f5-afff-e10f1c0dcc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef069bc-8073-4680-ad06-d1555bc351bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e889df98-23a5-4bff-ad95-74cab2251126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e642d6b2-a2b3-4df4-8971-02ae12ba4999",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db9431b-32ec-4af4-9b1b-b44d97040270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0beb5576-2d95-40cb-959c-2893872099b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066b6828-10e8-4eb3-a836-44bd645bd846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c94a5ea-f711-41a0-87da-e332b8292f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd6f560-703c-4102-a5cf-f7213ddff71c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74abf444-f0b1-4d85-b402-3f8917351dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b781020-0317-4b7e-bfb2-c4a043d53948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381ab20e-8828-4cc1-a734-6cff187419d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13373609-3eed-4d19-95d6-b62de07b6236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b678f5f-9238-4cc5-b33e-b3560bfe54c3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9637eb9d-b62e-488a-b3cb-e00512b5231e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da3cbcd-9e96-4475-876b-c3744250ae49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f9df3c-0a50-45ee-8ab4-37f50344a405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f787e886-ab72-4ec3-bde7-48ad48c95a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d102a1f6-d50f-4fd0-a9ff-4630dbaa4f85",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e8d378-754d-487b-84da-bcc9ac28a55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e06acc-9e5d-49d9-940b-bb97d2e98c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7efb3a5-a293-4511-af0c-dfa5f7b14195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "075aeef2-ba54-472a-8d7a-6b5a7656a9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75971186-b3e6-44eb-bbc4-19487f240066",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68359a7b-1e91-4363-ad7d-392ca9ce9e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2fd419-85ff-47b6-89fe-2b39d40c0def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bce84c4-dce6-4da0-9b02-735574a30d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a0c8419-8ddf-4ae6-94fe-90cf6bbb346f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a72c67-4a29-44dc-88da-1624ca4fe37b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5a5588-236f-49d8-bc14-ce468008d46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2b458c-69c1-4b1d-92d2-0040209ea103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3e3e23-f1f8-4c72-ac88-b741da9bd9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc7133e5-b87d-4679-b739-dd6f03f7951c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f2c50-2a69-46fe-8e82-6d9db136fd1b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c7fead-66e4-4b16-a440-31daf0805d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843cb2d3-428c-4613-8156-de2f4ce8bd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dda652-f4f1-4577-9e68-b547823db389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b7f8fe2-996a-4c2c-b12d-802e78702463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e6bdf9-23a1-461f-8b8d-4d3ca1276bcf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df829b9-9942-4287-8c2f-7e8ac3cdc2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68d7b3b-54c4-473e-8182-ac1571cfc3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df7735f-305e-450d-8370-8b40f56b5fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec397178-0b8f-47c9-bb9e-ec646f649911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe0400c-ff2c-455f-b063-58ba9c7bea12",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff856b7-87b1-42f0-8091-f28301393d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3128c3de-43a0-4be3-a56b-9e7378bea940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9670f07e-465c-4b3e-a5eb-d11b0e7f68d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25ae8c62-6caa-4c36-a78e-babc106fc2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b4d10b-f765-4bf3-bf01-905a1a2e79b9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9307d2c5-f0a5-4980-8375-dc2a93709dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0354adef-20fa-4c9d-a01a-c144ee60213a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b43272-b302-4136-ae89-c3c9ac88e721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcf67bc2-2f38-4ba6-8b98-08bb11aedc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3bcc11-066c-4a19-960d-7f32dba18e56",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3875c62c-7ac7-4ec0-85e8-6c7eb6ff4c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85efb05b-8a1f-41d5-9491-2309c1ebf813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3aa061-8ea6-496c-8837-fd64c89358f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5b91c2a-cf83-45be-b27d-01a4461082ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0ef85c-f583-407d-a4c9-15a122ac4bb7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02514989-94f9-4fc0-ac0e-77f6001f5415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a74acb7-2187-4c64-bcd0-b779efccc980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9348a9-ca53-4cc6-a567-d2c38669ec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d22bb718-769f-4bf7-b5c8-44d2d350292b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7c307b-9715-405d-ba5c-a0f2e468ad5d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2267782a-b3b3-4b59-a3dd-6cc83454e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e93781b-8b9f-425a-b518-182506a55077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d33930-14d3-450a-8e39-62518722d959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e237f5c1-17e1-4bc9-a121-77ccf0802f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19bfc8d-635b-4e8d-8991-c69355d20187",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fed1ec-fcc3-409d-b594-c596acd204eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a024926-0e85-417e-85a2-2d5766f959b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16add0ef-616e-49c2-8275-a61148d8e63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffc59204-23e2-4129-b209-fdbfa9f2d7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac87089-8ce3-49b0-a343-501fd907e7fc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98230152-7e90-4764-a23b-c414f98c8c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d5597d-7886-4bf9-b140-66afe2ae35bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f79cd4-821b-4ac0-ab68-688fa1ce37a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c69dd79d-e37f-439e-90c1-5f3291ada6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98e1fad-000f-43c2-892a-9cfc9f7dfa69",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4b497c-b567-40c9-8105-648fac9dbf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb724a6-2c02-4865-9087-44239e8fc716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfd8b55-f3eb-46de-8ff0-8d87cc81b385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "261cc26b-f2e4-4682-aa86-5e0b26d70621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b347015c-f696-446b-8a4c-371357426278",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f9c1fb-e550-4f59-9b9b-48c79fb82cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615f1f99-24a1-4cfe-b2c4-5e5af1b6100d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd70640-a09f-49d3-ab90-743464e76ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "600298da-9df8-4123-8446-464e18807b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d670989-7d44-47f8-985b-93a0085b610d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edf916e-6637-4898-8e47-08a5e6e1029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1525755f-7a5b-4c34-a1de-37f5a2ba7044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9092b8-997f-455e-ba7c-d1b1bee9f4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc1d043-2ab1-4e16-b73c-34b6fb0871f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0980951c-ed71-4f45-997b-262019d4fb4d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf6e055-4f84-4a2f-9b85-0ce47d7dc463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf81187-88cd-48c9-9929-f989809893ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef65aa1f-4a50-418a-9aab-f47308ef6cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2f8f31-8b3f-437d-bf62-c256cb17ef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd823115-9953-4ab6-bace-f13f643aec7a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd732674-3009-4753-8d93-a5824d973e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39aa2afe-3792-4956-bcc9-c62b528ff721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6d2460-a935-4014-873b-46f127362635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72515055-a8ca-4e42-a843-93f85c4aa537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4326d6b2-cdf7-4a50-a908-632def85d724",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e988b457-c295-491d-9cc3-94a66706964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40220c5b-ab4e-4a3d-a85f-e90f85703249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b6244e-ad2d-4a33-82fe-42e1b64b8602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98cb4b0c-7bc9-4dce-a5fe-ba91cb8436d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc90e257-6b7c-4906-94e1-ba49775ac096",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e5255-ef76-4a1e-aa97-573ab4eaddf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3997a41-ef59-4a7c-9bd3-dc9d2236ea37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc39fa7-d4f5-43d0-baec-1eb943a30860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "244f1a37-5eb2-4a71-89b6-fa25df6e8caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed9bdd4-35e7-4ffb-b69d-0bef7fdd5f58",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a652841-b0c7-42fb-b0cd-3e8c18b18301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac39c50-04ed-42e0-9d9f-126186b8c483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2298e5-e225-4575-a2ec-6ca74e5c5776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9acadd-4edf-4df4-b501-cb2b88caf1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828c9ce8-62f3-4073-9417-f6449e7acd59",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe43e809-d73a-414d-b09b-13c6ba609911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8321b593-6ad8-40e1-8fb8-adecb45cc2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23afa273-8b38-4f14-b374-e801bf2018c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2423b55-f933-48ec-9f33-a907559ce12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3b91ab-7bcb-4c60-9e10-ec4a335a5e9b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a7f4bf-1a78-4af5-9c65-ecbd87251a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2f9009-ea8e-47fc-8be9-a6fc211ef641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974160b7-3bd8-46cf-a48b-a7155394d95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d19d901-0d3f-4212-8aa9-529e89a54765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96c8562-5d6f-4006-a097-bfb0bcff21c7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05689345-8be8-4ecc-9b44-cc9832a63c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d38f83-90a4-46cf-9337-f20ed9b0ca4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05575757-0423-4dca-a5d8-a87ff90adff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "964405ec-f3b7-49b1-adeb-991db717a399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12db8491-8c3d-4b5e-a285-cd3c649de043",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb71d561-8a62-46e2-9886-2b1af875042d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a14b79-b556-45b8-b1d2-a132e10791a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b424d4-8417-4784-bf2d-c472fbefb04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d758f566-12a0-4514-a929-ec62e74abef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507863b7-b06e-4d5b-b3e2-39c1be6ef180",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c960b892-6b57-4306-911e-f2729e9e07ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba696223-dd9f-4b09-a422-b4d6fb2fddc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e2f612-8ec1-430c-b98b-10a578c71e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf888b27-60bd-46bf-9224-a0a00e3b1025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75694f42-4c2e-471e-a8e7-8fb5250c0f25",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f5d8bf-e885-44d4-a6c2-2685e67b62b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300eb637-d822-4ec9-9817-203851e7eac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7755a607-a0c2-4478-b189-223a3a01982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa70eca-0291-4561-888b-a0c0b29833d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4848c5ff-6c87-4ffc-8ccb-42791e4780cb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d45b4db-3169-4915-a181-7811541a2519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166c1516-c1de-471e-b7b0-69b0c6f04cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb367d1-4cb0-4bd7-bf96-cee92c227242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc9df0a-2439-43f1-844a-586ad4b8af06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8682814e-d194-4c4b-86f2-1e7ed35a8565",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173f1102-a023-467c-9fca-638adfad363a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6c66f5-18d8-46da-90ba-f3f93ce64de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b75a744-c95e-499a-9523-a9a4cec7a5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c56192-be20-4485-ae0d-94f1dbf4b351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ec9b59-13d0-42d5-8189-4e17ab6675ca",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902ddd55-a7be-4b24-9e38-e667f90bc222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0499737-612e-4d8d-8de7-5b2eac287857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a99fd3a-9761-44b0-be7a-9588643e4794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45eab9e2-630e-45b9-a02c-e0bf3412e532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16673b4b-4bdb-4071-9964-7eb91583da64",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbc9337-f880-433e-b7db-e02be4c53eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070286ba-9c57-45f7-8a8c-2c121df55b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a32c68-b471-4f72-a0aa-d2f60ffc9cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18259a84-1a14-4da5-b95a-7702fd81f018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2a2ab5-4505-4f86-8cfe-f1f570420540",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe67c30-01f2-4814-899e-698f08b6b1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aed05d2-f203-4d5b-970e-f57cabdf6f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638f7b2f-ac95-4fcd-b8de-6ce43fdfc4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd6b8dd-b80a-4b22-a46b-a17721d89544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973a3f92-4641-44d5-a0be-4a661bfc3b38",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a32ae6-e278-4485-af91-9e0cf35236fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aedb0767-9a1d-422f-9ca0-a4665c050b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c09ad98-96c7-4689-9217-5ac524b33adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03ee7cc9-23f7-4fb4-838c-f65fde311605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e640a7df-d123-46bf-826a-78396ec1a709",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615506bd-1fd9-4fe1-8804-8c4a11b7b9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b88180-2fc5-4558-b0b9-0a5821a4360f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0653b4-4fb1-4593-a923-adb226271134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6e411f-12b0-4de4-b4d9-f7ddf26f328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4379e2aa-0737-4d02-bfe7-76ef36e6ce37",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834f525b-796b-45fb-8524-53e028893a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f2d1f0-ab91-4622-b008-84ac9b90f2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0ddcf3-1e4f-4561-90b6-5f3b320c78d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c7f36f-8c57-413a-8637-72071910e5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6622fc1d-808e-46d2-9b1a-298e50e401f1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4205f06a-41a5-4621-933d-815f11756ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda5c34e-0fe0-4a3a-8bb2-fd544ef35c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d68274-00bb-414f-a86d-f123784caa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef81961d-e062-4704-93fe-6814be98dc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419534c8-0df0-44b7-af2c-9ccb6e008856",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b37aad-47eb-45c5-a098-d51044702d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8458d82d-83da-4a58-a397-0b0c89a6c8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbebaa3-91f7-4351-abc5-aed2e96efe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed95cb10-f634-4fbd-88ab-b8d3fdfb1456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e2334c-7095-47af-a9a5-61a6d336a8c4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51be5333-f02e-483f-a01f-6ae949934544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b6fe8e-f05f-431c-a8eb-72bcb3368cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f8d16d-9560-4070-9b84-b1904a044825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29cf299e-d20d-4c4d-a7d5-827ec9849dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0d8ed1-22d1-49a4-a325-ac38546ee5cf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01d547f-697b-4672-b755-9a579cdc3d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ec7414-8e51-4df4-9140-9cddf6fc20fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6a7614-fa5c-4b3b-a6e5-31bd7d95e3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d148f1a3-f4b9-4b35-bded-1cfb77469bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7334b12-510d-4d69-996d-559d8f2f2d9a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8363d50-c275-49c3-9552-812f179f89a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504f7185-7676-48b1-8c9a-8967ac4409fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3987ee82-b8a5-4f70-b56f-e7623231fcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6822bb68-2e70-4a48-98a5-1fb6744de62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d4b4e0-db15-466c-8a3a-e94769321bc1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69d0d81-374c-401b-b0a8-d75f1cb6102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d62086-5480-4ba8-8dc6-19fd2f9487d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a974a89f-24f8-46bf-974e-4c88c6ce4062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "58000190-49d6-43bc-bb83-197b9aa59ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22abd453-f69a-434f-88cd-02cd0767446b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e16651-0317-4ef6-a7ba-760e7f459c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a09718-a3de-46b8-9951-6a993d7975a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f539b1d5-7a9a-4f28-aeee-763dec15bbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97779ecc-80e5-4730-b140-6137819b2ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ba0c0b-a87e-4d98-8f9a-9ce37b42d956",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eeb643-4ea5-40ab-84be-eae4dde3120c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1fe41c-090f-4b73-9515-f37dddf4e085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a943a5-12dc-4535-98a5-10eb3bc85f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b93a79b-2242-43cc-b05d-6b84736785c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1112ed3e-c2ea-49a0-86fd-f924b2aba00d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0632b6b-1169-4c8d-80fe-a46412e18484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726fb9a6-6b38-4eca-9b20-bc4df8927cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6fae11-e38b-47d3-b184-38f3fb6774b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4fe292-4cd1-489f-895d-3de233760598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403732a0-7c0a-4725-8085-1cf2ff7d4c2f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba29501-d741-4170-817e-a47ea5bb9363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226e4eae-e162-4f71-9cea-bf4bbe4a2a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c781ea9-c2dd-4665-8082-36b44b91b93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2358928-74b2-4073-8a09-24955d20e111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17502ce-cd09-4ead-933e-51b510217b03",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf19b4a-57d9-453f-9213-b56e9dd41de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88873c40-8005-4cc1-bc9d-8cae9dd6d341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27562ea1-a957-48b9-9051-628e1e75bd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b5fcee-747b-4da2-9354-e9930e6bd1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d54161-eac6-409f-ae34-7e303fa2280b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6247e468-b5d2-454b-9117-7728418565dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4789be-1714-406d-be22-8566362e2e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8d5a62-b7c4-4722-ad75-2b78cc4f9e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01b99e00-0e1f-4954-b739-31c4463f017d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dbefdb-d310-4edd-8a17-a0dec114db1a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f8c93f-6ed9-453e-b74d-8fdfe2e652a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ad4551-7e1b-4a3c-a866-aebd6a18afd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87765518-3d8b-4b54-b320-ec7b4105c084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f007974-49dd-4a10-8cf0-1d1bb89ee7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ebdcf4-084f-47b0-a3ca-85b8b8265c8a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cc1bf8-f09f-4b3f-a8f8-9def568ee3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306da732-6f0d-43d0-b0f0-8d4f43ef41b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8325e4-c442-4b82-a0fd-cf8c4d77c489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5428c065-3000-4eac-92bc-ec74b35d7c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b0403a-1af7-4cbd-aef6-0c7eb71b1240",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50084da1-ecb2-48ac-a919-b7a8b27062df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be933ff-0758-497e-bd9b-e577318940bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a3bc02-883c-4db8-95ba-b7e3158aa10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd6c682-61cc-4610-9d09-175bae5fe754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d5f3f1-09f9-404f-8727-73f1e1caa647",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2376de75-1fd0-4275-8538-ab1e001bf5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e78a07-f998-46dc-89ca-9559d3f72223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e80a3d-c8bd-4716-bfa4-90713b9117db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d05af0-01d8-4f8f-acf0-d1c37fec5241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc02399b-6568-4d4d-83ce-f7ccc4624050",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5def6c1-d0ca-4ded-a37e-be6f971ff982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa413d5d-420b-48d6-98ef-78d646e3bef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723ff7f4-67b7-4c77-9476-02d94bef344a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a538a45-1e1a-4ed6-b252-d10330f260c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56263c30-c4de-4e38-bfc7-004b6eee9b96",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f59dfe-a2ef-4f57-bddf-d3f688e2d704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85369e91-f262-4e4c-b95d-91516f86e27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e59dcf3-1dfa-4dfe-8740-9c8a6a3e0baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "864a6535-3a79-425f-843b-443ac61cf492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8417eebe-7e52-4605-a16a-a8abd71f6a02",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca66133-c5bb-467b-a55d-50acb0dc8f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ee73cf-af2d-4c29-99fa-8750914e8eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27797c87-73ed-4b31-a59f-b8cd4b9c5d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d86bde3-d177-4661-b2c5-c4e7f158a310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c53996a-e2fc-4723-8340-ae1a8a8d7d2e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f6bbcd-a58e-4083-8931-916d41cedb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91524b60-454c-4da5-b12c-f962f1367c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6052ac-2023-4bc8-99fe-78c5da47f452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b26b330-7a5d-4612-8938-f5298b709c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9d7a04-2789-4511-8106-93c2bbb17edc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a076e14-bd5e-44d8-a91a-b873bb1da085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d327575-58c8-46fc-b97e-71c971f7c9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2643b3-35a5-45e1-a1a9-9b037ae3b730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b50589da-7218-4642-a098-965399100015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f225cb0f-3e5c-46f1-866d-999c57366bac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cbd70a-77a4-4883-952b-61bd90b47bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd5b81b-13e6-4e21-92b6-2e805a2d103f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ab3e53-a1dd-4346-a8c6-3abc27cab90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58a3200e-656d-4019-9802-20b4ee2a4a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada9b1d8-3a4a-47ce-8cbf-71696d20133b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5993a5-2d28-4d0f-afe1-824562e476e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11b0a96-15d5-4524-a4fe-6d10823427ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e634e-9317-4dcb-903a-bc0400013931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0677d140-c398-40d9-9944-c1412497e71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa969571-5183-4848-8e9f-bf7107bfea3c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74953127-f22c-4a55-943b-69ef997a585f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c683c119-7409-4c8d-a959-7c1b1fc633db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546e422e-214d-4f1a-868c-bc581c39a263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3da4e97-3271-4368-be2d-664a558ff37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77582636-b93a-4e1e-b003-ca4704b9a474",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fda1bb3-0add-488a-95a6-bd7aa5ba5e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5d9f3c-baa4-4569-80be-76156bc9c49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ba9201-1adb-416f-bf3b-cd5a5b65b912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "15dbdd69-dd52-4c48-831a-cb21e0d7fad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112f9675-8bc3-4380-9880-4f1a44d9f6c8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97718f5-f9d8-4eb6-9546-856e3f349429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c482f91-d5c5-4cc8-beaf-dd4e6b82b8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e92131-cffd-49af-ad79-43d7b2ec5a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66830884-4904-43e0-a9f3-47e27e1b09ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea1ad29-9cfc-4cff-9253-66aa64670c84",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f1dc7f-42b4-4876-93c3-5de05e53b6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e69d4c-2e63-4151-81de-d750ba640470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2574fcd8-b761-4235-871b-fd58ce23ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "043f9c15-7d17-43ab-9f14-87553ddbcad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db712d9c-6ae4-4b56-a9c4-0f80c5db5707",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f58a57-d26d-455f-95fd-585bd048f61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b2270b-f1a5-499d-875d-3185c7bc3d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e65196e-fbfa-4635-ac10-af063f5a28d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78fa339-89ea-445d-bb44-21a13bc80458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d9140c-7e6f-4de4-9762-de0c8409b7fe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1576293-402c-4684-a324-6638652d2bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c01e4a0-5836-4f47-b109-08234cd274d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e424d9bd-7253-404e-a522-78e78c399c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3da417f-1dc6-4a17-949c-7e670eb36403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3951dcff-d403-4ad8-b07f-55617592e422",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895ee0d5-c848-4260-a8d0-515d82b6c5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61c7e21-3dcb-43d0-abf8-f4579751f53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e6d959-19f4-4c3c-b1e2-fcec77ea3227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1d1e3c-042c-4cbe-a210-49e3f76ce89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0cae64-9d0c-43c4-8e25-91be4ac7d75b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8bd0e3-90ad-40f8-9f78-17c99ca8e24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10739f1f-4b41-41c1-aeae-6fd68020805b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda255e9-ab67-481b-a5cc-b434b5b7719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb312e4-e201-4ae8-b4e8-9157a16162f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1369be7c-8adf-49c2-8bfe-9527bbdaa091",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7380a29b-3cf6-418a-a38e-3b40ae5dd0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59edf75-52e1-4a8b-925c-6e1ec3f1d74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fcae97-8537-4759-81de-f381f2fd3c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d884979-6809-4918-bd7f-76f08c471a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4a8ba8-f966-4d55-b647-fea06731c092",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d783fdb-05f8-4050-a774-d0a6d39cdbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a077fc9c-2e96-42d8-9eb8-bebb0a38e884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c4de7b-d3ce-44b6-a41c-c8c7468c185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a23dc59-44a3-4119-9bc7-1db4e3f3ec7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438b2eef-da1c-40e9-acac-1a28486a273f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a9b0e6-c637-40bb-9992-cd529e861b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b8f432-7f25-4818-ac96-18fa622bb44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f38841-e2c0-42b2-8ced-91c5337f6abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bef060-54aa-44bb-a49c-28aac5727180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04858f70-7530-45fc-a6f2-7f23b6f3b1b0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdab3b3-ff4b-4843-83ee-93a7c2044020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8529af13-ed0a-4ab2-a397-5e63b75462db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec86229-9424-47dd-bb94-7d96f7b35354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ebf385-3dff-44ea-8c19-d9d599ec7563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d1a2aa-45ad-4583-918c-b531d13b9bf9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e41ce6f-12f3-4f4b-b005-77998744dc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4a12a0-94bc-4540-b0a8-79b81ce6e4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e9ca51-05b1-4f17-a480-491f875d1e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6738ebc1-7f3f-452d-87a2-fa430f44c391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cd8928-8110-4d36-923b-6e8ee2869d1e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaa6909-59d0-4ef9-9bd9-2dba31eb16d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60036623-69fb-4117-b732-483090a77039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3340869a-2409-4232-a0ab-43157ce11f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b943392-19dc-4856-8007-8c80642216f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48195dd-44db-493b-88ef-1b4f2206307d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bd3d08-7dc8-4a15-9e3d-a9e6dd74a5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ff95b9-3f39-46f6-b87d-1125be5702d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e089cb-553f-485d-b25a-a8499caf2c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7e62d4-551c-4f78-977c-ffa42b66c8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c589f76c-6de3-4f85-b340-c3506f5a244e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dae701-19a8-437f-a35f-0dfb7c7459e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43298484-ffa0-471c-9c1c-8d06df56fe68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08024864-52b0-4bb8-a4a8-13e862ff5805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f681741-6205-4e2b-8ab3-b87f8770cc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc98d37-f96e-4fba-9569-06b78ef019f1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ffc62d-b798-4263-b78a-2d1a3d3b8997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765a1832-61f1-4dbf-9b49-e41d5bdecb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5c4a8f-d47a-4b35-9ba6-9e36d60b2437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ec4ea0-7777-4929-940f-c3d27c8c010a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6ce5a5-ad60-4448-8046-161693bcd020",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a8e2b1-bd71-485a-9607-6017379ddbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c22220-cd66-438e-8b30-6fd7bfb51321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f592ff-7e61-4d34-b1ba-89ca00bc9fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f736c6d1-89a4-475f-a4b0-cf78740312bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4949ce0c-e3a9-43a1-b459-d70e9f2d7f4e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b000b9-c277-46df-8d82-e7663ada3c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cf8ffd-fcce-4aba-a543-5ac04fb55f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57f309b-e3a2-4855-8228-89f9f17916c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dad7bb72-9a57-49ac-8bed-b51ea403f203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a3a0f1-ae97-4f97-b197-22512f407cdd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45717ca5-b145-465b-ac93-6b2238bbf48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fac575c-ae48-4480-8c5f-ae517a8beca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d0c310-d1d8-41e1-885f-212e9988afec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fb581d-fb55-4826-a0d3-b423260b32ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45105604-b95c-4c52-b68f-2da32d144bc6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e38b0f9-246a-4ae2-99dc-7034f364bdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5651104f-c46a-4fc7-a438-4606453c73fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fea676-20f1-4f0a-8ce5-615b53fd4c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d5b18a-baa1-4cd9-9c6b-0af691d38efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51faaba1-3b05-463b-88c8-6c83b2d26371",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22124715-84d4-413f-8fef-983e3b833e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525c1b26-3b97-40b0-891c-1474a798dbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9303af-2d41-46e9-bb71-c0d80cc19dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "998a53f1-c669-467d-9643-fb49e8464553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3127e7-6c59-439e-9aaa-84e44938ce98",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01feaff3-54a4-4c2e-924a-e7e1b9621f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d782013-a9bb-49a0-9637-452ea079c2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ab6d12-944b-486a-9e5e-dabb34d42a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f00f17-5c6d-4af0-8340-863cca205020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a86657-c437-4f1e-9075-c6e0f9c44ff5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42556802-82b0-4149-8288-74309dbc2d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beac7969-aa8f-4cf1-a4bd-3a677c138fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46764635-d3cb-449f-b59d-5b108b02fc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eee05d39-ae95-410b-a735-af8b8b956c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faa1f31-37ae-4e75-a7e0-8ac5b9846e50",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c13d9d4-037e-4a73-a572-a0e18dbd1bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f875b4-851c-4c8a-bda1-51d7479e80b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd72371b-0039-4f31-ad02-d54ccfef1b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adf3eed7-aad1-4aef-bfb9-a5ad2dec25f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb3b5ad-71be-4e46-86f1-428413979cf6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20e6394-368e-4540-8e20-af8969ea4866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009fed52-5ccf-46f4-9c53-aaac98f82394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca471f8e-cdc6-40cf-bd4d-113dab35e5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c39e26da-6a2e-4dc1-ae54-8c661b691a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4411049-430d-4c25-bea8-c1c2bcbc0faa",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996711d0-8975-4473-8071-6545b9a28ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cd9b6b-7a12-47a5-917d-2482dcf59ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8d14f7-31e2-4a49-b5d8-17161ccc9ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c922ce-cc73-497a-ab97-217f1c87d1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c0713e-a875-483c-be17-8f482753a42d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c21ff96-1733-4697-b2f8-84423ab9d1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320bad57-0c57-4515-b6a3-a2e83a141488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cb4fe0-addb-4747-9787-42b0b6c0ef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4204c2f7-1dd5-4155-9916-a164d2db27f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9b2863-f27e-4be1-9d4f-4736ba117660",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28e4a22-e14a-4dd1-92e3-bb794b1476ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b57408-a0c5-4b3e-be67-76f97e8da8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb9f003-b4df-46ae-a84b-33419afc01a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df7c4c7-45f9-4aeb-9121-12ca25a139fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22683e41-a94b-452a-8d98-8a89e7f92f6d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49905f9f-1049-4813-a160-e0dbca5b1883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840edb1a-6a4e-4055-8107-e77f1ba18388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cd88b7-0dbb-4903-85f0-1dbafdad3e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6c17fd-55e0-49eb-bea3-46d4c8331db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8cbf9e-3584-46a4-ab0b-02d7ce795dff",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bcccda-f93f-4c9b-8058-f8e50087f9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2f4cc5a4-5727-4c58-9c1e-b30dd07553ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0082e12-194d-4f6d-b843-75b8a35adce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0612e208-9e92-426b-8951-866dc99b1d3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1839da9b-3306-4e61-bb3b-32eeb5c9eced",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7c71a29-bd1f-48bb-99db-411875fc1e0b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895d931f-c9e9-489a-900f-31186311f4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82115163-dd17-468d-8407-da51207ca4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02c76b8-0601-4abb-9f85-55e8c86826fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca96ba96-2826-48ed-9818-06cfc9f30478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f844faff-34e4-418f-b864-b166a1d2fadc",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1deff2-5de7-412b-b95f-71368b8ad1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96f32d27-01e8-46f3-940c-361a26fa1002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd736a4-24b9-426e-94c3-d2963e8ace7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f319df7-8752-4886-baff-accc73e26cd0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2126bee-dc8f-4f86-8b05-e2d6372ec9e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f48afe9-4153-4e9f-bcbe-142e940cb478"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a6d087a-aa19-4655-a0e7-335861e724e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d695fe1a-1e13-437c-8097-fe9f74633393"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3dabfb7a-ac18-4524-a216-b7b777cb5bd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e9bb968-6264-4d57-a0f6-8b5706b4fce4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ceca40f-555d-4235-83f1-48bfa20d3702",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8258c662-b79c-4b6d-80be-14bbbe81ee1a"
                }
              }
            ]
          },
          {
            "id": "11ffc92b-edfd-4bed-a6f6-08fe8734020f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd9c4c3a-030b-4af6-8300-ba6cf69a65ae",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41337acc-e130-4963-924e-b817cb8e0af4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "584944de-c2eb-4586-9bcf-9ee1b9ffa436"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69a4b9b9-0192-4760-a56b-000465820efb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54ce9fb9-daad-4fe7-9e7d-1e6b06224227"
                    }
                  }
                ]
              },
              {
                "id": "8828282a-748a-45c8-bb9e-4e940fafbbd3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce9ee999-5a35-4ef6-8196-1bb8d3635636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a7ae455-d5c0-4c78-9841-8b9f2a9a2df6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "695e18fa-a05c-46f3-a639-03c480b8ac5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f20950d-a2fb-4ec4-a4f4-8a8ca3c73b84"
                    }
                  }
                ]
              },
              {
                "id": "5dd9cc1c-f13d-4f67-b0fa-e061f249f941",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be31dc79-f548-4d6f-9eab-b09a5ffae7c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05c7c901-c307-4c10-8449-618c027afb56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1d11a06-e1ec-44e5-9146-834c4f3adfb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "55f469ed-f200-41d2-86ec-2213aac82a6f"
                    }
                  }
                ]
              },
              {
                "id": "64d5f851-a897-4c5a-b2e6-d0baa5e0020e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c29428de-d566-42d1-8ac4-438d76e9a6ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9864f06-6275-4908-abcc-43ce346eca4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edaa6e7b-bd26-42ec-bce8-380cec95f374",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ee07ca64-043e-46ea-bddf-9e158a67c2ab"
                    }
                  }
                ]
              },
              {
                "id": "8025448c-8ee9-4f1b-9f00-9ed16bbf81dc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "019a47bb-9b20-4e6a-b905-0adb05cb57bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "366222e1-1095-492d-b6a0-b5cc43c23850"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bc30471-971c-4cec-9574-730d6dffc122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32eb3fa7-bf4e-4663-ab46-259bcfab0cea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0006f30b-0817-4ac6-b18f-a6c710e35663",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "870bffeb-7ef9-44b2-afbb-0c77f7c0f879"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1b757858-a4fc-4c3f-9725-62b3bc47e395",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48ad3450-d5d6-4b5e-86eb-a46e79a5f647"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e90eada7-acff-495b-a6e5-ef37a7db0f38",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0ef3edcc-d666-48d1-8426-7fdc74104a1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9155784d-3f4d-4725-92f8-40ff62ab2edf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f04d49d-32b3-47bf-b671-ca8c15cb6862"
            }
          }
        ]
      },
      {
        "id": "6ee7c1b0-22d9-420f-969d-7230a569c127",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ad7dff6a-a5c4-4cb6-b9e0-734ab4a7a919",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a5a812f-0cda-40f1-8b8a-52d9aabfd2f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "70d74f82-2b85-4f27-b7be-70a3c170e826",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8dd62f-55b8-4ec3-ba18-3c2ac26720cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02072ead-ab3e-4cc6-a23f-5df2dc668ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb8c0ea-d9c5-4437-9b6e-92e2b402a4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb12dabc-a76d-4af0-b836-1c6c68a98d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c2c013-f4fa-4fcb-abef-33774b4ebe1d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2efbab0-104e-48fa-a010-810fed5d593e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb076ee5-84c6-41e6-91c0-62f5875faf2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e66b489-dde0-460c-b134-a1a0e9ee408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "485d68ac-80cc-4db0-9c65-ce7799e3b8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a36880-4475-4ede-9f89-3731ab497753",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceab6f4-7942-46b8-a4a1-467a3fc1407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5accfc61-51ae-43c9-a9c0-dae7a358990d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c20b99f-8886-4f66-b35f-754e7f29e695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c656afb4-f4dc-487b-b48f-f58d4b9fa647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e3710e-00d2-4b92-adfd-f0b3bc722c35",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab12985-db32-47cf-84c7-d40e2b1a8c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c0a616-d85a-4bf1-9563-36da2a6ab4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495b914b-7878-4935-8d1b-6c9bc97c0839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf251b9-4e91-44ef-abb1-fc607cd5a2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a40411-e2be-4940-84e3-1ad878e7dfae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad283582-a129-4ed4-903b-79031d9f8ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adead36b-e29b-47b3-a74c-28d70a8e1ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed46611b-016d-47e6-826c-9697d44ed67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dc9c6c-e544-4e32-a175-84b3098508cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1db3de-2aee-4eb8-834b-168117b7c992",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b334f6b0-0ec7-4cf8-aa17-ea490baa3db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3749f03-51d9-4e95-8cac-d2ec3f7428d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eda7da5-2575-4e99-9f28-166d75474d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1293f9c0-931c-404a-8b7b-a810e8dcc7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a407af8f-3daf-4630-9165-e2d2e962cd18",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590de6dd-e988-4edb-9a80-20a3f270a1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c281fdf-6644-4d94-ab26-94b5f212d93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea61082-ee90-44f0-805d-ae1c61c4361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e1d02c-b0a9-41d1-a9f4-d4feee9d16c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae71db1c-d742-4931-95eb-1f91ec39d3aa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7711ba3-5c75-445f-8761-e1213c7e9857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a757ce-b957-4071-8235-cd62aabad9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce01046-e156-45e0-8c00-1e0ad838ebe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92aaa234-e132-4591-9880-5254207b8b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8930e3-e9fe-4a10-9e02-405f2e7cb4f6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bf33f3-bda8-4c96-9944-29bd97939d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f28408-a3b0-4e87-a75c-de7679db1a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275d1ea8-6c8d-401f-84bf-8c78352adbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fccc3f4-094d-498d-819e-ebb8cc7494e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0a8cfa-d412-4301-b2b9-32fa101ea75d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25150ff3-c3d8-412c-a5d5-3cda8e8f9e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc490775-093e-424f-be42-be32a68352cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8065c3bc-7700-48b6-9aaa-a461ef6b91df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46cece68-6398-43b3-90d4-089309372fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b611024-1971-4efe-805c-db21c38f970e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6679923d-05b7-4c67-8f2c-66dcb4f3e8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe21b160-4160-444a-a160-069aa02dd557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735087ae-b91b-4e9c-bf75-a35227492807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38eb7f78-5d16-4032-917d-a93c5cac0c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da97b861-225f-47d9-858d-ddbbe1a687c0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edb8e4e-0f1e-4a2a-8b5b-c6bcb6ec19ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f569ea-8640-418d-97bb-1bd6b0871593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ad9d67-0e55-4bc0-a11e-cf2f9c45df77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa20c98-c95e-4915-8122-676fda7e062a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2484515b-dc73-4325-9bad-70a797a92985",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059c8d07-0345-48a3-9f9f-a2c7e5092776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d835cbf-4896-42f7-a694-88699fe7f477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d96710-51a6-4236-894a-888886b1508a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a61b909b-adaf-424e-8a35-816e6ebeb797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83553164-a383-4aed-9940-967bbc51badd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15236d52-331d-4d10-a679-4c0c2b3bf426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37898eda-d3ab-44af-bda2-a1a16acd53fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce44b4d3-1be6-4ed5-a33e-d7332a78c03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "be892a25-4ee6-4939-8fb2-9ac7b66afc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ef3dff-29d6-4c79-8856-4fbdebf2b142",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9055d121-986b-4393-9a43-1d0e98894fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff6e296-43b9-41db-83c9-15e6d56c4ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8fc504-0431-4b03-aa62-fd4a67f572da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c96b91ca-e9bc-4405-8ee7-30fa1cbcc87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47555c2-ef1b-401d-85fd-c402b1372f19",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24499af-d2a7-4b82-b05c-3949357bdd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2a04cd-7820-4fb5-9c11-26908a4caa5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737b16a9-7f30-4cd8-816e-658160947635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf97a259-72d3-4acd-a8be-55de00baaed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df02f7ab-6f0b-4b99-ba57-09de25f63e95",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ea4816-4790-49fa-abd4-79b75a4c4c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e367d84-e182-4426-aee3-d1b6aac6864b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c87884-615b-4459-9df2-5c68361c85b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e30e8f-8002-4279-aef2-1e156043e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c771e8b9-0b8f-4964-a514-4d857e63a578",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0139df-a4a2-4897-8402-a2e073905557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0497144f-b5cd-463e-a267-652dbd8cf1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa69b5b1-6a70-4ad1-aa75-89ab3dc7c36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ac078f-f829-48c9-a311-90cbf481163e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0815a98-84bf-4eaa-a239-dca5b3af2c99",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7b0dd5-ec88-435f-b7a7-72762f24527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0998e7-25d4-4759-aeb1-ffeebb1a056a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8556e8c7-1568-4c16-ab74-b18043cc7469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b276d431-6f9a-42a3-a38b-3dd0724924c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef06fd0-f792-4eec-a44e-24b6993fa7ad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3b274e-2a7d-4763-8503-5ca904677e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40126dfc-cc73-4d3b-936e-bbb915e90f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170f78f2-48c5-4c04-85e6-126c4ba140ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "292653f4-c43e-410e-a2c1-36416893402a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e06b9c3-68d9-4562-bac1-a77eea95b5b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cd1cf2-1088-4be4-b303-4da5aa6730e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8095906-72f8-48ab-ad2b-8ec8f3851f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd8aa8e-777a-4f96-ba1a-3c8db504210a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4593cd8-bcd8-4a04-b5dd-52dfbe568de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402badbd-4965-4bdf-8848-2a09fb898a9a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde02f4e-de2e-40ab-a1aa-39c0cd1b3b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2425596e-d00d-4e78-aad4-1a40277320b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00cbad5-8c41-439c-8fb5-eac5cb7d0a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2289da34-7c9e-47dc-aae1-2187923b02e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f247269-43c4-44f7-b415-3fbde2a48b2f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c1c3b4-830a-451f-a69f-4e8882b8b787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf795db-2edd-4a68-90f5-02b0f2086b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36a072d-6ad7-4820-89e7-5c83ada75782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdfb702-90db-45c0-a77f-60cfac68f07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4745737f-6f1c-4d63-b7f3-d6b2ddd10969",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e91bef-8d36-4b84-9892-1eeae5ad946a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4080c261-d13b-4085-8101-b76497376e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f925e6-216d-4d94-86e9-bd7d69dedbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5282fd-c7eb-44f6-b5ed-2478d3d9880b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543f5450-06f1-4d5a-9997-f5e1cb740e4a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da563ee-8cc2-4df5-8221-cb324a06f23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe36b7f-ece2-4ec0-a1b8-9b6bec29d478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa277c3-8a9f-4cc1-98e5-162e0ec86b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b67f464-d7f2-4a9e-851d-c64a7c71efc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dbde90-f9ab-4364-afd1-06e85e7e0e26",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c844f911-ba4b-4bee-a44c-fdbd8c3d381d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636ecefb-5f64-4833-a88f-e8d9be44ff36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1fc4ca-f2c7-4a16-979f-a2070935f564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9b0b75-a79e-4d63-979b-98bf6ca7dd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed36878-a1c5-4a54-9111-b04d8642ddb7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397714ba-3997-44b3-a36f-0dd905fc266f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c6e68d-66ee-48fb-95c6-b4f0dc72c365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f34d52f-ba70-4522-8cab-51cde9f1c89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef974d2-bebc-4c4a-b4f6-9d3376143312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca46e2cc-5f04-4500-8553-41cf90b2fa7f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d162c5-a490-4087-9b7b-35f24892012e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d8c2b3-241d-4e3e-9d50-c3a9b2c2e931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0449fd62-4d36-40f8-abab-68d756ab27e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d351c33-2211-4cca-bc4b-6434833a74ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142f17b9-9609-4f25-ad42-0c8ee257596b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44d509f-98b2-4ce1-a096-9ec9f4ac1ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e5e5a6-3bca-4db0-9dcf-eeba7da0aa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb9db6e-dd1e-4ba6-bcc4-a3c687efadab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "121d8961-f85a-4f7f-9bdf-ddf160a81967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9655343-d8bb-4eb0-aed1-fda3cfb0c9b9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cb8502-3576-4518-9232-d2a761f5526a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e700892-61f6-4350-949b-f5fa1a3a580c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ce7cb1-e3ca-42c9-8af1-1f34a1d15f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ccb69c-fd57-464e-af28-676b77c3c0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a113a6a-53bb-49d6-ad1d-79006c1bcb25",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7f0a89-1b2f-4d01-8279-9dc11fe7246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a894e730-9e93-4c2f-9e0e-b29f9061fdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269ffed7-7909-4585-8b2d-ea8ddc20434a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f36b1e05-96be-40e8-9bc8-6b0601dd67ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a28f65-e3e5-4dcd-98e7-ebe6306830da",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb662be8-f0bd-42fb-bbff-f6b4796bc879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46674dd5-e88a-4673-8264-741bc29f8b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ed0adb-d068-4b0b-9188-d3a21ee3e3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32dd7415-6737-4e4e-b8c6-42ed81f4ca93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4d1a288-0f0c-405e-b7b5-b6797a47b6a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a478e6a-63b1-412c-aa72-544dafb57eb6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbab093-e378-4d99-8e50-fc1a9efa5bc6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "86c97c3b-ab3b-4f38-86c8-a537451d55cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f41352-9e50-4e6a-a53f-d499c786094f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b18f2a0-16fa-4d87-ac46-1c3c17a883e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c74b20-08c2-4b0d-9976-d5f2db012fe5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e34d7a-af53-4739-b472-02126cfe1122",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef42605-868c-42dc-9760-ea6cdcb5818f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ef41d4-3c84-4c4b-8c86-44d9c9b2ad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad6e5737-c5e3-4072-9b73-51936cd7f302"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93488a17-8ed8-4044-b9c6-eaf85a241aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "802cc412-f962-4fe3-a572-a03649ff11c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce6082c6-c6f8-4267-9008-dda6ec3cc225",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3d49dc0-ebc2-4581-8d10-aa13d6007e8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3737dac-047f-46ad-89cf-7ddd5e1cc39a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5d483c4-0cfc-4d64-ad1d-a3f426cac89d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbaec932-85a5-4c3a-9813-5e87069cf85f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e0a45ce-9532-4ebe-adf7-05885eae8522"
            }
          }
        ]
      },
      {
        "id": "d47e5d11-e15a-44a8-b3d6-3ca05a67acc0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2e59f5f5-4966-42f7-a9b7-77898144f778",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1342ea85-d142-49c1-bb9b-e5c0ec861bd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7400d109-a743-4469-b0e7-d2f03fab42a1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cdfab2-d0ea-4127-ac68-c99e6267c42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871ff86e-34ad-46de-922f-6d21d78f56cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f37a90e-152b-4d31-8729-bac0634ff2a3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934350d8-c0ff-48ef-ad50-1fcc96142366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9ea0f6-3453-44af-a800-c5221e4833ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a12e63-cc24-4ca2-9711-7951c02d05b4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b16410-9154-4925-a4aa-6ebad70be86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffadf7b-b33d-4025-bd3d-f3529455a3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cc4104-4cac-429c-9a17-dd242d57e40f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca68bc8-41dd-4d8d-b21a-a1939c3e8080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bd5466-66d6-4cd6-ad63-d80379d08fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed61e7eb-ce77-46d3-b701-883558c60bec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa599cf5-2abe-4896-8912-86a903ed42fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d80fcdc-2e62-4822-a3b0-cb7171a6b7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307fd900-7c2b-4c81-9b91-8d96b95f9716",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334a2cbe-4da0-4493-9ea3-3e86596d3d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39683242-1a0b-4f90-85d7-292295bd2c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979c650a-460b-4031-b7cd-3d41b4e00c89",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87092a9e-aee6-4f4e-bc78-bb73ffa51ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f039679b-28ee-464b-8ec9-b63fe5d06637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc13e3e4-84c4-4bc1-b136-af94aafdbcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d526b7-3c8a-4af5-99e9-e584a2d90326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b1d77b-7527-4119-99aa-e73833f65b99",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a40d05-9fc9-466b-aa46-ad1e3b75eee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "067f0e3f-f2bc-47e0-b2cf-fd06acf2d264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a67c59d-e42f-42b2-a1b3-d458df3cf45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1c3943-268c-4db3-9c4a-08fd1bde1943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0451d8-904e-40f1-a0b5-b54fc8a5707e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c3a743-f665-4fe9-a038-fa7758741858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "571624c0-300f-4a9c-bae5-5f3bc094b9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d51312-8503-4fa6-ad0e-013d0b6cb181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b2b997-62fa-4c6b-8347-438f17ba5fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d2420d-7e9b-4f66-a2d7-3391b5f76566",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d6adc4-046e-490a-b24d-eb2b342cd7b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d340430-7a23-4eed-a152-a79e54cc23b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacaa0cc-5570-429d-910b-91d7d6929878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca4294f-b1c4-4938-b773-4115b8ac7b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d164a80-db55-42d2-87d3-04526fec4d33",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b568579d-ad51-4844-8dbd-cb55ff5296b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e777dd-e806-4cbf-a511-238f0659154c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4772296-2059-4c3a-972c-191769877041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70436d4e-446b-4764-9006-b45ad9e45f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4dc55a-ba01-48ec-b200-2b4b7af7466a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c003b223-94de-415f-9d76-35ec320a9307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32da9ae1-6e7a-4325-8436-3f9f10f87392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10704f70-2b72-44f5-acd7-e42eeebbf46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be86ebf-3f23-4650-8534-ec19c6aa62ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0a936c-4050-477f-9667-42bbe2aebdfc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535b5a98-8f73-4385-a7bc-d87706337c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181888d8-4a2e-45e4-880d-12b43c8c1c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa0350c-86f8-47bb-b203-34302d0bd79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76ef753-3617-43b1-992f-a929e0ff760a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e32b6f9-4bf6-4761-8a95-9afd0955968d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba696b2-24af-4d81-846b-4278c847e290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32d4411-4352-4914-a90b-96f5dcfb383c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e60e9f4-b7d6-4fed-9e96-7a3ea5d10afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae877829-125f-41a0-8238-73f240d31c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d1a79c-8eea-4e40-8055-062d0032aafe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c93518f-8b26-4f5d-82dd-9812ff362833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f22f3be-a6a9-4279-8d86-e69f2d70edbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf55d54-1dca-4293-b14c-e2a1c0b5f4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e9d0d8-87c1-4f55-bed7-ff8c0738d231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb6bd47-3b1a-45d6-860c-f57df7c3437c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4bd033-c33e-4bd0-a79c-cb2d287753cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66eea3f8-db18-4d21-8716-7259b10fd6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8345aa91-ad11-45bc-acb5-be5441200ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4809734-9637-4e08-8bc6-1087fea837a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775545a3-8f80-4962-8e35-af38ea524967",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8799a5-f93f-478f-abcb-98a20defae2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b725a2ef-0eef-4b20-a1fa-fa33adc45730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fec590f-c812-4e2a-86f9-fa646ac5dd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cea7f69-0ad2-4852-8d47-d89ea41fd203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef30dfa-b77b-4258-83c7-9ea84d2377f9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08a2ac5-9a12-4981-8a1b-0d3752af1cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f480299d-38fb-4c01-af6f-02ede2752072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade7ee59-dd66-4fbe-874a-bf2fcf4129dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fc2133-4729-40a0-acff-01f32baad0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae8b934-4efc-4f1d-980d-0b882f15e96f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a3ed61-8eab-46b3-9b52-8d98826c88d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d89363-8a32-487a-a9a6-5db742a945f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750aa714-bcca-406f-b6f8-7bcbd0da8867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26aaec81-0b54-4af1-b825-112fefcc6ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5884e155-cb16-4161-91f7-a8cbefbd7349",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed87d2b-8430-4cad-90eb-53117143dd49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79283317-7a7a-4f56-9176-0fe260dabf4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6e7036-9fca-48cf-9883-e7469e64e7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e32e766-7d66-44e0-baea-bfeb7aab0360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6134e4-c5af-4199-80dd-a3caaacf01b7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7e8ab2-c342-463e-ab08-f9ac9b5e0517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898f2a91-9b9a-49de-9faf-3d4e37654afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f60ded-0560-4a81-a226-5b75f3197ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8a9d13-a1b3-4ae1-9ba8-2d9a11a65701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291e8180-73d4-46ba-9dc3-a0beb0134215",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d10525-277c-4c1b-9027-474f954d6c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042aa446-110c-4917-a736-8b16028b502c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6005fd6-6db8-4f03-aa61-948ac986cf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809b7125-51ac-4aba-950b-3c6d48d54765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63daf635-2a3a-4776-9826-58e8ee8acac7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b491fa-8f7e-4fb3-a0ca-64c833dadbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f2b6fd-fa33-4cde-839c-f40019a77399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98a10fc-3ed8-4ebf-87e8-219b588230c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bdae41-b557-418e-8184-1fc9cd38cf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f5ab8b-8362-4d18-95c0-33c3eb037434",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ca9c0d-58c8-4c2f-8453-0f2cf279a966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c22e3bad-001e-4b1f-b1ab-5b2834a39893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca9dfbe-062a-4e64-b103-963480124019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00857ab-29b3-4f73-bd7d-206284f69f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5328ac10-61e2-4c21-bc2b-3247717d511c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebdb584-3583-4bab-9502-6e521104191d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b22f39-ab5f-414e-9343-39f9eb3cd4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3ecd90-6d49-4b08-8460-d604c28da5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a658877-424e-42d0-94c4-221a069dd1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37450040-62c2-414c-941a-cf561d11ddba",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cae614-c772-4a87-ba64-d1f1736c6a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec192c5e-d77f-4131-9805-757497560e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d3013d-fc13-4227-9ace-9648d718cda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60198d5-4f03-4b85-b61c-94c4e6a0ed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456a4551-9461-443e-9e38-ea9bfb0ea60d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c263a40-5a39-4f71-a16d-39989a91be70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f3c9de-21db-4614-8622-a32ea05bc562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fa0a12-c9b5-48d6-9000-af1574c8edf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbd44cc-2e98-499f-b8ae-a435862311fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40324f21-f7ed-4d84-9a7a-3a42e1ce4ab4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de82405d-97dd-4f0c-8a2c-ed521e897b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227ca3de-f662-44c3-a992-1803e4dd1536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce069d3-b443-4d3a-8a1d-d2bf5e9278c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0ab096-aac4-44bf-badb-37ad0e8dfaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15fff21-9a93-4573-bcef-419a48fd806a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5012acb-23c0-4beb-85df-e5e7ff53cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b5f4432-d670-4061-b75d-90b38e931a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edba7fda-8d9e-499c-915f-5e5a25bc9e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff55a1c-7ac5-41c2-bab3-769daee25129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5863344-bee2-4237-b3d9-a57a44a4277f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0715ab0b-8355-471e-921e-38daf902301d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "975436e4-6e56-45ac-88fa-52f3612865e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e929e6f2-cd54-45f2-aff3-795b4da9237c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43ef884-cd89-4a1a-acb3-46f1b3e7a056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5028dbf3-1fe3-4269-8a99-fb627e24f4e7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b38c350-c29a-433b-8bf4-4bfc94bb4d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac6b609d-8fb9-49fb-ac5f-498e2dc1e657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d5770f-affb-4e5f-8511-64d008d90e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a392bcb-4430-4ca8-b68f-8b024dd11304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd1a070-83e7-4a7b-bd03-9b3f0d5a2d69",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da05fb2-c286-435a-8892-b30a384e75b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2601d59d-8618-400a-9cc7-b0c9eb88abdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d81030-a033-487a-977b-36160dd2a430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35248bb1-6d48-4850-8763-227622eb3d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e319b0-861a-46fe-92fc-1cbe3bbe2cd4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30c6353-2c5e-408c-a50e-7c53d739e1dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73bc6241-b196-44d8-990f-4600fb6bbdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879418ff-c548-48b9-af0b-89e2f43ad62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881db12e-62ef-433e-8464-23a6819676a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aa9a2b-0dda-463d-b7ec-156de4fdec07",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaa4c1e-3f3e-4d5e-9e8a-ef4302c18bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497a539f-ffea-4a5e-88ba-d4a44b118195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed59699e-b43d-4269-931d-45de2558a944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7978175b-6a16-4f0d-ab54-9a1966cbe751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2e959d-13d8-4815-abe9-077311fe7244",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1abaeb-bfcd-4ea6-8c10-6a32e2e796a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff363eb6-3681-47d2-b0e6-17bcc7442652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f80531-1b05-4532-b993-1efc2ca59d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673bf2e8-7976-46da-9907-0dc7bb82684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9344270-c409-4cae-a9bc-8c32b43489f1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec278d5-4261-4097-a692-b260c3c7e843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b9218f-0d91-4d5b-8bf5-3186c6c0d23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7f7dd9-60fa-4a42-a1c0-c641bd711f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1432dde9-1469-4793-9dad-59656c1b5015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419481b7-8422-42cf-ab87-68b1f3e2240a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af427881-4fff-4565-8b73-a6f4cbc6971a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0e42e3-d3f4-4e81-8ae1-9441b5ba2111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f143e138-a817-4f32-b4cf-25549a27ee0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4f25dc-a168-4d4b-8242-a6064fb04104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bff7e9-8a54-4a33-bff0-fd0a825aa2c0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a94d5d1-3cea-4aa5-a911-4272c0769e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c2a1c2-7b0b-4a39-9970-d8b9f24bca02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695d07c9-20f8-495c-9ac4-ef4efaec435b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873aefa1-fbf5-489d-b304-b72b29578a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca82286-938f-4e68-813e-f2472ec1dee6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff873bf4-6c39-4feb-9514-b79f17021cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec7740f-c626-4800-9b07-89a93b2bb64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e174dbc-5647-4f1c-8a54-2ce3fbd946f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee749b90-20d3-4758-b9dd-94c6cb025a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fb1cab-e8ab-4400-a0f0-2b49c9021166",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecbc115-9696-4a44-8d0f-b5c0af3feeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497d3256-e494-4f7e-a5f7-37b59e2f719b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a6f408-c0c1-400a-96c9-9d25ee1827f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9739c576-ae58-43cb-a25d-431c8a048c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf4e6a1-f055-443b-a0df-5085cc3e246d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b88e9e-1696-4273-a68f-521934720f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a5ff33-18f3-4400-b48a-a108f968f49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd1b2ff-3d6a-4aae-b361-854d8153fcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8b1399-a081-4ebd-b807-9d37ceb01e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0b56d1-de2f-4600-b735-5497649911e7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cc1755-def6-407b-bbbf-2e3a747bf633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71593eaa-c257-4415-bfc6-47fff4dc70bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaddab0-adb0-43af-9677-ab5d2bd0b13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6730c701-b0ae-400f-956f-1a3f79dbec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb87c381-151f-485b-a1d1-9960a8a63908",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73edac3-4965-42cc-bc36-725c1b98bf07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a5b75e-aea4-49c9-9133-e2fa86949c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c26222-4853-4214-953d-889a21c02516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf053f28-f471-40c6-8e14-719f163acedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37be7461-ad9b-4ada-95fb-1589f2045c31",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc418929-df69-4dee-9b37-e92a3de9d887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1927df13-6bca-40ad-8ac4-c9e0bdf328fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46398926-21fe-497c-9168-314808c0c774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0584006-79d1-4cc2-a59e-ea54901d79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5332d443-6277-4ceb-b15f-e7722d4e0ce6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0584ecf6-df75-4fba-a401-805829f9d71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16662d03-ce88-4e18-a854-a93914edebaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae2f29e-a445-4460-b792-4bb1b16b9b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae88884-a91d-4c8b-a770-6142308d9044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621d8c9d-5f75-4dd7-9dc7-3c053728a8c1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4e7708-0776-479a-bfc5-06c160ce532a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fcf8b3-9fcd-41ea-b77c-0c17d91166e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989e39aa-7b94-401e-be60-26f06bce308b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404913cb-ba0f-4dc1-8c52-27705925da16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cddac1-410e-4fa5-b6a0-7e68e8c63886",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84966f35-b776-4893-bc36-0135d993682a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bf5085-9244-49aa-b4b1-ba49c26a8d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf80ec07-a005-4dc6-86d0-b12179d63bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48976e6-f77a-4860-9c05-8cb17f85996a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a37d49-5b7a-4de8-8685-6a94ce7de238",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1649a9ea-af63-435f-98ed-d74edbd54abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6a5d75-3d98-4e29-8128-acc92252093d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51844169-75b5-419c-b98b-1b6d9ef29d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563dbffb-c995-41d9-9c89-555a6fc74203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e723aa8f-a75a-4c18-9522-b6d8fb67fdef",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65ad4ed-3613-47c5-b7f9-c48405ecc9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a7c0a1-0756-4ce4-9b0e-159452476028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e172a0-00ce-4446-a7e8-c52be1c92f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01eeda78-9e66-4535-8102-ead9fe55a4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b4dadc-fc64-409a-b252-1364cfa657cf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d811eb1-a4da-4799-ab08-1b37a1851a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab64db7-d7e8-4aa8-9c1b-36bb4df127e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586c44db-24a4-43bd-9a8e-0c34139a7e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fff28de-0dc0-499b-9625-8a1faa820b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4346655-e68a-4f7c-8541-df91275ccc1d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655171a0-20ae-419d-ae47-271da80d6977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd3fe6a-a0e2-4d84-8fe2-8b76222d8dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff326c1-e58b-46c4-9855-2d2cafd34e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201f1f23-5d80-4e88-b6c5-84a70e1d2fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c8c3fc-814a-4967-ab8c-54c394a652d8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c073f6-6bde-4dfc-943d-ab3b20964cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02944272-f46b-446a-a6bf-794d0748c45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8db6e0-ea7e-4724-939a-34eba0ca6e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c06eadf-97fa-482e-9965-091e4f3dc550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6fa45b-b394-4b4e-a0ed-9e3e2ed58dad",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956807b3-ef40-48b0-b419-e4dca2ff0c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea29f69a-305f-4ab0-9c9c-bcbf39933472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbd5c69-7009-4982-9f00-23c887cf3b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93e51c0-b18e-496d-8ca2-547d806303c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114fe1f2-c4a0-4e97-9544-5c9e6440527c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2cb9a2-cd62-441b-8e04-517627a0a18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e456b3ba-6825-4a8c-abf3-dfdea55ea364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0e7cee-60f5-4ed0-8069-c5eedb686269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b4c83b-a922-471f-b3e0-3333320a561b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebff855-b63a-4ce0-8267-acdc90e2b4b6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72d4915-51d1-42f2-9637-ceede230aa48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2e0e45-79be-48d2-88b1-5cbbc0207ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b81e1b-1610-4efb-8c85-7f05e64f2a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c61a8fc-cd57-4dc2-a4bc-c9562ab8cef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8d591b-d61d-4576-b854-c1a18e7023db",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb55ada-2e67-46ff-817c-6996a3876f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0c7dae-72d7-4e4b-b64b-96f2f978009d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb147e7e-e632-4577-8145-b99f8fbc52b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea2cc1f-d0c3-479c-bf8f-d82264a3e344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311dca8c-0578-4c03-b14f-877b316f6859",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e50412-5132-4e27-a07f-6ddaef1cd2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6219958-7034-41b0-88e9-e7c82971936b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c44902f-14fb-45d0-94e5-1e6d2727c96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c94308-f22a-446a-98a3-c988f6f16610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f3fe3c-e66a-468e-bd1c-757e676c84fb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f17d2a5-e351-45db-ab79-a47f8b2a9f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b3c608-c361-42b3-ac5d-916f9c5a5e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2a26ee-a865-4882-9469-dc3a77c8a56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13664596-95bd-4bd8-92c5-e11f0c274e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74310230-fb48-4bfb-977e-67afc3e06d17",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe34a4c-424d-4631-9adb-af5be4b21eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34c210c-7b59-4aff-95c5-236cf07d4517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d124fc-d76a-4957-8f56-e4aafc6a6cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d457b281-4f89-4ef6-8f92-3767edd3c062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a82b489-4656-4f42-8fb9-c0eba7f84489",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62aaf23-4cae-4fe0-aa49-561e0e45a414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee8573e-5051-4d30-b7e5-2831fbb74084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aee0934-fcc9-4ac2-b0db-7c53ca9638ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c8e632-2a4c-4d1c-a92f-809dbb0d3916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43777a87-ca73-407b-b4bd-9145137983d6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98953d7b-6e24-4249-983d-d100b237e49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4b461f-5007-41e2-82f1-82c0e31373c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cbe9f3-230f-4423-8dd7-832bb151bb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c3d47f-fe65-43bc-9acc-d824c518ff51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37512f6-a2a3-4c05-8550-fcde11f9e456",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24881b8f-d1db-42fd-b078-9a6f9c7680a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd00e6cc-a285-4640-97df-6bb8f35ddcd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24595540-1f18-47d4-9f49-e8bb5a7c7597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7b6d7d-49c0-4468-84e1-df75837c2467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684670cc-b617-4cf3-bb79-16a8d5e4ef97",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe8c531-2e09-4ed9-a461-f17e96d471f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62eabd88-711b-4f40-a496-84566da390ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f285a5da-8aab-4d46-9e90-bf7f3cc23c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ce7f45-2517-4613-9edc-19b11d2eec47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae7c754-0387-4158-b355-426d72185d89",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ae9946-7f81-4ea3-85bf-a44847d4f567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef037d1-6ef2-4921-88f1-a9438092a27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac072ef-4447-40f7-84f4-e9edf0b99b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92ce3ae-fc96-443f-be29-e786c5517b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644fe533-4b32-43d2-896c-df378c9d6462",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a07746d-1d44-41cd-a6c0-dc7af730c64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8cad14-84c6-4646-977b-f948394ae090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef76c6e6-d224-4227-bf1e-74301562cdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8deb893-0ad5-4540-93f4-9839abf9f013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b648865-1cc2-47b0-92ce-c5fb8014a0c9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c262c0fb-673c-468e-b872-51d1ef276242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5645e827-5d42-4e4c-806b-fbde9357a151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d27c577-1c82-477d-bebf-8196b834fec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7934853b-b343-4a9d-9352-076f7a3baae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a401dc7-9257-4acd-8b41-8e2758ce94ab",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75597ce-998b-4398-8a29-9f90cdbc3cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b7bbd3a-e4f5-40a7-b475-f25ca5cfc72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c94446-db60-4dc2-9653-b34918d7ce68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036e6a75-0e42-4f13-a432-882c7686ca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9acaba-1d3f-4eec-9ec5-f2c4e7adf514",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab59ceec-0cf9-4f4b-b7c9-a4942eedfe82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eee57ab-4785-4dc1-bbe0-6c16d95b0fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26b582f-b444-4939-860d-2670d7ddcb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9581b5db-73e6-4db8-bc2c-cc51040fabb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0b5bba-c053-4fb3-9541-0d09a5accf2f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7deb31-80f6-4323-a1d2-a055754ab1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683400ff-b2af-446d-b943-f1d15d3cf5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ead96a3-9cd2-4645-8a72-aab1d160ceb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0882322-e864-4a05-bec8-e0cda955a225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c48885-0701-4eba-a051-dae56472f172",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a875f5-e77d-4c62-be2b-bf44b4409d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b07181-e7c2-44b7-aaa6-c64fd2bf196c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d46dd0-01c0-47a2-a588-5f305c07a48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d3ae5e-22b4-4e3e-a0dc-29552732df74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c00fb96-e317-4a9d-92f0-b93671a16ef1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe1fa5d-9ad8-4fb0-a5a6-aa23d6c18fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a33fb91-9de9-41d8-aefe-5cb310c818c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b699d0-0f53-470d-aa78-d01ef10e55ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8095ae-aa5e-4718-a5a7-f79628540354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe53e6-9acd-40fd-81c6-70f92a9fb922",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a256bdd-e3f1-4715-860f-d42fb2e633a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67191df5-f64c-4973-8e98-d82f0cfa624e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a60bd2-aaef-4f65-9dbd-b18861772a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e512d2-2a6c-426f-ba2f-c58f1e55d509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b3ec8a-72b1-48ba-addd-2b62f95ec8dc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061cd8e2-77b0-4816-ab9b-8c42ede26ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4283f8c4-e883-4c53-b750-cf96d07d615e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2656c8-75e0-4fc6-a5ea-df4590255871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f541531-482c-4cb4-af58-10d7e02f54a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8340eae-edc2-46ac-9f3b-018e62e749b8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd81d2b1-2f48-4705-94d0-da8e7263ba84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5aa792-a6a7-4807-8de0-adbb14af302d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3849f446-fd40-4207-9ea5-467eb04b3199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3fbfe8-1f3d-446d-a132-0bf326bec3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b930ac62-c94a-48cb-8400-e9b6d542958e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff81d2b5-c32d-4750-8f60-b7b2b6a2247e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc5fe97-63ad-42ee-9f60-00f3d7ca8060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ada4ba-7b93-441d-81cb-3b41142b65f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199df4e3-5e82-47a6-8a6b-5642b83aff93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b33fd3-fb00-43bb-b002-f1b3bfebf087",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5508af5d-4cce-4dcb-baf9-8002788c6f1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba075ceb-7ca1-46b0-b754-001b57cbec23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b496b25-fd3e-4532-8145-ef6868941a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f6b0b8-4df4-4ebe-965d-0d379c828ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105d0efe-7a8c-4ac5-9328-90f9991a23cd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba8a878-d62e-421f-b729-ab0320bb9596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37c39db5-31c1-467b-983b-9a3e9f8efc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615396e5-fd5d-4785-89c2-f8713c747c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0d0f96-a50c-4b2c-927f-29cc287114a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef398e85-4ec9-4e2a-b3fe-87f9c472349e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02222130-8626-42e0-991e-3e1b80dcad47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ceaff49-250d-458e-b682-d5d01089d1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288cce65-cda4-44a3-87dc-933a0b9efbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e58836-d131-4c73-b093-0cb3ccdcbf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3288c0a-ff59-4a2b-a960-782dca4a92dd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d349738-553e-4a0d-b309-953422d3194f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807212b3-20b9-47d4-b61c-b4e22957130a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7dc4ed-bcf8-4781-a434-d9563cfad55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bac70fb-8529-4852-9f14-9c23cf552ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2264ae3f-f305-4302-95dd-aceacc9ec28a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89428eeb-6f9b-44c4-bba6-127b252dda18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bab9235-b863-46f4-86f4-ecacaa183076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d40bb7c-8eae-4bd9-b738-286d420bd11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53100f79-79a0-4c5e-8fb1-6e65375b4f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bdcd91-0d67-4c4e-8b44-9cc51ccf1db5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c986ac0-3901-4f91-9477-2b5370777214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737902fd-a2c8-42fd-a423-1d93d069e75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3613bc-ac87-49ad-be66-232a89e5cbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ed6e2d-203c-41fe-a3d9-1fff3d9cf94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caf69bf-d22d-401d-892f-4533d66c66df",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4a5848-dcf7-401e-a032-032b56bc66fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3737527-dc9c-4cec-83e9-1dd919f554d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44780e61-10e1-44c0-bd2a-918368161c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14c49da-ce94-4916-af66-c18ae3b89c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4263a2d8-4260-4742-a2fb-052a32471e15",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06cba7c-f7da-4325-9a80-e0f10759f4ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e28181e-946a-4c6b-90b0-3009b8874206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d160f10-8daa-446d-bbe3-6f692c291629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd99b47-424c-4b50-874e-68693de758e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bd2ba3-ca58-4cfa-a336-130f73e44fc9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c528f4c3-3498-437c-a5df-ce3d2c57f28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9e43a9-fe48-4513-bec3-f75d4850f8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e144d8d0-4111-4985-9273-cca3e2cba5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93385c1d-456e-48b8-9655-9f0da2bb3151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc823946-f196-4602-b160-cacc13b9459f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90506e97-cbcd-43fd-a7c0-34f8d5d68cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a8e8917-128e-4c8c-8398-5b90dc22027d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546e62d0-7353-480d-9890-a54d30d9fccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f03c992-f8d3-4e85-9a06-7900634fdae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df39fbac-4970-4114-ae60-1febbcfebbeb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a7f731-0f30-4088-b177-3c82f9cb72f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d815dd36-4347-4008-b1c9-4be316da5647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03810ae-7b27-451b-b82b-282d7979eff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd8866e-31ed-487d-94d2-fd1079053719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c30b9e-f5de-4d21-a440-9d67d69741de",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c85e8f-ebdc-4406-909c-3c434c18607e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4f1472-5a6d-4fb2-ad75-a3207f17be3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb4f31b-c298-4cbe-9d14-77d321c176c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bd934b-dd2d-450c-83f4-6beff65e0f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6e4fef-2741-48ca-a5ad-8ac3f0405e2b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5a3ce9-2780-477b-a21f-3c1dbfb92705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1535707b-f6b6-495c-a4f4-9b7dfccf84d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d35b1aa-89e1-43e6-96c6-b1ee4c2c23cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e42457-622b-4062-b1d9-10bc3da774af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe696af8-3cb9-476f-817c-35ad6657bb27",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8cba47-0587-4dd3-9521-7ba41b2ced69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d10fe99-1a91-4e5f-aab5-6bdf6671cda8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166a62c3-80e5-4dbc-97ad-fd37a37379d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d25f50a-a137-4b58-86d5-33078468bb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dcfaed-d7eb-4909-8f4f-99b231896468",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09024254-dd74-4d52-be7b-846cfcbd0068",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e200d935-e67b-4511-aae8-eb9174f13a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8141640e-f350-47c6-ac73-105f69f4c798",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daaddf7b-53b5-42aa-9de7-22a383df2cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24a4672-1e92-4b3d-8f73-dca321a3e7bc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f749edc-63cc-45d2-bc5e-aec6e7efaebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2299a9b-2103-4b3b-adfa-dc9c0be24311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3a8fd4-a455-46b9-9f35-ead6c017dc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6766d635-6996-4a87-b163-97d3df423e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a68cb5-ad71-47c4-9d75-372a6f8debae",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe550f5-0ad9-4d00-a47d-7ebb8f032f56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88c3ed9-55eb-4baf-bf80-8cc503121620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a395551e-3686-41b6-a0a4-8df473c659cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec172053-fd1e-4742-8428-0766d2923b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef3e0df-d6cf-4b9d-9926-6f0616ff2c51",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bef278-379e-4cdf-be16-8b04c1e67b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0002252b-9ccb-492a-9b56-067fe64bbc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753cb3d7-7408-4c7f-87b2-5b3f8d75c54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00deb011-837d-4757-b7a4-560189a17a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99975623-2a36-4ae4-93d2-760312cb8938",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db471ce-0762-4519-8114-b253750161f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a702eeee-aa32-478c-b4c5-191d377c1e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46003733-827a-4258-93d1-da159c0cfba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb49f15-17d5-4bcd-8caa-da55118b6803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2af95a-a2cc-40a9-b01a-85a6401a3578",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca7d9e1-f839-48e7-99fa-571518184602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5efe71a6-1a63-4270-a9be-4db497338e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e2c408-5032-4172-9cd9-bab625070f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88345770-974f-4e44-9958-983560c64d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882492da-3dbc-4c71-9786-64313c421d2d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebdd288-2b22-4d06-8c04-dcec9db75ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "127d484b-b9c6-4c0e-b803-27136a273072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6375917d-5f01-4d30-8d02-f80cf2099c88",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb98b50-146f-463a-a2f1-95d0bcdd7d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8248cdd-42c1-404c-8eea-e20e7679eb47",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ae2368-45c1-445b-80e9-f78b8ba95179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5195f482-1ee2-4dfe-9683-bcfbeeec2054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb44c9b-3a7a-4c50-ad3c-1699f6b8c691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc160cb-de6e-42d4-806e-32b80f15efa0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69e51f50-5515-4bd7-a2e1-fa2c65060acc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88405da8-f3d9-478d-b9bb-450477474ed9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a53ee7d8-4f3a-4480-84cc-4c02424ea3f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c651bcde-21d2-4b2d-b6df-08a0a18d7608"
                    }
                  }
                ]
              },
              {
                "id": "464833d0-50d4-41c7-a107-60f6eb66adb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db1a263c-61b7-4ea0-afc7-0960cf839891",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9392c572-3ee6-4ef5-be12-4c78e9603123",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "43ca620c-5a1f-4ee7-9367-dab9f4783e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925d3fb1-532c-4180-8af3-3d8babc12c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40cf2b88-b664-438c-8030-662f8c3415ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4785c6-ab8f-4f5c-a80c-b9f9f31311f0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789212de-f89c-47d0-a1d3-42a0c8160ceb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c88e030f-1c6a-4bda-87f0-3d02c5bc19ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72a68c6-a0d3-4ac3-ab76-75886db767b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d485d5f5-9f64-4477-aca5-651db6d71e8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9baa645-0867-4cd8-8e2f-29a61fff8c46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "976cc557-3c68-4868-9158-307be2727e69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6ae880e-c58e-4409-9a74-a3b620987f4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f68f471-7ef8-4eee-aebd-4e6ae4c01398"
                    }
                  }
                ]
              },
              {
                "id": "bab1d876-0f1f-4c86-8c33-5830c4933317",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8d5d29ad-4940-41ec-8a31-d31c5ec28452",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3aa407-0c16-463d-8afc-cf0acf36ad1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "101c4b03-51c1-4289-93ca-2639556f8d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13484a32-6396-4544-ac5b-e6968283eaae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127bbe70-8069-41f1-93a6-fa54c3c3933f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c8a5fb2b-d740-4c3e-a522-60e796640cc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb0979f3-18f4-4279-8504-3830c477b228",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebcb4fa0-75f5-4091-b73c-21d74b883b7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d94f04c7-060f-44f5-a497-5a70d8d6275c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93134900-6220-480b-b4e4-81191ae4ecae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a680bc8-9258-4277-b22e-99491e984a20"
                    }
                  }
                ]
              },
              {
                "id": "1acdd047-efab-4cb3-a9c6-e08c958cd2a7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f65b83cd-f86b-4398-ae0c-513c63f847bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "185def6d-19ef-401e-84ba-fc3bbea1ab8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e16f87de-da85-4600-ba31-7fc3f3a02c75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac65310c-8973-46cc-8443-5ef9ee0fcbe0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66a1148f-234a-4a42-b57e-ff11501b8741",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5fd930a9-598a-490d-afba-000ee7dcef1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "089da9cd-10ba-4fbb-a549-bb9732135c68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f1ee30c-3731-468b-9a4f-dc5aebf99c92"
            }
          }
        ]
      },
      {
        "id": "115c8302-79a2-46c1-b968-f0a6833e7f88",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eeaa06d1-970a-42bb-b8e8-ca02f63e84de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93c7bbf9-9527-481b-93f8-25e116bdd294",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fc6d5fd-a6ce-49b7-9229-bdb8f9bd5242",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e6bcbc-98d9-4a93-958b-2fe33a8d10c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1e3ca5eb-b972-4560-81a1-4de414791a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47eeec9-ed67-4b7d-a43f-1ce77b705492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2cebf7a-c8f7-4867-b360-f92bd5c7692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e821d5-636d-4901-bcdf-9944578c3b31",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcae5b5b-a7d9-4216-a03d-c685a4f19fb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aac41eae-2de8-48e4-80c2-8d719d29a2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9896f221-ec7b-4147-9525-efcbb63f774a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fb9becb-05db-48f6-9e1a-fb7b284640df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "267bc133-536b-4eb9-b499-55d6b141abc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "800e028b-2a18-4190-9da6-f0885d6ded8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3880ef79-ad24-40b4-b6c4-43c17d883e25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b347de2c-ba33-4498-a17d-b41f719cb854"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e1b0c9b-54aa-4d12-9d2b-ede088c0263a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0d463738-32fb-49e8-899c-d7c1ca6e2e51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "451bd4e7-0d49-46e1-8961-fb06a46c87fb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f330dca9-b54a-48e3-a3c9-fab2728e14ee"
            }
          }
        ]
      },
      {
        "id": "be59c955-27a0-49c7-b555-2a4873aeb02d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "13d73aa4-0422-4e47-9ab4-e244789b1e4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b1832ca-4fc7-4410-8494-8ae3b080518f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e8e718f-3836-4f96-a75f-cc60b752816d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a4ba2e-0f00-4fcf-8884-2add7fe887e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8ef102a-bddb-4309-83ea-3eee81a2fd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8921ae1-f6c4-4cb9-a6f5-47c04c125e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "519f3217-712a-45d4-80d0-87fec9bb5faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb51e4f-6f12-4b0d-9256-63d358d1ecfe",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8793e1-a950-4a24-b837-2d35810faf0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b4973ef2-f92f-41cd-b352-9beb30791e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c640899-edf2-42b3-98f0-fe7dacf766f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b55ed73-1da0-4071-a945-f059c4acbaeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bef8277-be74-4c00-be1a-97f424248452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e05a9594-c0cb-4a02-9b5a-d9914ad64c33"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab374671-e29d-40a9-aa55-4acc474c44f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7382dc3-196a-4bac-8afe-f05f1a4f9bbf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de6afb50-a6cd-49ae-89e1-b7c7114dfc33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89bf5aea-a596-4268-8c10-05af426edfe2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66b1c4fc-0826-4547-b396-b9db1da21186",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "976b2ef2-c432-47d5-b111-7f2f2eb851b4"
            }
          }
        ]
      },
      {
        "id": "9955a119-687f-47a4-9f08-43f503855529",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3d018d78-342a-4449-b528-927c1ad82966",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02ca2581-9708-411f-9035-55e5e272c062",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16cdd15d-8469-40e1-8cf6-23f1b47522f1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb886508-44d1-4bd5-a2a3-8cbf280c4a6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3079b263-db4f-4dea-a8be-676855dfe721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc45ad39-f2bb-43a7-838c-db0af52c51aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51b04f8c-36da-4b19-ad80-5c80d5273213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531bc2d5-4a33-4a02-a2a6-505152bf3127",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51693ee4-70ef-4e33-adaa-7620edc7bf7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f91c5733-c0ae-4fa6-adef-b19c9dbbf4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0421792-3ec2-4f92-a51e-4ef692a41920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a499c9c-76ca-44e5-8e9e-5b95e8c070d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02ff3bc7-4cf0-4b08-9c80-3f7d1ee34d97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b634e58-c96f-4c20-b46c-a3315825b394"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5c70983-2fcc-423f-a782-3a7e1308a420",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7270e39b-c38d-430c-823f-e33f6905f82f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7add135d-aabd-424e-89e4-5d6f3d50b4bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6b000744-d70a-423b-878b-4c2da3c98b67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "414ef47f-2622-401b-97d4-dc612332b846",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e47dbbb6-b7fa-4c96-95d1-0d86896a507f"
            }
          }
        ]
      },
      {
        "id": "0129a6a0-75ed-46b4-93f7-020149ec67d0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dd81120-e39c-4988-8f63-946555bb9319",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0f9801f-9197-466a-b43d-a933b6bab14a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1356e9de-e236-4c34-93db-80db1036edaf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78940fd3-997c-47f1-83ad-372c4c31a712",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c207905e-ae10-455e-b7ed-68559aa50bc2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 583.4980694980694,
      "responseMin": 19,
      "responseMax": 7145,
      "responseSd": 691.2670833319087,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678150038300,
      "completed": 1678150199963
    },
    "executions": [
      {
        "id": "cc05929d-12c2-4a63-9714-b96cf7c87f16",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "59bf38cb-0d40-49f9-b416-752575b555e3",
          "httpRequestId": "6389bcd6-392e-41fe-864e-a55f507f3ac3"
        },
        "item": {
          "id": "cc05929d-12c2-4a63-9714-b96cf7c87f16",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1c83f2ab-61d1-4b00-8157-37409fa5f652",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 0
        }
      },
      {
        "id": "15634d4a-894c-4ea2-be88-51890128e0cb",
        "cursor": {
          "ref": "7ddc8858-f3a4-41c4-8a43-006415b8be86",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "47d28d47-971b-4fc0-9522-0bff090b39d9"
        },
        "item": {
          "id": "15634d4a-894c-4ea2-be88-51890128e0cb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c36649b1-11c8-45b5-8f31-276c7a59fa29",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "2008c3bc-1ac8-4f27-811b-6480f88b6f14",
        "cursor": {
          "ref": "79b3a03e-8cfd-4aad-92ca-609b18446da0",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2df84458-faad-4609-8c71-aa740d520806"
        },
        "item": {
          "id": "2008c3bc-1ac8-4f27-811b-6480f88b6f14",
          "name": "did_json"
        },
        "response": {
          "id": "5d2ae981-5ef6-48b7-98e1-d48c6fd4bf6c",
          "status": "OK",
          "code": 200,
          "responseTime": 769,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a1e52-7bbe-4f00-92fc-7124b40603a9",
        "cursor": {
          "ref": "21adfd1e-c318-440d-8e6f-f2bdaa61261d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f0472ea1-a6a3-4e21-b9b9-10ef2af90b4e"
        },
        "item": {
          "id": "733a1e52-7bbe-4f00-92fc-7124b40603a9",
          "name": "did:invalid"
        },
        "response": {
          "id": "cb909dd7-bf24-470e-9257-c9ec2f2bb41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733a1e52-7bbe-4f00-92fc-7124b40603a9",
        "cursor": {
          "ref": "21adfd1e-c318-440d-8e6f-f2bdaa61261d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f0472ea1-a6a3-4e21-b9b9-10ef2af90b4e"
        },
        "item": {
          "id": "733a1e52-7bbe-4f00-92fc-7124b40603a9",
          "name": "did:invalid"
        },
        "response": {
          "id": "cb909dd7-bf24-470e-9257-c9ec2f2bb41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1382f31-491c-4039-9bce-9e308cf30f74",
        "cursor": {
          "ref": "4b269d36-7d5a-4afd-b47d-7481731c4158",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "03e8b1d4-0bcc-4b62-86de-e3a1e345b6ba"
        },
        "item": {
          "id": "d1382f31-491c-4039-9bce-9e308cf30f74",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b54557c7-88e0-457e-9d09-3e550ae9702e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 749,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206a7e3b-26b6-40da-80e8-6efc7de28d94",
        "cursor": {
          "ref": "4faf43e7-1bd8-4650-8317-4ca6d495b1e4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "db8bbc1e-f401-4b54-bbf0-74311e9ec5e6"
        },
        "item": {
          "id": "206a7e3b-26b6-40da-80e8-6efc7de28d94",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c674c876-db1b-4b94-ba09-c88cc12de129",
          "status": "Not Found",
          "code": 404,
          "responseTime": 536,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830d561a-2f0d-4271-890a-3706251f7c1b",
        "cursor": {
          "ref": "efebedb6-924d-47cf-a450-edc248d0a400",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3d271585-fc0a-4f7d-a583-db576dce12e6"
        },
        "item": {
          "id": "830d561a-2f0d-4271-890a-3706251f7c1b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "68b38bdf-c59c-47d1-9805-685615a445c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce73fd5a-fefc-4749-859b-d596a83f9ecc",
        "cursor": {
          "ref": "83ff1f06-8f27-4fa6-aa0c-9dac9f54992d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ed105a91-a4ad-4370-9855-14e4a3fc21b7"
        },
        "item": {
          "id": "ce73fd5a-fefc-4749-859b-d596a83f9ecc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b30ad89d-58dc-4bba-8e42-ba6e6ad85ce9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce73fd5a-fefc-4749-859b-d596a83f9ecc",
        "cursor": {
          "ref": "83ff1f06-8f27-4fa6-aa0c-9dac9f54992d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ed105a91-a4ad-4370-9855-14e4a3fc21b7"
        },
        "item": {
          "id": "ce73fd5a-fefc-4749-859b-d596a83f9ecc",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b30ad89d-58dc-4bba-8e42-ba6e6ad85ce9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1581ae-bf57-4fb6-ace2-a25235360278",
        "cursor": {
          "ref": "ee89b389-afea-4db0-b8ca-3a097de36c37",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4d3640d9-ff40-4a04-a289-26de109a3fca"
        },
        "item": {
          "id": "cf1581ae-bf57-4fb6-ace2-a25235360278",
          "name": "identifiers"
        },
        "response": {
          "id": "fee54d4d-3b16-4bfe-b7af-bbfa3731ebbd",
          "status": "OK",
          "code": 200,
          "responseTime": 935,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24d27cf-80cb-44a4-808c-514d39c87787",
        "cursor": {
          "ref": "c0e7d342-d8b9-4a8c-a816-0a8559ee562f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b51fbe07-d5f9-47f9-b916-45ca9f0c93f8"
        },
        "item": {
          "id": "c24d27cf-80cb-44a4-808c-514d39c87787",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "55dc70e0-35e6-4759-a930-4d5f12374cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24d27cf-80cb-44a4-808c-514d39c87787",
        "cursor": {
          "ref": "c0e7d342-d8b9-4a8c-a816-0a8559ee562f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b51fbe07-d5f9-47f9-b916-45ca9f0c93f8"
        },
        "item": {
          "id": "c24d27cf-80cb-44a4-808c-514d39c87787",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "55dc70e0-35e6-4759-a930-4d5f12374cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e642d6b2-a2b3-4df4-8971-02ae12ba4999",
        "cursor": {
          "ref": "a1c964b4-748d-4f32-9abd-64ba826ea294",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6bca17ed-8fc7-47e8-a9f4-bc08cbcc7b98"
        },
        "item": {
          "id": "e642d6b2-a2b3-4df4-8971-02ae12ba4999",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "97fed89d-67a6-4f7d-96b4-41b1ac83b98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd6f560-703c-4102-a5cf-f7213ddff71c",
        "cursor": {
          "ref": "21a68860-6ee4-4593-9304-1ee4873c45a7",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e7ce8041-1cfa-409a-ad42-bdb13c304251"
        },
        "item": {
          "id": "fcd6f560-703c-4102-a5cf-f7213ddff71c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "819e116c-5556-4f4b-9dc7-cf13482222c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b678f5f-9238-4cc5-b33e-b3560bfe54c3",
        "cursor": {
          "ref": "80a76fe3-9456-4bac-b1ed-7262db2946a7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9e76fad4-c405-4172-a7e3-1ec2530bdec0"
        },
        "item": {
          "id": "0b678f5f-9238-4cc5-b33e-b3560bfe54c3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "469095c4-fa6f-477d-8177-55a4c7b7fb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d102a1f6-d50f-4fd0-a9ff-4630dbaa4f85",
        "cursor": {
          "ref": "36ffd2e6-5ea8-4300-aea0-88514a2e93a2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f4279b02-43be-4414-9d51-052822da5ce1"
        },
        "item": {
          "id": "d102a1f6-d50f-4fd0-a9ff-4630dbaa4f85",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9ac14245-4609-4f4a-be2b-1df88268ccb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75971186-b3e6-44eb-bbc4-19487f240066",
        "cursor": {
          "ref": "d9c71d3f-1d37-453f-bbf4-34acf178a866",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9ba3051c-a860-490b-a37c-d8ec277c0242"
        },
        "item": {
          "id": "75971186-b3e6-44eb-bbc4-19487f240066",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a47247df-07f9-49aa-8238-497c1c4ea008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a72c67-4a29-44dc-88da-1624ca4fe37b",
        "cursor": {
          "ref": "86ba9812-54e5-4456-b0a5-b578f07c9ca1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f2f0492d-648d-4017-9b1e-cfe596bea6ce"
        },
        "item": {
          "id": "a8a72c67-4a29-44dc-88da-1624ca4fe37b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "85eb5c37-46dd-4b23-9827-c535a158d05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f2c50-2a69-46fe-8e82-6d9db136fd1b",
        "cursor": {
          "ref": "0d50d4da-3c8d-4a9f-8075-30f9862cb609",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a020391e-b6f5-468c-a02d-a2cfcd24c6dc"
        },
        "item": {
          "id": "a64f2c50-2a69-46fe-8e82-6d9db136fd1b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e1e0d894-321c-4855-9eb7-42c4cf4d2fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e6bdf9-23a1-461f-8b8d-4d3ca1276bcf",
        "cursor": {
          "ref": "9b934509-99f2-45ca-9eb1-92e563e4266b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14e8b866-4b4a-4a2e-9961-4f6d6a2fa580"
        },
        "item": {
          "id": "e6e6bdf9-23a1-461f-8b8d-4d3ca1276bcf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a9f2dcc3-bc43-49c0-bde7-07bc1e7b48a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe0400c-ff2c-455f-b063-58ba9c7bea12",
        "cursor": {
          "ref": "56057dee-59c6-4446-8785-2ac7641a7028",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "26018f3b-bddb-4f0a-b93a-a6bda1d0f3da"
        },
        "item": {
          "id": "bfe0400c-ff2c-455f-b063-58ba9c7bea12",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "deb12c24-df81-4fd0-95a7-8343a90630fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b4d10b-f765-4bf3-bf01-905a1a2e79b9",
        "cursor": {
          "ref": "55f71ccf-262e-4f55-9360-c7ea25dd7acb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e028b650-03d7-463e-aca7-0409764e3892"
        },
        "item": {
          "id": "79b4d10b-f765-4bf3-bf01-905a1a2e79b9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f052f0b-f281-4637-a1aa-61e8b9f63b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3bcc11-066c-4a19-960d-7f32dba18e56",
        "cursor": {
          "ref": "51b87891-4a9c-4276-8489-ff9bd8e8d437",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8727438-581a-4712-821e-5dd5da25b0e1"
        },
        "item": {
          "id": "eb3bcc11-066c-4a19-960d-7f32dba18e56",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "514123cc-886c-4bb9-99dc-e770f1bfb1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0ef85c-f583-407d-a4c9-15a122ac4bb7",
        "cursor": {
          "ref": "89570572-11f6-4ac4-b3ad-743a7da3f15e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce316638-7f4b-44f0-844f-888a1b00fdb2"
        },
        "item": {
          "id": "cd0ef85c-f583-407d-a4c9-15a122ac4bb7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4abaa1d1-9dd5-4aa7-9219-884e5f9c6f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7c307b-9715-405d-ba5c-a0f2e468ad5d",
        "cursor": {
          "ref": "a28662a6-bdc7-4b6e-b120-cd8a6a981776",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "467159bf-3382-4894-b12d-6843b38c64af"
        },
        "item": {
          "id": "8a7c307b-9715-405d-ba5c-a0f2e468ad5d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "234d37a2-d63f-40fa-8e3a-6bf4b1bd6d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19bfc8d-635b-4e8d-8991-c69355d20187",
        "cursor": {
          "ref": "0243bf92-27d8-425c-bb0c-7032baf5d715",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3f24cbda-7cc3-4353-b64d-1b500bd274dc"
        },
        "item": {
          "id": "c19bfc8d-635b-4e8d-8991-c69355d20187",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b0d04021-30d0-44a5-8d3f-23fa1ff5a9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac87089-8ce3-49b0-a343-501fd907e7fc",
        "cursor": {
          "ref": "0bdc5034-d409-4a45-9fd1-75bab567e673",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f6720fe3-10c2-4f5e-b6fa-93c45baf74f3"
        },
        "item": {
          "id": "bac87089-8ce3-49b0-a343-501fd907e7fc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dceeb5bb-5243-44e2-afd3-7db49464aa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98e1fad-000f-43c2-892a-9cfc9f7dfa69",
        "cursor": {
          "ref": "adcbd092-9064-49ef-b2b8-f2eda01f0a00",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a04794b8-837c-4934-b57b-f1444f3bf054"
        },
        "item": {
          "id": "c98e1fad-000f-43c2-892a-9cfc9f7dfa69",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6167a3bf-f736-4bc6-b78e-dadcb7033538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b347015c-f696-446b-8a4c-371357426278",
        "cursor": {
          "ref": "aac6859d-d8f3-42b4-b0e9-196f4fd64427",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e029a22d-81b2-4ba7-bf7b-ae911671a8eb"
        },
        "item": {
          "id": "b347015c-f696-446b-8a4c-371357426278",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9c3c13c8-4794-431b-b4d1-db0378d06758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d670989-7d44-47f8-985b-93a0085b610d",
        "cursor": {
          "ref": "f1bedc12-98e1-4b54-b83e-971d817b1785",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8304a3de-14c2-4b2f-a97e-a80a659e2e48"
        },
        "item": {
          "id": "6d670989-7d44-47f8-985b-93a0085b610d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1568b792-5be4-4b89-8803-b911d064fc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0980951c-ed71-4f45-997b-262019d4fb4d",
        "cursor": {
          "ref": "f859ecd9-5ca0-4aa9-8825-25d35d7e49f8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5e113f73-4863-4ed2-83f4-6953cdd93a8b"
        },
        "item": {
          "id": "0980951c-ed71-4f45-997b-262019d4fb4d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "13f6ec0d-c758-45e6-8cdc-041f48d30816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd823115-9953-4ab6-bace-f13f643aec7a",
        "cursor": {
          "ref": "a1a0ddc3-2de2-4a8d-8c21-360f0f518779",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "48578f79-1fad-4559-afaa-adf189842ad4"
        },
        "item": {
          "id": "dd823115-9953-4ab6-bace-f13f643aec7a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0b29a767-f844-4df7-8dbc-29fb776d587b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4326d6b2-cdf7-4a50-a908-632def85d724",
        "cursor": {
          "ref": "8d605c0f-8c70-4c4c-80dd-e32c0991c951",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "78e9563d-d84b-45fb-9357-0036d9643001"
        },
        "item": {
          "id": "4326d6b2-cdf7-4a50-a908-632def85d724",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "abb326a4-9080-40ae-9782-6ff97d67246d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc90e257-6b7c-4906-94e1-ba49775ac096",
        "cursor": {
          "ref": "bac4e675-b9c4-42d0-9335-14dd598f998d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "955fd157-cdbb-429b-9614-6af99ee8c0ac"
        },
        "item": {
          "id": "cc90e257-6b7c-4906-94e1-ba49775ac096",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d9b0dbdf-0968-4a08-8892-30bf70f375d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed9bdd4-35e7-4ffb-b69d-0bef7fdd5f58",
        "cursor": {
          "ref": "c13ef08f-a50a-421f-9f99-c7afe5f77b4e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b8432e66-c1cc-44ba-9557-e60aa6c42ae5"
        },
        "item": {
          "id": "4ed9bdd4-35e7-4ffb-b69d-0bef7fdd5f58",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3d8dbbc8-f457-4f5f-9369-a2f257b8d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828c9ce8-62f3-4073-9417-f6449e7acd59",
        "cursor": {
          "ref": "e6df0dff-b2aa-4a71-a620-20df3dbd35ab",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "669172a0-6b36-4133-b749-4ec90e83a854"
        },
        "item": {
          "id": "828c9ce8-62f3-4073-9417-f6449e7acd59",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "03785840-6efa-4db6-be1e-6997369082fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3b91ab-7bcb-4c60-9e10-ec4a335a5e9b",
        "cursor": {
          "ref": "e49d440e-08a0-4f98-ae0c-836e73ffb257",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a2231c87-4434-4e87-8c5d-b735d08649c9"
        },
        "item": {
          "id": "de3b91ab-7bcb-4c60-9e10-ec4a335a5e9b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1b39c86c-d3db-4a59-8b81-e9f18b52c0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96c8562-5d6f-4006-a097-bfb0bcff21c7",
        "cursor": {
          "ref": "7719a22d-dfe0-44f8-8e1c-1150ad6539f7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "208e3559-1f4e-4452-b734-eea43c0e2e8d"
        },
        "item": {
          "id": "d96c8562-5d6f-4006-a097-bfb0bcff21c7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7fb6e297-2ffc-495a-97c7-423db379f22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12db8491-8c3d-4b5e-a285-cd3c649de043",
        "cursor": {
          "ref": "283c0d59-7eeb-48cf-8fb3-d37f70c193d2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "380edfd5-12e2-4292-9e92-7c148e58287a"
        },
        "item": {
          "id": "12db8491-8c3d-4b5e-a285-cd3c649de043",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "eab40b7e-6086-42a9-af56-25e8bf3c3187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507863b7-b06e-4d5b-b3e2-39c1be6ef180",
        "cursor": {
          "ref": "3c01aeac-5ea3-46f8-a70e-c51f3afcbd88",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "de4cbf2a-47ac-46da-b750-77937310ae50"
        },
        "item": {
          "id": "507863b7-b06e-4d5b-b3e2-39c1be6ef180",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d5e56608-3280-4ab7-8623-4855c554025f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75694f42-4c2e-471e-a8e7-8fb5250c0f25",
        "cursor": {
          "ref": "248633a9-d450-418e-a333-1cfaa4baa567",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f7d3c443-d4dd-4038-9c66-2061ee7f9467"
        },
        "item": {
          "id": "75694f42-4c2e-471e-a8e7-8fb5250c0f25",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef6a1a54-816d-443e-8206-3fa3ad1b4c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4848c5ff-6c87-4ffc-8ccb-42791e4780cb",
        "cursor": {
          "ref": "78f5248d-5f3d-4ec9-9f08-46cd9aa8ec25",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "37279ce3-563c-4660-9f6e-c2ad02c7bea9"
        },
        "item": {
          "id": "4848c5ff-6c87-4ffc-8ccb-42791e4780cb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "75553e6c-62aa-43dd-a93b-5ac540bde1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8682814e-d194-4c4b-86f2-1e7ed35a8565",
        "cursor": {
          "ref": "227c53b5-988f-4d41-bd4e-5db806ae967b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b54b0415-3af7-41bf-a91c-7547f43f6ffb"
        },
        "item": {
          "id": "8682814e-d194-4c4b-86f2-1e7ed35a8565",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a43765ef-a65f-40bc-a8d9-a3ba023dfdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ec9b59-13d0-42d5-8189-4e17ab6675ca",
        "cursor": {
          "ref": "ffda7a22-d37d-45c8-8ec0-b20c6edc21a8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "20c01274-d185-4461-a95c-04378e684ce7"
        },
        "item": {
          "id": "d7ec9b59-13d0-42d5-8189-4e17ab6675ca",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4f1a67a7-2f05-4ecc-84fa-6bc71a7c23e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16673b4b-4bdb-4071-9964-7eb91583da64",
        "cursor": {
          "ref": "135485c4-dfc8-4c66-bccf-1fb60061bddd",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7f9a51db-f2ff-45eb-a5c1-b200ff789ed4"
        },
        "item": {
          "id": "16673b4b-4bdb-4071-9964-7eb91583da64",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "38bb46f3-3a5d-4475-b969-5d706e9b92dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2a2ab5-4505-4f86-8cfe-f1f570420540",
        "cursor": {
          "ref": "211274c7-b16a-4d6d-a840-a35ae6c7c0f8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6f33cb83-bf1d-4193-9a9c-6fd849db0a8d"
        },
        "item": {
          "id": "bb2a2ab5-4505-4f86-8cfe-f1f570420540",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "47803e14-f0f7-4e4b-8dde-638b8b992ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973a3f92-4641-44d5-a0be-4a661bfc3b38",
        "cursor": {
          "ref": "e435201b-cf57-4b99-8ac3-e514add9b111",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "475b4a89-38f3-43f8-bb03-5181fd66384f"
        },
        "item": {
          "id": "973a3f92-4641-44d5-a0be-4a661bfc3b38",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b229ba0a-3d06-439e-8d01-d02cfd4d4df2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 626,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e640a7df-d123-46bf-826a-78396ec1a709",
        "cursor": {
          "ref": "3145a94d-6c26-47f5-bb5b-068d0392ba41",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "edc01e57-8615-494e-b1c2-beffe0c29ffb"
        },
        "item": {
          "id": "e640a7df-d123-46bf-826a-78396ec1a709",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a1104938-3045-4ae0-ab2d-fa787145facb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4379e2aa-0737-4d02-bfe7-76ef36e6ce37",
        "cursor": {
          "ref": "a9d07fe2-ae31-465b-b113-ef43affe7a11",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "98594b4a-436b-47ac-8c35-6a3be43d3cf4"
        },
        "item": {
          "id": "4379e2aa-0737-4d02-bfe7-76ef36e6ce37",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b098fdb9-22db-46db-afbb-b66e19791025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6622fc1d-808e-46d2-9b1a-298e50e401f1",
        "cursor": {
          "ref": "bef4eb62-5f1c-41c6-ae4d-b5669d0db15e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "819dfc64-7c0f-4a7c-ba8c-2c87ba49321e"
        },
        "item": {
          "id": "6622fc1d-808e-46d2-9b1a-298e50e401f1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dd0a58e4-3ab3-4bfd-9ceb-9b4864413396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419534c8-0df0-44b7-af2c-9ccb6e008856",
        "cursor": {
          "ref": "9ef63514-3e5f-4960-87e5-f40189919bb7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f2ffa73a-8a59-46d3-a52b-3e3ac16d53ff"
        },
        "item": {
          "id": "419534c8-0df0-44b7-af2c-9ccb6e008856",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "776e96fd-cfa8-40e3-a9fa-2bdb0063157a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e2334c-7095-47af-a9a5-61a6d336a8c4",
        "cursor": {
          "ref": "466949f4-034a-4cce-ba28-1f366b2c99fa",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "89d18e52-4061-410d-af1e-703d4f51cb65"
        },
        "item": {
          "id": "b2e2334c-7095-47af-a9a5-61a6d336a8c4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "555a3936-c8b5-4654-8923-ed3888201e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0d8ed1-22d1-49a4-a325-ac38546ee5cf",
        "cursor": {
          "ref": "df0f361a-7265-4ea6-8eb1-9206022a8179",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b268245d-ec0a-4abf-9397-a6ed1986d945"
        },
        "item": {
          "id": "6b0d8ed1-22d1-49a4-a325-ac38546ee5cf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4478b9ba-9751-4630-88d4-ab09eb93beb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7334b12-510d-4d69-996d-559d8f2f2d9a",
        "cursor": {
          "ref": "ae81f5d7-ed54-4669-b9ac-e065f3ec844b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "905daae7-e92f-45d5-9a49-6b0dbd3abe96"
        },
        "item": {
          "id": "c7334b12-510d-4d69-996d-559d8f2f2d9a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a5d009c9-da15-453a-b77e-57cd56db4f62",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 627,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d4b4e0-db15-466c-8a3a-e94769321bc1",
        "cursor": {
          "ref": "31a52b25-62c8-4677-9634-c01701bd3764",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "266ab32f-b8a9-4de1-bc24-41df796c2329"
        },
        "item": {
          "id": "62d4b4e0-db15-466c-8a3a-e94769321bc1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0a55bc2-3fae-403a-9bc4-658bc3a29ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22abd453-f69a-434f-88cd-02cd0767446b",
        "cursor": {
          "ref": "41a33350-aa71-4077-8e5b-4ddd05b92c71",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "74f03800-d6bc-46a9-a6d3-ea7a5247a092"
        },
        "item": {
          "id": "22abd453-f69a-434f-88cd-02cd0767446b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "eae0e05a-bf18-4c4c-86d1-efc37f0f1898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ba0c0b-a87e-4d98-8f9a-9ce37b42d956",
        "cursor": {
          "ref": "aedd27eb-0ea4-421a-bf10-54b68ea468b4",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "be281678-621f-49fd-81c8-b2f5b503ce95"
        },
        "item": {
          "id": "a8ba0c0b-a87e-4d98-8f9a-9ce37b42d956",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9a4290dd-4aef-4614-977f-35640239f68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1112ed3e-c2ea-49a0-86fd-f924b2aba00d",
        "cursor": {
          "ref": "c8b47c04-79ef-4956-817e-6c9fcffa1034",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "09e141d8-fd61-4388-bdae-a0b3287e7eac"
        },
        "item": {
          "id": "1112ed3e-c2ea-49a0-86fd-f924b2aba00d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2c0efb65-3a2e-45fc-8210-31edf0374e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403732a0-7c0a-4725-8085-1cf2ff7d4c2f",
        "cursor": {
          "ref": "0836eab1-c95d-46d3-b96b-ffcfc45266aa",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0aa994f3-235c-43a1-8b33-9f7ffa9a136f"
        },
        "item": {
          "id": "403732a0-7c0a-4725-8085-1cf2ff7d4c2f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "98c28317-0fed-468e-b678-9aaf8227382a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17502ce-cd09-4ead-933e-51b510217b03",
        "cursor": {
          "ref": "6d660a70-428f-4832-be6d-db90428bd5cc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "89c3293e-5b98-4316-82e7-492e091882e5"
        },
        "item": {
          "id": "f17502ce-cd09-4ead-933e-51b510217b03",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8860fe09-2c5d-45fd-a2a5-5ce7a14ce429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d54161-eac6-409f-ae34-7e303fa2280b",
        "cursor": {
          "ref": "fcb91fee-b1a9-44e0-b317-b0f5bc2e2964",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5838c0d3-fae3-4822-a4bc-674034d862bd"
        },
        "item": {
          "id": "33d54161-eac6-409f-ae34-7e303fa2280b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "538b7291-3876-403c-936d-d72c89b03f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dbefdb-d310-4edd-8a17-a0dec114db1a",
        "cursor": {
          "ref": "3e24e5cc-eb7a-459c-b23c-d9338a3bc9e2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "15fcfb3e-4bdb-4470-ae1b-7dea341220d2"
        },
        "item": {
          "id": "17dbefdb-d310-4edd-8a17-a0dec114db1a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "971ea576-2245-4032-9438-953060028c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ebdcf4-084f-47b0-a3ca-85b8b8265c8a",
        "cursor": {
          "ref": "5ce89dc1-954e-4d91-ae8d-58c15d18ab42",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ed49244c-0bea-4e6a-9bb6-735cf4edaa51"
        },
        "item": {
          "id": "77ebdcf4-084f-47b0-a3ca-85b8b8265c8a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2d2fedc3-d2d3-4649-8a0a-00f4484bc8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b0403a-1af7-4cbd-aef6-0c7eb71b1240",
        "cursor": {
          "ref": "eb05f8ba-8f51-486c-b5e0-e2b0a2d55f7c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "16d76e59-5416-46a0-8c2c-61c8d128695d"
        },
        "item": {
          "id": "f6b0403a-1af7-4cbd-aef6-0c7eb71b1240",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d1730bbe-c152-4073-9311-16ea1e1c69a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d5f3f1-09f9-404f-8727-73f1e1caa647",
        "cursor": {
          "ref": "6f77960c-3bea-4d3d-a8b8-fad1f8794249",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "57cc24ce-31e4-44fe-bc74-1caf8e93a531"
        },
        "item": {
          "id": "60d5f3f1-09f9-404f-8727-73f1e1caa647",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "38917e35-c815-400e-8d82-29f6ed764def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc02399b-6568-4d4d-83ce-f7ccc4624050",
        "cursor": {
          "ref": "099ebd8a-80f1-4d48-b843-72d26fc9ed83",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0bd7a84a-d062-46d3-82d6-2a9da045ce0d"
        },
        "item": {
          "id": "bc02399b-6568-4d4d-83ce-f7ccc4624050",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1194ac4d-a275-4be2-a724-10494c9b6dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56263c30-c4de-4e38-bfc7-004b6eee9b96",
        "cursor": {
          "ref": "a5f8074f-b421-4999-8b27-9fdc4a4d69e7",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f8992665-287b-4098-ab76-6e4d1caed1bd"
        },
        "item": {
          "id": "56263c30-c4de-4e38-bfc7-004b6eee9b96",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b7ad749f-6e34-4ad5-a523-50fbca7e27b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8417eebe-7e52-4605-a16a-a8abd71f6a02",
        "cursor": {
          "ref": "03be0bcd-b733-4ac6-9e99-47d6ee75acc1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5d36360-e2c7-410f-b586-93e9a506deb4"
        },
        "item": {
          "id": "8417eebe-7e52-4605-a16a-a8abd71f6a02",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "56aa0158-b524-49d1-b7ad-4100089e72f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c53996a-e2fc-4723-8340-ae1a8a8d7d2e",
        "cursor": {
          "ref": "81e5de2d-d4fb-40cf-bb6c-a557e8a05c01",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5d7dcff0-d9b2-4693-9cd3-d615fd6bc800"
        },
        "item": {
          "id": "7c53996a-e2fc-4723-8340-ae1a8a8d7d2e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "08bd8e53-e8d1-4a7e-8b32-b8171c47a316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9d7a04-2789-4511-8106-93c2bbb17edc",
        "cursor": {
          "ref": "8dd45c51-0f5b-4ca8-b41a-094a9938742e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "01f63bc6-2f9a-4ade-a404-a11a7580f585"
        },
        "item": {
          "id": "ad9d7a04-2789-4511-8106-93c2bbb17edc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3257d9cd-5244-4944-9cac-6c410bd6f47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f225cb0f-3e5c-46f1-866d-999c57366bac",
        "cursor": {
          "ref": "a0123269-d339-417c-9915-bdf24731f91f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "06c8cecf-8774-4394-8e94-9cade1170e9e"
        },
        "item": {
          "id": "f225cb0f-3e5c-46f1-866d-999c57366bac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1c2d84f4-71e7-4a44-9cba-8d094df1d093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada9b1d8-3a4a-47ce-8cbf-71696d20133b",
        "cursor": {
          "ref": "be949d19-6072-4ad3-86b3-2e94a71b09a1",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e92a14fb-9bac-4b3c-b9b6-3007e401ccee"
        },
        "item": {
          "id": "ada9b1d8-3a4a-47ce-8cbf-71696d20133b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d5dd685c-a0b9-4c33-9375-4af773c3459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa969571-5183-4848-8e9f-bf7107bfea3c",
        "cursor": {
          "ref": "1478d3d5-ed9c-4610-a085-73102c77220a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fb27e470-3a08-4513-91fd-4584dafd70e5"
        },
        "item": {
          "id": "aa969571-5183-4848-8e9f-bf7107bfea3c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9b871abc-dd12-495f-96fe-a512a2578062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77582636-b93a-4e1e-b003-ca4704b9a474",
        "cursor": {
          "ref": "b7dcbfd5-a4ff-4b90-8f57-0ee67ad09550",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "de526009-211b-4479-82c8-19032de28c05"
        },
        "item": {
          "id": "77582636-b93a-4e1e-b003-ca4704b9a474",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f98bc282-98e7-4deb-a497-fd82f3cfb171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112f9675-8bc3-4380-9880-4f1a44d9f6c8",
        "cursor": {
          "ref": "d038fd52-01a0-4c4d-a4b6-d4dbed3c3cf1",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "321cfbba-3633-4d7d-ab57-7ce17750df9a"
        },
        "item": {
          "id": "112f9675-8bc3-4380-9880-4f1a44d9f6c8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "aae4a507-380e-4b54-85ec-f61df43bd68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea1ad29-9cfc-4cff-9253-66aa64670c84",
        "cursor": {
          "ref": "daf0c195-1623-4e02-a05b-039f646e6107",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "22bb5a0f-3998-454e-8ddc-8d1594ab27bc"
        },
        "item": {
          "id": "aea1ad29-9cfc-4cff-9253-66aa64670c84",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e32c66bc-62d8-48fa-ba02-3ac8c07184cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db712d9c-6ae4-4b56-a9c4-0f80c5db5707",
        "cursor": {
          "ref": "8efb211a-3d9d-4f08-a6e2-993dd1bca341",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e2ca1450-6253-4456-b419-8698247512d5"
        },
        "item": {
          "id": "db712d9c-6ae4-4b56-a9c4-0f80c5db5707",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "53f9bdb0-6053-4ba4-aeb0-297751303700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d9140c-7e6f-4de4-9762-de0c8409b7fe",
        "cursor": {
          "ref": "67c8e300-ae91-404a-a7fb-cf71b0e837a1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "60a376ba-888b-4ae4-b255-a930fbec75e5"
        },
        "item": {
          "id": "d3d9140c-7e6f-4de4-9762-de0c8409b7fe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6f253921-38e6-42ef-84b1-6e6d0b452c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3951dcff-d403-4ad8-b07f-55617592e422",
        "cursor": {
          "ref": "70ea92a1-db85-4f92-8d68-1ae41d95546e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a065c61c-2da0-4d6b-85f9-244db8627833"
        },
        "item": {
          "id": "3951dcff-d403-4ad8-b07f-55617592e422",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7f1401f9-0fa2-4468-a7b5-121b668d5433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0cae64-9d0c-43c4-8e25-91be4ac7d75b",
        "cursor": {
          "ref": "77509377-cc21-40e0-a83d-672f8eca9d3f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e4c62ae5-6171-457d-8033-542adfe98dc8"
        },
        "item": {
          "id": "1b0cae64-9d0c-43c4-8e25-91be4ac7d75b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8e38a7c9-0a2e-44a9-bfcd-7464a8303bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1369be7c-8adf-49c2-8bfe-9527bbdaa091",
        "cursor": {
          "ref": "f08d9a00-7d86-412b-b309-23d500428558",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5443120d-2d96-4af8-bce7-19fc9fb24cda"
        },
        "item": {
          "id": "1369be7c-8adf-49c2-8bfe-9527bbdaa091",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a0f68692-300f-4054-8a01-61d94317f75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4a8ba8-f966-4d55-b647-fea06731c092",
        "cursor": {
          "ref": "74500608-d79f-455d-a262-358fceed03a2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e7e6a4b0-d309-42cd-8db1-b17b57fbccb4"
        },
        "item": {
          "id": "4f4a8ba8-f966-4d55-b647-fea06731c092",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "603b798e-b7fd-4f6d-8e63-b36282b0b199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438b2eef-da1c-40e9-acac-1a28486a273f",
        "cursor": {
          "ref": "5f865f2f-5335-4fb8-a3ee-f67d542aaf0f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f1bf6eaa-7ac5-47c3-8cc6-78249c1bf033"
        },
        "item": {
          "id": "438b2eef-da1c-40e9-acac-1a28486a273f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ec43b417-850c-4c58-9149-388da7f48bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04858f70-7530-45fc-a6f2-7f23b6f3b1b0",
        "cursor": {
          "ref": "c3fc9599-3063-4328-b6d3-f4afe75eaef2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "59ceb596-cff5-4b5a-96b0-6208094384a5"
        },
        "item": {
          "id": "04858f70-7530-45fc-a6f2-7f23b6f3b1b0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "57c78bb0-4ef8-4703-bf6f-d0db28566529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d1a2aa-45ad-4583-918c-b531d13b9bf9",
        "cursor": {
          "ref": "22f81a18-82ce-44cd-a11c-86b31f90100f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "74a153fc-7e2e-4055-81b0-ae2f2daaf373"
        },
        "item": {
          "id": "06d1a2aa-45ad-4583-918c-b531d13b9bf9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "53e89718-aade-4e0c-9e7b-1c7f90d60258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cd8928-8110-4d36-923b-6e8ee2869d1e",
        "cursor": {
          "ref": "2465b155-139e-40fd-a120-9f47b12c1473",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9d5946ba-012e-49d6-9054-2e39a174ccf9"
        },
        "item": {
          "id": "82cd8928-8110-4d36-923b-6e8ee2869d1e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "549a66b2-fdee-497e-9f19-4af9134c284d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48195dd-44db-493b-88ef-1b4f2206307d",
        "cursor": {
          "ref": "d2a61795-0e48-4ca5-b88a-a8a029483b30",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0f02f55e-ed2f-4db7-a6d4-8ae6f454f319"
        },
        "item": {
          "id": "d48195dd-44db-493b-88ef-1b4f2206307d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5e6d6852-fefa-443a-96b5-0db6bb75ef5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c589f76c-6de3-4f85-b340-c3506f5a244e",
        "cursor": {
          "ref": "98140332-b653-47fe-8e59-72572130c7be",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b05bc3ba-3d2b-4d43-a3c5-77f1669df64e"
        },
        "item": {
          "id": "c589f76c-6de3-4f85-b340-c3506f5a244e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "084ff364-7d58-4de1-995b-afb6686c0ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc98d37-f96e-4fba-9569-06b78ef019f1",
        "cursor": {
          "ref": "2faf1002-6d63-4b9a-83c2-eea03f3375fb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "07a7beb6-3f5b-44c4-be62-42a00018d354"
        },
        "item": {
          "id": "cfc98d37-f96e-4fba-9569-06b78ef019f1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "40b5691e-c163-4724-aacc-9aa884cc7965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6ce5a5-ad60-4448-8046-161693bcd020",
        "cursor": {
          "ref": "7525ab9f-35d3-4ed0-b95d-825d84235b65",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aed3d943-9138-4354-a770-581c10fc85c4"
        },
        "item": {
          "id": "1e6ce5a5-ad60-4448-8046-161693bcd020",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bc600447-584d-408a-ac22-8c8c94d1d2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4949ce0c-e3a9-43a1-b459-d70e9f2d7f4e",
        "cursor": {
          "ref": "90f11076-79af-424f-870f-c03e5f371474",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "188a4542-1b04-477a-9d8e-dc15fa4f1070"
        },
        "item": {
          "id": "4949ce0c-e3a9-43a1-b459-d70e9f2d7f4e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d9075b30-3793-47e8-a396-f03f7b2338ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a3a0f1-ae97-4f97-b197-22512f407cdd",
        "cursor": {
          "ref": "21b2419e-eb26-4013-a6e9-2b246e9f61a5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f0837ee1-38c1-4c89-b34b-148f44287acf"
        },
        "item": {
          "id": "a2a3a0f1-ae97-4f97-b197-22512f407cdd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a474a8ed-1ee8-434f-afb6-8468c2f657e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45105604-b95c-4c52-b68f-2da32d144bc6",
        "cursor": {
          "ref": "5cc7ec82-aae2-47ed-b8f7-7ca869987c7f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "73f3a775-fe8e-42be-9f03-1a9a310294a7"
        },
        "item": {
          "id": "45105604-b95c-4c52-b68f-2da32d144bc6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "99f4be40-0fcc-43d9-88ff-4e44d01af997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51faaba1-3b05-463b-88c8-6c83b2d26371",
        "cursor": {
          "ref": "9390a2d0-4fcc-40de-a33b-39abc5f5a447",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bae39ef8-d169-4066-ad07-451ece7bfd67"
        },
        "item": {
          "id": "51faaba1-3b05-463b-88c8-6c83b2d26371",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5fcc9856-1d15-4890-9cfe-df464a06b12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3127e7-6c59-439e-9aaa-84e44938ce98",
        "cursor": {
          "ref": "bd9388aa-d28e-4c3b-aebf-e0ca23243a07",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0b0629e1-966f-48be-a898-bc5da65c1dd3"
        },
        "item": {
          "id": "2d3127e7-6c59-439e-9aaa-84e44938ce98",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c328e8a5-cc58-45af-a83f-acb442fb0791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a86657-c437-4f1e-9075-c6e0f9c44ff5",
        "cursor": {
          "ref": "50da2bf5-8c95-4d6c-bda5-6a784d3acd54",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b24e5c87-487d-46e7-8eed-60f298fdf091"
        },
        "item": {
          "id": "43a86657-c437-4f1e-9075-c6e0f9c44ff5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c35c31ce-f007-493d-9d66-bca29b7b7ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faa1f31-37ae-4e75-a7e0-8ac5b9846e50",
        "cursor": {
          "ref": "e537466e-9434-4762-a719-44906110a0d5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "74ae2279-fa41-446f-8f71-315071499362"
        },
        "item": {
          "id": "4faa1f31-37ae-4e75-a7e0-8ac5b9846e50",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c240d2b1-7742-4794-9649-df8303607a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb3b5ad-71be-4e46-86f1-428413979cf6",
        "cursor": {
          "ref": "12167a49-1c8b-4b4d-b601-ba107b14afe6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "28cdbd5c-5fbf-4a96-a5bc-67e6d5507345"
        },
        "item": {
          "id": "3bb3b5ad-71be-4e46-86f1-428413979cf6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7438e1cd-d691-488b-84e4-6d1543ddb7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4411049-430d-4c25-bea8-c1c2bcbc0faa",
        "cursor": {
          "ref": "9a465eec-1015-422b-910c-e6cc5bb4520e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ce4ca939-5697-45db-9d67-f9db62e7dfbf"
        },
        "item": {
          "id": "f4411049-430d-4c25-bea8-c1c2bcbc0faa",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "75e69321-f319-44bc-91e1-30d8d828dd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c0713e-a875-483c-be17-8f482753a42d",
        "cursor": {
          "ref": "4c161d56-52ca-4d81-92f0-3d5d34a64eb5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a313a6fe-130e-43e6-838d-7ca354481b4a"
        },
        "item": {
          "id": "f8c0713e-a875-483c-be17-8f482753a42d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "52ab8897-48ad-4c93-b322-264bc641ddcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9b2863-f27e-4be1-9d4f-4736ba117660",
        "cursor": {
          "ref": "b3272f4f-352f-4df4-8581-4facf21b9e04",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "df524877-c8dc-4262-aae3-636fda7d2a18"
        },
        "item": {
          "id": "7f9b2863-f27e-4be1-9d4f-4736ba117660",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ddcae4dd-3eaa-4342-8e6e-80fb405e22d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22683e41-a94b-452a-8d98-8a89e7f92f6d",
        "cursor": {
          "ref": "07d11865-377d-40d3-917d-e13937055a8e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "333afb72-4af1-405d-89f3-6a5482b97dce"
        },
        "item": {
          "id": "22683e41-a94b-452a-8d98-8a89e7f92f6d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4b3ccebe-b668-4e18-98d0-4c9be45cdffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8cbf9e-3584-46a4-ab0b-02d7ce795dff",
        "cursor": {
          "ref": "df61ac2e-68c7-4d02-a9ee-556fb79e27c1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e72d6df6-58f5-47cf-8126-748e2408f263"
        },
        "item": {
          "id": "8b8cbf9e-3584-46a4-ab0b-02d7ce795dff",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "70cd4f12-1f7b-44a5-b35d-243e4c434447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c71a29-bd1f-48bb-99db-411875fc1e0b",
        "cursor": {
          "ref": "e4818fb0-e69b-443f-913e-8feff0cfaac1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "37cf93a0-7c3c-4f31-ad7f-16dc9b6660dd"
        },
        "item": {
          "id": "a7c71a29-bd1f-48bb-99db-411875fc1e0b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c752c16b-0f4e-4000-bbc1-a09554a26ff5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f844faff-34e4-418f-b864-b166a1d2fadc",
        "cursor": {
          "ref": "79ea0f31-509b-4a03-80d5-fb67458fca54",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f19f1fd2-864d-418b-8936-ebc58ff20477"
        },
        "item": {
          "id": "f844faff-34e4-418f-b864-b166a1d2fadc",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9ef1c289-6f83-4ad8-a2c2-0ffe304dbfe1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9c4c3a-030b-4af6-8300-ba6cf69a65ae",
        "cursor": {
          "ref": "36bae3c9-a0be-4681-8f1a-92f4f6ce4955",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1cabd8eb-29ed-43c7-a9f4-07770456c6ee"
        },
        "item": {
          "id": "bd9c4c3a-030b-4af6-8300-ba6cf69a65ae",
          "name": "credentials_issue"
        },
        "response": {
          "id": "72b9bd4e-f6f4-4b10-92e4-66fa130b63a9",
          "status": "Created",
          "code": 201,
          "responseTime": 4907,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8828282a-748a-45c8-bb9e-4e940fafbbd3",
        "cursor": {
          "ref": "7ffdad6e-ad7d-4276-bd25-247bf261b931",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d1fc1331-b17d-47cc-a84d-5f8c834d8d33"
        },
        "item": {
          "id": "8828282a-748a-45c8-bb9e-4e940fafbbd3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f7ea396-b791-4c85-8921-f8fc00b20e81",
          "status": "Created",
          "code": 201,
          "responseTime": 4762,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd9cc1c-f13d-4f67-b0fa-e061f249f941",
        "cursor": {
          "ref": "d403382a-ac33-4ab1-abe0-51cf2ea7af8c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d8b593fa-2511-4baa-a9e2-8c6234e10841"
        },
        "item": {
          "id": "5dd9cc1c-f13d-4f67-b0fa-e061f249f941",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b86c8acf-1a53-4f17-91ac-5e14d89ae30f",
          "status": "Created",
          "code": 201,
          "responseTime": 4228,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d5f851-a897-4c5a-b2e6-d0baa5e0020e",
        "cursor": {
          "ref": "a7bb2ae5-743b-461f-bb41-f07880babacb",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5ab0866d-347e-4d94-be99-93532443241d"
        },
        "item": {
          "id": "64d5f851-a897-4c5a-b2e6-d0baa5e0020e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "61f80e43-0071-43ee-a93c-3d8f177ed528",
          "status": "Created",
          "code": 201,
          "responseTime": 4681,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8025448c-8ee9-4f1b-9f00-9ed16bbf81dc",
        "cursor": {
          "ref": "450c0b4f-df0b-4104-9b90-cc7ba07b35ca",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cacf1d03-b1c8-4032-9109-d12b4245f309"
        },
        "item": {
          "id": "8025448c-8ee9-4f1b-9f00-9ed16bbf81dc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "72fe9f6f-ef78-40a1-93b7-4fb1d5bb0a0c",
          "status": "Created",
          "code": 201,
          "responseTime": 7145,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d74f82-2b85-4f27-b7be-70a3c170e826",
        "cursor": {
          "ref": "00aa962a-fcf7-4a66-8800-0c29ff10b9b6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6fcfc8b7-4a6d-4271-ae33-45e1345e4a47"
        },
        "item": {
          "id": "70d74f82-2b85-4f27-b7be-70a3c170e826",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "87b0986b-70fc-47f3-9d64-95b74bfe3f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d74f82-2b85-4f27-b7be-70a3c170e826",
        "cursor": {
          "ref": "00aa962a-fcf7-4a66-8800-0c29ff10b9b6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6fcfc8b7-4a6d-4271-ae33-45e1345e4a47"
        },
        "item": {
          "id": "70d74f82-2b85-4f27-b7be-70a3c170e826",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "87b0986b-70fc-47f3-9d64-95b74bfe3f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c2c013-f4fa-4fcb-abef-33774b4ebe1d",
        "cursor": {
          "ref": "648cc102-e5ac-4937-a337-dcfd6312012e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d3329bd0-5ab2-4bab-bcea-a1653fae2ab8"
        },
        "item": {
          "id": "c4c2c013-f4fa-4fcb-abef-33774b4ebe1d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "404913ba-76cd-454d-8804-b626f29bdc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a36880-4475-4ede-9f89-3731ab497753",
        "cursor": {
          "ref": "1002fdd6-e8e6-4fd6-bb6d-7ded85381593",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a73f9672-9ed4-4c94-8fd2-d46250ad544d"
        },
        "item": {
          "id": "99a36880-4475-4ede-9f89-3731ab497753",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4269d422-501c-403b-9f6a-b8d989eaae89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e3710e-00d2-4b92-adfd-f0b3bc722c35",
        "cursor": {
          "ref": "1a1f92f8-0bec-406e-907a-1088bc38c661",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d6a46911-a0ad-45df-8783-148548cccf3d"
        },
        "item": {
          "id": "c9e3710e-00d2-4b92-adfd-f0b3bc722c35",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "24880591-84ba-4019-bad4-c781037133b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a40411-e2be-4940-84e3-1ad878e7dfae",
        "cursor": {
          "ref": "d2686b16-4494-4936-a08f-1b3165eee699",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "00dfa2f0-aca5-475b-ad3a-fc87b6614218"
        },
        "item": {
          "id": "c9a40411-e2be-4940-84e3-1ad878e7dfae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cf21d072-520b-449d-be0d-7544ecaaf040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1db3de-2aee-4eb8-834b-168117b7c992",
        "cursor": {
          "ref": "e0ab9feb-b983-4f22-8e08-fd280f9c094a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b6904fe7-65d6-48ca-8a3c-3073c154ac7f"
        },
        "item": {
          "id": "9a1db3de-2aee-4eb8-834b-168117b7c992",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "304005f7-88bd-4e38-b59f-14a576f6a89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a407af8f-3daf-4630-9165-e2d2e962cd18",
        "cursor": {
          "ref": "d9dfa42c-de64-43a8-a29b-11e7cb89910d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "63bb1a79-392d-43d8-9677-9c9f155c1460"
        },
        "item": {
          "id": "a407af8f-3daf-4630-9165-e2d2e962cd18",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a0755ea2-f2d8-410b-ab96-b16f1ab4b13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae71db1c-d742-4931-95eb-1f91ec39d3aa",
        "cursor": {
          "ref": "5639365f-6970-49ae-bac1-30fc27afb9c0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1ec1468d-d4f3-4b47-98a7-405344b3e014"
        },
        "item": {
          "id": "ae71db1c-d742-4931-95eb-1f91ec39d3aa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "82cadfc9-f624-4d8d-8a05-c421ce57885d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8930e3-e9fe-4a10-9e02-405f2e7cb4f6",
        "cursor": {
          "ref": "69c9546e-1f69-47df-ac90-c51d7eeae6b7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a7696acc-9543-4009-8d98-b06372d92f6c"
        },
        "item": {
          "id": "fe8930e3-e9fe-4a10-9e02-405f2e7cb4f6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bbff022c-def1-48a1-a1ae-b6d64e635c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0a8cfa-d412-4301-b2b9-32fa101ea75d",
        "cursor": {
          "ref": "7ba28ad2-00b1-46f6-8c36-67006b39c453",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7a4e7a49-618c-4cad-8798-6504185e8e66"
        },
        "item": {
          "id": "0e0a8cfa-d412-4301-b2b9-32fa101ea75d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eea22499-c8b0-4b7c-b6e9-573b9b1ea97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b611024-1971-4efe-805c-db21c38f970e",
        "cursor": {
          "ref": "aef416a2-8129-4951-916f-cf39efe6325f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f437e1c6-1fec-4862-b8a3-37442298021e"
        },
        "item": {
          "id": "5b611024-1971-4efe-805c-db21c38f970e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0441da37-9230-4f1f-a665-3f07a67d1772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da97b861-225f-47d9-858d-ddbbe1a687c0",
        "cursor": {
          "ref": "22546c98-98f9-42fa-a33c-36b2b829cb45",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cee47fa4-1bde-4f0e-9749-f8dcd7f063fd"
        },
        "item": {
          "id": "da97b861-225f-47d9-858d-ddbbe1a687c0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1816458b-6358-4588-ade2-b4465dbb30cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2484515b-dc73-4325-9bad-70a797a92985",
        "cursor": {
          "ref": "ea6f550c-139a-46b4-9ca4-92dfee92b9c3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2c9db014-746b-4422-9271-f163db75975a"
        },
        "item": {
          "id": "2484515b-dc73-4325-9bad-70a797a92985",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "379d06f4-833a-47a2-8c36-54f0f139d16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83553164-a383-4aed-9940-967bbc51badd",
        "cursor": {
          "ref": "613a1a72-193b-4a70-8d57-60fe6a47a1f8",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6a60e408-d4ab-4d5e-af54-22cbde36e27a"
        },
        "item": {
          "id": "83553164-a383-4aed-9940-967bbc51badd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "21a48b2f-5b2c-490e-8fb4-437f1330b38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ef3dff-29d6-4c79-8856-4fbdebf2b142",
        "cursor": {
          "ref": "6ed31700-c1d4-43a5-90f7-25d1ec20d13f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9c227b3-09a8-4f26-ba19-b58149d5e467"
        },
        "item": {
          "id": "b8ef3dff-29d6-4c79-8856-4fbdebf2b142",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b81f8a47-9da0-43e1-92c8-71439da2a49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47555c2-ef1b-401d-85fd-c402b1372f19",
        "cursor": {
          "ref": "904a4035-a5ca-4ea2-988d-26a9f7a7f2cf",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7ab924dc-9a89-4b07-9cde-3eb8446a872a"
        },
        "item": {
          "id": "b47555c2-ef1b-401d-85fd-c402b1372f19",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f78c4b9a-45be-4c3a-a25a-6e39c2020f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df02f7ab-6f0b-4b99-ba57-09de25f63e95",
        "cursor": {
          "ref": "336430fa-7073-49ba-9f0a-aa8a70b9d924",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b30571bf-4579-4baf-8563-4f1c2a1fa1d4"
        },
        "item": {
          "id": "df02f7ab-6f0b-4b99-ba57-09de25f63e95",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9d12a5ae-d733-4576-8a0b-fce3f17925cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c771e8b9-0b8f-4964-a514-4d857e63a578",
        "cursor": {
          "ref": "cad48922-9805-43ea-8577-f5a22e02992a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2cf826e9-3d53-4dbb-beaa-d08ad3247ce0"
        },
        "item": {
          "id": "c771e8b9-0b8f-4964-a514-4d857e63a578",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c767c791-df9c-4725-99b7-275e9134d6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0815a98-84bf-4eaa-a239-dca5b3af2c99",
        "cursor": {
          "ref": "b7936025-5644-4776-8dd4-289ef5e639a2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "29e1b4f6-c08e-4a23-9ec4-96995a96af52"
        },
        "item": {
          "id": "e0815a98-84bf-4eaa-a239-dca5b3af2c99",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "08e8c1c6-e38b-4dcc-a4df-828173c6a3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef06fd0-f792-4eec-a44e-24b6993fa7ad",
        "cursor": {
          "ref": "af9d3d7e-a34d-4a30-9e5f-0973b38c3dc5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "274dbbde-896b-435d-a633-7bd4bcd22267"
        },
        "item": {
          "id": "3ef06fd0-f792-4eec-a44e-24b6993fa7ad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "15efb0f8-86a7-4a3a-911c-b2ebb1db98ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e06b9c3-68d9-4562-bac1-a77eea95b5b8",
        "cursor": {
          "ref": "e2ec2d12-2e5b-4a40-96d7-aed18f89b596",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ec4342fa-7243-4272-8128-dcbd9b9dd7a4"
        },
        "item": {
          "id": "4e06b9c3-68d9-4562-bac1-a77eea95b5b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d35bcaac-5550-484e-8bdb-d73fe9343c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402badbd-4965-4bdf-8848-2a09fb898a9a",
        "cursor": {
          "ref": "51c3c2b3-238a-4365-a4f1-18fa47d93c6a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8864214e-5d32-4a65-97e2-87278fa05264"
        },
        "item": {
          "id": "402badbd-4965-4bdf-8848-2a09fb898a9a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5fd3a2a5-65c3-42a1-adef-b3b0f738199d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f247269-43c4-44f7-b415-3fbde2a48b2f",
        "cursor": {
          "ref": "11650b90-49ef-42c9-9c77-b5d3b5bf9720",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7f55cd10-b02e-4538-affd-f75adeb8af99"
        },
        "item": {
          "id": "5f247269-43c4-44f7-b415-3fbde2a48b2f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f902d313-6ff9-4907-b89c-cf25c6a15aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4745737f-6f1c-4d63-b7f3-d6b2ddd10969",
        "cursor": {
          "ref": "999af020-bfd9-41a4-b8f1-c4a861fd23eb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b880f954-ebdf-4280-b5b3-f5a39dca3f5e"
        },
        "item": {
          "id": "4745737f-6f1c-4d63-b7f3-d6b2ddd10969",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1bbd9d39-6f44-40dc-b9dc-9e9ccc7debaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543f5450-06f1-4d5a-9997-f5e1cb740e4a",
        "cursor": {
          "ref": "6fad0c37-1c43-44ec-ae8d-6fe42a964f8e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "966a8229-2ad6-4c7d-90c2-a8078e408fb6"
        },
        "item": {
          "id": "543f5450-06f1-4d5a-9997-f5e1cb740e4a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b19672b4-0577-4b01-be74-3ecbc716e088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dbde90-f9ab-4364-afd1-06e85e7e0e26",
        "cursor": {
          "ref": "02a751d6-f0d0-48a9-a2f0-d16f7e640a7e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "18b1eec8-a62f-4ef0-849d-724350badbf8"
        },
        "item": {
          "id": "06dbde90-f9ab-4364-afd1-06e85e7e0e26",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c6d7713-4625-4f24-92f5-a2d126a6f54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed36878-a1c5-4a54-9111-b04d8642ddb7",
        "cursor": {
          "ref": "d215cc61-aaba-4e10-bac7-385d0896bddf",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5ebff6f1-12bb-442d-a927-bf67b26254a0"
        },
        "item": {
          "id": "fed36878-a1c5-4a54-9111-b04d8642ddb7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8ddf3c8-a7a5-4a22-98eb-79c06939ec13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca46e2cc-5f04-4500-8553-41cf90b2fa7f",
        "cursor": {
          "ref": "157fd6a0-af24-4eb9-b983-535329eb4238",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2db3bbf6-d906-4c86-be9c-88567d80978f"
        },
        "item": {
          "id": "ca46e2cc-5f04-4500-8553-41cf90b2fa7f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "16a7de07-3653-4976-839f-44efdb100dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142f17b9-9609-4f25-ad42-0c8ee257596b",
        "cursor": {
          "ref": "ed63439e-71b5-442a-8335-49d4bc2a8727",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a9e390f9-c245-4350-b4dd-793b4b956964"
        },
        "item": {
          "id": "142f17b9-9609-4f25-ad42-0c8ee257596b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a84c6234-d2d5-4ec3-9dde-8617536b4fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9655343-d8bb-4eb0-aed1-fda3cfb0c9b9",
        "cursor": {
          "ref": "6918fe00-889e-4a3f-b659-0c40ec33c1fb",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8a8e5c4d-8b58-463b-9430-c87b16edafc4"
        },
        "item": {
          "id": "c9655343-d8bb-4eb0-aed1-fda3cfb0c9b9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ed606ff4-bca5-432f-b96e-e3424dda639f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a113a6a-53bb-49d6-ad1d-79006c1bcb25",
        "cursor": {
          "ref": "0acf289a-15f5-4afa-bef5-dc0284898c2b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "70536553-c245-49c7-b14e-1edd24499ac2"
        },
        "item": {
          "id": "9a113a6a-53bb-49d6-ad1d-79006c1bcb25",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d547699d-7bdb-4bc9-b0ce-cbe16c867ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a28f65-e3e5-4dcd-98e7-ebe6306830da",
        "cursor": {
          "ref": "74033360-e265-44db-a7aa-f5d02fe58d6a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dda2745c-e6b5-4e3c-9fd4-032884d28af1"
        },
        "item": {
          "id": "77a28f65-e3e5-4dcd-98e7-ebe6306830da",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "198abe4b-e790-427f-9f3a-f4235a58b6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a478e6a-63b1-412c-aa72-544dafb57eb6",
        "cursor": {
          "ref": "20e54450-ddec-4285-bd35-b14f2ef1de79",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c76a40a1-e915-4079-9c37-fbc7dc9cfc4c"
        },
        "item": {
          "id": "3a478e6a-63b1-412c-aa72-544dafb57eb6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9beb7527-4b81-49f3-8c52-131ad5a8eae5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c74b20-08c2-4b0d-9976-d5f2db012fe5",
        "cursor": {
          "ref": "ac5a5238-50e4-4304-9930-2adc6b6dcd3a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9f17b0ea-12b4-4f98-a829-ceaaa25682ca"
        },
        "item": {
          "id": "69c74b20-08c2-4b0d-9976-d5f2db012fe5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7b014924-5482-46f7-8c26-7c1646688d15",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 568,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7400d109-a743-4469-b0e7-d2f03fab42a1",
        "cursor": {
          "ref": "8ff13f83-d127-48d9-95eb-0097881cf31a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "21203ea6-831d-42c2-9e38-a29f66f8ce8e"
        },
        "item": {
          "id": "7400d109-a743-4469-b0e7-d2f03fab42a1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fc1b8582-34de-46de-839a-5d08e9ae84cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7400d109-a743-4469-b0e7-d2f03fab42a1",
        "cursor": {
          "ref": "8ff13f83-d127-48d9-95eb-0097881cf31a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "21203ea6-831d-42c2-9e38-a29f66f8ce8e"
        },
        "item": {
          "id": "7400d109-a743-4469-b0e7-d2f03fab42a1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fc1b8582-34de-46de-839a-5d08e9ae84cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f37a90e-152b-4d31-8729-bac0634ff2a3",
        "cursor": {
          "ref": "ed2bb057-2c3c-4c97-ae11-6ba93e8144e5",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d2d86be5-9bee-495a-bd6d-b138d7a9cb4a"
        },
        "item": {
          "id": "6f37a90e-152b-4d31-8729-bac0634ff2a3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cad2ef54-085e-4360-8b93-25a28fd07d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a12e63-cc24-4ca2-9711-7951c02d05b4",
        "cursor": {
          "ref": "7fc76e1a-e4ac-475e-a664-ba67524dfd34",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7c587f50-cb2b-40e4-bb2d-9e59f3046b56"
        },
        "item": {
          "id": "47a12e63-cc24-4ca2-9711-7951c02d05b4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "47e47fc5-5824-41eb-823a-2ac4ee013066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cc4104-4cac-429c-9a17-dd242d57e40f",
        "cursor": {
          "ref": "23d35f71-f2bc-49f7-ace0-989c0c0dfc89",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fa22ffc1-f6e6-4157-9a75-81fefab2acf3"
        },
        "item": {
          "id": "10cc4104-4cac-429c-9a17-dd242d57e40f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "825d2032-7be3-41ff-8b7d-7823bb17d39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed61e7eb-ce77-46d3-b701-883558c60bec",
        "cursor": {
          "ref": "0c5b0ddb-7259-4eb2-ac8a-507236cab6d4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fc35c0ab-bcf3-4896-b613-255e6feb7f9d"
        },
        "item": {
          "id": "ed61e7eb-ce77-46d3-b701-883558c60bec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6e02b4db-bcee-43e9-b756-ee5c4d02290c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307fd900-7c2b-4c81-9b91-8d96b95f9716",
        "cursor": {
          "ref": "ff27fe14-a1e3-4437-ae49-6c5e089a2b18",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e5f4b201-f412-429b-9102-9812556d6f7b"
        },
        "item": {
          "id": "307fd900-7c2b-4c81-9b91-8d96b95f9716",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a14881ab-56f8-4d2c-b32c-4ccc072326c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979c650a-460b-4031-b7cd-3d41b4e00c89",
        "cursor": {
          "ref": "731bb83e-99a3-41a4-8939-01441c13efcd",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "431f7219-d11b-483b-9686-8b2c13758acd"
        },
        "item": {
          "id": "979c650a-460b-4031-b7cd-3d41b4e00c89",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ea45fa93-c94e-4921-9365-e668c164ba41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b1d77b-7527-4119-99aa-e73833f65b99",
        "cursor": {
          "ref": "13933186-f755-4dc5-8269-d1187e9a993d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4f02ea5e-f7cf-4e47-8f43-51bfbef9ab4c"
        },
        "item": {
          "id": "23b1d77b-7527-4119-99aa-e73833f65b99",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "89e4a791-beec-4a19-be16-2b2126018d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0451d8-904e-40f1-a0b5-b54fc8a5707e",
        "cursor": {
          "ref": "92f2eb2a-1149-498e-ae52-666c7b7fc26f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5dae7260-6537-4337-9fa4-ef528547f9bd"
        },
        "item": {
          "id": "3f0451d8-904e-40f1-a0b5-b54fc8a5707e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a2e5da8c-3297-496e-af05-87a9bfc97b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d2420d-7e9b-4f66-a2d7-3391b5f76566",
        "cursor": {
          "ref": "67c9431f-e409-48f0-ac49-4adeb5efe7a1",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7dedaa51-b484-4bd8-adc6-8df048f9695c"
        },
        "item": {
          "id": "d4d2420d-7e9b-4f66-a2d7-3391b5f76566",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a3b17ff7-c52c-417e-bed3-360e74016e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d164a80-db55-42d2-87d3-04526fec4d33",
        "cursor": {
          "ref": "0ba582ae-87e2-4510-9402-7e2a7fc5c024",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f749b9a5-995b-41e9-80b3-d4aa52a41bfc"
        },
        "item": {
          "id": "6d164a80-db55-42d2-87d3-04526fec4d33",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3f3e71fc-9a37-4697-bc1b-821b8a008293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4dc55a-ba01-48ec-b200-2b4b7af7466a",
        "cursor": {
          "ref": "980b5596-b384-4078-bb11-d356167f3195",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c5593951-27e4-4887-b6b6-d7444ca723ef"
        },
        "item": {
          "id": "6d4dc55a-ba01-48ec-b200-2b4b7af7466a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9a4340f9-b5bf-4f88-9082-154e19046e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0a936c-4050-477f-9667-42bbe2aebdfc",
        "cursor": {
          "ref": "f33798c7-43ce-46de-91ed-807974e4ddac",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b5012fc9-5c61-466f-bf8f-0ddcce31cf3a"
        },
        "item": {
          "id": "fc0a936c-4050-477f-9667-42bbe2aebdfc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6dc9933e-df9f-4e60-8c02-089ad53cea11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e32b6f9-4bf6-4761-8a95-9afd0955968d",
        "cursor": {
          "ref": "739ab8dc-5713-4e1b-8d81-89fb7f679193",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7008a58e-4814-458c-a8d1-42da301fd695"
        },
        "item": {
          "id": "5e32b6f9-4bf6-4761-8a95-9afd0955968d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2603d454-4096-4f93-8c93-08e12bfc8d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d1a79c-8eea-4e40-8055-062d0032aafe",
        "cursor": {
          "ref": "1bba2aed-6b50-40cd-8d47-cd7b728efb6d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4dd29efe-02fa-403e-8ac0-e806bd981e1f"
        },
        "item": {
          "id": "17d1a79c-8eea-4e40-8055-062d0032aafe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7ec6aafe-eaf2-4175-a6ba-cab233682aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb6bd47-3b1a-45d6-860c-f57df7c3437c",
        "cursor": {
          "ref": "031ca1ae-b1cf-400a-b9d2-fe8b44a6e587",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9e8b7b7b-ad6d-4a95-9459-01e0b4bc7ed5"
        },
        "item": {
          "id": "1bb6bd47-3b1a-45d6-860c-f57df7c3437c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "348ba0f6-d3f2-4d3f-8834-9ac2aedaae8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775545a3-8f80-4962-8e35-af38ea524967",
        "cursor": {
          "ref": "40d25755-9cc9-422c-b685-52658091d26d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0c9ba8bd-81d1-4f92-afc2-fe49f2099fc2"
        },
        "item": {
          "id": "775545a3-8f80-4962-8e35-af38ea524967",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e48de232-a6fd-43a9-8c90-71169e8fcc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef30dfa-b77b-4258-83c7-9ea84d2377f9",
        "cursor": {
          "ref": "c1622469-fe32-4500-9383-07e31a35a447",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "06c8cfa3-2437-462b-ae24-b89321a2ed29"
        },
        "item": {
          "id": "2ef30dfa-b77b-4258-83c7-9ea84d2377f9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "43fea901-fe64-40f4-8329-03a7ff248f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae8b934-4efc-4f1d-980d-0b882f15e96f",
        "cursor": {
          "ref": "dfa33bf6-a663-4e20-8810-43f9053ce22e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f7511ba7-96b3-4cf9-8d85-85af44924248"
        },
        "item": {
          "id": "eae8b934-4efc-4f1d-980d-0b882f15e96f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4a4446c7-bca1-46ae-b1fa-ba20e7364457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5884e155-cb16-4161-91f7-a8cbefbd7349",
        "cursor": {
          "ref": "96061d08-fd18-4ac7-8cd6-375c73234e49",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7163d7be-56f6-410c-ba89-61fa11b3179e"
        },
        "item": {
          "id": "5884e155-cb16-4161-91f7-a8cbefbd7349",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eaca2d03-ec7e-4bec-8cc1-d9f83e98c05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6134e4-c5af-4199-80dd-a3caaacf01b7",
        "cursor": {
          "ref": "25c5e30e-e1b0-42d7-9f21-09c3cfacd3bc",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "45681e79-6723-4a0a-b489-a67183b96203"
        },
        "item": {
          "id": "6e6134e4-c5af-4199-80dd-a3caaacf01b7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6b912377-38ae-4c86-b76f-55510ef3dab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291e8180-73d4-46ba-9dc3-a0beb0134215",
        "cursor": {
          "ref": "fe617fcf-0402-4f2f-8d8b-3844ae705698",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "117a490e-cc96-4a76-8ed2-ab5d0d20da48"
        },
        "item": {
          "id": "291e8180-73d4-46ba-9dc3-a0beb0134215",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5095d022-1621-4f54-833c-39bd5a555498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63daf635-2a3a-4776-9826-58e8ee8acac7",
        "cursor": {
          "ref": "9daa7015-b99c-4223-8c9b-11d050c0c918",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "655c4309-70c8-45c3-8b9d-bafba1354c00"
        },
        "item": {
          "id": "63daf635-2a3a-4776-9826-58e8ee8acac7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d8dcafc0-5fec-4cd4-bcdc-32c5badc5365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f5ab8b-8362-4d18-95c0-33c3eb037434",
        "cursor": {
          "ref": "c9e490af-eec4-46b5-9e0a-aa258224511c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "adfebb39-11bb-4859-863f-23c6adb4474a"
        },
        "item": {
          "id": "95f5ab8b-8362-4d18-95c0-33c3eb037434",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "02130f0e-71c0-4a3a-9d66-d5b41f6cb28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5328ac10-61e2-4c21-bc2b-3247717d511c",
        "cursor": {
          "ref": "cdc39f73-d61b-4849-8e9f-2214589d4542",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0a82afac-5142-453c-8302-c0539450144d"
        },
        "item": {
          "id": "5328ac10-61e2-4c21-bc2b-3247717d511c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e61e1d8c-44ae-4bb5-b4d1-b3c7f7e13696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37450040-62c2-414c-941a-cf561d11ddba",
        "cursor": {
          "ref": "bd7bcbd5-ecff-4435-b6bd-633a113c13a5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c76fa2a5-ee9b-43dc-8e5a-02ff2db5af32"
        },
        "item": {
          "id": "37450040-62c2-414c-941a-cf561d11ddba",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a39c0705-8177-49d9-bd03-c44312851b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456a4551-9461-443e-9e38-ea9bfb0ea60d",
        "cursor": {
          "ref": "e4866376-8384-4428-8d60-ea0f08753aac",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2d74e37b-e38a-4655-946a-4499706c7600"
        },
        "item": {
          "id": "456a4551-9461-443e-9e38-ea9bfb0ea60d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "268db8be-5568-4f94-b348-f2f594165d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40324f21-f7ed-4d84-9a7a-3a42e1ce4ab4",
        "cursor": {
          "ref": "c7608b93-d3c3-42e8-8ad4-e0704665f4cf",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "048de6ef-8ce6-4be0-87d1-7b5eff6cbc19"
        },
        "item": {
          "id": "40324f21-f7ed-4d84-9a7a-3a42e1ce4ab4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2f189de7-372f-43ec-9a2f-db32665d23c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15fff21-9a93-4573-bcef-419a48fd806a",
        "cursor": {
          "ref": "0ad1990b-60d1-4789-a32e-f84052045f05",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "37a29d03-1c6f-418a-a4f7-d179f7891ebc"
        },
        "item": {
          "id": "c15fff21-9a93-4573-bcef-419a48fd806a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "725845d1-ac0e-4cf2-9537-578c9fd55190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5863344-bee2-4237-b3d9-a57a44a4277f",
        "cursor": {
          "ref": "bb5624ab-9d54-48aa-aaaf-be8154c18ad1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7b98b24b-2701-4fcf-b60e-43642e96c563"
        },
        "item": {
          "id": "c5863344-bee2-4237-b3d9-a57a44a4277f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "07e7a047-13bb-4c0c-a0d0-2ff2ec2b6744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5028dbf3-1fe3-4269-8a99-fb627e24f4e7",
        "cursor": {
          "ref": "aa2bf78b-1c11-4670-822c-01611ef19521",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8fbe8f10-a168-40a8-86b9-3e1c5830d110"
        },
        "item": {
          "id": "5028dbf3-1fe3-4269-8a99-fb627e24f4e7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1a7382f2-d941-47eb-8e00-9d53fe7a955a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd1a070-83e7-4a7b-bd03-9b3f0d5a2d69",
        "cursor": {
          "ref": "150dc02c-ba77-41e4-9634-53a6c2543975",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3d5578df-87f0-4e79-a9fd-b1c2a8445ab8"
        },
        "item": {
          "id": "1dd1a070-83e7-4a7b-bd03-9b3f0d5a2d69",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f32b7a9a-0901-43b3-8a52-b8142701c1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e319b0-861a-46fe-92fc-1cbe3bbe2cd4",
        "cursor": {
          "ref": "bdc20773-55e5-47b9-9e64-7ae3528005fb",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "470a6719-83a2-463b-847b-478af2699bc1"
        },
        "item": {
          "id": "e5e319b0-861a-46fe-92fc-1cbe3bbe2cd4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2a0a5208-2fed-472a-b34f-b52c26c6b525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aa9a2b-0dda-463d-b7ec-156de4fdec07",
        "cursor": {
          "ref": "a6023043-a425-4fb6-a926-7fe45e76c88c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f2f06ad6-795b-41a8-b934-a1733fc3f882"
        },
        "item": {
          "id": "57aa9a2b-0dda-463d-b7ec-156de4fdec07",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9893fa74-3c5a-44e2-947e-cbcd4a1feac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2e959d-13d8-4815-abe9-077311fe7244",
        "cursor": {
          "ref": "deb0ac09-2724-4f23-8649-2d3eb0bada17",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "87da65e1-156f-4987-80d2-54c02c4d36b4"
        },
        "item": {
          "id": "4c2e959d-13d8-4815-abe9-077311fe7244",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d4f61cf3-83c5-43c5-ac39-754815352c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9344270-c409-4cae-a9bc-8c32b43489f1",
        "cursor": {
          "ref": "a379d393-6f12-462b-9a82-07857eae591e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1c81092e-a07b-4495-8a87-98c74aabf9c3"
        },
        "item": {
          "id": "b9344270-c409-4cae-a9bc-8c32b43489f1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "91e9201b-24f8-46ad-9974-16452181ac06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419481b7-8422-42cf-ab87-68b1f3e2240a",
        "cursor": {
          "ref": "2889bfb4-b3a9-4836-a2f7-de920c982b54",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "00b30093-3997-4378-8cf5-19bc6886661f"
        },
        "item": {
          "id": "419481b7-8422-42cf-ab87-68b1f3e2240a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "34525a23-6557-4636-bd52-ae3629c8d9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bff7e9-8a54-4a33-bff0-fd0a825aa2c0",
        "cursor": {
          "ref": "7940b2b8-933f-4dc3-8a76-8e41c42a413a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6b42645e-a00e-40ec-9763-999147070fa7"
        },
        "item": {
          "id": "a2bff7e9-8a54-4a33-bff0-fd0a825aa2c0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "18f03d08-f60e-4ae2-ab71-b3623a32d505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca82286-938f-4e68-813e-f2472ec1dee6",
        "cursor": {
          "ref": "1d74b9e2-c961-4c5c-8df2-709ff7400192",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a79bea81-4009-48a2-9371-51f0ae79cdec"
        },
        "item": {
          "id": "0ca82286-938f-4e68-813e-f2472ec1dee6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5f84d9b2-7caa-4240-a7b9-3e20641752cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fb1cab-e8ab-4400-a0f0-2b49c9021166",
        "cursor": {
          "ref": "0abcb250-2fab-480e-9dd5-e1ee73d498a4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c82d7601-b6cf-42f2-8889-b7241b983eab"
        },
        "item": {
          "id": "47fb1cab-e8ab-4400-a0f0-2b49c9021166",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c53daf22-9d4a-4cd6-98d8-fc6e722e0170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf4e6a1-f055-443b-a0df-5085cc3e246d",
        "cursor": {
          "ref": "85820a50-618b-4496-bb05-44fc3d860333",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7116a669-9aab-45bc-99db-7890867a6934"
        },
        "item": {
          "id": "eaf4e6a1-f055-443b-a0df-5085cc3e246d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2790bf38-7af4-4ddc-8aee-37972a6c6e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0b56d1-de2f-4600-b735-5497649911e7",
        "cursor": {
          "ref": "67cac7ee-3d14-4ac0-b506-ebd833183518",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b52f43c2-8fe0-4f86-94e9-cb8c7c7f02b2"
        },
        "item": {
          "id": "ac0b56d1-de2f-4600-b735-5497649911e7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "15b3775c-c1d9-4b5a-8101-6bc7560037f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb87c381-151f-485b-a1d1-9960a8a63908",
        "cursor": {
          "ref": "9569c19b-4d7a-4206-a438-5eb7ff65681b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "63dd2114-8941-4ff3-8b3a-c469b79a0eac"
        },
        "item": {
          "id": "cb87c381-151f-485b-a1d1-9960a8a63908",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9a871c2b-ba57-4200-9218-e13ee816958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37be7461-ad9b-4ada-95fb-1589f2045c31",
        "cursor": {
          "ref": "bd6efdaf-cf3c-4f98-b11a-2eba6352a3f0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a53788c2-0439-4196-ab12-b2174228345d"
        },
        "item": {
          "id": "37be7461-ad9b-4ada-95fb-1589f2045c31",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "12f75254-b4b2-4c14-9485-dd13a8ff5704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5332d443-6277-4ceb-b15f-e7722d4e0ce6",
        "cursor": {
          "ref": "ba1a3008-67ff-4c23-a88c-c439724a113e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "627ba481-0aa4-421d-9741-56f996263540"
        },
        "item": {
          "id": "5332d443-6277-4ceb-b15f-e7722d4e0ce6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "607b5ee9-18fc-4b26-8034-c3ecb321c1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621d8c9d-5f75-4dd7-9dc7-3c053728a8c1",
        "cursor": {
          "ref": "77c4ecb5-c69a-472c-9c71-a6a361b7cd6a",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6761f396-4095-43ba-85de-65023beaed6f"
        },
        "item": {
          "id": "621d8c9d-5f75-4dd7-9dc7-3c053728a8c1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9c76ce40-717e-49aa-843a-80b420e54f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cddac1-410e-4fa5-b6a0-7e68e8c63886",
        "cursor": {
          "ref": "5732153a-c1cc-475b-a8f6-3d2fe182fb89",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "055ffac7-d280-40ae-a8b0-7ea6d21d64a3"
        },
        "item": {
          "id": "57cddac1-410e-4fa5-b6a0-7e68e8c63886",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "44f19c58-8243-40cb-995f-3eb7c8a5fb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a37d49-5b7a-4de8-8685-6a94ce7de238",
        "cursor": {
          "ref": "be6348e4-ac84-4916-be50-93e56f9d724e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2f526984-aec1-402b-b606-468b2d845891"
        },
        "item": {
          "id": "81a37d49-5b7a-4de8-8685-6a94ce7de238",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "179a11ba-c67e-496d-9625-b956ee64af1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e723aa8f-a75a-4c18-9522-b6d8fb67fdef",
        "cursor": {
          "ref": "250eb5df-b5c7-49e9-897c-cb0f9b0f3638",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "39679efe-d17b-49d4-b584-e46d97a52da7"
        },
        "item": {
          "id": "e723aa8f-a75a-4c18-9522-b6d8fb67fdef",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "22807f41-6223-4c5c-ae6a-afe261845dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b4dadc-fc64-409a-b252-1364cfa657cf",
        "cursor": {
          "ref": "192166e2-6e39-4982-8ff8-96c609126344",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c7ef2381-a14d-4859-bbc8-d26f85bd3ea2"
        },
        "item": {
          "id": "12b4dadc-fc64-409a-b252-1364cfa657cf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "adfd7e09-b1e5-421e-8083-92afdd9fa4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4346655-e68a-4f7c-8541-df91275ccc1d",
        "cursor": {
          "ref": "62a7b749-b136-433b-a2e6-b9c7a56bb076",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eb0df3d0-da27-425f-b543-514cee776b38"
        },
        "item": {
          "id": "a4346655-e68a-4f7c-8541-df91275ccc1d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "257e42e2-479e-4547-b140-414709ae50cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c8c3fc-814a-4967-ab8c-54c394a652d8",
        "cursor": {
          "ref": "cb92cc13-554a-4363-b332-dbf761c01d02",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e0f94044-0bbe-4c97-8291-a31de7c15a6d"
        },
        "item": {
          "id": "f1c8c3fc-814a-4967-ab8c-54c394a652d8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e8a19d1c-6dca-4360-9db3-50fd377e0b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6fa45b-b394-4b4e-a0ed-9e3e2ed58dad",
        "cursor": {
          "ref": "162d636f-b8c5-43cd-a800-20317f0ca50d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d9930902-33dd-40e9-9f7a-feab535dbcdd"
        },
        "item": {
          "id": "8e6fa45b-b394-4b4e-a0ed-9e3e2ed58dad",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "86351d72-06d7-4905-8ac4-3f62070789da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114fe1f2-c4a0-4e97-9544-5c9e6440527c",
        "cursor": {
          "ref": "3d37756f-f9cd-4dcf-bb53-5ed8e4e8d89c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7ad344a1-23b7-4b8f-b38e-83bbe974eb52"
        },
        "item": {
          "id": "114fe1f2-c4a0-4e97-9544-5c9e6440527c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "49b60e1d-428e-4a4d-9911-1b9806e36330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebff855-b63a-4ce0-8267-acdc90e2b4b6",
        "cursor": {
          "ref": "3c036107-0bc9-4013-a52b-5bbc5c8c574e",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b3c8d748-7327-4e24-8e33-f3ada13692f3"
        },
        "item": {
          "id": "0ebff855-b63a-4ce0-8267-acdc90e2b4b6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ec3145ed-d0fc-48dd-889d-194705d4f72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8d591b-d61d-4576-b854-c1a18e7023db",
        "cursor": {
          "ref": "97080c9e-7a9d-4898-a0f2-7f81e4497667",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "be5c4794-968d-47dc-be98-3b9a2a11c8b3"
        },
        "item": {
          "id": "2d8d591b-d61d-4576-b854-c1a18e7023db",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "74eefcfd-79f7-4ea4-bf95-ec001d23429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311dca8c-0578-4c03-b14f-877b316f6859",
        "cursor": {
          "ref": "ec670574-9959-4a5f-b335-b951b537b087",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7e2c747a-213e-46d2-8039-689542338dbd"
        },
        "item": {
          "id": "311dca8c-0578-4c03-b14f-877b316f6859",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "77894e2c-8fa6-4284-acac-ae5993794234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f3fe3c-e66a-468e-bd1c-757e676c84fb",
        "cursor": {
          "ref": "0dc0e8f2-1244-40f6-857d-7ae21e67f615",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ddfd89ef-b7e1-4293-a73f-7564e8409e52"
        },
        "item": {
          "id": "44f3fe3c-e66a-468e-bd1c-757e676c84fb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bfaf8caa-8ebb-4ed7-9dbe-f26ac5ea0781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74310230-fb48-4bfb-977e-67afc3e06d17",
        "cursor": {
          "ref": "584025be-9738-42c7-87bc-9bb7aa81ea16",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ad60f8cf-4ac2-401c-8ea4-64ed89bb6864"
        },
        "item": {
          "id": "74310230-fb48-4bfb-977e-67afc3e06d17",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "20d5d25c-3f99-4dc8-84c2-b207cf810fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a82b489-4656-4f42-8fb9-c0eba7f84489",
        "cursor": {
          "ref": "6a91b3fb-a09c-4299-9ea2-ee50f1b2e031",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "69470add-52a8-4fa3-bb81-6f9daff5fa5c"
        },
        "item": {
          "id": "5a82b489-4656-4f42-8fb9-c0eba7f84489",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0cad3813-0f70-4b55-a023-1d2e4ddb9b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43777a87-ca73-407b-b4bd-9145137983d6",
        "cursor": {
          "ref": "aacf35d0-5c54-41d3-b0ea-0ff6553a93eb",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d1432a30-3752-4da8-a2f4-4e9e83bc0e90"
        },
        "item": {
          "id": "43777a87-ca73-407b-b4bd-9145137983d6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0c55dcbf-e867-405a-be82-ff4f632894ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37512f6-a2a3-4c05-8550-fcde11f9e456",
        "cursor": {
          "ref": "1e20101c-d013-4792-96dd-aba201ef3625",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c737e5fd-fd53-4cf0-9dc2-7992aa51d4ce"
        },
        "item": {
          "id": "b37512f6-a2a3-4c05-8550-fcde11f9e456",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6fec1538-409d-446e-8b30-fea7d0dcd1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684670cc-b617-4cf3-bb79-16a8d5e4ef97",
        "cursor": {
          "ref": "a243e901-d7f3-43f9-96a2-68e9b7b29c18",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "04c301a3-d937-4c16-8446-69f659487144"
        },
        "item": {
          "id": "684670cc-b617-4cf3-bb79-16a8d5e4ef97",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "94847d31-4880-4358-b655-272366936bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae7c754-0387-4158-b355-426d72185d89",
        "cursor": {
          "ref": "febbb91e-db7d-444d-bc38-e60dd99792a7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "989bebe2-578c-43f2-b245-f98fb308ce95"
        },
        "item": {
          "id": "5ae7c754-0387-4158-b355-426d72185d89",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1f99fdea-41bb-4d34-8fdc-9784154706a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644fe533-4b32-43d2-896c-df378c9d6462",
        "cursor": {
          "ref": "6412ee20-aa7b-4005-92df-b128c10dcf27",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "38d409b6-3943-418d-a707-a3239108c273"
        },
        "item": {
          "id": "644fe533-4b32-43d2-896c-df378c9d6462",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3df495f9-c67e-4987-bd4f-f99260eabc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b648865-1cc2-47b0-92ce-c5fb8014a0c9",
        "cursor": {
          "ref": "6794d7b7-6892-4477-b68e-a6b8698ac57d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1d374af0-004c-4063-8008-0efc0f80c280"
        },
        "item": {
          "id": "4b648865-1cc2-47b0-92ce-c5fb8014a0c9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a54eb620-ba52-45a4-849b-14eec8069791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a401dc7-9257-4acd-8b41-8e2758ce94ab",
        "cursor": {
          "ref": "962e2f39-ae33-4008-8320-a0d68874e8d8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "00adf8ad-93bc-4bd4-ba78-1ff24894d4b2"
        },
        "item": {
          "id": "0a401dc7-9257-4acd-8b41-8e2758ce94ab",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dd844b7a-e56e-4c1a-8ffe-90420dec8d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9acaba-1d3f-4eec-9ec5-f2c4e7adf514",
        "cursor": {
          "ref": "e848b79d-e623-4a2c-bccc-963d7da09d22",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fb4cd19d-e998-414e-9fe0-54fe98585006"
        },
        "item": {
          "id": "0d9acaba-1d3f-4eec-9ec5-f2c4e7adf514",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a0aa7f33-11d9-4197-b55f-f9bcf478acb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0b5bba-c053-4fb3-9541-0d09a5accf2f",
        "cursor": {
          "ref": "295c7db3-45b6-4bab-a766-516ddb667286",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "25959b78-f457-4474-baf5-ac1d6ef63df4"
        },
        "item": {
          "id": "be0b5bba-c053-4fb3-9541-0d09a5accf2f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4dd3fd82-f1ae-4227-8c43-c3fa648654d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c48885-0701-4eba-a051-dae56472f172",
        "cursor": {
          "ref": "5c2a3bd9-98e8-4476-9c2a-c80639089bf9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "79558f98-fe31-4752-b643-53bd9f7ef1d0"
        },
        "item": {
          "id": "a6c48885-0701-4eba-a051-dae56472f172",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ebfcf249-bb5c-454a-a448-b642bcd39965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c00fb96-e317-4a9d-92f0-b93671a16ef1",
        "cursor": {
          "ref": "fcbe9812-c0a9-438f-9fb6-4ebe88d918bf",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c696d961-1f0c-45be-a5ef-9e23d0ece8ad"
        },
        "item": {
          "id": "1c00fb96-e317-4a9d-92f0-b93671a16ef1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "abb40f67-6fd4-439f-87ee-f569f085b4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe53e6-9acd-40fd-81c6-70f92a9fb922",
        "cursor": {
          "ref": "3f6ab233-094c-47a4-83ea-65ce0d64c46e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b4bcb901-5039-464f-bb35-260bbf523396"
        },
        "item": {
          "id": "e1fe53e6-9acd-40fd-81c6-70f92a9fb922",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8ce6b3be-fa60-4d12-8bed-ea37791ae7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b3ec8a-72b1-48ba-addd-2b62f95ec8dc",
        "cursor": {
          "ref": "d68ef76c-eb96-4741-aec5-6ad4a0c12212",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "438ace8c-f7e1-4a16-99ac-0eeb8a0b7e15"
        },
        "item": {
          "id": "84b3ec8a-72b1-48ba-addd-2b62f95ec8dc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "17a76530-7ee6-4d33-96a7-e2df450a01bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8340eae-edc2-46ac-9f3b-018e62e749b8",
        "cursor": {
          "ref": "4444c771-3b70-40e1-af35-d4c5ed1cffee",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0e0fbd8b-8118-4375-b9af-2fa7be066c76"
        },
        "item": {
          "id": "d8340eae-edc2-46ac-9f3b-018e62e749b8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "aeca292e-3374-4601-82a9-0c539ca52634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b930ac62-c94a-48cb-8400-e9b6d542958e",
        "cursor": {
          "ref": "fa04b456-b08e-4e1a-a33f-d4ad76d47752",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f36ee983-a0a4-4a57-a464-c3894cc4f087"
        },
        "item": {
          "id": "b930ac62-c94a-48cb-8400-e9b6d542958e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "171d1d3f-7368-4c06-b362-b55d46e56c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b33fd3-fb00-43bb-b002-f1b3bfebf087",
        "cursor": {
          "ref": "66d572d6-4026-4a86-a14b-bbd4e5a02f11",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fd6c1a1a-9de4-4327-94ef-8f2e1ab0f46d"
        },
        "item": {
          "id": "f7b33fd3-fb00-43bb-b002-f1b3bfebf087",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b4f566b6-8ee7-41b2-a45c-d2c126529505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105d0efe-7a8c-4ac5-9328-90f9991a23cd",
        "cursor": {
          "ref": "f1d9e2ce-66e3-4aa1-8552-599af8d6cba6",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f67a4d0e-4bb8-4f32-b61e-c189bfad4de4"
        },
        "item": {
          "id": "105d0efe-7a8c-4ac5-9328-90f9991a23cd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3e57ef8a-4dee-4a17-bb62-8e5844c99c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef398e85-4ec9-4e2a-b3fe-87f9c472349e",
        "cursor": {
          "ref": "b97119b5-336a-4fa9-9fb5-6334de2e35e1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "09fbfc94-ae9e-4bd8-984a-8a00998e00e0"
        },
        "item": {
          "id": "ef398e85-4ec9-4e2a-b3fe-87f9c472349e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "00b1ffb1-b7f6-4d66-b050-7a546618007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3288c0a-ff59-4a2b-a960-782dca4a92dd",
        "cursor": {
          "ref": "c6b85ba6-fc15-465c-b121-ef53fcacadfe",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "46f4b8ef-6ff8-4898-9c86-0bbfe71713eb"
        },
        "item": {
          "id": "f3288c0a-ff59-4a2b-a960-782dca4a92dd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "68172329-6a25-4118-b394-68ac0982840c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2264ae3f-f305-4302-95dd-aceacc9ec28a",
        "cursor": {
          "ref": "3f9ccb8e-5e6a-48c6-845e-6e96a9adfc73",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "671de1fa-a739-4690-a09b-269b025fd415"
        },
        "item": {
          "id": "2264ae3f-f305-4302-95dd-aceacc9ec28a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e9e2bbb1-28f0-4e48-9030-5b6c205c345c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bdcd91-0d67-4c4e-8b44-9cc51ccf1db5",
        "cursor": {
          "ref": "23ff08f2-fb39-438b-a254-c867fcf94b97",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ab4d5be1-0f97-42b3-8833-71ef5da3eac7"
        },
        "item": {
          "id": "b1bdcd91-0d67-4c4e-8b44-9cc51ccf1db5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "36d41c1f-7dd4-4f84-ba07-4a7be7d2146d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caf69bf-d22d-401d-892f-4533d66c66df",
        "cursor": {
          "ref": "887fb5bb-8fdb-48d7-a426-46d965c3147d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "21129bca-2f45-4679-9096-fed7a58f5566"
        },
        "item": {
          "id": "9caf69bf-d22d-401d-892f-4533d66c66df",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "de126203-d1db-4531-93f5-972fb8b62a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4263a2d8-4260-4742-a2fb-052a32471e15",
        "cursor": {
          "ref": "c6bcee44-a517-4151-a5f6-63d99f7e89fc",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6b699751-dd35-4856-a0aa-ddcfee65c174"
        },
        "item": {
          "id": "4263a2d8-4260-4742-a2fb-052a32471e15",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "98e12aec-fafa-4fe9-b468-9374c894537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bd2ba3-ca58-4cfa-a336-130f73e44fc9",
        "cursor": {
          "ref": "6863ff07-5d76-4aa0-9b2f-83751af314a2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a7d854d-1221-4fa4-b3ff-3309131ef161"
        },
        "item": {
          "id": "94bd2ba3-ca58-4cfa-a336-130f73e44fc9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b2fb3ddb-9c07-4d26-b177-794f4a062dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc823946-f196-4602-b160-cacc13b9459f",
        "cursor": {
          "ref": "77733199-4bec-43bf-84ab-cd0194757516",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b7538c50-84a2-4688-8d02-3a1974cbabcf"
        },
        "item": {
          "id": "cc823946-f196-4602-b160-cacc13b9459f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bcd4bc5e-070e-4d1b-b4d2-0cee2c058b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df39fbac-4970-4114-ae60-1febbcfebbeb",
        "cursor": {
          "ref": "06a1ffce-53fd-45c7-9f76-6d6542716e3f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "73ec57f3-486a-4e85-a911-44c8793bd00f"
        },
        "item": {
          "id": "df39fbac-4970-4114-ae60-1febbcfebbeb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "80ccb442-83e0-4387-bc5d-e2c643dd2d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c30b9e-f5de-4d21-a440-9d67d69741de",
        "cursor": {
          "ref": "43628907-2a86-470c-832d-57b641230a72",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "32b24b00-f0de-46d8-86cb-408631bd791f"
        },
        "item": {
          "id": "10c30b9e-f5de-4d21-a440-9d67d69741de",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c718c59d-3d04-4db2-8687-50470c31483b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6e4fef-2741-48ca-a5ad-8ac3f0405e2b",
        "cursor": {
          "ref": "52e61a4e-8c4b-4058-8f52-e2ea543e8125",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7b69fdc2-08f3-4722-82fe-faf28a387ad9"
        },
        "item": {
          "id": "3b6e4fef-2741-48ca-a5ad-8ac3f0405e2b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c86de4dd-c42a-4be7-8c48-c861b5e3c777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe696af8-3cb9-476f-817c-35ad6657bb27",
        "cursor": {
          "ref": "b3d5d21b-f436-4517-8b3a-8685a796106e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "578d5cb3-4f2d-4332-adcb-22ba67b0c1d7"
        },
        "item": {
          "id": "fe696af8-3cb9-476f-817c-35ad6657bb27",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0348e127-2c00-4816-9c9e-329eef5c741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dcfaed-d7eb-4909-8f4f-99b231896468",
        "cursor": {
          "ref": "dcac0a57-eae0-485d-afb2-4a5636b43c9d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4e0239b5-cb92-4466-8396-c799ac7708b4"
        },
        "item": {
          "id": "79dcfaed-d7eb-4909-8f4f-99b231896468",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "171570a2-4cf9-46fe-b7bd-f41f55981781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24a4672-1e92-4b3d-8f73-dca321a3e7bc",
        "cursor": {
          "ref": "feb034fc-6bb5-4f38-9afa-8a4aa85aeca0",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "116f40a0-5923-4394-a3c3-138afdb5a962"
        },
        "item": {
          "id": "c24a4672-1e92-4b3d-8f73-dca321a3e7bc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "026b78cc-b876-4977-907f-886b5c76d61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a68cb5-ad71-47c4-9d75-372a6f8debae",
        "cursor": {
          "ref": "c2826e37-71c8-4a3e-aa04-1051ccb6d616",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2419b778-b161-47e7-a245-b42bdda5d83b"
        },
        "item": {
          "id": "08a68cb5-ad71-47c4-9d75-372a6f8debae",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ea6159b8-5611-412f-907d-7ae6d4e87bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef3e0df-d6cf-4b9d-9926-6f0616ff2c51",
        "cursor": {
          "ref": "54e84a98-799c-46de-9028-1f0ecff8f3ac",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2bf20304-88aa-4aa5-8d19-09021cd8d72b"
        },
        "item": {
          "id": "eef3e0df-d6cf-4b9d-9926-6f0616ff2c51",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "139df9e6-5936-4fb3-b4c4-a8d569070500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99975623-2a36-4ae4-93d2-760312cb8938",
        "cursor": {
          "ref": "2bd8e2d0-55d4-4808-b026-89fc24453df1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8b79a19-519f-48a0-82ba-930f1a278e08"
        },
        "item": {
          "id": "99975623-2a36-4ae4-93d2-760312cb8938",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1ed5e221-6218-4cec-a0e5-327798ee7348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2af95a-a2cc-40a9-b01a-85a6401a3578",
        "cursor": {
          "ref": "8d62532f-bc1a-4481-9fd7-3237f6b80a41",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d10cae5a-b749-43d9-beeb-497c37062a79"
        },
        "item": {
          "id": "bd2af95a-a2cc-40a9-b01a-85a6401a3578",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4892b298-9b64-47aa-a9cd-cf6f3510b6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882492da-3dbc-4c71-9786-64313c421d2d",
        "cursor": {
          "ref": "2cd44796-0f13-4ec0-9046-588472632491",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8eb41078-b66a-4648-8b92-4fae6a8f7c0a"
        },
        "item": {
          "id": "882492da-3dbc-4c71-9786-64313c421d2d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b777e3b0-ff62-449a-956e-6277994f74a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8248cdd-42c1-404c-8eea-e20e7679eb47",
        "cursor": {
          "ref": "ae1211d6-757a-41df-a997-086df393c901",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6fe1df87-6463-46b1-a210-f8b0e5a6fcd6"
        },
        "item": {
          "id": "d8248cdd-42c1-404c-8eea-e20e7679eb47",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2b6d25a8-bfca-4758-9c98-2e27da8bd46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1a263c-61b7-4ea0-afc7-0960cf839891",
        "cursor": {
          "ref": "d84a33d5-e005-4505-803c-3db3a38f5e04",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "293f93df-9a54-46d9-816f-7a6f2ad64015"
        },
        "item": {
          "id": "db1a263c-61b7-4ea0-afc7-0960cf839891",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cc5d40e4-dd6b-4ca9-ab19-2668bf61db9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4785c6-ab8f-4f5c-a80c-b9f9f31311f0",
        "cursor": {
          "ref": "1a2dc6e7-bb07-4a30-af3c-f3e688698b19",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e7cd261f-46d5-4184-98c2-512af7ba3561"
        },
        "item": {
          "id": "eb4785c6-ab8f-4f5c-a80c-b9f9f31311f0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ed645ab6-66c8-41fc-90f9-e19497884358",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 332,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5d29ad-4940-41ec-8a31-d31c5ec28452",
        "cursor": {
          "ref": "471ccfcb-7a0f-4db3-b95b-5aced160abb8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c5a0295-8089-4f76-9041-17bcf6430d91"
        },
        "item": {
          "id": "8d5d29ad-4940-41ec-8a31-d31c5ec28452",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5d787c04-e72a-48c9-83da-958f0c0d0b57",
          "status": "OK",
          "code": 200,
          "responseTime": 415,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0979f3-18f4-4279-8504-3830c477b228",
        "cursor": {
          "ref": "7df45c04-94cc-4fc1-b5dc-9765ed32fe30",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "316551d0-7309-492c-a62c-d3eb91dbc4f9"
        },
        "item": {
          "id": "bb0979f3-18f4-4279-8504-3830c477b228",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5f3eaffd-8f6c-4948-b622-172a1a1db091",
          "status": "OK",
          "code": 200,
          "responseTime": 1845,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acdd047-efab-4cb3-a9c6-e08c958cd2a7",
        "cursor": {
          "ref": "a9c4b96a-5f07-4cd4-958e-0e1bfa900eb0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ec12f651-b58f-48fe-be92-c9d1846c47f2"
        },
        "item": {
          "id": "1acdd047-efab-4cb3-a9c6-e08c958cd2a7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5bc264a0-0850-4202-9ffe-b7e495835ac3",
          "status": "OK",
          "code": 200,
          "responseTime": 1824,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc6d5fd-a6ce-49b7-9229-bdb8f9bd5242",
        "cursor": {
          "ref": "29b1b088-1cd5-4f53-8723-bc7e327058d8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba68241e-861e-44f2-8fb7-3f36666ed874"
        },
        "item": {
          "id": "4fc6d5fd-a6ce-49b7-9229-bdb8f9bd5242",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8c51eef-3488-4ef3-9a33-0d65ac421b6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc6d5fd-a6ce-49b7-9229-bdb8f9bd5242",
        "cursor": {
          "ref": "29b1b088-1cd5-4f53-8723-bc7e327058d8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba68241e-861e-44f2-8fb7-3f36666ed874"
        },
        "item": {
          "id": "4fc6d5fd-a6ce-49b7-9229-bdb8f9bd5242",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8c51eef-3488-4ef3-9a33-0d65ac421b6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc6d5fd-a6ce-49b7-9229-bdb8f9bd5242",
        "cursor": {
          "ref": "29b1b088-1cd5-4f53-8723-bc7e327058d8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ba68241e-861e-44f2-8fb7-3f36666ed874"
        },
        "item": {
          "id": "4fc6d5fd-a6ce-49b7-9229-bdb8f9bd5242",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8c51eef-3488-4ef3-9a33-0d65ac421b6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e821d5-636d-4901-bcdf-9944578c3b31",
        "cursor": {
          "ref": "72bcf8b2-a72e-422b-b64c-e5395bff0d28",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "70962012-1895-4e61-a0ff-1bad7d72d01f"
        },
        "item": {
          "id": "73e821d5-636d-4901-bcdf-9944578c3b31",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9e9064ff-02b7-4b55-8a5a-4c019490df92",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 669,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8e718f-3836-4f96-a75f-cc60b752816d",
        "cursor": {
          "ref": "936285a2-2848-4ef1-a228-da1f6abca3b7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d3734630-87b0-4326-8e0f-9f5c7b69a120"
        },
        "item": {
          "id": "6e8e718f-3836-4f96-a75f-cc60b752816d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c7f07fc5-66d0-413c-af12-b56ce27ddfa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8e718f-3836-4f96-a75f-cc60b752816d",
        "cursor": {
          "ref": "936285a2-2848-4ef1-a228-da1f6abca3b7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d3734630-87b0-4326-8e0f-9f5c7b69a120"
        },
        "item": {
          "id": "6e8e718f-3836-4f96-a75f-cc60b752816d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c7f07fc5-66d0-413c-af12-b56ce27ddfa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb51e4f-6f12-4b0d-9256-63d358d1ecfe",
        "cursor": {
          "ref": "dcbdb304-0cc9-472a-b16d-54b17cc9e979",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2610c83a-f77a-4ceb-bd2d-0818a74b3aec"
        },
        "item": {
          "id": "3bb51e4f-6f12-4b0d-9256-63d358d1ecfe",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ffaee387-e60c-4bf7-8071-0c69ca43bfbe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 918,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cdd15d-8469-40e1-8cf6-23f1b47522f1",
        "cursor": {
          "ref": "6a0d5b73-315b-42ee-bf1b-59a15b08fd25",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ce74c787-52b7-48b6-a918-e8c0235ab9aa"
        },
        "item": {
          "id": "16cdd15d-8469-40e1-8cf6-23f1b47522f1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7402316b-9986-4ded-9870-af12369e344a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cdd15d-8469-40e1-8cf6-23f1b47522f1",
        "cursor": {
          "ref": "6a0d5b73-315b-42ee-bf1b-59a15b08fd25",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ce74c787-52b7-48b6-a918-e8c0235ab9aa"
        },
        "item": {
          "id": "16cdd15d-8469-40e1-8cf6-23f1b47522f1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7402316b-9986-4ded-9870-af12369e344a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531bc2d5-4a33-4a02-a2a6-505152bf3127",
        "cursor": {
          "ref": "6935fcdd-20e8-4cac-8a37-d515f8ec93c4",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cc9e02fd-0f5b-4110-8b22-6cd9edc00dd8"
        },
        "item": {
          "id": "531bc2d5-4a33-4a02-a2a6-505152bf3127",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "3de7c4ef-bd8b-431b-959f-a6445986328c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 884,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}